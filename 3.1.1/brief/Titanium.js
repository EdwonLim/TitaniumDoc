/**
 * @class AcceptDict
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Options object for the {@link Titanium.Network.Socket.TCP#method-accept accept} method.</p>
 * @description <p>Simple object that defines properties to be set on the next accepted socket.</p>
 */
AcceptDict = {};

/**
 * @property error
 * @type Callback<ErrorCallbackArgs>
 * <p>Callback to be fired when the socket enters the {@link Titanium.Network.Socket#property-ERROR ERROR} state.</p>
 */
AcceptDict.error = null;

/**
 * @property timeout
 * @type Number
 * <p>Timeout, in milliseconds, for all <code>write</code> operations.</p>
 * @description <p>Can only be modified when this socket is in the 
{@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state. </p>
 */
AcceptDict.timeout = null;

/**
 * @class AcceptedCallbackArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Argument object passed to the {@link Titanium.Network.Socket.TCP#property-accepted accepted}
callback when a listener accepts a connection.</p>
 */
AcceptedCallbackArgs = {};

/**
 * @property inbound
 * @type Titanium.Network.Socket.TCP
 * <p>Socket which represents the inbound connection.</p>
 * @description <p>This should be considered a 'connected' socket and is created in 
the {@link Titanium.Network.Socket#property-CONNECTED CONNECTED} state.</p>
 */
AcceptedCallbackArgs.inbound = null;

/**
 * @property socket
 * @type Titanium.Network.Socket.TCP
 * <p>Socket which received the connection.</p>
 */
AcceptedCallbackArgs.socket = null;

/**
 * @class ActivityResult
 * @typestr Object
 * @pseudo
 * <p>Simple object passed to the
{@link Titanium.Android.Activity#method-startActivityForResult startActivityForResult} callback.</p>
 */
ActivityResult = {};

/**
 * @property intent
 * @type Titanium.Android.Intent
 * <p>Intent that can contain data returned to the caller. Data can be attached to
the intent as "extras").</p>
 */
ActivityResult.intent = null;

/**
 * @property requestCode
 * @type Number
 * <p>Unique, automatically generated integer request code.</p>
 */
ActivityResult.requestCode = null;

/**
 * @property resultCode
 * @type Number
 * <p>Integer result code that the started activity passed to
{@link Titanium.Android.Activity#method-setResult setResult}.</p>
 */
ActivityResult.resultCode = null;

/**
 * @class AddBatchResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Calendar.CalendarInstance#method-addBatch addBatch} method.</p>
 */
AddBatchResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
AddBatchResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
AddBatchResponse.error = null;

/**
 * @property items
 * @type Modules.Tizen.Calendar.CalendarItem[]
 * <p>The array of CalendarItem objects.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
AddBatchResponse.items = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
AddBatchResponse.success = null;

/**
 * @class AlarmAbsoluteInit1
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Alarm#method-createAlarmAbsolute createAlarmAbsolute}.</p>
 */
AlarmAbsoluteInit1 = {};

/**
 * @property date
 * @type Date
 * <p>The absolute date/time when the alarm is initially triggered. It is precise to the second; 
milliseconds will be ignored.</p>
 */
AlarmAbsoluteInit1.date = null;

/**
 * @property daysOfTheWeek
 * @type String[]
 * <p>(optional) The days of the week associated with the recurrence rule. By default, this 
attribute is set to an empty array.</p>
 * @description <p>Valid days of the week constants:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-BY_DAY_VALUE_MO}</li>
<li>{@link Modules.Tizen.Calendar#property-BY_DAY_VALUE_TU}</li>
<li>{@link Modules.Tizen.Calendar#property-BY_DAY_VALUE_WE}</li>
<li>{@link Modules.Tizen.Calendar#property-BY_DAY_VALUE_TH}</li>
<li>{@link Modules.Tizen.Calendar#property-BY_DAY_VALUE_FR}</li>
<li>{@link Modules.Tizen.Calendar#property-BY_DAY_VALUE_SA}</li>
<li>{@link Modules.Tizen.Calendar#property-BY_DAY_VALUE_SU}</li>
</ul>
 */
AlarmAbsoluteInit1.daysOfTheWeek = null;

/**
 * @class AlarmAbsoluteInit2
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Alarm#method-createAlarmAbsolute createAlarmAbsolute}.</p>
 */
AlarmAbsoluteInit2 = {};

/**
 * @property date
 * @type Date
 * <p>The absolute date/time when the alarm is initially triggered. It is precise to the second; 
milliseconds will be ignored.</p>
 */
AlarmAbsoluteInit2.date = null;

/**
 * @property period
 * @type Number
 * <p>(Optional) Duration in seconds between each trigger of the alarm.</p>
 */
AlarmAbsoluteInit2.period = null;

/**
 * @class AppsContextResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Apps#method-getAppsContext getAppsContexts} method.</p>
 */
AppsContextResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
AppsContextResponse.code = null;

/**
 * @property contexts
 * @type Modules.Tizen.Apps.ApplicationContext[]
 * <p>List of running applications.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
AppsContextResponse.contexts = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
AppsContextResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
AppsContextResponse.success = null;

/**
 * @class AppsInfoResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Apps#method-getAppsInfo getAppsInfo} method.</p>
 */
AppsInfoResponse = {};

/**
 * @property applications
 * @type Modules.Tizen.Apps.ApplicationInformation[]
 * <p>List of running applications.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
AppsInfoResponse.applications = null;

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
AppsInfoResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
AppsInfoResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
AppsInfoResponse.success = null;

/**
 * @class AttendeeInitDict
 * @typestr Object
 * @pseudo
 * <p>Simple object used in {@link CalendarAttendeeInit}.</p>
 */
AttendeeInitDict = {};

/**
 * @property contactRef
 * @type Modules.Tizen.ContactRef
 * <p>An attribute to store the participant's reference in the Contact API.</p>
 * @description <p>If the contact is not resolved, this attribute will be set to null. </p>
 */
AttendeeInitDict.contactRef = null;

/**
 * @property delegateURI
 * @type String
 * <p>An attribute to stores the URI of the attendee to whom the person has delegated his 
participation.</p>
 */
AttendeeInitDict.delegateURI = null;

/**
 * @property delegatorURI
 * @type String
 * <p>An attribute to store the URI of the person who has delegated their participation to this 
attendee.</p>
 */
AttendeeInitDict.delegatorURI = null;

/**
 * @property group
 * @type String
 * <p>(optional) An attribute to store the participant's group or list membership.</p>
 */
AttendeeInitDict.group = null;

/**
 * @property name
 * @type String
 * <p>An attribute to store the name of an attendee.</p>
 */
AttendeeInitDict.name = null;

/**
 * @property role
 * @type String
 * <p>An attribute to denote the role of the attendee.</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_ROLE_REQ_PARTICIPANT}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_ROLE_OPT_PARTICIPANT}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_ROLE_NON_PARTICIPANT}</li>
</ul>
 */
AttendeeInitDict.role = null;

/**
 * @property rsvp
 * @type Boolean
 * <p>An attribute to store the attendee's participation status reply (RSVP).</p>
 */
AttendeeInitDict.rsvp = null;

/**
 * @property status
 * @type String
 * <p>An attribute to store the participant's attendance status.</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_PENDING}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_ACCEPTED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_DECLINED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_TENTATIVE}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_DELEGATED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_COMPLETED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_IN_PROCESS}</li>
</ul>
 */
AttendeeInitDict.status = null;

/**
 * @property type
 * @type String
 * <p>An attribute to indicate the type of a participant.</p>
 * @description <p>The value is one of the constants defined for this type: </p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_INDIVIDUAL}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_GROUP}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_RESOURCE}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_ROOM}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_UNKNOWN}</li>
</ul>
 */
AttendeeInitDict.type = null;

/**
 * @class AttributeFilterInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen#method-createAttributeFilter createAttributeFilter}.</p>
 */
AttributeFilterInit = {};

/**
 * @property attributeName
 * @type String
 * <p>The name of the object attribute used for filtering.</p>
 * @description <p>This is the name of the object attribute exactly as it is defined in the object's interface. 
For attributes of complex type, use fully-qualified names (such as 'organizations.role' to 
filter on a contact's role in an organization).
For attributes of an array type, the filter will match if any value in the array matches.</p>
 */
AttributeFilterInit.attributeName = null;

/**
 * @property matchFlag
 * @type String
 * <p>(optional) Used for attribute-based filtering.</p>
 * @description <p>Used for attribute-based filtering: {@link Modules.Tizen#property-FILTER_MATCH_FLAG_EXACTLY}, 
{@link Modules.Tizen#property-FILTER_MATCH_FLAG_FULLSTRING}, 
{@link Modules.Tizen#property-FILTER_MATCH_FLAG_CONTAINS}, {@link Modules.Tizen#property-FILTER_MATCH_FLAG_STARTSWITH}, 
{@link Modules.Tizen#property-FILTER_MATCH_FLAG_ENDSWITH}, 
{@link Modules.Tizen#property-FILTER_MATCH_FLAG_EXISTS}.</p>
 */
AttributeFilterInit.matchFlag = null;

/**
 * @property matchValue
 * @type String/Number/Date/Object
 * <p>(optional) The value used for matching.</p>
 * @description <p>The filter will match if the attribute value matches the given matchValue. This value is not 
used if the matchFlag is set to {@link Modules.Tizen#property-FILTER_MATCH_FLAG_EXISTS}. By default, this 
attribute is set to null.</p>
 */
AttributeFilterInit.matchValue = null;

/**
 * @class AttributeRangeFilterInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.AttributeRangeFilter AttributeRangeFilter}.</p>
 */
AttributeRangeFilterInit = {};

/**
 * @property attributeName
 * @type String
 * <p>The name of the object attribute used for filtering.</p>
 * @description <p>This is the name of the object attribute exactly as it is defined in the object's interface. 
For attributes of complex type, use fully-qualified names (such as 'organizations.role' to 
filter on a contact's role in an organization).</p>
<p>For attributes of an array type, the filter will match if any value in the array matches.</p>
 */
AttributeRangeFilterInit.attributeName = null;

/**
 * @property endValue
 * @type String/Number/Date/Object
 * <p>(optional) Objects with an attribute that is strictly lower than to endValue will match.</p>
 * @description <p>By default, this attribute is set to null.</p>
 */
AttributeRangeFilterInit.endValue = null;

/**
 * @property initialValue
 * @type String/Number/Date/Object
 * <p>(optional) Objects with an attribute that is greater than or equal to initialValue will match.</p>
 * @description <p>By default, this attribute is set to null.</p>
 */
AttributeRangeFilterInit.initialValue = null;

/**
 * @class BarItemType
 * @typestr Object
 * @pseudo
 * <p>Object describing a button bar or tabbed bar item.</p>
 * @description <p>A button bar or tabbed bar item can have an image or a title, but not both. 
Buttons with images and buttons with text can be mixed in the same bar, however. </p>
<p>If both <code>image</code> and <code>title</code> properties are specified for a given item, the <code>image</code> property 
takes precedence and the <code>title</code> property is ignored.</p>
 */
BarItemType = {};

/**
 * @property accessibilityLabel
 * @type String
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>A succint label associated with the bar item for the device's accessibility service.</p>
 * @description <p>See {@link Titanium.UI.View#property-accessibilityLabel} description.</p>
 */
BarItemType.accessibilityLabel = null;

/**
 * @property [enabled=true]
 * @type Boolean
 * <p>Whether the button is enabled initially.</p>
 */
BarItemType.enabled = null;

/**
 * @property image
 * @type String/Titanium.Blob/Titanium.Filesystem.File
 * <p>Button icon. If specified, takes precedence over <code>title</code>.</p>
 */
BarItemType.image = null;

/**
 * @property title
 * @type String
 * <p>Button title, used if no <code>image</code> is specified.</p>
 */
BarItemType.title = null;

/**
 * @property width
 * @type Number
 * <p>Width for this button.</p>
 */
BarItemType.width = null;

/**
 * @class BookmarkFolderInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.Bookmark#method-createBookmarkFolder createBookmarkFolder}.</p>
 */
BookmarkFolderInit = {};

/**
 * @property title
 * @type String
 * <p>The title of the bookmark folder.</p>
 */
BookmarkFolderInit.title = null;

/**
 * @class BookmarkItemInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.Bookmark#method-createBookmarkItem createBookmarkItem}.</p>
 */
BookmarkItemInit = {};

/**
 * @property title
 * @type String
 * <p>The title of the bookmark.</p>
 */
BookmarkItemInit.title = null;

/**
 * @property url
 * @type String
 * <p>The uri of the bookmark.</p>
 */
BookmarkItemInit.url = null;

/**
 * @class CalendarAlarmInitWithDate
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Calendar#method-createCalendarAlarm createCalendarAlarm}.</p>
 */
CalendarAlarmInitWithDate = {};

/**
 * @property absoluteDate
 * @type Date
 * <p>An attribute to record the absolute date and time when an alarm should be triggered.</p>
 */
CalendarAlarmInitWithDate.absoluteDate = null;

/**
 * @property description
 * @type String
 * <p>(optional) An attribute to store the description of an alarm.</p>
 */
CalendarAlarmInitWithDate.description = null;

/**
 * @property method
 * @type String
 * <p>An attribute to denote the notification method used by an alarm.</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ALARM_METHOD_SOUND}</li>
<li>{@link Modules.Tizen.Calendar#property-ALARM_METHOD_DISPLAY}</li>
</ul>
 */
CalendarAlarmInitWithDate.method = null;

/**
 * @class CalendarAlarmInitWithDuration
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Calendar#method-createCalendarAlarm createCalendarAlarm}.</p>
 */
CalendarAlarmInitWithDuration = {};

/**
 * @property before
 * @type Number
 * <p>An attribute to store the duration before an event starts on which the alarm should be 
triggered (milliseconds).</p>
 */
CalendarAlarmInitWithDuration.before = null;

/**
 * @property description
 * @type String
 * <p>(optional) An attribute to store the description of an alarm.</p>
 */
CalendarAlarmInitWithDuration.description = null;

/**
 * @property method
 * @type String
 * <p>An attribute to denote the notification method used by an alarm.</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ALARM_METHOD_SOUND}</li>
<li>{@link Modules.Tizen.Calendar#property-ALARM_METHOD_DISPLAY}</li>
</ul>
 */
CalendarAlarmInitWithDuration.method = null;

/**
 * @class CalendarAttendeeInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Calendar#method-createCalendarAttendee createCalendarAttendee}.</p>
 */
CalendarAttendeeInit = {};

/**
 * @property attendeeInitDict
 * @type Dictionary<AttendeeInitDict>
 * <p>(optional) The properties of a CalendarAttendee, to pass to its constructor.</p>
 */
CalendarAttendeeInit.attendeeInitDict = null;

/**
 * @property uri
 * @type String
 * <p>An attribute to store the URI for the attendee.</p>
 */
CalendarAttendeeInit.uri = null;

/**
 * @class CalendarEventInit
 * @typestr Object
 * @pseudo
 * @extends CalendarItemInit
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Calendar#method-createCalendarEvent createCalendarEvent}.</p>
 */
CalendarEventInit = {};

/**
 * @property availability
 * @type String
 * <p>An attribute to indicate the availability of a person for an event. </p>
 * @description <p>(See RFC 5545 - Section 3.2.9).</p>
<p>The value is one of the constants defined for this parameter : 
{@link Modules.Tizen.Calendar#property-EVENT_AVAILABILITY_BUSY} or {@link Modules.Tizen.Calendar#property-EVENT_AVAILABILITY_FREE}.</p>
 */
CalendarEventInit.availability = null;

/**
 * @property endDate
 * @type Date
 * <p>An attribute to store the end date/time of an event.</p>
 */
CalendarEventInit.endDate = null;

/**
 * @property recurrenceRule
 * @type Date
 * <p>An attribute to denote the recurrence rule for the event.</p>
 */
CalendarEventInit.recurrenceRule = null;

/**
 * @class CalendarItemId
 * @typestr Object
 * @pseudo
 * <p>A calendar item identifier, which can either be a {@link Modules.Tizen.Calendar.CalendarEventId} 
a CalendarTaskId (which is a String).</p>
 */
CalendarItemId = {};

/**
 * @class CalendarItemInit
 * @typestr Object
 * @pseudo
 * <p>A simple object that is used for creating calendar items.</p>
 * @description <p>These attributes are shared by both calendar events and tasks.</p>
 */
CalendarItemInit = {};

/**
 * @property alarms
 * @type Modules.Tizen.Calendar.CalendarAlarm[]
 * <p>An attribute array to lists the alarms (or reminders) associated to an item.</p>
 */
CalendarItemInit.alarms = null;

/**
 * @property attendees
 * @type Modules.Tizen.Calendar.CalendarAttendee[]
 * <p>An attribute array that lists the people attending an event.</p>
 */
CalendarItemInit.attendees = null;

/**
 * @property categories
 * @type String[]
 * <p>An attribute to indicate the item categories or subtypes of a calendar component. </p>
 * @description <p>The categories are useful in searching for a calendar component of a particular type and 
category. 
(See RFC 5545 - Section 3.8.1.2).  </p>
<p>Examples of categories are personal, work, vacation, travel, etc.
By default, this attribute is set to an empty array.</p>
 */
CalendarItemInit.categories = null;

/**
 * @property description
 * @type String
 * <p>An attribute to store the textual descriptions of an item.</p>
 */
CalendarItemInit.description = null;

/**
 * @property duration
 * @type Number
 * <p>An attribute to denote the duration of the calendar component (milliseconds).</p>
 */
CalendarItemInit.duration = null;

/**
 * @property geolocation
 * @type Modules.Tizen.SimpleCoordinates
 * <p>An attribute to store the global position latitude and longitude of the location where the 
event is planned to take place.</p>
 */
CalendarItemInit.geolocation = null;

/**
 * @property isAllDay
 * @type Boolean
 * <p>An attribute that behaves like a flag to indicate whether an event is an all-day event or 
not.</p>
 */
CalendarItemInit.isAllDay = null;

/**
 * @property location
 * @type String
 * <p>An attribute to store the location or the intended venue for the activity defined by 
the calendar item.</p>
 */
CalendarItemInit.location = null;

/**
 * @property organizer
 * @type String
 * <p>An attribute to store the name of the person who organized this event.</p>
 */
CalendarItemInit.organizer = null;

/**
 * @property priority
 * @type String
 * <p>An attribute to indicate the priority level of an item. </p>
 * @description <p>May be used to relatively prioritize multiple items during a given period of time. 
(See RFC 5545 - Section 3.8.1.9).</p>
<p>The default value for this attribute is {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_LOW} 
priority.</p>
<p>If the native item database supports another priority schema (such as a range from 1 to 9),
the implementation must 
convert those values to the supported values. </p>
<p>For instance, RFC 5545 suggests the following mapping for a range from 1 to 9.</p>
<ul>
<li>1-4 to {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_HIGH},</li>
<li>5 to {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_MEDIUM},</li>
<li>6-9 to {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_LOW}.</li>
</ul>
 */
CalendarItemInit.priority = null;

/**
 * @property startDate
 * @type Date
 * <p>An attribute to store the start date/time for an item.e / dueDate if provided.</p>
 */
CalendarItemInit.startDate = null;

/**
 * @property status
 * @type String
 * <p>An attribute to store the overall confirmation status for a calendar component.</p>
 * @description <p>For an event, the default value is {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_STATUS_CONFIRMED}. 
For a task, the default value is {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_STATUS_NEEDS_ACTION}.</p>
 */
CalendarItemInit.status = null;

/**
 * @property summary
 * @type String
 * <p>An attribute to store a short summary or subject for an item.</p>
 */
CalendarItemInit.summary = null;

/**
 * @property visibility
 * @type String
 * <p>An attribute to mark the visibility (secrecy) level of the item.</p>
 * @description <p>The value is one of the constants defined for this parameter : </p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_VISIBILITY_PUBLIC}</li>
<li>{@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_VISIBILITY_PRIVATE}</li>
<li>{@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_VISIBILITY_CONFIDENTIAL}</li>
</ul>
 */
CalendarItemInit.visibility = null;

/**
 * @class CalendarRecurrenceRuleInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Calendar#method-createCalendarRecurrenceRule createCalendarRecurrenceRule}.</p>
 */
CalendarRecurrenceRuleInit = {};

/**
 * @property frequency
 * @type String
 * <p>An attribute to store the frequency of a recurrence rule.</p>
 * @description <p>This property corresponds to FREQ in RFC 5545.</p>
<p>Can be set to one of the following constants:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_DAILY}</li>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_WEEKLY}</li>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_MONTHLY}</li>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_YEARLY}</li>
</ul>
 */
CalendarRecurrenceRuleInit.frequency = null;

/**
 * @property ruleInitDict
 * @type CalendarRecurrenceRuleInitDict
 * <p>The properties of a CalendarRecurrenceRule to pass to its constructor.</p>
 */
CalendarRecurrenceRuleInit.ruleInitDict = null;

/**
 * @class CalendarRecurrenceRuleInitDict
 * @typestr Object
 * @pseudo
 * <p>Simple object used in {@link CalendarRecurrenceRuleInit}.</p>
 */
CalendarRecurrenceRuleInitDict = {};

/**
 * @property daysOfTheWeek
 * @type String[]
 * <p>An attribute to store the days of the week associated with the recurrence rule.</p>
 * @description <p>This property value is valid only for recurrence rules with a frequency type of 
{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_WEEKLY}, 
{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_MONTHLY}, 
and {@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_YEARLY}.</p>
<p>This property corresponds to BYDAY in RFC 5545.</p>
 */
CalendarRecurrenceRuleInitDict.daysOfTheWeek = null;

/**
 * @property exceptions
 * @type Date[]
 * <p>An attribute to list date/time exceptions for the recurring event.</p>
 */
CalendarRecurrenceRuleInitDict.exceptions = null;

/**
 * @property interval
 * @type Number
 * <p>An attribute to specify how often the recurrence rule repeats over the unit of time 
indicated by its frequency.</p>
 */
CalendarRecurrenceRuleInitDict.interval = null;

/**
 * @property occurrenceCount
 * @type Number
 * <p>An attribute to indicate the number of occurrences of a recurring event.</p>
 */
CalendarRecurrenceRuleInitDict.occurrenceCount = null;

/**
 * @property setPositions
 * @type Number[]
 * <p>An attribute to store a list of ordinal numbers that filters which recurrences to include 
in the recurrence rule's frequency.</p>
 * @description <p>For example, a yearly recurrence rule that has a daysOfTheWeek value that specifies Monday 
through Friday, and a setPositions array containing 2 and -1, occurs only on the second 
weekday and last weekday of every year.</p>
<p>Values can be from 1 to 366 or -366 to -1. Negative values indicate counting backwards from 
the end of the recurrence rule's frequency (week, month, or year).</p>
<p>This attribute must only be used in conjunction with another BYxxx rule part 
(such as daysOfTheWeek).</p>
<p>This property corresponds to BYSETPOS in RFC 5545.</p>
<p>By default, this attribute is set to an empty array</p>
 */
CalendarRecurrenceRuleInitDict.setPositions = null;

/**
 * @property untilDate
 * @type Date
 * <p>An attribute to indicate the end date of a recurrence duration of an event using either and 
end date (untilDate attribute) or a number of occurrences (occurrenceCount attribute).</p>
 */
CalendarRecurrenceRuleInitDict.untilDate = null;

/**
 * @class CallHistoryFindResponse
 * @typestr Object
 * @pseudo
 * @platform tizen 3.1
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.CallHistory#method-find find} method.</p>
 */
CallHistoryFindResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
CallHistoryFindResponse.code = null;

/**
 * @property entries
 * @type Modules.Tizen.CallHistory.CallHistoryEntry[]
 * <p>An array of {@link Modules.Tizen.CallHistory.CallHistoryEntry CallHistoryEntry} objects, 
representing the result set of the query over the call history.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
CallHistoryFindResponse.entries = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
CallHistoryFindResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
CallHistoryFindResponse.success = null;

/**
 * @class CameraMediaItemType
 * @typestr Object
 * @pseudo
 * @extends SuccessResponse
 * <p>A media object from the camera or photo gallery.</p>
 */
CameraMediaItemType = {};

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns 0.</p>
 * @description <p>Error code will be 0.</p>
 */
CameraMediaItemType.code = null;

/**
 * @property cropRect
 * @type CropRectType
 * <p>Simple object defining the user's selected crop rectangle, or <code>null</code> if the user has not edited the photo.</p>
 */
CameraMediaItemType.cropRect = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined.</p>
 */
CameraMediaItemType.error = null;

/**
 * @property media
 * @type Titanium.Blob
 * <p>The media object, as a {@link Titanium.Blob Blob}.</p>
 */
CameraMediaItemType.media = null;

/**
 * @property mediaType
 * @type String
 * <p>The type of media, either <code>MEDIA_TYPE_PHOTO</code> or <code>MEDIA_TYPE_VIDEO</code> defined in {@link Titanium.Media}.</p>
 */
CameraMediaItemType.mediaType = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Indicates if the operation succeeded. Returns <code>true</code>.</p>
 * @description <p>Returns <code>true</code>.</p>
 */
CameraMediaItemType.success = null;

/**
 * @class CameraOptionsType
 * @typestr Object
 * @pseudo
 * <p>Simple object for specifying options to {@link Titanium.Media#method-showCamera showCamera}.</p>
 */
CameraOptionsType = {};

/**
 * @property [allowEditing=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies if the media should be editable after capture/selection.</p>
 */
CameraOptionsType.allowEditing = null;

/**
 * @property [animated=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies if the dialog should be animated upon showing and hiding.</p>
 */
CameraOptionsType.animated = null;

/**
 * @property arrowDirection
 * @type Number
 * @platform ipad 0.8
 * <p>Controls the type of arrow and position of the popover.</p>
 * @description <p>Specify one of the <code>POPOVER_ARROW_DIRECTION</code> constants from {@link Titanium.UI.iPad}.</p>
<p>This property is only used if the camera is displayed in a 
popover (<code>inPopOver</code> is <code>true</code>).</p>
 */
CameraOptionsType.arrowDirection = null;

/**
 * @property [autohide=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies if the camera should be hidden automatically after the media capture is completed.</p>
 */
CameraOptionsType.autohide = null;

/**
 * @property cancel
 * @type Callback<FailureResponse>
 * <p>Function to call if the user presses the cancel button.</p>
 */
CameraOptionsType.cancel = null;

/**
 * @property error
 * @type Callback<FailureResponse>
 * <p>Function to call upon receiving an error.</p>
 */
CameraOptionsType.error = null;

/**
 * @property [inPopOver=false]
 * @type Boolean
 * @platform ipad 0.8
 * <p>Show the camera in a popover.</p>
 * @description <p>Use <code>inPopOver: true</code> on iPad to display the camera view in a popover.</p>
 */
CameraOptionsType.inPopOver = null;

/**
 * @property [mediaTypes=Both photo and video allowed.]
 * @type String[]
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Array of media type constants to allow: <code>MEDIA_TYPE_PHOTO</code> or <code>MEDIA_TYPE_VIDEO</code>.</p>
 */
CameraOptionsType.mediaTypes = null;

/**
 * @property [overlay=no overlay view]
 * @type Titanium.UI.View
 * <p>View to added as an overlay to the camera UI (on top).</p>
 * @description <p>On iOS, the overlay view is usually used in conjunction with <code>showControls: false</code>.
The <code>transform</code> property can be used to scale and position the camera preview inside
the overlay view.</p>
 */
CameraOptionsType.overlay = null;

/**
 * @property popoverView
 * @type Titanium.UI.View
 * @platform ipad 0.8
 * <p>View to position the camera or photo gallery popover on top of.</p>
 * @description <p>This property is only used if the camera is displayed in a 
popover (<code>inPopOver</code> is <code>true</code>).</p>
 */
CameraOptionsType.popoverView = null;

/**
 * @property [saveToPhotoGallery=false]
 * @type Boolean
 * <p>Specifies if the media should be saved to the photo gallery upon successful capture.</p>
 */
CameraOptionsType.saveToPhotoGallery = null;

/**
 * @property [showControls=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Indicates if the built-in camera controls should be displayed.</p>
 */
CameraOptionsType.showControls = null;

/**
 * @property success
 * @type Callback<CameraMediaItemType>
 * <p>Function to call when the camera is closed after a successful capture/selection.</p>
 */
CameraOptionsType.success = null;

/**
 * @property [transform=identity matrix]
 * @type Titanium.UI.2DMatrix
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Transformation matrix to apply to the camera or photogallery view.</p>
 * @description <p>Can be used to size and position the camera or photogallery view behind an overlay view. </p>
 */
CameraOptionsType.transform = null;

/**
 * @property videoMaximumDuration
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Maximum duration (in milliseconds) to allow video capture before completing.</p>
 */
CameraOptionsType.videoMaximumDuration = null;

/**
 * @property videoQuality
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Constant to indicate the video quality during capture.</p>
 */
CameraOptionsType.videoQuality = null;

/**
 * @class CloudACLsCheckResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudACLsCheckResponse = {};

/**
 * @property permission
 * @type Dictionary
 * <p>Dictionary of permissions.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudACLsCheckResponse.permission = null;

/**
 * @class CloudACLsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudACLsResponse = {};

/**
 * @property acls
 * @type Dictionary[]
 * <p>Set of ACL objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudACLsResponse.acls = null;

/**
 * @class CloudChatGroupsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudChatGroupsResponse = {};

/**
 * @property chat_groups
 * @type Dictionary[]
 * <p>Set of <code>chat_groups</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudChatGroupsResponse.chat_groups = null;

/**
 * @class CloudChatsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudChatsResponse = {};

/**
 * @property chats
 * @type Dictionary[]
 * <p>Set of <code>chats</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudChatsResponse.chats = null;

/**
 * @class CloudCheckinsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudCheckinsResponse = {};

/**
 * @property checkins
 * @type Dictionary[]
 * <p>Set of <code>checkins</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudCheckinsResponse.checkins = null;

/**
 * @class CloudClientsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudClientsResponse = {};

/**
 * @property ip_address
 * @type String
 * <p>IP address of client.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudClientsResponse.ip_address = null;

/**
 * @property location
 * @type Dictionary
 * <p>Location of client.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudClientsResponse.location = null;

/**
 * @class CloudEmailsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudEmailsResponse = {};

/**
 * @class CloudEventOccurrencesResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudEventOccurrencesResponse = {};

/**
 * @property event_occurrences
 * @type Dictionary[]
 * <p>Set of <code>event</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudEventOccurrencesResponse.event_occurrences = null;

/**
 * @class CloudEventsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudEventsResponse = {};

/**
 * @property events
 * @type Dictionary[]
 * <p>Set of <code>event</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudEventsResponse.events = null;

/**
 * @class CloudFilesResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudFilesResponse = {};

/**
 * @property files
 * @type Dictionary[]
 * <p>Set of <code>file</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudFilesResponse.files = null;

/**
 * @class CloudFriendRequestsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudFriendRequestsResponse = {};

/**
 * @property friend_requests
 * @type Dictionary[]
 * <p>Set of <code>user</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudFriendRequestsResponse.friend_requests = null;

/**
 * @class CloudFriendsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudFriendsResponse = {};

/**
 * @property users
 * @type Dictionary[]
 * <p>Set of <code>user</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudFriendsResponse.users = null;

/**
 * @class CloudKeyValuesResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudKeyValuesResponse = {};

/**
 * @property keyvalues
 * @type Dictionary[]
 * <p>Set of <code>keyvalues</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudKeyValuesResponse.keyvalues = null;

/**
 * @class CloudMessagesResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudMessagesResponse = {};

/**
 * @property messages
 * @type Dictionary[]
 * <p>Set of <code>message</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudMessagesResponse.messages = null;

/**
 * @class CloudObjectsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudObjectsResponse = {};

/**
 * @property classname
 * @type Dictionary[]
 * <p>Set of <code>classname</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudObjectsResponse.classname = null;

/**
 * @class CloudPhotoCollectionsPhotosResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudPhotoCollectionsPhotosResponse = {};

/**
 * @property photos
 * @type Dictionary[]
 * <p>Set of <code>photos</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudPhotoCollectionsPhotosResponse.photos = null;

/**
 * @class CloudPhotoCollectionsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudPhotoCollectionsResponse = {};

/**
 * @property collections
 * @type Dictionary[]
 * <p>Set of <code>collections</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudPhotoCollectionsResponse.collections = null;

/**
 * @class CloudPhotosResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudPhotosResponse = {};

/**
 * @property photos
 * @type Dictionary[]
 * <p>Set of <code>photos</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudPhotosResponse.photos = null;

/**
 * @class CloudPlacesResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudPlacesResponse = {};

/**
 * @property places
 * @type Dictionary[]
 * <p>Set of <code>places</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudPlacesResponse.places = null;

/**
 * @class CloudPostsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudPostsResponse = {};

/**
 * @property posts
 * @type Dictionary[]
 * <p>Set of <code>posts</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudPostsResponse.posts = null;

/**
 * @class CloudPushNotificationConfig
 * @typestr Object
 * @pseudo
 * <p>Simple object for specifying token retrieval options to {@link Titanium.CloudPush#method-retrieveDeviceToken retrieveDeviceToken}.</p>
 */
CloudPushNotificationConfig = {};

/**
 * @property error
 * @type Callback<CloudPushNotificationErrorArg>
 * <p>Callback function called when an error occurs during registration.</p>
 */
CloudPushNotificationConfig.error = null;

/**
 * @property success
 * @type Callback<CloudPushNotificationSuccessArg>
 * <p>Callback function called when the push registration is successfully completed.</p>
 */
CloudPushNotificationConfig.success = null;

/**
 * @class CloudPushNotificationErrorArg
 * @typestr Object
 * @pseudo
 * <p>A simple object passed to the {@link Titanium.CloudPush#method-retrieveDeviceToken retrieveDeviceToken} error callback.</p>
 */
CloudPushNotificationErrorArg = {};

/**
 * @property error
 * @type String
 * <p>Description of the error.</p>
 */
CloudPushNotificationErrorArg.error = null;

/**
 * @class CloudPushNotificationSuccessArg
 * @typestr Object
 * @pseudo
 * <p>A simple object passed to the {@link Titanium.CloudPush#method-retrieveDeviceToken retrieveDeviceToken} success callback.</p>
 */
CloudPushNotificationSuccessArg = {};

/**
 * @property deviceToken
 * @type String
 * <p>The device token which this device was registered for.</p>
 */
CloudPushNotificationSuccessArg.deviceToken = null;

/**
 * @class CloudPushNotificationsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudPushNotificationsResponse = {};

/**
 * @class CloudResponse
 * @typestr Object
 * @pseudo
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code, if any returned.</p>
 * @description <p>Only included if <code>error</code> is true.</p>
 */
CloudResponse.code = null;

/**
 * @property error
 * @type Boolean
 * <p>Indicates whether the request failed.</p>
 * @description <p>Returns <code>true</code> if request failed.</p>
 */
CloudResponse.error = null;

/**
 * @property message
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Only included if <code>error</code> is <code>true</code>.</p>
 */
CloudResponse.message = null;

/**
 * @property meta
 * @type Dictionary
 * <p>Meta data, if any returned.</p>
 * @description <p>Only included if 'success' is 'true'.</p>
 */
CloudResponse.meta = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates whether the request succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded.</p>
 */
CloudResponse.success = null;

/**
 * @class CloudReviewsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudReviewsResponse = {};

/**
 * @property reviews
 * @type Dictionary[]
 * <p>Set of <code>reviews</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudReviewsResponse.reviews = null;

/**
 * @class CloudSocialIntegrationsResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudSocialIntegrationsResponse = {};

/**
 * @property users
 * @type Dictionary[]
 * <p>Set of <code>users</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudSocialIntegrationsResponse.users = null;

/**
 * @class CloudStatusesResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudStatusesResponse = {};

/**
 * @property statuses
 * @type Dictionary[]
 * <p>Set of <code>statuses</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudStatusesResponse.statuses = null;

/**
 * @class CloudStreamProgress
 * @typestr Object
 * @pseudo
 * <p>Argument passed to the callback as a request is transmitted or received.</p>
 */
CloudStreamProgress = {};

/**
 * @property progress
 * @type Number
 * <p>A value from 0.0-1.0 with the progress of the exchange.</p>
 */
CloudStreamProgress.progress = null;

/**
 * @property url
 * @type String
 * <p>The URL for the request, to help identify it.</p>
 */
CloudStreamProgress.url = null;

/**
 * @class CloudUsersResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudUsersResponse = {};

/**
 * @property users
 * @type Dictionary[]
 * <p>Set of <code>user</code> objects, if any exist.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudUsersResponse.users = null;

/**
 * @class CloudUsersSecureDialog
 * @typestr Object
 * @pseudo
 * <p>Properties for the modal dialog used in 3-Legged OAuth</p>
 */
CloudUsersSecureDialog = {};

/**
 * @property [title=Appcelerator Cloud Service]
 * @type String
 * <p>Defines the title for the dialog.</p>
 */
CloudUsersSecureDialog.title = null;

/**
 * @class CloudUsersSecureResponse
 * @typestr Object
 * @pseudo
 * @extends CloudResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
CloudUsersSecureResponse = {};

/**
 * @property accessToken
 * @type String
 * <p>Identifies the current access token when using 3-Legged OAuth.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudUsersSecureResponse.accessToken = null;

/**
 * @property expiresIn
 * @type Number
 * <p>Indicates the number of seconds before the access token expires.</p>
 * @description <p>Only included if <code>success</code> is <code>true</code>.</p>
 */
CloudUsersSecureResponse.expiresIn = null;

/**
 * @class CompositeFilterInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen#method-createCompositeFilter createCompositeFilter}.</p>
 */
CompositeFilterInit = {};

/**
 * @property filters
 * @type Modules.Tizen.AbstractFilter[]
 * <p>(optional) The list of filters in the composite filter.</p>
 */
CompositeFilterInit.filters = null;

/**
 * @property type
 * @type String
 * <p>The composite filter type. One of the following -</p>
<ul>
<li>{@link Modules.Tizen#property-COMPOSITE_FILTER_TYPE_UNION},</li>
<li>{@link Modules.Tizen#property-COMPOSITE_FILTER_TYPE_INTERSECTION}.</li>
</ul>
 */
CompositeFilterInit.type = null;

/**
 * @class ConnectToServiceByUUIDResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Bluetooth.BluetoothDevice#method-connectToServiceByUUID connectToServiceByUUID} method.</p>
 */
ConnectToServiceByUUIDResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
ConnectToServiceByUUIDResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
ConnectToServiceByUUIDResponse.error = null;

/**
 * @property socket
 * @type Modules.Tizen.Bluetooth.BluetoothSocket
 * <p>Socket connected to the specified service on the remote device.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
ConnectToServiceByUUIDResponse.socket = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
ConnectToServiceByUUIDResponse.success = null;

/**
 * @class ConnectedCallbackArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Argument object passed to the {@link Titanium.Network.Socket.TCP#property-connected connected} callback when the socket connects.</p>
 * @description <p>Only invoked following a successful {@link Titanium.Network.Socket.TCP#method-connect connect}
call.</p>
 */
ConnectedCallbackArgs = {};

/**
 * @property socket
 * @type Titanium.Network.Socket.TCP
 * <p>Socket instance that has been connected.</p>
 */
ConnectedCallbackArgs.socket = null;

/**
 * @class ContactRefInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen#method-createContactRef createContactRef}.</p>
 */
ContactRefInit = {};

/**
 * @property addressBookId
 * @type String
 * <p>The address book identifier.</p>
 */
ContactRefInit.addressBookId = null;

/**
 * @property contactId
 * @type String
 * <p>The contact identifier inside the address book.</p>
 */
ContactRefInit.contactId = null;

/**
 * @class ContactsAuthorizationResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
ContactsAuthorizationResponse = {};

/**
 * @class CoverFlowImageType
 * @typestr Object
 * @pseudo
 * <p>Simple object for defining a single image in a cover flow view.</p>
 * @description <p>If supplied, the <code>width</code> and <code>height</code> values must be exact values, not <code>'auto'</code>.</p>
<p>If the size specified is different to the size of the image, the image is cropped and/or scaled 
to fit the specified size.</p>
 */
CoverFlowImageType = {};

/**
 * @property height
 * @type Number
 * <p>Display height of the image, in Apple points.</p>
 */
CoverFlowImageType.height = null;

/**
 * @property image
 * @type String/Titanium.Blob/Titanium.Filesystem.File
 * <p>Image to use, as a local file URL, <code>Blob</code>, or <code>File</code>.</p>
 */
CoverFlowImageType.image = null;

/**
 * @property width
 * @type Number
 * <p>Display width for the image, in Apple points.</p>
 */
CoverFlowImageType.width = null;

/**
 * @class CreateBondingResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-createBonding createBonding} method.</p>
 */
CreateBondingResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
CreateBondingResponse.code = null;

/**
 * @property device
 * @type Modules.Tizen.Bluetooth.BluetoothDevice
 * <p>The device that the response pertains to.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
CreateBondingResponse.device = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
CreateBondingResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
CreateBondingResponse.success = null;

/**
 * @class CreateBufferArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Arguments to be passed to createBuffer</p>
 */
CreateBufferArgs = {};

/**
 * @property [byteOrder=The OS native byte order is used by default. See {@link Titanium.Codec#method-getNativeByteOrder}]
 * @type Number
 * <p>The byte order of this buffer.</p>
 */
CreateBufferArgs.byteOrder = null;

/**
 * @property [length=0, unless <code>value</code> is specified, in which case the length of the encoded data is used.]
 * @type Number
 * <p>The length of the buffer.</p>
 */
CreateBufferArgs.length = null;

/**
 * @property [type={@link Titanium.Codec#property-CHARSET_UTF8} if <code>value</code> is a String, If <code>value</code> is a Number, this argument is required]
 * @type String
 * <p>The type of data encoding to use with <code>value</code>.</p>
 */
CreateBufferArgs.type = null;

/**
 * @property value
 * @type String/Number
 * <p>An initial value which will be encoded and placed in the buffer. If value is a Number, type must also be set. (this is simply a convenient way of calling {@link Titanium.Codec#method-encodeString} or {@link Titanium.Codec#method-encodeNumber} and placing the encoded value in the returned buffer.)</p>
 */
CreateBufferArgs.value = null;

/**
 * @class CreateStreamArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Argument passed to {@link Titanium.Stream#method-createStream createStream}.</p>
 */
CreateStreamArgs = {};

/**
 * @property mode
 * @type Number
 * <p>Mode to open the stream in.</p>
 * @description <p>Can be {@link Titanium.Stream#property-MODE_READ MODE_READ}, {@link Titanium.Stream#property-MODE_WRITE MODE_WRITE}, or 
{@link Titanium.Stream#property-MODE_APPEND MODE_APPEND}.</p>
<p>For <code>Blob</code> objects, only <code>MODE_READ</code> is supported.</p>
 */
CreateStreamArgs.mode = null;

/**
 * @property source
 * @type Titanium.Blob/Titanium.Buffer
 * <p>Object that the stream will read from or write to.</p>
 */
CreateStreamArgs.source = null;

/**
 * @class CropRectType
 * @typestr Object
 * @pseudo
 * <p>Simple object for describing the crop rectangle for an image.</p>
 */
CropRectType = {};

/**
 * @property height
 * @type Number
 * <p>Height of the crop rectangle, in pixels.</p>
 */
CropRectType.height = null;

/**
 * @property width
 * @type Number
 * <p>Width of the crop rectangle, in pixels.</p>
 */
CropRectType.width = null;

/**
 * @property x
 * @type Number
 * <p>X coordinate of the crop rectangle's upper-left corner.</p>
 */
CropRectType.x = null;

/**
 * @property y
 * @type Number
 * <p>Y coordinate of the crop rectangle's upper-left corner.</p>
 */
CropRectType.y = null;

/**
 * @class DataControlGetValueResponse
 * @typestr Object
 * @pseudo
 * @extends DataControlResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.DataControl.MappedDataControlConsumer#method-getValue getValue} method.</p>
 */
DataControlGetValueResponse = {};

/**
 * @property values
 * @type String[]
 * <p>The resulting values.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
DataControlGetValueResponse.values = null;

/**
 * @class DataControlInsertResponse
 * @typestr Object
 * @pseudo
 * @extends DataControlResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.DataControl.SQLDataControlConsumer#method-insert insert} method.</p>
 */
DataControlInsertResponse = {};

/**
 * @property insertRowId
 * @type Number
 * <p>The inserted row ID set by the data control provider if the specified providerResult is true, 
else -1.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
DataControlInsertResponse.insertRowId = null;

/**
 * @class DataControlResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from various {@link Modules.Tizen.DataControl} methods.</p>
 */
DataControlResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
DataControlResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
DataControlResponse.error = null;

/**
 * @property insertRowId
 * @type Number
 * <p>The inserted row ID set by the data control provider if the specified providerResult is true, 
else -1.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
DataControlResponse.insertRowId = null;

/**
 * @property reqId
 * @type Number
 * <p>A unique identifier for the current operation (supplied during function call).</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
DataControlResponse.reqId = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
DataControlResponse.success = null;

/**
 * @class DataControlSelectResponse
 * @typestr Object
 * @pseudo
 * @extends DataControlResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.DataControl.SQLDataControlConsumer#method-select select} method.</p>
 */
DataControlSelectResponse = {};

/**
 * @property rows
 * @type RowData[]
 * <p>The resulting rows.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
DataControlSelectResponse.rows = null;

/**
 * @class DecodeNumberDict
 * @typestr Object
 * @pseudo
 * <p>Named parameters for {@link Titanium.Codec#method-decodeNumber}.</p>
 */
DecodeNumberDict = {};

/**
 * @property [byteOrder=Native byte order.]
 * @type Number
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>byte order to decode with.</p>
 */
DecodeNumberDict.byteOrder = null;

/**
 * @property [position=0]
 * @type Number
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Index in the <code>source</code> buffer of the first byte of data to decode.</p>
 */
DecodeNumberDict.position = null;

/**
 * @property source
 * @type Titanium.Buffer
 * <p>Buffer to decode.</p>
 */
DecodeNumberDict.source = null;

/**
 * @property type
 * @type String
 * <p>The encoding type to use. Must be one of {@link Titanium.Codec#property-TYPE_BYTE}, {@link Titanium.Codec#property-TYPE_SHORT}, {@link Titanium.Codec#property-TYPE_INT}, {@link Titanium.Codec#property-TYPE_FLOAT}, {@link Titanium.Codec#property-TYPE_LONG}, or {@link Titanium.Codec#property-TYPE_DOUBLE}.</p>
 */
DecodeNumberDict.type = null;

/**
 * @class DecodeStringDict
 * @typestr Object
 * @pseudo
 * <p>Named parameters for {@link Titanium.Codec#method-decodeString}.</p>
 */
DecodeStringDict = {};

/**
 * @property [charset={@link Titanium.Codec#property-CHARSET_UTF8}]
 * @type String
 * <p>Character set to use when encoding this string to bytes.</p>
 */
DecodeStringDict.charset = null;

/**
 * @property [length=Length of <code>source</code>]
 * @type Number
 * <p>Number of bytes to decode.</p>
 */
DecodeStringDict.length = null;

/**
 * @property [position=0]
 * @type Number
 * <p>Index in the <code>source</code> buffer of the first byte of data to decode.</p>
 */
DecodeStringDict.position = null;

/**
 * @property source
 * @type Titanium.Buffer
 * <p>Buffer to decode.</p>
 */
DecodeStringDict.source = null;

/**
 * @class Dictionary
 * @typestr Object
 * @pseudo
 * <p>Plain JavaScript object.</p>
 * @description <p>The type <code>Dictionary</code> is used to describe a plain JavaScript object used to pass a 
set of properties.</p>
<p>The type <code>Dictionary&lt;</code> <em>Type</em> <code>&gt;</code> is used to describe a dictionary
where the properties correspond to the properties of the named <em>Type</em>. So 
<code>Dictionary&lt;</code> <code>Titanium.UI.Window</code> <code>&gt;</code> refers to a dictionary of <code>Window</code>
properties. </p>
<p>Property dictionaries are used extensively in the Titanium API, especially when 
creating objects. For example, You can specify the initial properties for 
a new window by passing a <code>Dictionary&lt;</code> <code>Titanium.UI.Window</code> <code>&gt;</code> object to the 
{@link Titanium.UI#method-createWindow createWindow} method:</p>
<pre><code>var window = Ti.UI.createWindow({
    title: "Test", 
    fullscreen: true, 
    backgroundColor: '#aea'
});
</code></pre>
 */
Dictionary = {};

/**
 * @class Dimension
 * @typestr Object
 * @pseudo
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>A simple object consisting of the position and size measurements.</p>
 * @description <p>When a dimension is returned by the {@link Titanium.UI.View#property-rect rect} property, <code>x</code> represents the 
view's left position, and <code>y</code> represents the view's top position. </p>
<p>The {@link Titanium.UI.View#property-size size} property returns a dimension object with <code>x</code> and <code>y</code> both set 
to 0.</p>
 */
Dimension = {};

/**
 * @property height
 * @type Number
 * <p>The height measurement.</p>
 */
Dimension.height = null;

/**
 * @property width
 * @type Number
 * <p>The width measurement.</p>
 */
Dimension.width = null;

/**
 * @property x
 * @type Number
 * <p>The x-axis coordinate of the position.</p>
 */
Dimension.x = null;

/**
 * @property y
 * @type Number
 * <p>The y-axis coordinate of the position.</p>
 */
Dimension.y = null;

/**
 * @class DownloadCallback
 * @typestr Object
 * @pseudo
 * <p>Defines notification callbacks for the download state change or progress.</p>
 */
DownloadCallback = {};

/**
 * @method onCancel
 * <p>Called when download is canceled by the 
{@link Modules.Tizen.Download.DownloadRequest#method-abort abort} method.</p>
 * @param {Modules.Tizen.Download.DownloadRequest} downloadRequest 
 * <p>Current started download operation.</p>
 * @return void
*/
DownloadCallback.onCancel = function(downloadRequest){};

/**
 * @method onDataStream
 * <p>Called when a download is successful and it called multiple times as the download progresses.</p>
 * @description <p>The interval between <code>onprogress</code> callback is platform-dependent. When the download is 
started, the receivedSize can be 0.</p>
 * @param {Modules.Tizen.Download.DownloadRequest} downloadRequest 
 * <p>Current started download operation.</p>
 * @param {Number} receivedSize 
 * <p>The size of data received in bytes.</p>
 * @param {Number} totalSize 
 * <p>The total size of data to receive in bytes.</p>
 * @return void
*/
DownloadCallback.onDataStream = function(downloadRequest, receivedSize, totalSize){};

/**
 * @method onError
 * <p>Called when the download operation fails.</p>
 * @param {Modules.Tizen.Download.DownloadRequest} downloadRequest 
 * <p>Current started download operation.</p>
 * @param {Function} error 
 * <p>The reason for the download failure.</p>
 * @return void
*/
DownloadCallback.onError = function(downloadRequest, error){};

/**
 * @method onLoad
 * <p>Called when the download operation is completed with the final full path.</p>
 * @description <p>If the same file name already exists in the destination, it is changed according to the 
platform policy and delivered in this callback.</p>
 * @param {Modules.Tizen.Download.DownloadRequest} downloadRequest 
 * <p>Current started download operation.</p>
 * @param {String} fullPath 
 * <p>The final full path for the downloaded file.</p>
 * @return void
*/
DownloadCallback.onLoad = function(downloadRequest, fullPath){};

/**
 * @method onPause
 * <p>Called when the download operation is paused by the 
{@link Modules.Tizen.Download.DownloadRequest#method-pause pause} method.</p>
 * @param {Modules.Tizen.Download.DownloadRequest} downloadRequest 
 * <p>Current started download operation.</p>
 * @return void
*/
DownloadCallback.onPause = function(downloadRequest){};

/**
 * @class DownloadRequestInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for the {@link Modules.Tizen.Download#method-createDownloadRequest}.</p>
 */
DownloadRequestInit = {};

/**
 * @property destination
 * @type String
 * <p>(optional) Destination folder to which a requested file object will be downloaded. If the destination is not specified, the file will be downloaded to the default storage "Downloads".</p>
 */
DownloadRequestInit.destination = null;

/**
 * @property fileName
 * @type String
 * <p>(optional) An attribute to store the file name for the specified URL. If the file name 
is not given, the original file name from URL is used.</p>
 */
DownloadRequestInit.fileName = null;

/**
 * @property url
 * @type String
 * <p>The URL of the object to download.</p>
 */
DownloadRequestInit.url = null;

/**
 * @class EncodeNumberDict
 * @typestr Object
 * @pseudo
 * <p>Named parameters for {@link Titanium.Codec#method-encodeNumber}.</p>
 */
EncodeNumberDict = {};

/**
 * @property [byteOrder=Native byte order.]
 * @type Number
 * <p>Byte order to encode with.</p>
 */
EncodeNumberDict.byteOrder = null;

/**
 * @property dest
 * @type Titanium.Buffer
 * <p>Destination buffer.</p>
 */
EncodeNumberDict.dest = null;

/**
 * @property [position=0]
 * @type Number
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Index in the <code>dest</code> buffer of the first byte of encoded data.</p>
 */
EncodeNumberDict.position = null;

/**
 * @property source
 * @type Number
 * <p>Number to encode.</p>
 */
EncodeNumberDict.source = null;

/**
 * @property type
 * @type String
 * <p>Encoding type to use. Must be one of {@link Titanium.Codec#property-TYPE_BYTE}, {@link Titanium.Codec#property-TYPE_SHORT}, {@link Titanium.Codec#property-TYPE_INT}, {@link Titanium.Codec#property-TYPE_FLOAT}, {@link Titanium.Codec#property-TYPE_LONG}, or {@link Titanium.Codec#property-TYPE_DOUBLE}.</p>
 */
EncodeNumberDict.type = null;

/**
 * @class EncodeStringDict
 * @typestr Object
 * @pseudo
 * <p>Named parameters for {@link Titanium.Codec#method-encodeString}.</p>
 */
EncodeStringDict = {};

/**
 * @property [charset={@link Titanium.Codec#property-CHARSET_UTF8}]
 * @type String
 * <p>Character encoding to use when encoding this string to bytes.</p>
 */
EncodeStringDict.charset = null;

/**
 * @property dest
 * @type Titanium.Buffer
 * <p>Destination buffer.</p>
 */
EncodeStringDict.dest = null;

/**
 * @property [destPosition=0]
 * @type Number
 * <p>Index in the <code>dest</code> buffer of the first byte of the encoded string.</p>
 */
EncodeStringDict.destPosition = null;

/**
 * @property source
 * @type String
 * <p>Source string to encode.</p>
 */
EncodeStringDict.source = null;

/**
 * @property [sourceLength=The length of <code>source</code>]
 * @type Number
 * <p>Number of characters in <code>source</code> to encode.</p>
 */
EncodeStringDict.sourceLength = null;

/**
 * @property [sourcePosition=0]
 * @type Number
 * <p>Position in <code>source</code> to start encoding.</p>
 */
EncodeStringDict.sourcePosition = null;

/**
 * @class ErrorCallbackArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends FailureResponse
 * <p>Object passed to the error callback when the socket enters the {@link Titanium.Network.Socket#property-ERROR ERROR} state.</p>
 */
ErrorCallbackArgs = {};

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns a non-zero value.</p>
 * @description <p>If the error was generated by the operating system, that system's error value
is used. Otherwise, this value will be -1.</p>
 */
ErrorCallbackArgs.code = null;

/**
 * @property errorCode
 * @type Number
 * <p>The error code of the error (potentially system-dependent).</p>
 * @deprecated 3.1.0
 */
ErrorCallbackArgs.errorCode = null;

/**
 * @property socket
 * @type Titanium.Network.Socket.TCP
 * <p>Socket that experienced the error.</p>
 */
ErrorCallbackArgs.socket = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Indicates if the operation succeeded. Returns <code>false</code>.</p>
 * @description <p>Returns <code>false</code>.</p>
 */
ErrorCallbackArgs.success = null;

/**
 * @class ErrorResponse
 * @typestr Object
 * @pseudo
 * <p>Properties used in any event or callback which needs to report a success or failure.</p>
 */
ErrorResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
ErrorResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
ErrorResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
ErrorResponse.success = null;

/**
 * @class EventsAuthorizationResponse
 * @typestr Object
 * @pseudo
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Argument passed to the callback when a request finishes successfully or erroneously.</p>
 */
EventsAuthorizationResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code, if any returned.</p>
 * @description <p>May be undefined if <code>success</code> is <code>true</code>.</p>
 */
EventsAuthorizationResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>May be undefined if <code>success</code> is <code>true</code>.</p>
 */
EventsAuthorizationResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates whether the request succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded.</p>
 */
EventsAuthorizationResponse.success = null;

/**
 * @class ExpandRecurrenceResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Calendar.CalendarEvent#method-expandRecurrence expandRecurrence} method.</p>
 */
ExpandRecurrenceResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
ExpandRecurrenceResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
ExpandRecurrenceResponse.error = null;

/**
 * @property events
 * @type Modules.Tizen.Calendar.CalendarEvent[]
 * <p>The array of CalendarEvent objects.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
ExpandRecurrenceResponse.events = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
ExpandRecurrenceResponse.success = null;

/**
 * @class FacebookDialogResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Argument passed to the dialog callback when a dialog is completed or canceled.</p>
 * @description <p>The <code>success</code> and <code>cancelled</code> properties may not be reliable for dialogs. In the event
that the user canceled the dialog, the <code>result</code> field is <code>undefined</code>.</p>
 */
FacebookDialogResponse = {};

/**
 * @property cancelled
 * @type Boolean
 * <p>Indicates if the user canceled the dialog.</p>
 */
FacebookDialogResponse.cancelled = null;

/**
 * @property result
 * @type String
 * <p>If successful, returns the JSON response containing the <code>post_id</code> of the new post.
If the user canceled the dialog, the results is undefined.</p>
 */
FacebookDialogResponse.result = null;

/**
 * @class FacebookDialogResponsev1
 * @typestr Object
 * @pseudo
 * <p>Argument passed to the dialog callback when a dialog is completed or canceled.</p>
 * @description <p>The <code>success</code> and <code>cancelled</code> properties may not be reliable for dialogs. In the event
that the user canceled the dialog, the <code>result</code> field is <code>undefined</code>.</p>
 */
FacebookDialogResponsev1 = {};

/**
 * @property cancelled
 * @type Boolean
 * <p>Indicates if the user canceled the dialog.</p>
 */
FacebookDialogResponsev1.cancelled = null;

/**
 * @property error
 * @type String
 * <p>Error message, if request failed.</p>
 */
FacebookDialogResponsev1.error = null;

/**
 * @property result
 * @type String
 * <p>JSON response containing the <code>post_id</code> of the new post, if successful.
<code>undefined</code> if the user canceled the dialog.</p>
 */
FacebookDialogResponsev1.result = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the request succeeded.</p>
 */
FacebookDialogResponsev1.success = null;

/**
 * @class FacebookGraphResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Argument passed to the graph API callback, in response to a
{@link Modules.Facebook#method-requestWithGraphPath requestWithGraphPath} call.</p>
 */
FacebookGraphResponse = {};

/**
 * @property path
 * @type String
 * <p>Graph API path of the original request.</p>
 */
FacebookGraphResponse.path = null;

/**
 * @property result
 * @type String
 * <p>If successful, returns the JSON response returned by Facebook.
If the request is not successfully completed, the result is undefined.</p>
 */
FacebookGraphResponse.result = null;

/**
 * @class FacebookGraphResponsev1
 * @typestr Object
 * @pseudo
 * <p>Argument passed to the graph API callback, in response to a
{@link Titanium.Facebook#method-requestWithGraphPath requestWithGraphPath} call.</p>
 */
FacebookGraphResponsev1 = {};

/**
 * @property error
 * @type String
 * <p>Error message, if request failed.</p>
 */
FacebookGraphResponsev1.error = null;

/**
 * @property path
 * @type String
 * <p>Graph API path of the original request.</p>
 */
FacebookGraphResponsev1.path = null;

/**
 * @property result
 * @type String
 * <p>JSON response returned by Facebook.</p>
 */
FacebookGraphResponsev1.result = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the request succeeded.</p>
 */
FacebookGraphResponsev1.success = null;

/**
 * @class FacebookRESTResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Argument passed to the REST API callback when a request completes (successfully
or unsuccessfully).</p>
 */
FacebookRESTResponse = {};

/**
 * @property method
 * @type String
 * <p>REST method call you specified.</p>
 */
FacebookRESTResponse.method = null;

/**
 * @property result
 * @type String
 * <p>If successful, returns the JSON response returned by Facebook.
If the request is not successfully completed, the result is undefined.</p>
 */
FacebookRESTResponse.result = null;

/**
 * @class FacebookRESTResponsev1
 * @typestr Object
 * @pseudo
 * <p>Argument passed to the REST API callback when a request completes (successfully
or unsuccessfully).</p>
 */
FacebookRESTResponsev1 = {};

/**
 * @property error
 * @type String
 * <p>Error message, if request failed.</p>
 */
FacebookRESTResponsev1.error = null;

/**
 * @property method
 * @type String
 * <p>REST method call you specified.</p>
 */
FacebookRESTResponsev1.method = null;

/**
 * @property result
 * @type String
 * <p>JSON response returned by Facebook.</p>
 */
FacebookRESTResponsev1.result = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the request succeeded.</p>
 */
FacebookRESTResponsev1.success = null;

/**
 * @class FacebookReauthResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Argument passed to the reauthorize callback when the request is completed or canceled.</p>
 */
FacebookReauthResponse = {};

/**
 * @property cancelled
 * @type Boolean
 * <p>Indicates if the user canceled the dialog.</p>
 */
FacebookReauthResponse.cancelled = null;

/**
 * @class FailureResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Properties used in any event or callback which needs to report a failure.</p>
 */
FailureResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns a non-zero value.</p>
 * @description <p>If the error was generated by the operating system, that system's error value
is used. Otherwise, this value will be -1.</p>
 */
FailureResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>May be undefined.</p>
 */
FailureResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded. Returns <code>false</code>.</p>
 * @description <p>Returns <code>false</code>.</p>
 */
FailureResponse.success = null;

/**
 * @class FindAppControlResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Apps#method-findAppControl findAppControl} method.</p>
 */
FindAppControlResponse = {};

/**
 * @property appControl
 * @type Modules.Tizen.Apps.ApplicationControl
 * <p>The application control that was passed on findAppControl.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
FindAppControlResponse.appControl = null;

/**
 * @property appInfo
 * @type Modules.Tizen.Apps.ApplicationInformation[]
 * <p>List of installed applications.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
FindAppControlResponse.appInfo = null;

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
FindAppControlResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
FindAppControlResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
FindAppControlResponse.success = null;

/**
 * @class FindConversationsResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Messaging.MessageStorage#method-findConversations findConversations} method.</p>
 */
FindConversationsResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
FindConversationsResponse.code = null;

/**
 * @property conversations
 * @type Modules.Tizen.Messaging.MessageConversation[]
 * <p>Array of conversations that satisfy the query.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
FindConversationsResponse.conversations = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
FindConversationsResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
FindConversationsResponse.success = null;

/**
 * @class FindFoldersResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Messaging.MessageStorage#method-findFolders findFolders} method.</p>
 */
FindFoldersResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
FindFoldersResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
FindFoldersResponse.error = null;

/**
 * @property folders
 * @type Modules.Tizen.Messaging.MessageFolder[]
 * <p>Array of folders that satisfy the query.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
FindFoldersResponse.folders = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
FindFoldersResponse.success = null;

/**
 * @class FindMessageResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Messaging.MessageStorage#method-findMessages findMessages} method.</p>
 */
FindMessageResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
FindMessageResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
FindMessageResponse.error = null;

/**
 * @property messages
 * @type Modules.Tizen.Messaging.Message[]
 * <p>Array of messages that satisfy the query.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
FindMessageResponse.messages = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
FindMessageResponse.success = null;

/**
 * @class FindResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Calendar.CalendarInstance#method-find find} method.</p>
 */
FindResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
FindResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
FindResponse.error = null;

/**
 * @property items
 * @type Modules.Tizen.Calendar.CalendarItem[]
 * <p>The array of CalendarItem objects.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
FindResponse.items = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
FindResponse.success = null;

/**
 * @class Font
 * @typestr Object
 * @pseudo
 * <p>An abstract datatype for specifying a text font.</p>
 * @description <p>Available fonts vary by platform and device. On iOS, font support depends on the OS
version. On Android, font support depends on the OS version <strong>and</strong> device manufacturer.</p>
<p>Note that to update the font used by a UI component, you must set the object's <code>font</code>
property, like this:</p>
<pre><code>myLabel.font = { fontSize: 24, font: myFontName }
</code></pre>
<p>Changing the <code>font</code> object after assigning it does not reliably affect the underlying UI
component:</p>
<pre><code>// This may not work as expected
myLabel.font.fontSize = 24;
</code></pre>
<h4>Custom Fonts</h4>
<p>Custom TrueType (.ttf) or OpenType (.otf) fonts may be embedded in an application on iOS and
Android. (Note that you must have redistribution rights on the fonts you ship.)</p>
<p>Custom fonts must be placed in the <code>Resources/fonts</code> directory. Note that the steps
for referring to the fonts are slightly different by platform.</p>
<ul>
<li>
<p>On Android, use the font file name, minus the <code>.otf</code> or <code>.ttf</code> extension.
  For example, if you are using the Chantelli Antiqua font and the file is
  named <code>Chantelli_Antiqua.ttf</code>, specify <code>fontFamily: 'Chantelli_Antiqua'</code> 
  on Android.</p>
</li>
<li>
<p>On iOS, use the official font name--this name is embedded in the font file and 
  does not change if you rename the file. For example, for Chantelli Antiqua, 
  you'd specify: <code>fontFamily: 'Chantelli Antiqua'</code> (with a space).
  On OS X, double-clicking on the font file will launch the Font Book application, 
  which shows the official font name.</p>
</li>
</ul>
<p>iOS requires one more step to embed a custom font in an application. The font must be 
added to the application's <code>Info.plist</code> file:</p>
<ol>
<li>
<p>Build the project at least once (the font won't work yet).</p>
</li>
<li>
<p>Copy <em>yourproject</em><code>/build/iphone/Info.plist</code> to the <em>yourproject</em> folder.</p>
</li>
<li>
<p>Double-click <code>Info.plist</code> to open it in Xcode.</p>
</li>
<li>
<p>Right-click a blank area in the list of keys and choose <strong>Add Row</strong>. </p>
<p>From the resulting list, choose <strong>Fonts provided by application</strong>.</p>
</li>
<li>
<p>Expand <strong>Fonts provided by application</strong> and click in the Value field. </p>
<p>Enter the full path of the font file, for example, <code>/fonts/Chantelli_Antiqua.ttf</code>.</p>
</li>
<li>
<p>Save the file and close Xcode.</p>
</li>
<li>
<p>In Studio, clean the project then build it again. Your custom font should
    show up.</p>
</li>
</ol>
<p>For more information on embedding custom fonts, see:</p>
<ul>
<li><a href="#!/guide/Custom_Fonts">Custom Fonts in the Titanium Mobile Guides</a></li>
</ul>
 */
Font = {};

/**
 * @property [fontFamily=Uses the default system font.]
 * @type String
 * <p>Name of a font family, for example, "Helvetica" or "DroidSans".</p>
 * @description <p>Note the the fonts available differ by platform. 
If the requested family name does not match an existing font, the default font 
family is used. </p>
<p>On Android, the generic names "sans-serif," "serif," and "monospace" (or "monospaced") are 
mapped to system fonts. On iOS, only "monospace" is supported.</p>
 */
Font.fontFamily = null;

/**
 * @property [fontSize=15px]
 * @type Number/String
 * <p>Font size, in platform-dependent units.</p>
 * @description <p>On iOS and Mobile Web, font sizes are always specified in typographical points 
(not to be confused with the Apple "points" used for other measurements on iOS). </p>
<p>On Android the default font sizing is in pixels, but the size can also 
include a unit specifier. Supported units and their specifiers are:</p>
<ul>
<li>pixels (px)</li>
<li>typographical points (pt)</li>
<li>density-independent pixels (dp or dip)</li>
<li>millimeters (mm)</li>
<li>inches (in) </li>
</ul>
<p>For example, "16dp" specifies a size of 16 density-independent pixels. </p>
<p>iOS ingores any unit specifier after the size value.</p>
 */
Font.fontSize = null;

/**
 * @property [fontStyle=normal]
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Font style. Valid values are "italic" or "normal".</p>
 */
Font.fontStyle = null;

/**
 * @property [fontWeight=normal]
 * @type String
 * <p>Font weight. Valid values are "bold" or "normal".</p>
 * @description <p>The "semibold" weight is recognized on iOS only.</p>
 */
Font.fontWeight = null;

/**
 * @class ForwardGeocodeResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the 
{@link Titanium.Geolocation#method-forwardGeocoder forwardGeocoder} method.</p>
<p>Note that Android includes a number of extra fields.</p>
 */
ForwardGeocodeResponse = {};

/**
 * @property accuracy
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Estimated accuracy of the geocoding, in meters.</p>
 */
ForwardGeocodeResponse.accuracy = null;

/**
 * @property address
 * @type String
 * @platform android 0.8
 * <p>Full address.</p>
 */
ForwardGeocodeResponse.address = null;

/**
 * @property city
 * @type String
 * @platform android 0.8
 * <p>City name.</p>
 */
ForwardGeocodeResponse.city = null;

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
ForwardGeocodeResponse.code = null;

/**
 * @property country
 * @type String
 * @platform android 0.8
 * <p>Country name.</p>
 */
ForwardGeocodeResponse.country = null;

/**
 * @property countryCode
 * @type String
 * @platform android 0.8
 * <p>Country code.</p>
 */
ForwardGeocodeResponse.countryCode = null;

/**
 * @property country_code
 * @type String
 * @platform android 0.8
 * <p>Country code. Same as <code>countryCode</code>.</p>
 */
ForwardGeocodeResponse.country_code = null;

/**
 * @property displayAddress
 * @type String
 * @platform android 0.8
 * <p>Display address. Identical to <code>address</code>.</p>
 */
ForwardGeocodeResponse.displayAddress = null;

/**
 * @property error
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
ForwardGeocodeResponse.error = null;

/**
 * @property latitude
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Latitude of the geocoded address.</p>
 */
ForwardGeocodeResponse.latitude = null;

/**
 * @property longitude
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Longitude of the geocoded address.</p>
 */
ForwardGeocodeResponse.longitude = null;

/**
 * @property postalCode
 * @type String
 * @platform android 0.8
 * <p>Postal code.</p>
 */
ForwardGeocodeResponse.postalCode = null;

/**
 * @property region1
 * @type String
 * @platform android 0.8
 * <p>First line of region.</p>
 */
ForwardGeocodeResponse.region1 = null;

/**
 * @property region2
 * @type String
 * @platform android 0.8
 * <p>Not used.</p>
 */
ForwardGeocodeResponse.region2 = null;

/**
 * @property street
 * @type String
 * @platform android 0.8
 * <p>Street name, without street address.</p>
 */
ForwardGeocodeResponse.street = null;

/**
 * @property street1
 * @type String
 * @platform android 0.8
 * <p>Street name.</p>
 */
ForwardGeocodeResponse.street1 = null;

/**
 * @property success
 * @type Boolean
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
ForwardGeocodeResponse.success = null;

/**
 * @class GeocodedAddress
 * @typestr Object
 * @pseudo
 * <p>Simple object representing a place, returned in the callback from the 
{@link Titanium.Geolocation#method-reverseGeocoder reverseGeocoder} method.</p>
 */
GeocodedAddress = {};

/**
 * @property address
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Full address.</p>
 */
GeocodedAddress.address = null;

/**
 * @property city
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>City name.</p>
 */
GeocodedAddress.city = null;

/**
 * @property country
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Country name.</p>
 */
GeocodedAddress.country = null;

/**
 * @property countryCode
 * @type String
 * @platform android 0.8
 * <p>Country code. On iOS, use <code>country_code</code>.</p>
 */
GeocodedAddress.countryCode = null;

/**
 * @property country_code
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Country code. Same as <code>country_code</code>.</p>
 */
GeocodedAddress.country_code = null;

/**
 * @property displayAddress
 * @type String
 * @platform android 0.8
 * <p>Display address. Identical to <code>address</code>.</p>
 */
GeocodedAddress.displayAddress = null;

/**
 * @property latitude
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Latitude of the geocoded point.</p>
 */
GeocodedAddress.latitude = null;

/**
 * @property longitude
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Longitude of the geocoded point.</p>
 */
GeocodedAddress.longitude = null;

/**
 * @property postalCode
 * @type String
 * @platform android 0.8
 * <p>Postal code. On iOS, use <code>zipcode</code>.</p>
 */
GeocodedAddress.postalCode = null;

/**
 * @property region1
 * @type String
 * @platform android 0.8
 * <p>First line of region.</p>
 */
GeocodedAddress.region1 = null;

/**
 * @property region2
 * @type String
 * @platform android 0.8
 * <p>Not used.</p>
 */
GeocodedAddress.region2 = null;

/**
 * @property street
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Street name, without street address.</p>
 */
GeocodedAddress.street = null;

/**
 * @property street1
 * @type String
 * @platform android 0.8
 * <p>Street name.</p>
 */
GeocodedAddress.street1 = null;

/**
 * @property zipcode
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Postal code. On Android, use <code>postalCode</code>.</p>
 */
GeocodedAddress.zipcode = null;

/**
 * @class GetCalendarsResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Calendar#method-getCalendars getCalendars} method.</p>
 */
GetCalendarsResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
GetCalendarsResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
GetCalendarsResponse.error = null;

/**
 * @property items
 * @type Modules.Tizen.Calendar.CalendarItem[]
 * <p>The array of Calendar objects.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
GetCalendarsResponse.items = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
GetCalendarsResponse.success = null;

/**
 * @class GetDeviceResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-getDevice getDevice} method.</p>
 */
GetDeviceResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
GetDeviceResponse.code = null;

/**
 * @property device
 * @type Modules.Tizen.Bluetooth.BluetoothDevice
 * <p>The device that the response pertains to.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
GetDeviceResponse.device = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
GetDeviceResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
GetDeviceResponse.success = null;

/**
 * @class GetKnownDevicesResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-getKnownDevices getKnownDevices} method.</p>
 */
GetKnownDevicesResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
GetKnownDevicesResponse.code = null;

/**
 * @property devices
 * @type Modules.Tizen.Bluetooth.BluetoothDevice[]
 * <p>List of devices known to local Bluetooth adapter.</p>
 * @description <p>Each element is a {@link Modules.Tizen.Bluetooth.BluetoothDevice}.
Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
GetKnownDevicesResponse.devices = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
GetKnownDevicesResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
GetKnownDevicesResponse.success = null;

/**
 * @class Global
 * @typestr Object
 * <p>The APIs that reside in the global scope, which may be called without a namespace prefix.</p>
 * @description <p>Titanium provides a number of global built-in objects, detailed below. </p>
<h4>JSON</h4>
<p>Titanium provides a built-in {@link Global.JSON JSON} object two functions, <code>parse</code> and <code>stringify</code>.</p>
<h4>String Utilities</h4>
<p>Titanium includes several extra utility functions for formatting text, attached to the
global {@link Global.String String} object.</p>
<h4>console</h4>
<p>Titanium provides {@link Global.console console} support familiar to many javascript developers
for logging at the toplevel, in addition to the {@link Titanium.API} logging facilities.</p>
<h4>Timers</h4>
<p>Titanium has built-in support for one-off and repeating timers:</p>
<ul>
<li>
<p>Use {@link Global#method-setTimeout setTimeout} to start a one-off timer.</p>
</li>
<li>
<p>Use {@link Global#method-setInterval setInterval} to start a repeating timer.</p>
</li>
</ul>
<h4>Alert</h4>
<p>Titanium has a built-in convenience function {@link Global#method-alert alert} which can be used as an alias 
for the {@link Titanium.UI.AlertDialog AlertDialog} module.</p>
<h4>Locale</h4>
<p>The <code>L</code> macro can also be used as an alias for the {@link Titanium.Locale#method-getString} method.</p>
 */
Global = {};

/**
 * @class Global.JSON
 * @typestr Object of Global
 * <p>Global JSON object providing the {@link Global.JSON#method-parse parse} and {@link Global.JSON#method-stringify stringify} methods.</p>
 */
Global.JSON = {};

/**
 * @method parse
 * <p>Parses a JSON text to produce an object or array.</p>
 * @description <p>The <code>parse</code> method throws a SyntaxError exception if the text cannot be parsed.</p>
<p>The optional reviver parameter is a function that can filter and
transform the results. It receives each of the keys and values,
and its return value is used instead of the original value.
If it returns what it received, then the structure is not modified.
If it returns undefined then the member is deleted.</p>
 * <h3>Example</h3>
 * <h4>Parse with Reviver Function</h4>
 * <pre>The following example parses the text, converting  values that look like ISO date strings into Date objects.
myData = JSON.parse(text, function (key, value) { var a; if (typeof value === 'string') { a = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value); if (a) { return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6])); } } return value; });</pre>
 * @param {String} text 
 * <p>JSON text to parse.</p>
 * @param {Function} reviver 
 * <p>Function to filter and transform the results.</p>
 * @return {Object} 
*/
Global.JSON.parse = function(text, reviver){};

/**
 * @method stringify
 * <p>Produces a JSON text from a JavaScript value.</p>
 * @description <p>When an object value is found, if the object contains a toJSON
method, its toJSON method is called and the result is
stringified. A toJSON method does not serialize: it returns the
value represented by the name/value pair that should be serialized,
or undefined if nothing should be serialized. The toJSON method
is passed the key associated with the value, and <code>this</code> is
bound to the value.</p>
<p>For example, this would serialize Dates as ISO strings.</p>
<pre><code>Date.prototype.toJSON = function (key) {
    function f(n) {
        // Format integers to have at least two digits.
        return n &lt; 10 ? '0' + n : n;
    }

    return this.getUTCFullYear()   + '-' +
         f(this.getUTCMonth() + 1) + '-' +
         f(this.getUTCDate())      + 'T' +
         f(this.getUTCHours())     + ':' +
         f(this.getUTCMinutes())   + ':' +
         f(this.getUTCSeconds())   + 'Z';
};
</code></pre>
<p>You can provide an optional replacer function. It is passed the
key and value of each member, with <code>this</code> bound to the containing
object. The value that is returned from your function is
serialized. If your function returns undefined, then the member will
be excluded from the serialization.</p>
<p>If the replacer parameter is an array of strings, then it is
used to select the members to be serialized. It filters the results
such that only members with keys listed in the replacer array are
stringified.</p>
<p>Values that do not have JSON representations, such as undefined or
functions, will not be serialized. Such values in objects are
dropped; in arrays they are replaced with null. You can use
a replacer function to replace those with JSON values.</p>
<p>JSON.stringify(undefined) returns undefined.</p>
<p>The optional space parameter produces a stringification of the
value that is filled with line breaks and indentation to make it
easier to read.</p>
<p>If the space parameter is a non-empty string, then that string is
used for indentation. If the space parameter is a number, then
each level is indented by the specified number of spaces. </p>
 * <h3>Example</h3>
 * <h4>Formatting with a Replacer Function</h4>
 * <p><p>The following example produces a readable version of a Titanium event object, 
omitting the <code>source</code> and <code>type</code> properties and adding whitespace for readability:</p></p><pre>JSON.stringify(evt, function(key, value) {
    if(key === 'source' || key === 'type') {
        return undefined;
    } else {
        return value;
    }
}, 2));</pre>
 * @param {Object} value 
 * <p>Any JavaScript value, usually an object or array.</p>
 * @param {Function/String[]} replacer (optional)
 * <p>Determines how object values are stringified for objects. See main text for usage.</p>
 * @param {Number/String} [space=Text is packed without linebreaks or extra whitespace.] (optional)
 * <p>Specifies how nested structures are indented. If it is a number, it specifies the number of spaces to indent at each level. If it is a string (such as '\t' or '&amp;nbsp;'), it specifies the characters used to indent at each level.</p>
 * @return {String} 
*/
Global.JSON.stringify = function(value, replacer, arg){};

/**
 * @class Global.String
 * @typestr Object of Global
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>The JavaScript built-in String type.</p>
 * @description <p>This module contains Titanium-only extensions for formatting data into locale-specific strings. 
The target locale is configured by the user in the device's system Settings.</p>
 */
Global.String = {};

/**
 * @method format
 * <p>Formats a string using <code>printf</code>-style substitution.</p>
 * @description <p>The format string follows the 
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html">IEEE printf specification</a>.</p>
<p>For each "conversion specification" (ie. <code>%s</code> for a string or <code>%d</code> for a number) used inside
the string, <code>formatString</code> argument, the respective value is substituted from the
argument list. For example:</p>
<pre><code>var forename = 'Paul';
var number = 21;
var message = String.format('Welcome, %s! You are visitor number %d', forename, number);
Ti.API.info(message);
</code></pre>
 * @param {String} formatString 
 * <p>An IEEE <code>printf</code>-style string, containing zero or more conversion specifications.</p>
 * @param {String/Number...} value 
 * <p>Values to substitute into the <code>formatString</code>.  The method expects a variable number
of <code>value</code> arugments, one for each <code>%</code> conversion specification in the format
string. Optional on Android.</p>
 * @return {String} <p>Formatted string.</p>
*/
Global.String.format = function(formatString, value){};

/**
 * @method formatCurrency
 * <p>Formats a number into the currency format, including currency symbol, of the locale 
configured for the system.</p>
 * @param {Number} value 
 * <p>Currency value.</p>
 * @return {String} <p>Formatted, localized string.</p>
*/
Global.String.formatCurrency = function(value){};

/**
 * @method formatDate
 * <p>Formats a date into the date format of the locale configured for the system.</p>
 * @param {Date} date 
 * <p>Date to format.</p>
 * @param {String} [format=short] (optional)
 * <p>Date format to use. One of 'short', 'medium', or 'long'.</p>
 * @return {String} <p>Formatted, localized string.</p>
*/
Global.String.formatDate = function(date, arg){};

/**
 * @method formatDecimal
 * <p>Formats a number into the decimal format, including decimal symbol, of the locale 
configured for the system.</p>
 * @param {Number} value 
 * <p>Value to format.</p>
 * @param {String} locale (optional)
 * <p>Locale string. For example, <code>en-US</code> for US English.</p>
 * @param {String} pattern (optional)
 * <p>Format pattern.</p>
 * @return {String} <p>String representation of the specified number, using a locale-specific decimal symbol, 
if required.</p>
*/
Global.String.formatDecimal = function(value, locale, pattern){};

/**
 * @method formatTime
 * <p>Formats a date into the time format of the locale configured for the system.</p>
 * @description <p>On Android, this method returns the short format.</p>
 * @param {Date} date 
 * <p>Date to format.</p>
 * @param {String} [format=short] (optional)
 * <p>Date format to use. One of 'short', 'medium', or 'long' (iOS only.)</p>
 * @return {String} <p>Formatted, localized string.</p>
*/
Global.String.formatTime = function(date, arg){};

/**
 * @class Global.console
 * @typestr Object of Global
 * @platform android 2.1
 * @platform blackberry 3.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Console logging facilities.</p>
 * @description <p>The toplevel <code>console</code> support is intended to supplement {@link Titanium.API}
and make it easier for developers to port existing javascript code
(especially CommonJS modules) to Titanium.</p>
<p>Note that <code>console</code> does not currently implement the complete
<a href="http://getfirebug.com/wiki/index.php/Console_API">firebug specification</a>.
Our support is roughly equivalent to that offered by
<a href="http://nodejs.org/api/stdio.html">node.js's console</a>.</p>
 */
Global.console = {};

/**
 * @method debug
 * <p>Log a message at the <code>debug</code> level.</p>
 * @description <p>The message to log can either be a single argument, or any number
of arguments, which will be converted to strings and then concatenated
together with a space character.</p>
 * @param {Object} message 
 * <p>The message(s) to log.</p>
 * @return void
*/
Global.console.debug = function(message){};

/**
 * @method error
 * <p>Log a message at the <code>error</code> level.</p>
 * @description <p>The message to log can either be a single argument, or any number
of arguments, which will be converted to strings and then concatenated
together with a space character.</p>
 * @param {Object} message 
 * <p>The message(s) to log.</p>
 * @return void
*/
Global.console.error = function(message){};

/**
 * @method info
 * <p>Log a message at the <code>info</code> level.</p>
 * @description <p>The message to log can either be a single argument, or any number
of arguments, which will be converted to strings and then concatenated
together with a space character.</p>
 * @param {Object} message 
 * <p>The message(s) to log.</p>
 * @return void
*/
Global.console.info = function(message){};

/**
 * @method log
 * <p>Log a message at the <code>info</code> level.</p>
 * @description <p>The message to log can either be a single argument, or any number
of arguments, which will be converted to strings and then concatenated
together with a space character.</p>
<p>Note that this method has different behavior from {@link Titanium.API#method-log},
which can take multiple arguments, but in doing so interprets the
first argument as a custom log level.</p>
 * @param {Object} message 
 * <p>The message(s) to log.</p>
 * @return void
*/
Global.console.log = function(message){};

/**
 * @method warn
 * <p>Log a message at the <code>warn</code> level.</p>
 * @description <p>The message to log can either be a single argument, or any number
of arguments, which will be converted to strings and then concatenated
together with a space character.</p>
 * @param {Object} message 
 * <p>The message(s) to log.</p>
 * @return void
*/
Global.console.warn = function(message){};

/**
 * @method L
 * <p>An alias for {@link Titanium.Locale#method-getString}.</p>
 * @param {String} key 
 * <p>Key used to lookup the localized string.</p>
 * @param {String} hint (optional)
 * <p>Text to return if <code>key</code> is not found.</p>
 * @return {String} <p>Localized string defined by <code>key</code>, or value of <code>hint</code> otherwise.</p>
*/
Global.L = function(key, hint){};

/**
 * @method alert
 * <p>Displays a pop-up alert dialog with the passed in <code>message</code>.</p>
 * @description <p>This function is a shortcut for creating and displaying an 
{@link Titanium.UI.AlertDialog alert dialog}. For example, the following two statements produce 
the same result.</p>
<pre><code>alert('Danger, Will Robinson!');

Ti.UI.createAlertDialog({ message: 'Danger, Will Robinson!' }).show();
</code></pre>
<p>Note that unlike a web browser-based version of <code>alert</code>, the method is asynchronous. However, 
only one alert dialog will be visible and modal at a time.</p>
<p>Be aware that this method may be removed in the future.</p>
 * @param {String} message 
 * <p>Alert message.</p>
 * @return void
*/
Global.alert = function(message){};

/**
 * @method clearInterval
 * <p>Cancels an interval timer.</p>
 * @param {Number} timerId 
 * <p>Unique timer identifier returned by {@link Global#method-setInterval setInterval}.</p>
 * @return void
*/
Global.clearInterval = function(timerId){};

/**
 * @method clearTimeout
 * <p>Cancels a one-time timer.</p>
 * @param {Number} timerId 
 * <p>Unique timer identifier returned by {@link Global#method-setTimeout setTimeout}.</p>
 * @return void
*/
Global.clearTimeout = function(timerId){};

/**
 * @method decodeURIComponent
 * <p>Replaces each escape sequence in the specified string, created using the <code>encodedURI</code> 
method, with the character that it represents. </p>
 * @description <p>For more information, see the MDN website for 
<a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent">encodeURIComponent</a> 
and <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/decodeURIComponent">decodeURIComponent</a>.</p>
 * @param {String} encodedURI 
 * <p>Text that optionally contains encoded escape sequences.</p>
 * @return {String} <p>Decoded string.</p>
*/
Global.decodeURIComponent = function(encodedURI){};

/**
 * @method encodeURIComponent
 * <p>Replaces each special character in the specified string with the equivalent URI escape 
sequence. Useful for encoding URIs.</p>
 * @description <p>For more information, see the MDN website for 
<a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent">encodeURIComponent</a> 
and <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/decodeURIComponent">decodeURIComponent</a>.</p>
 * @param {String} string 
 * <p>Text that optionally contains special characters.</p>
 * @return {String} <p>Encoded string.</p>
*/
Global.encodeURIComponent = function(string){};

/**
 * @method require
 * <p>Loads either a native Titanium module, or a CommonJS module.</p>
 * @description <p>The <code>require</code> function takes a module identifier as its argument and returns an object with 
references to the module's exported symbols.</p>
<p>To load a native Titanium module, use its module ID.</p>
<p>To load a local CommonJS module, use the relative path to the file, <em>minus</em> the <code>.js</code> 
extension. The file path is relative to the location of the file calling <code>require</code>.</p>
<p>Note that the appropriate <em>platform-specific</em> <code>Resources</code> subdirectory is merged into the 
main <code>Resources</code> directory at build time. For example, suppose the following files exist.</p>
<ul>
<li><code>Resources/app.js</code></li>
<li><code>Resources/ui/MainWindow.js</code></li>
<li><code>Resources/iphone/ui/TaskWindow.js</code></li>
<li><code>Resources/android/ui/TaskWindow.js</code></li>
</ul>
<p>The appropriate <code>TaskWindow.js</code> file is moved into the <code>Resources/ui</code> directory of the 
built application. To include both the MainWindow module and the platform-specific 
TaskWindow module, the this code may be used in the <code>app.js</code> file:</p>
<pre><code> // load main window module from ui subdirectory
 var mainWindow = require('ui/MainWindow');

 // load platform-specific task window module
 var taskWindow = require('ui/TaskWindow');
</code></pre>
<p>On the other hand, to include the TaskWindow module from the <code>Resources/ui/MainWindow.js</code> 
file:</p>
<pre><code> // load task window module
 var taskWindow = require('TaskWindow');
</code></pre>
<p>For more information, see the Official CommonJS website about 
<a href="http://wiki.commonjs.org/wiki/Modules/1.1">CommonJS Modules/1.1 Specification</a>.</p>
<h4>Alloy</h4>
<p>For Alloy, place the CommonJS modules in the <code>app/lib</code> directory of your Alloy project,
then load the module with the <code>require</code> method without the <code>app/lib</code> path and <code>.js</code>
extension.</p>
<p>For example, a module file <code>app/lib/myModule/module.js</code> may be loaded by
<code>app/controllers/index.js</code> using:</p>
<pre><code>require('myModule/module');
</code></pre>
<h4>Android</h4>
<p>Additionally, on Android, an absolute path to a module may be specified using a path
separator (<code>/</code>) at the beginning of the path.</p>
<p>For example, a module file <code>Resources/myModule/module.js</code> may be required by
<code>Resources/example/example.js</code> using either of the following:</p>
<pre><code>require('../myModule/module')
require ('/myModule/module')
</code></pre>
 * <h3>Examples</h3>
 * <h4>Require a Native Module</h4>
 * <p><p>To load a native module with the ID <code>com.mycompany.module</code>:</p></p><pre>var module = require('com.mycompany.module');</pre>
 * <h4>Require a JavaScript Module</h4>
 * <p><p><code>myModule.js</code>:</p></p><pre>exports.message = "hello world";
</pre>
 * <p><p><code>app.js</code>:</p></p><pre>var myModule = require('myModule');
alert(myModule.message);</pre>
 * @param {String} moduleId 
 * <p>Native module ID, or local path to a JavaScript file, <em>minus</em> the <code>.js</code> extension.</p>
 * @return {Object} <p>Exported <code>exports</code> object of the required module.</p>
*/
Global.require = function(moduleId){};

/**
 * @method setInterval
 * <p>Executes a function repeatedly with a fixed time delay between each call to that function.</p>
 * @description <p>Note that although the interval is not guaranteed to be exact, the interval between calls 
will be no less than the specified delay.</p>
<p>Returns a unique timer identifier that can be passed to {@link Global#method-clearInterval clearInterval} 
to cancel this timer.</p>
<p>For more information, see the MDN website for 
<a href="https://developer.mozilla.org/en/DOM/window.setInterval">setInterval</a>.</p>
 * <h3>Example</h3>
 * <h4>Update a label once every second, and stop at 10 seconds</h4>
 * <pre>
var count = 0;
var timer = setInterval(function(){
    count++;
    label.text = "count: " + count;
    if (count == 10) {
        clearInterval(timer);
    }
}, 1000);</pre>
 * @param {Function} function 
 * <p>Function to call.</p>
 * @param {Number} delay 
 * <p>Time in milliseconds to wait between calls to function.</p>
 * @return {Number} <p>Unique timer identifier.</p>
*/
Global.setInterval = function(function, delay){};

/**
 * @method setTimeout
 * <p>Executes code or a function after a delay.</p>
 * @description <p>Note that although the timeout is not guaranteed to be exact, the delay before the
function is invoked will be no less than the specified delay.</p>
<p>Returns a unique timer identifier that can be passed to {@link Global#method-clearTimeout clearTimeout} 
to cancel this timer.</p>
<p>For more information, see the MDN website for 
<a href="https://developer.mozilla.org/en/DOM/window.setTimeout">setTimeout</a>.</p>
 * <h3>Example</h3>
 * <h4>Execute a function in 500 milliseconds</h4>
 * <pre>
setTimeout(function(){
    Ti.API.debug('Called using setTimeout');
}, 500);</pre>
 * @param {Function} function 
 * <p>Code or function to call.</p>
 * @param {Number} delay 
 * <p>Time in milliseconds to wait before the function is called.</p>
 * @return {Number} <p>Unique timer identifier.</p>
*/
Global.setTimeout = function(function, delay){};

/**
 * @class Gradient
 * @typestr Object
 * @pseudo
 * @platform iphone 1.8
 * @platform ipad 1.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>A simple object defining a color gradient.</p>
 */
Gradient = {};

/**
 * @property [backfillEnd=false]
 * @type Boolean
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>Set to <code>true</code> to continue filling with the final color beyond the <code>endPoint</code>.</p>
 */
Gradient.backfillEnd = null;

/**
 * @property [backfillStart=false]
 * @type Boolean
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>Set to <code>true</code> to continue filling with the starting color beyond the <code>startPoint</code>.</p>
 */
Gradient.backfillStart = null;

/**
 * @property colors
 * @type String[]/GradientColorRef[]
 * <p>An array of colors, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Gradient.colors = null;

/**
 * @property [endPoint={'y': 1.0, 'x': 0.0}]
 * @type Point
 * <p>End point for the gradient.</p>
 */
Gradient.endPoint = null;

/**
 * @property endRadius
 * @type Number
 * <p>For a radial gradient, the radius at the <code>endPoint</code>.</p>
 */
Gradient.endRadius = null;

/**
 * @property [startPoint={'y': 0.0, 'x': 0.0}]
 * @type Point
 * <p>Start point for the gradient.</p>
 */
Gradient.startPoint = null;

/**
 * @property startRadius
 * @type Number
 * <p>For a radial gradient, the radius at the <code>startPoint</code>.</p>
 */
Gradient.startRadius = null;

/**
 * @property [type=linear]
 * @type String
 * <p>Type of gradient, either 'linear' or 'radial'.</p>
 */
Gradient.type = null;

/**
 * @class GradientColorRef
 * @typestr Object
 * @pseudo
 * <p>A simple object consisting of a color and an offset.</p>
 */
GradientColorRef = {};

/**
 * @property color
 * @type String
 * <p>Color value at this point in the gradient, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
GradientColorRef.color = null;

/**
 * @property offset
 * @type Number
 * <p>Offset of this color in the gradient, from 0 (start) to 1 (end).</p>
 */
GradientColorRef.offset = null;

/**
 * @class HeadingData
 * @typestr Object
 * @pseudo
 * <p>Simple object holding compass heading data.</p>
 */
HeadingData = {};

/**
 * @property accuracy
 * @type Number
 * <p>Accuracy of the compass heading, in platform-specific units.</p>
 * @description <p>On iOS, accuracy is returned as a maximum deviation in degrees. For example, 
a value of 10 means the heading is plus or minus degrees from the actual value.
A negative value indicates the compass heading is invalid; for example,
if there is magnetic interference, or if the compass is not calibrated.</p>
<p>On Mobile Web, compass is currently supported only on iOS, and returns the same
value as iOS native.</p>
<p>On Android, the value is set to either 1 (low accuracy), 2 (medium accuracy) or 3
(high accuracy). No specific definition of these accuracy values is supplied.</p>
 */
HeadingData.accuracy = null;

/**
 * @property magneticHeading
 * @type Number
 * <p>Declination in degrees from magnetic North.</p>
 */
HeadingData.magneticHeading = null;

/**
 * @property timestamp
 * @type Number
 * <p>Timestamp for the heading data, in milliseconds.</p>
 */
HeadingData.timestamp = null;

/**
 * @property trueHeading
 * @type Number
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Declination in degrees from true North.</p>
 * @description <p>Calculating the true heading requires correcting the magnetic declination based on
the device's current location. So <code>trueHeading</code> can only be calculated if the device
has a fairly recent location fix. If you want to obtain the true heading, you
should register for location updates as well as compass updates. The location fix
does not need to be very accurate.</p>
<p>On Android, <code>trueHeading</code> is <code>undefined</code> if a recent location fix is not available.</p>
 */
HeadingData.trueHeading = null;

/**
 * @property x
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
 * <p>Raw geomagnetic data for the X axis.</p>
 */
HeadingData.x = null;

/**
 * @property y
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
 * <p>Raw geomagnetic data for the Y axis.</p>
 */
HeadingData.y = null;

/**
 * @property z
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
 * <p>Raw geomagnetic data for the Z axis.</p>
 */
HeadingData.z = null;

/**
 * @class HeadingResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Argument passed to the {@link Titanium.Geolocation#method-getCurrentHeading getCurrentHeading} callback.</p>
 */
HeadingResponse = {};

/**
 * @property code
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Error code.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
HeadingResponse.code = null;

/**
 * @property error
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
HeadingResponse.error = null;

/**
 * @property heading
 * @type HeadingData
 * <p>If <code>success</code> is true, the actual heading data.</p>
 */
HeadingResponse.heading = null;

/**
 * @property success
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Indicates a successful operation.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
HeadingResponse.success = null;

/**
 * @class ImageAsCroppedDict
 * @typestr Object
 * @pseudo
 * <p>Simple object used to specify options for {@link Titanium.Blob#method-imageAsCropped imageAsCropped}.</p>
 */
ImageAsCroppedDict = {};

/**
 * @property [height=Current image height.]
 * @type Number
 * <p>Height to crop this image to.</p>
 */
ImageAsCroppedDict.height = null;

/**
 * @property [width=Current image width.]
 * @type Number
 * <p>Width to crop this image to.</p>
 */
ImageAsCroppedDict.width = null;

/**
 * @property [x=Cropped rectangle is centered horizontally on the original image.]
 * @type Number
 * <p>Left coordinate of the cropped rectangle within the source image.</p>
 */
ImageAsCroppedDict.x = null;

/**
 * @property [y=Cropped rectangle is centered vertically on the original image.]
 * @type Number
 * <p>Top coordinate of the cropped rectangle within the source image.</p>
 */
ImageAsCroppedDict.y = null;

/**
 * @class ItemTemplate
 * @typestr Object
 * @pseudo
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
 * <p>Template that represents the basic appearance of a list item.</p>
 * @description <p>See {@link Titanium.UI.ListItem} for examples of using an item template.</p>
 */
ItemTemplate = {};

/**
 * @property childTemplates
 * @type ViewTemplate[]
 * <p>Contains an array of subview templates to be added (in order) as children to this view.</p>
 */
ItemTemplate.childTemplates = null;

/**
 * @property events
 * @type Dictionary
 * <p>Contains key-value pairs of view events and their listeners that are applied to the ListItem.</p>
 * @description <p>Array values are considered as multiple event listeners for that event.</p>
<p>Event listeners added here respond to bubbled events fired from the view subcomponents.</p>
 */
ItemTemplate.events = null;

/**
 * @property properties
 * @type Dictionary<Titanium.UI.ListItem>
 * <p>Contains key-value pairs of view properties and their values that are applied to the ListItem.</p>
 * @description <p>If there are properties set in the {@link ListDataItem}, the properties set in the template are
overridden by the ones set in the list data item.</p>
 */
ItemTemplate.properties = null;

/**
 * @class LaunchAppControlReplyResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Apps#method-launchAppControl launchAppControl} method.</p>
 */
LaunchAppControlReplyResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
LaunchAppControlReplyResponse.code = null;

/**
 * @property data
 * @type Modules.Tizen.Apps.ApplicationControlData[]
 * <p>List of ApplicationControlData objects.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
LaunchAppControlReplyResponse.data = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
LaunchAppControlReplyResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
LaunchAppControlReplyResponse.success = null;

/**
 * @class ListDataItem
 * @typestr Object
 * @pseudo
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
 * <p>Represents displayed item data.</p>
 * @description <p>In addition to the properties defined below, you can define custom key-value pairs, which bind to
the child templates of an {@link ItemTemplate}.  The key for these pairs match the <code>bindId</code> of
the child view templates and the values are a dictionary of view properties applied to the view components.
Any other properties that are not identified by a <code>bindId</code> are permitted but are ignored by the item template.</p>
<p>See {@link Titanium.UI.ListItem} for examples of using a list data item.</p>
 */
ListDataItem = {};

/**
 * @property properties
 * @type Dictionary<Titanium.UI.ListItem>
 * <p>Contains key-value pairs of view properties and their values that are applied to the ListItem.</p>
 * @description <p>If there are properties set in the {@link ItemTemplate} (not the children view templates),
the values set in the list data item override the template's properties.</p>
 */
ListDataItem.properties = null;

/**
 * @property [template=If the ListView's <code>defaultItemTemplate</code> property is not set,
then {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_DEFAULT} is used.]
 * @type String/Number
 * <p>Template ID configured with the {@link Titanium.UI.ListView#property-templates} property or
{@link Titanium.UI#property-LIST_ITEM_TEMPLATE_DEFAULT}.</p>
 * @description <p>On iOS, you can specify one of the following pre-defined templates:
{@link Titanium.UI#property-LIST_ITEM_TEMPLATE_CONTACTS},
{@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SETTINGS} or {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SUBTITLE}.</p>
 */
ListDataItem.template = null;

/**
 * @class ListViewAnimationProperties
 * @typestr Object
 * @pseudo
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A simple object for specifying the animation properties to use when inserting or deleting
sections or cells, or scrolling the list.</p>
 * @description <p>These properties are only used on iOS. Not all properties apply to all methods.</p>
<p><code>animationStyle</code> does not apply to the <code>scrollToItem</code> method.</p>
<p><code>positon</code> only applies to the <code>scrollToItem</code> method.</p>
 */
ListViewAnimationProperties = {};

/**
 * @property [animated=true]
 * @type Boolean
 * <p>Whether this list change should be animated. Ignored if any <code>animationStyle</code> value is specified.</p>
 */
ListViewAnimationProperties.animated = null;

/**
 * @property [animationStyle=If <code>animated</code> is <code>true</code> but no <code>animationStyle</code> is specified, the style defaults to 
{@link Titanium.UI.iPhone.RowAnimationStyle#property-FADE FADE}.]
 * @type Number
 * <p>Type of animation to use for cell insertions and deletions. One of the animation style
constants defined in {@link Titanium.UI.iPhone.RowAnimationStyle}.</p>
 */
ListViewAnimationProperties.animationStyle = null;

/**
 * @property [position=Titanium.UI.iPhone.ListViewScrollPosition.NONE]
 * @type Number
 * <p>Specifies what position to scroll the selected cell to. One of the position constants from 
{@link Titanium.UI.iPhone.ListViewScrollPosition}.</p>
 */
ListViewAnimationProperties.position = null;

/**
 * @class LoadMessageAttachementResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Messaging.MessageService#method-loadMessageAttachment loadMessageAttachment} method.</p>
 */
LoadMessageAttachementResponse = {};

/**
 * @property attachment
 * @type Modules.Tizen.Messaging.MessageAttachment
 * <p>Loaded attachment.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
LoadMessageAttachementResponse.attachment = null;

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
LoadMessageAttachementResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
LoadMessageAttachementResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
LoadMessageAttachementResponse.success = null;

/**
 * @class LoadMessageBodyResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Messaging.MessageService#method-loadMessageBody loadMessageBody} method.</p>
 */
LoadMessageBodyResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
LoadMessageBodyResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
LoadMessageBodyResponse.error = null;

/**
 * @property message
 * @type Modules.Tizen.Messaging.MessageBody
 * <p>Message containing the loaded body.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
LoadMessageBodyResponse.message = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
LoadMessageBodyResponse.success = null;

/**
 * @class LocationCoordinates
 * @typestr Object
 * @pseudo
 * <p>Simple object holding the data for a location update.</p>
 */
LocationCoordinates = {};

/**
 * @property accuracy
 * @type Number
 * <p>Accuracy of the location update, in meters.</p>
 */
LocationCoordinates.accuracy = null;

/**
 * @property altitude
 * @type Number
 * <p>Altitude of the location update, in meters.</p>
 */
LocationCoordinates.altitude = null;

/**
 * @property altitudeAccuracy
 * @type Number
 * <p>Vertical accuracy of the location update, in meters.</p>
 */
LocationCoordinates.altitudeAccuracy = null;

/**
 * @property heading
 * @type Number
 * <p>Compass heading, in degrees. May be unknown if device is not moving. On 
iOS, a negative value indicates that the heading data is not valid.</p>
 */
LocationCoordinates.heading = null;

/**
 * @property latitude
 * @type Number
 * <p>Latitude of the location update, in decimal degrees.</p>
 */
LocationCoordinates.latitude = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude of the location update, in decimal degrees.</p>
 */
LocationCoordinates.longitude = null;

/**
 * @property speed
 * @type Number
 * <p>Current speed in meters/second. On iOS, a negative value indicates that the 
heading data is not valid.</p>
 */
LocationCoordinates.speed = null;

/**
 * @property timestamp
 * @type Number
 * <p>Timestamp for this location update, in milliseconds.</p>
 */
LocationCoordinates.timestamp = null;

/**
 * @class LocationProviderDict
 * @typestr Object
 * @pseudo
 * <p>Simple object describing a location provider.</p>
 * @description <p>The <code>accuracy</code> and <code>power</code> values correspond to constants defined in the 
Android API. See
<a href="http://developer.android.com/reference/android/location/Criteria.html">android.location.Criteria</a> 
in the Android API Reference.</p>
<p>These values are generalizations. In general, a provider with coarse accuracy will
provide less accurate results than a provider with fine accuracy, and a provider with
high power requirements will use more battery power than a provider with low power
requirements.</p>
 */
LocationProviderDict = {};

/**
 * @property accuracy
 * @type Number
 * <p>Accuracy of the location provider, either fine (1) or coarse (2).</p>
 */
LocationProviderDict.accuracy = null;

/**
 * @property name
 * @type String
 * <p>Name of the location provider.</p>
 */
LocationProviderDict.name = null;

/**
 * @property power
 * @type Number
 * <p>Power consumption for this provider, either low (1), medium (2), or high (3).</p>
 */
LocationProviderDict.power = null;

/**
 * @class LocationResults
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Argument passed to the {@link Titanium.Geolocation#method-getCurrentPosition getCurrentPosition} callback.</p>
 */
LocationResults = {};

/**
 * @property coords
 * @type LocationCoordinates
 * <p>If <code>success</code> is true, actual location data for this update.</p>
 */
LocationResults.coords = null;

/**
 * @property provider
 * @type LocationProviderDict
 * @platform android 0.8
 * <p>If <code>success</code> is true, object describing the location provider generating this update.</p>
 */
LocationResults.provider = null;

/**
 * @class MapLocationType
 * @typestr Object
 * @pseudo
 * <p>Simple object used as an argument to {@link Titanium.Map.View#method-setLocation setLocation}.</p>
 */
MapLocationType = {};

/**
 * @property animate
 * @type Boolean
 * <p>Set to <code>true</code> to animate the move to the new location.</p>
 */
MapLocationType.animate = null;

/**
 * @property latitude
 * @type Number
 * <p>Latitude value for the center point of the map, in decimal degrees.</p>
 */
MapLocationType.latitude = null;

/**
 * @property latitudeDelta
 * @type Number
 * <p>The amount of north-to-south distance displayed on the map, measured in decimal degrees.</p>
 */
MapLocationType.latitudeDelta = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude value for the center point of the map, in decimal degrees.</p>
 */
MapLocationType.longitude = null;

/**
 * @property longitudeDelta
 * @type Number
 * <p>The amount of east-to-west distance displayed on the map, measured in decimal degrees.</p>
 */
MapLocationType.longitudeDelta = null;

/**
 * @property regionFit
 * @type Boolean
 * <p>If <code>true</code>, the specified region is modified to fit the aspect ratio of the
map view, while remaining centered on <code>latitude</code>,<code>longitude</code>.</p>
 */
MapLocationType.regionFit = null;

/**
 * @class MapLocationTypeV2
 * @typestr Object
 * @pseudo
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Simple object used as an argument to {@link Modules.Map.View#method-setLocation setLocation}.</p>
 */
MapLocationTypeV2 = {};

/**
 * @property animate
 * @type Boolean
 * <p>Set to <code>true</code> to animate the move to the new location.</p>
 * @description <p>If not set, the value of {@link Modules.Map.View#method-animate animate} will be used.</p>
 */
MapLocationTypeV2.animate = null;

/**
 * @property latitude
 * @type Number
 * <p>Latitude value for the center point of the map, in decimal degrees.</p>
 */
MapLocationTypeV2.latitude = null;

/**
 * @property latitudeDelta
 * @type Number
 * <p>The amount of north-to-south distance displayed on the map, measured in decimal degrees.</p>
 */
MapLocationTypeV2.latitudeDelta = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude value for the center point of the map, in decimal degrees.</p>
 */
MapLocationTypeV2.longitude = null;

/**
 * @property longitudeDelta
 * @type Number
 * <p>The amount of east-to-west distance displayed on the map, measured in decimal degrees.</p>
 */
MapLocationTypeV2.longitudeDelta = null;

/**
 * @class MapPointType
 * @typestr Object
 * @pseudo
 * <p>Simple object representing a point on the map.</p>
 */
MapPointType = {};

/**
 * @property latitude
 * @type Number
 * <p>Latitude value of the map point, in decimal degrees.</p>
 */
MapPointType.latitude = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude value of the map point, in decimal degrees.</p>
 */
MapPointType.longitude = null;

/**
 * @class MapRegionType
 * @typestr Object
 * @pseudo
 * <p>Simple object representing a map location and zoom level.</p>
 */
MapRegionType = {};

/**
 * @property latitude
 * @type Number
 * <p>Latitude value for the center point of the map, in decimal degrees.</p>
 */
MapRegionType.latitude = null;

/**
 * @property latitudeDelta
 * @type Number
 * <p>The amount of north-to-south distance displayed on the map, measured in decimal degrees.</p>
 */
MapRegionType.latitudeDelta = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude value for the center point of the map, in decimal degrees.</p>
 */
MapRegionType.longitude = null;

/**
 * @property longitudeDelta
 * @type Number
 * <p>The amount of east-to-west distance displayed on the map, measured in decimal degrees.</p>
 */
MapRegionType.longitudeDelta = null;

/**
 * @class MapRegionTypev2
 * @typestr Object
 * @pseudo
 * <p>Simple object representing a map location and zoom level.</p>
 */
MapRegionTypev2 = {};

/**
 * @property latitude
 * @type Number
 * <p>Latitude value for the center point of the map, in decimal degrees.</p>
 */
MapRegionTypev2.latitude = null;

/**
 * @property latitudeDelta
 * @type Number
 * <p>The amount of north-to-south distance displayed on the map, measured in decimal degrees.</p>
 */
MapRegionTypev2.latitudeDelta = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude value for the center point of the map, in decimal degrees.</p>
 */
MapRegionTypev2.longitude = null;

/**
 * @property longitudeDelta
 * @type Number
 * <p>The amount of east-to-west distance displayed on the map, measured in decimal degrees.</p>
 */
MapRegionTypev2.longitudeDelta = null;

/**
 * @class MapRouteType
 * @typestr Object
 * @pseudo
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Simple object defining a map route.</p>
 */
MapRouteType = {};

/**
 * @property color
 * @type String
 * <p>Color to use when drawing the route, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
MapRouteType.color = null;

/**
 * @property name
 * @type String
 * <p>Route name.</p>
 */
MapRouteType.name = null;

/**
 * @property points
 * @type MapPointType[]
 * <p>Array of map points making up the route.</p>
 */
MapRouteType.points = null;

/**
 * @property width
 * @type Number
 * <p>Line width to use when drawing the route.</p>
 */
MapRouteType.width = null;

/**
 * @class MatrixCreationDict
 * @typestr Object
 * @pseudo
 * <p>Simple object passed to {@link Titanium.UI#method-create2DMatrix} to initialize a matrix.</p>
 * @description <p>The matrix is initialized with the specified transforms.</p>
<p>On iOS, rotation is always performed first, regardless of the order the 
properties are specified in.</p>
<p>On Android, specifying both <code>scale</code> and <code>rotate</code> the same dictionary results
in an incorrect transformation.</p>
 */
MatrixCreationDict = {};

/**
 * @property [anchorPoint=(0.5, 0.5)]
 * @type Dictionary
 * @platform android 0.8
 * <p>Point to rotate around, specified as a dictionary object with <code>x</code> and <code>y</code>
properties, where { x: 0.5, y: 0.5 } represents the center of whatever is being
rotated.</p>
 */
MatrixCreationDict.anchorPoint = null;

/**
 * @property [rotate=No rotation.]
 * @type Number
 * <p>Rotation angle, in degrees. See the {@link Titanium.UI.2DMatrix#method-rotate rotate} method
for a discussion of rotation.</p>
 */
MatrixCreationDict.rotate = null;

/**
 * @property [scale=1]
 * @type Number
 * <p>Scale the matrix by the specified scaling factor. The same scaling factor is used
for both horizontal and vertical scaling.</p>
 */
MatrixCreationDict.scale = null;

/**
 * @class MediaQueryInfoType
 * @typestr Object
 * @pseudo
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>A full query descriptor for a filtering predicate.</p>
 */
MediaQueryInfoType = {};

/**
 * @property exact
 * @type Boolean
 * <p>Whether or not the predicate is for an exact match.  The default is <code>true</code>.</p>
 */
MediaQueryInfoType.exact = null;

/**
 * @property value
 * @type Number/String/Boolean
 * <p>The value for the given predicate. See the descriptions in {@link MediaQueryType} for information about which properties require which values.</p>
 */
MediaQueryInfoType.value = null;

/**
 * @class MediaQueryType
 * @typestr Object
 * @pseudo
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>A specifier for a media library query. By default, filters perform an exact match.</p>
 */
MediaQueryType = {};

/**
 * @property albumArtist
 * @type MediaQueryInfoType/String
 * <p>The album artist to filter on. Value should be a String.</p>
 */
MediaQueryType.albumArtist = null;

/**
 * @property albumTitle
 * @type MediaQueryInfoType/String
 * <p>The album title to filter on. Value should be a String.</p>
 */
MediaQueryType.albumTitle = null;

/**
 * @property artist
 * @type MediaQueryInfoType/String
 * <p>The artist to filter on. Value should be a String.</p>
 */
MediaQueryType.artist = null;

/**
 * @property composer
 * @type MediaQueryInfoType/String
 * <p>The composer to filter on. Value should be a String.</p>
 */
MediaQueryType.composer = null;

/**
 * @property genre
 * @type MediaQueryInfoType/String
 * <p>The genre to filter on. Value should be a String.</p>
 */
MediaQueryType.genre = null;

/**
 * @property grouping
 * @type Number
 * <p>A constant that specifies the ordering of the result array. One of the <code>MUSIC_MEDIA_GROUP_*</code> constants specified on the {@link Titanium.Media} module.</p>
 */
MediaQueryType.grouping = null;

/**
 * @property isCompilation
 * @type MediaQueryInfoType/Boolean
 * <p>Filter by whether or not the item is a compilation. Value should be a Boolean.</p>
 */
MediaQueryType.isCompilation = null;

/**
 * @property mediaType
 * @type MediaQueryInfoType/Number
 * <p>The media type to filter on. Value should be one of the <code>MUSIC_MEDIA_TYPE_</code> constants on {@link Titanium.Media}.</p>
 */
MediaQueryType.mediaType = null;

/**
 * @property title
 * @type MediaQueryInfoType/String
 * <p>The title to filter on. Value should be a String.</p>
 */
MediaQueryType.title = null;

/**
 * @class MediaScannerResponse
 * @typestr Object
 * @pseudo
 * <p>Simple object passed to the {@link Titanium.Media.Android#method-scanMediaFiles scanMediaFiles} callback.</p>
 * @description <p>The callback is called once per scanned file.</p>
 */
MediaScannerResponse = {};

/**
 * @property path
 * @type String
 * <p>Path to the media file that was scanned.</p>
 */
MediaScannerResponse.path = null;

/**
 * @property uri
 * @type String
 * <p>URI to the file if it was scanned and added to the media library, or <code>null</code>
if the file was not added.</p>
 */
MediaScannerResponse.uri = null;

/**
 * @class MessageAttachmentInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Messaging#method-createMessageAttachment createMessageAttachment}.</p>
 */
MessageAttachmentInit = {};

/**
 * @property filePath
 * @type String
 * <p>Path to file.</p>
 */
MessageAttachmentInit.filePath = null;

/**
 * @property mimeType
 * @type String
 * <p>(optional) Provides specifying mimeType of file.</p>
 */
MessageAttachmentInit.mimeType = null;

/**
 * @class MessageConversationsChangeCallback
 * @typestr Object
 * @pseudo
 * <p>watchConversationsChanges callback.</p>
 * @description <p>This callback interface specifies a callback as a set of functions that will be 
invoked when message folders from MessageStorage change. Each function takes a list 
of folders as the input argument. . </p>
 */
MessageConversationsChangeCallback = {};

/**
 * @method conversationsadded
 * <p>Method invoked when conversations are added to MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.MessageConversation[]} addedConversations 
 * <p>Array of added conversations.</p>
 * @return void
*/
MessageConversationsChangeCallback.conversationsadded = function(addedConversations){};

/**
 * @method conversationsremoved
 * <p>Method invoked when conversations are removed from MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.MessageConversation[]} removedConversations 
 * <p>Array of updated messages.</p>
 * @return void
*/
MessageConversationsChangeCallback.conversationsremoved = function(removedConversations){};

/**
 * @method conversationsupdated
 * <p>Method invoked when conversations are updated in MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.MessageConversation[]} updatedConversations 
 * <p>Array of updated messages.</p>
 * @return void
*/
MessageConversationsChangeCallback.conversationsupdated = function(updatedConversations){};

/**
 * @class MessageFoldersChangeCallback
 * @typestr Object
 * @pseudo
 * <p>watchFoldersChanges callback.</p>
 * @description <p>This callback interface specifies a callback as a set of functions that will be invoked 
when message folders from MessageStorage change. Each function takes a list of folders 
as the input argument.</p>
 */
MessageFoldersChangeCallback = {};

/**
 * @method foldersadded
 * <p>Method invoked when folders are added to MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.MessageConversation[]} addedFolders 
 * <p>Array of added folders.</p>
 * @return void
*/
MessageFoldersChangeCallback.foldersadded = function(addedFolders){};

/**
 * @method foldersupdated
 * <p>Method invoked when folders are updated in MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.MessageConversation[]} updatedFolders 
 * <p>Array of updated folders.</p>
 * @return void
*/
MessageFoldersChangeCallback.foldersupdated = function(updatedFolders){};

/**
 * @method removedFolders
 * <p>Method invoked when folders are removed from MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.MessageConversation[]} removedConversations 
 * <p>Array of removed folders.</p>
 * @return void
*/
MessageFoldersChangeCallback.removedFolders = function(removedConversations){};

/**
 * @class MessageInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.Messaging#method-createMessage createMessage}.</p>
 */
MessageInit = {};

/**
 * @property options
 * @type MessageInitDict
 * <p>(optional) Provides specifying message attributes upon message creation.</p>
 */
MessageInit.options = null;

/**
 * @property type
 * @type String
 * <p>The type of message. </p>
 * @description <p>The supported types are: {@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_SMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_MMS}, 
and {@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_EMAIL}.</p>
 */
MessageInit.type = null;

/**
 * @class MessageInitDict
 * @typestr Object
 * @pseudo
 * <p>Used in {@link MessageInit}.</p>
 */
MessageInitDict = {};

/**
 * @property bcc
 * @type String[]
 * <p>The blind carbon copy addresses of a message.</p>
 */
MessageInitDict.bcc = null;

/**
 * @property cc
 * @type String[]
 * <p>The carbon copy addresses of a message.</p>
 * @description <p>This property is used only with Email messages.</p>
 */
MessageInitDict.cc = null;

/**
 * @property htmlBody
 * @type String
 * <p>The HTML representation of the message body.</p>
 * @description <p>This property is used only with Email messages.</p>
 */
MessageInitDict.htmlBody = null;

/**
 * @property isHighPriority
 * @type Boolean
 * <p>The priority of a message.</p>
 * @description <p>This property is true, if the message has a high priority and false, if the message has a
normal or low priority.
This property is used only with Email messages.</p>
 */
MessageInitDict.isHighPriority = null;

/**
 * @property plainBody
 * @type String
 * <p>The plain text representation of the message body.</p>
 * @description <p>This property is used only with Email and MMS messages.</p>
 */
MessageInitDict.plainBody = null;

/**
 * @property subject
 * @type String
 * <p>The subject of a message.</p>
 * @description <p>This property is used only with Email and MMS messages.</p>
 */
MessageInitDict.subject = null;

/**
 * @property to
 * @type String[]
 * <p>The destination addresses (or phone numbers) of a message.</p>
 */
MessageInitDict.to = null;

/**
 * @class MessagePortDataItem
 * @typestr Object
 * @pseudo
 * @platform tizen 3.1
 * <p>A dictionary for specifying the data item that is transferred.</p>
 */
MessagePortDataItem = {};

/**
 * @property key
 * @type String
 * <p>Key of a message.</p>
 */
MessagePortDataItem.key = null;

/**
 * @property value
 * @type String
 * <p>Value of a message.</p>
 */
MessagePortDataItem.value = null;

/**
 * @class MessagesChangeCallback
 * @typestr Object
 * @pseudo
 * <p>watchMessagesChanges callback.</p>
 * @description <p>This callback interface specifies a callback as a set of functions that will be invoked when 
messages from MessageStorage change. Each function 
takes a list of messages as the input argument. </p>
 */
MessagesChangeCallback = {};

/**
 * @method messagesadded
 * <p>Method invoked when messages are added to the MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.Message[]} addedMessages 
 * <p>Array of added messages.</p>
 * @return void
*/
MessagesChangeCallback.messagesadded = function(addedMessages){};

/**
 * @method messagesupdated
 * <p>Method invoked when messages are updated in MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.Message[]} updatedMessages 
 * <p>Array of updated messages.</p>
 * @return void
*/
MessagesChangeCallback.messagesupdated = function(updatedMessages){};

/**
 * @method removedMessages
 * <p>Method invoked when messages are removed from MessageStorage.</p>
 * @param {Modules.Tizen.Messaging.Message[]} removedMessages 
 * <p>Array of updated messages.</p>
 * @return void
*/
MessagesChangeCallback.removedMessages = function(removedMessages){};

/**
 * @class MessagingMessageServiceResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Messaging#method-getMessageServices getMessageServices} method.</p>
 */
MessagingMessageServiceResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
MessagingMessageServiceResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
MessagingMessageServiceResponse.error = null;

/**
 * @property services
 * @type Modules.Tizen.Messaging.MessageService[]
 * <p>Array of available MessageService objects on the device.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
MessagingMessageServiceResponse.services = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
MessagingMessageServiceResponse.success = null;

/**
 * @class Modules
 * @typestr Object
 * <p>Optional Titanium modules.</p>
 * @description <p>Modules in this section are optional modules that may be packaged with the Titanium SDK.
These modules are not part of the Titanium namespace, and must be added to the <code>tiapp.xml</code>
file and imported using {@link Global#method-require require}.</p>
<p>Each of the modules in this section is either packaged with the Titanium SDK or
available for free through the <a href="https://marketplace.appcelerator.com">Appcelerator Marketplace</a>.</p>
 */
Modules = {};

/**
 * @class Modules.Facebook
 * @typestr Submodule of Modules
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Module
 * <p>Add-on Facebook module.  </p>
 * @description <p>The Facebook module is used for connecting your application with 
Facebook. This module supports the following features:</p>
<ul>
<li>
<p>Logging in to Facebook and authorizing your application.</p>
</li>
<li>
<p>Making requests through the Facebook Graph API using the
  {@link Modules.Facebook#method-requestWithGraphPath requestWithGraphPath} method.</p>
</li>
<li>
<p>Making requests through the legacy Facebook REST API using the
  {@link Modules.Facebook#method-request request} method. </p>
</li>
<li>
<p>Posting Facebook dialogs.</p>
</li>
</ul>
<p>For releases prior to 3.1.0, use the built-in Titanium.Facebook module.</p>
<h4>Getting Started</h4>
<ul>
<li>
<p>Note that this module is only available for Release 3.1 and later, and is included with the
    Titanium SDK.  You do not need to download or unpack it.</p>
</li>
<li>
<p>Edit the <code>modules</code> section of your tiapp.xml file to include this module:</p>
<pre><code>&lt;modules&gt;
    &lt;!-- Add the appropriate line(s) to your modules section --&gt;
    &lt;module platform="android"&gt;facebook&lt;/module&gt;
    &lt;module platform="iphone"&gt;facebook&lt;/module&gt;
&lt;/modules&gt;
</code></pre>
</li>
<li>
<p>On the iOS platform, add the following property to your tiapp.xml file and replace
     FACEBOOK_APP_ID with your Facebook application ID:</p>
<pre><code> &lt;property name="ti.facebook.appid"&gt;FACEBOOK_APP_ID&lt;/property&gt;
</code></pre>
</li>
<li>
<p>Instantiate the module with the <code>require('facebook')</code> method, then make subsequent API calls
     with the new Facebook object.</p>
<pre><code> var fb = require('facebook');
 fb.appid = FACEBOOK_APP_ID;
 fb.permissions = [FACEBOOK_APP_PERMISSIONS];
 fb.authorize();
</code></pre>
</li>
</ul>
<h4>Facebook Login and Authorization</h4>
<p>To use Facebook, a user must log in to Facebook and explicitly authorize the
application to perform certain actions, such as accessing profile information or 
posting status messages. </p>
<p>For iOS, review the "iOS Support Notes" section below in addition to this section.</p>
<p>There are two ways to initiate the login process:</p>
<ul>
<li>
<p>Call {@link Modules.Facebook#method-authorize authorize} to prompt the user to login and authorize
  the application.</p>
</li>
<li>
<p>Create a Facebook {@link Modules.Facebook.LoginButton LoginButton} to allow the user to 
  log in if desired.</p>
</li>
</ul>
<p>Which approach you take depends on your UI and how central Facebook is to your
application.</p>
<p>Before calling <code>authorize</code> or creating a login button, you must set the
{@link Modules.Facebook#property-appid appid} and {@link Modules.Facebook#property-permissions permissions}
properties. </p>
<p>To create a Facebook App ID, go to the Facebook Developer App:
<a href="https://developers.facebook.com/apps">developers.facebook.com/apps</a></p>
<p>For a complete list of permissions, see the 
<a href="http://developers.facebook.com/docs/reference/api/permissions/">official Facebook Permissions Reference</a></p>
<h4>Facebook Graph API</h4>
<p>The Facebook Graph API is the preferred method for getting information about a user's friends, 
news feed, and so on. Each object in the Facebook social graph is represented by a
graph API <em>object</em>, such as a user, photo, or status message. </p>
<p>The Graph API allows you to make requests on behalf of the user, such as posting a
picture or status message. </p>
<p>Use the {@link Modules.Facebook#method-requestWithGraphPath requestWithGraphPath} method to make a 
request to the Graph API.</p>
<p>For details on each of the Graph API objects and the supported operations, see the 
<a href="http://developers.facebook.com/docs/reference/api/">official Facebook Graph API documentation</a>.</p>
<h4>Facebook REST API</h4>
<p>The Facebook REST API is in the process of being deprecated, and should not be used 
unless your application relies on an API that doesn't exist in the Graph API.</p>
<p>Use the {@link Modules.Facebook#method-request request} method to make a request to the REST API.</p>
<p>For details on the REST API, see the 
<a href="http://developers.facebook.com/docs/reference/rest/">official Facebook REST API documentation</a>.</p>
<h4>Facebook Dialogs</h4>
<p>Facebook dialogs are standard user-interface components for used to prompt users to
interact with Facebook in a specific way, such as:</p>
<ul>
<li>
<p>Sending an application request</p>
</li>
<li>
<p>Sending a status update</p>
</li>
<li>
<p>Adding a friend</p>
</li>
</ul>
<p>Because dialogs require user interaction, they do not require Facebook permissions.</p>
<p>For details on different dialogs see the 
<a href="http://developers.facebook.com/docs/reference/dialogs/">official Facebook Dialogs documentation</a>.  </p>
<h4>iOS Support Notes</h4>
<p>As of Facebook Module 3.1, the iOS module will try to silently login on application startup
if the application was logged in when it exited. This is done to maintain a consistent
appearance regardless if your app was paused and resumed, or stopped and started, especially
in light of iOS 6's single sign-on.</p>
<p>To use iOS 6's built-in Facebook login, some changes may be required of your application.
iOS 6 does not support having required {@link Modules.Facebook#property-permissions permissions} of
offline_access and any write access. Furthermore, Facebook's native SDK makes the
old login auth and using iOS 6's login mutually exclusive options. In other words,
the following must happen to use iOS 6's built-in facebook login:</p>
<ul>
<li>
<p>When registering your Facebook application, the bundle ID must match the Titanium project's app ID.
  See instructions below.</p>
</li>
<li>
<p>The device must be running iOS 6.</p>
</li>
<li>
<p>Enable the Facebook login on your iOS 6 device: Enter your credentials in <strong>Settings</strong> &gt; <strong>Facebook</strong>.</p>
</li>
<li>
<p>The {@link Modules.Facebook#property-forceDialogAuth forceDialogAuth} property MUST be false.</p>
</li>
<li>
<p>The {@link Modules.Facebook#property-permissions permissions} property MUST NOT contain any of the
    following: offline_access, publish_actions, publish_stream, publish_checkins,
    ads_management, create_event, rsvp_event, manage_friendlists, manage_notifications,
    or manage_pages</p>
</li>
<li>
<p>Use the {@link Modules.Facebook#method-reauthorize reauthorize} method to request write permissions if needed.</p>
</li>
</ul>
<p>In the event that these requirements aren't met, the facebook module will gracefully
degrade to legacy login support, using the dialog authorization, single sign-on with
the facebook app, or authentication via Safari as previously done.</p>
<p>For security reasons, authorization through iOS 6 also requires your Facebook
bundle ID to be associated with your Titanium application's app ID
specified in your tiapp.xml. This is the same bundle identifier mentioned in step 4
of Facebook's <a href="http://developers.facebook.com/docs/getting-started/facebook-sdk-for-ios/3.1/">getting started guide</a>.</p>
<p>Since iOS 6 does not allow for required permissions to contain write actions, write
actions are now done via the {@link Modules.Facebook#method-reauthorize reauthorize} method. This
method will work even without iOS 6 support. For more details about iOS 6, see the
<a href="http://developers.facebook.com/docs/howtos/ios-6/">official Facebook iOS 6 documentation</a>.</p>
 * <h3>Examples</h3>
 * <h4>Authorize</h4>
 * <p><p>Shows official Facebook dialog for logging in the user and prompting the user to approve your 
requested permissions.  Listen for the module's {@link Modules.Facebook#event-login login} event to 
determine whether the request succeeded.</p></p><pre>var fb = require('facebook');
fb.appid = FACEBOOK_APP_ID;
fb.permissions = ['publish_stream']; // Permissions your app needs
fb.forceDialogAuth = true;
fb.addEventListener('login', function(e) {
if (e.success) {
alert('Logged In');
} else if (e.error) {
alert(e.error);
} else if (e.cancelled) {
alert("Canceled");
}
});
fb.authorize();</pre>
 * <h4>Logout</h4>
 * <p><p>Logout the user and forget the authorization token.  The 
{@link Modules.Facebook#event-logout logout} event is fired after the user is logged out.</p></p><pre>fb.addEventListener('logout', function(e) {
alert('Logged out');
});
fb.logout();</pre>
 * <h4>Authorize/Logout Using the Facebook LoginButton</h4>
 * <p><p>You can use the the Facebook-themed {@link Modules.Facebook.LoginButton LoginButton}
to allow the user to log in as required. The button updates its state automatically depending 
on whether the user is logged in or not.  When the user is logged in, then the button 
will show "Logout", and vice-versa.</p>
<p>Note that you don't need to set a click listener or anything else on the button. 
To be notified when the user logs in or out, add event listeners for the 
{@link Modules.Facebook#event-login login} and {@link Modules.Facebook#event-logout logout} events
provided by the Facebook module, as in the example below.</p></p><pre>// Don't forget to set your appid and requested permissions, else the login button
// won't be effective.
var win = Ti.UI.createWindow({backgroundColor: 'white'});
var fb = require('facebook');
fb.appid = FACEBOOK_APP_ID;
fb.permissions = ['publish_stream'];
fb.addEventListener('login', function(e) {
if (e.success) {
alert('Logged in');
}
});
fb.addEventListener('logout', function(e) {
alert('Logged out');
});
    
// Add the button.  Note that it doesn't need a click event listener.
win.add(fb.createLoginButton({
    top : 50,
    style : fb.BUTTON_STYLE_WIDE
}));
win.open()
</pre>
 * <p><p>The specified button style ('wide' or <code>BUTTON_STYLE_WIDE</code>) shows a wide version of the 
button that displays "Connect with Facebook" instead of just "Connect".</p></p>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Example of using the Facebook Login Button in Alloy.</p>
<p>This example loads the Facebook v3 module and assigns it to the <code>Alloy.Globals.Facebook</code> namespace
in the initializer file.  In the XML markup, add a LoginButton element with its <code>ns</code>
(namespace) attribute set to <code>Alloy.Globals.Facebook</code>.
In the controller, use the <code>Alloy.Globals.Facebook</code> namespace to reference the Facebook module.</p>
<p><code>app.js</code>:</p></p><pre>// Loads the Facebook module, which can be referenced by Alloy.Globals.Facebook
Alloy.Globals.Facebook = require('facebook');
</pre>
 * <p><p><code>app/views/index.xml</code>:</p></p><pre>&lt;Alloy&gt;
    &lt;Window&gt;
         &lt;!-- Use the Alloy.Globals.Facebook namespace to create a Facebook module login button --&gt;
        &lt;LoginButton id="fbButton" ns="Alloy.Globals.Facebook"/&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p><code>app/controllers/index.js</code>:</p></p><pre>// Use the Alloy.Globals.Facebook namespace to make Facebook module API calls
var facebook = Alloy.Globals.Facebook;
facebook.appid = FACEBOOK_APP_ID;
facebook.permissions = [FACEBOOK_APP_PERMISSIONS];
$.fbButton.style = facebook.BUTTON_STYLE_WIDE;
$.index.open();</pre>
 * <h4>Simple Graph API Call</h4>
 * <p><p>This example makes a call to the "me" graph path, which represents the current
user. The JSON results are simply displayed in an alert.  This example assumes 
the user is already logged in. You can check this with {@link Modules.Facebook#property-loggedIn}.</p></p><pre>fb.requestWithGraphPath('me', {}, 'GET', function(e) {
if (e.success) {
alert(e.result);
} else if (e.error) {
alert(e.error);
} else {
alert('Unknown response');
}
});</pre>
 * <h4>Create an Event Using the Graph API</h4>
 * <p><p>This example uses the Graph API to create an event in the logged-on user's Facebook account.
This requires the "create_event" permission.</p></p><pre>// First make sure this permission exists
fb.permissions = ['create_event'];
fb.authorize();

// ...
// ...

// Now create the event after you've confirmed authorize() was successful.
var starttime = new Date(2012, 4, 31, 17, 0);
var endtime = new Date(2012, 4, 31, 19, 0);
var title = "Barry's Birthday Celebration";
var description = "Barry will have a great party";
var data = {
start_time: JSON.stringify(starttime), // API expects a JSON stringified date
end_time: JSON.stringify(endtime),
summary: description,
name: title
};
fb.requestWithGraphPath('me/events', data, 'POST', function(e) {
if (e.success) {
alert("Success! Returned from FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unknown result");
}
}
});
</pre>
 * <p><p>For more information on the Event object, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/api/event/">Event in the Facebook Graph API Reference</a>.</li>
</ul></p>
 * <h4>Set a User's Facebook Status Using the Graph API</h4>
 * <p><p>This example uses the Graph API to set the user's Facebook status, which requires the 
"publish_stream" permission.</p></p><pre>// First make sure this permission exists
fb.permissions = ['publish_stream'];
fb.authorize();

// ...
// ...

// Now create the status message after you've confirmed that authorize() succeeded
fb.requestWithGraphPath('me/feed', {message: "Trying out FB Graph API and it's fun!"}, 
         "POST", function(e) {
if (e.success) {
alert("Success!  From FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unkown result");
}
}
});
</pre>
 * <p><p>For more information on the Staus object, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/api/status/">Status in the Facebook Graph API Reference</a>.  </li>
</ul></p>
 * <h4>Post a Photo Using the Graph API</h4>
 * <p><p>This example posts a photo to the user's account using the Graph API.
Another example below shows how to do this with the REST API, if desired. 
This requires the "publish_stream" permission.</p></p><pre>// First make sure this permission exists
fb.permissions = ['publish_stream'];
fb.authorize();

// ...
// ...

// Now post the photo after you've confirmed that authorize() succeeded
var f = Ti.Filesystem.getFile('pumpkin.jpg');
var blob = f.read();
var data = {
message: 'This is a pumpkin',
picture: blob
};
fb.requestWithGraphPath('me/photos', data, 'POST', function(e){
if (e.success) {
alert("Success!  From FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unkown result");
}
}
});
</pre>
 * <p><p>For more information on posting photos, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/api/photo/">Photo in the Facebook Graph API Reference</a> </li>
</ul></p>
 * <h4>Post a photo using the REST API</h4>
 * <p><p>This example posts a photo to the user's account using the REST API. Another example above shows 
how to do this with the Graph API.  This requires the "publish_stream" permission.</p></p><pre>// First make sure this permission exists
fb.permissions = ['publish_stream'];
fb.authorize();

// ...
// ...

// Now post the photo after you've confirmed that authorize() succeeded
var f = Ti.Filesystem.getFile('pumpkin.jpg');
var blob = f.read();
var data = {
caption: 'This is a pumpkin',
picture: blob
};
fb.request('photos.upload', data, function(e){
if (e.success) {
alert("Success!  From FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unkown result");
}
}
});
</pre>
 * <p><p>For more information on posting photos using the REST API, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/rest/photos.upload/">photos.upload in the Facebook REST API Reference</a> </li>
</ul></p>
 * <h4>Show the Facebook Feed Dialog</h4>
 * <p><p>This example shows how to display the offical Facebook Feed Dialog, for adding a
post to the user's wall. In this example, we'll prefill some of the feed fields by 
passing a data dictionary to the {@link Modules.Facebook#method-dialog dialog} method; this is not required.</p></p><pre>var data = {
    link : "http://www.appcelerator.com",
    name : "Appcelerator Titanium Mobile",
    message : "Checkout this cool open source project for creating mobile apps",
    caption : "Appcelerator Titanium Mobile",
    picture : "http://developer.appcelerator.com/assets/img/DEV_titmobile_image.png",
    description : "You've got the ideas, now you've got the power. Titanium translates " +
                  "your hard won web skills into native applications..."
};
fb.dialog("feed", data, function(e) {
    if(e.success &amp;&amp; e.result) {
        alert("Success! New Post ID: " + e.result);
    } else {
        if(e.error) {
            alert(e.error);
        } else {
            alert("User canceled dialog.");
        }
    }
});
</pre>
 * <p><p>For more information on Facebook Dialogs, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/dialogs/">Facebook Dialog Reference</a> </li>
</ul></p>
 * <h4>Requesting additional permissions for iOS 6</h4>
 * <p><p>To use the built-in iOS 6 Facebook login, the application cannot request offline or write permissions
upon intialization and must ask for write permission using the
{@link Modules.Facebook#method-reauthorize reauthroize} method.
This example shows how to use the <code>reauthorize</code> method to request additional permissions
to publish a post to the user's wall.</p></p><pre>var fb = require('facebook');
fb.appid = FACEBOOK_APP_ID;
// Initial permissions must exclude offline and write priviledges
fb.permissions = ['read_stream'];
// This property needs to be false to use the built-in iOS 6 login
fb.forceDialogAuth = false;
fb.addEventListener('login', function(e) {
    if (e.success) {
        alert('Logged In');
    } else if (e.error) {
        alert(e.error);
    } else if (e.cancelled) {
        alert("Canceled");
    }
});

var button = Ti.UI.createButton({title: 'Open Feed Dialog'});
button.addEventListener('click', function(e){
    // Ask for write permission
    fb.reauthorize(['publish_stream'], 'me', function(e){
        if (e.success) {
            // If successful, proceed with a publish call
            fb.dialog("feed", {}, function(e) {
                if(e.success &amp;&amp; e.result) {
                    alert("Success! New Post ID: " + e.result);
                } else {
                    if(e.error) {
                        alert(e.error);
                    } else {
                        alert("User canceled dialog.");
                    }
                }
            });
        } else {
            if (e.error) {
                alert(e.error);
            } else {
                alert("Unknown result");
            }
        }
    });
});

var win = Ti.UI.createWindow({backgroundColor: 'white'});
win.add(button);
win.open();

if (!fb.loggedIn) {
    fb.authorize();
}</pre>
 */
Modules.Facebook = {};

/**
 * @class Modules.Facebook.LoginButton
 * @typestr Object of Modules.Facebook
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.UI.View
 * <p>A Facebook login button.</p>
 * @description <p>The Login Button created by {@link Modules.Facebook#method-createLoginButton}.  This is a 
Facebook-themed button that does not require a click event handler or any listeners.<br />
Click events on the button are automatically handled by the Facebook module.</p>
<p>The button changes its label to reflect the current state of the Facebook 
session.  For example, if the user is already logged in, this button will show "Logout".</p>
<p>See the examples in the {@link Modules.Facebook} documentation.</p>
 */
Modules.Facebook.LoginButton = {};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Modules.Facebook.LoginButton#property-style style} property.</p>
 * @return {String} 
*/
Modules.Facebook.LoginButton.getStyle = function(){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Modules.Facebook.LoginButton#property-style style} property.</p>
 * @param {String} style 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Facebook.LoginButton.setStyle = function(style){};

/**
 * @property style
 * @type String
 * <p>Sets the login button style.</p>
 * @description <p>All versions of the button include the Facebook logo.</p>
<p>Use {@link Modules.Facebook#property-BUTTON_STYLE_WIDE BUTTON_STYLE_WIDE} to show a wider version of the button 
that includes the text, "Login with Facebook" or "Connect with Facebook".</p>
<p>Use {@link Modules.Facebook#property-BUTTON_STYLE_NORMAL BUTTON_STYLE_NORMAL} to show a
narrower button that simply says, "Login" or "Connect".</p>
 */
Modules.Facebook.LoginButton.style = null;



/**
 * @method authorize
 * <p>Prompts the user to log in (if not already logged in) and authorize your application.  </p>
 * @description <p>Be sure to set your {@link Modules.Facebook#property-appid appid} and your required 
{@link Modules.Facebook#property-permissions permissions} before calling <code>authorize</code>.</p>
<p>A {@link Modules.Facebook#event-login login} event is generated to indicate successful or
unsuccessful login attempt.</p>
 * @return void
*/
Modules.Facebook.authorize = function(){};

/**
 * @method createLoginButton
 * <p>Creates and returns an instance of {@link Modules.Facebook.LoginButton}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Facebook.LoginButton} except those marked not-creation or read-only.</p>
 * @return {Modules.Facebook.LoginButton} 
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Modules.Facebook.createLoginButton = function(parameters){};

/**
 * @method dialog
 * <p>Opens a supported Facebook dialog.</p>
 * @description <p>For a list of dialogs, parameters, and response formats, see the 
<a href="http://developers.facebook.com/docs/reference/dialogs/">official documentation for Facebook Dialogs</a>.  </p>
<p>The callback is invoked when the dialog is closed, either because the user
approved the action, or canceled the dialog.</p>
 * @param {String} action 
 * <p>Specifies which dialog to show, such as "feed".</p>
 * @param {Object} params 
 * <p>A dictionary object for pre-filling some of the dialog's fields.  </p>
 * @param {Function} callback 
 * <p>Callback to invoke  when the user completes or cancels the dialog.</p>
 * @return void
*/
Modules.Facebook.dialog = function(action, params, callback){};

/**
 * @method getAccessToken
 * <p>Gets the value of the {@link Modules.Facebook#property-accessToken accessToken} property.</p>
 * @return {String} 
*/
Modules.Facebook.getAccessToken = function(){};

/**
 * @method getAppid
 * <p>Gets the value of the {@link Modules.Facebook#property-appid appid} property.</p>
 * @return {String} 
*/
Modules.Facebook.getAppid = function(){};

/**
 * @method getExpirationDate
 * <p>Gets the value of the {@link Modules.Facebook#property-expirationDate expirationDate} property.</p>
 * @return {Date} 
*/
Modules.Facebook.getExpirationDate = function(){};

/**
 * @method getForceDialogAuth
 * <p>Gets the value of the {@link Modules.Facebook#property-forceDialogAuth forceDialogAuth} property.</p>
 * @return {Boolean} 
*/
Modules.Facebook.getForceDialogAuth = function(){};

/**
 * @method getLoggedIn
 * <p>Gets the value of the {@link Modules.Facebook#property-loggedIn loggedIn} property.</p>
 * @return {Boolean} 
*/
Modules.Facebook.getLoggedIn = function(){};

/**
 * @method getPermissions
 * <p>Gets the value of the {@link Modules.Facebook#property-permissions permissions} property.</p>
 * @return {String[]} 
*/
Modules.Facebook.getPermissions = function(){};

/**
 * @method getUid
 * <p>Gets the value of the {@link Modules.Facebook#property-uid uid} property.</p>
 * @return {String} 
*/
Modules.Facebook.getUid = function(){};

/**
 * @method logout
 * <p>Clears the OAuth <code>accessToken</code> and logs out the user.</p>
 * @return void
*/
Modules.Facebook.logout = function(){};

/**
 * @method reauthorize
 * <p>Makes a request to Facebook for additional permissions.</p>
 * @description <p>iOS 6's facebook login forbids minimum authorization to include write permissions.
In order to make any write actions, the app must reauthorize asking for the additional
permissions. If the application already has these permissions, there will be no user
interaction.</p>
 * @param {String[]} permissions 
 * <p>Array of additional permissions to request. For a complete list of permissions, see the 
<a href="http://developers.facebook.com/docs/reference/api/permissions/">official Facebook Permissions Reference</a></p>
 * @param {String} audience 
 * <p>The extent of the visibility write permissions will have. The value of audience should be one of "me", "friends", or "everyone"</p>
 * @param {Function} callback 
 * <p>Callback to invoke when the request completes.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Modules.Facebook.reauthorize = function(permissions, audience, callback){};

/**
 * @method request
 * <p>Makes a request to the legacy Facebook REST API.</p>
 * @description <p>For details on API calls and responses, see the 
<a href="http://developers.facebook.com/docs/reference/rest/">offical Facebook REST API documentation</a>.</p>
 * @param {String} method 
 * <p>The REST API method to call.</p>
 * @param {Object} params 
 * <p>A dictionary object for setting parameters required by the call, if any.</p>
 * @param {Function} callback 
 * <p>Callback to invoke  when the request completes.</p>
 * @return void
*/
Modules.Facebook.request = function(method, params, callback){};

/**
 * @method requestWithGraphPath
 * <p>Makes a Facebook Graph API request.</p>
 * @description <p>If the request requires user authorization, the user must be logged in, and your app
must be authorized to make the request. You can check the
{@link Modules.Facebook#property-loggedIn loggedIn} property to determine if the user is logged in.</p>
<p>Every Facebook object has an associated path. For example, "me" requests information about 
the current user.</p>
<p>For a complete list of Graph API methods, parameters and return types, see the 
<a href="http://developers.facebook.com/docs/reference/api/">official Facebook Graph API documentation</a>.</p>
 * @param {String} path 
 * <p>Graph API path to request.</p>
 * @param {Dictionary} params 
 * <p>A dictionary object for setting parameters required by the call, if any.  </p>
 * @param {String} httpMethod 
 * <p>The HTTP method (GET/POST/DELETE) to use for the call.</p>
 * @param {Function} callback 
 * <p>Callback to invoke  when the request completes.</p>
 * @return void
*/
Modules.Facebook.requestWithGraphPath = function(path, params, httpMethod, callback){};

/**
 * @method setAppid
 * <p>Sets the value of the {@link Modules.Facebook#property-appid appid} property.</p>
 * @param {String} appid 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Facebook.setAppid = function(appid){};

/**
 * @method setForceDialogAuth
 * <p>Sets the value of the {@link Modules.Facebook#property-forceDialogAuth forceDialogAuth} property.</p>
 * @param {Boolean} forceDialogAuth 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Facebook.setForceDialogAuth = function(forceDialogAuth){};

/**
 * @method setPermissions
 * <p>Sets the value of the {@link Modules.Facebook#property-permissions permissions} property.</p>
 * @param {String[]} permissions 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Facebook.setPermissions = function(permissions){};

/**
 * @property BUTTON_STYLE_NORMAL
 * @type Number
 * @readonly
 * <p>Use with {@link Modules.Facebook.LoginButton#property-style LoginButton.style} to specify
the default login button reading "Connect" or "Login".</p>
 */
Modules.Facebook.BUTTON_STYLE_NORMAL = null;

/**
 * @property BUTTON_STYLE_WIDE
 * @type Number
 * @readonly
 * <p>Use with {@link Modules.Facebook.LoginButton#property-style LoginButton.style} to specify
a wide login button reading "Connect with Facebook" or "Login with Facebook".</p>
 */
Modules.Facebook.BUTTON_STYLE_WIDE = null;

/**
 * @property accessToken
 * @type String
 * @readonly
 * <p>OAuth token set after a successful <code>authorize</code>.</p>
 */
Modules.Facebook.accessToken = null;

/**
 * @property appid
 * @type String
 * <p>Your Facebook application id. You need to set this for anything to work.</p>
 */
Modules.Facebook.appid = null;

/**
 * @property expirationDate
 * @type Date
 * @readonly
 * <p>Time at which the <code>accessToken</code> expires.</p>
 */
Modules.Facebook.expirationDate = null;

/**
 * @property [forceDialogAuth=true]
 * @type Boolean
 * <p>Indicates whether the login should use the traditional dialog-based
authentication.</p>
 * @description <p>Set to <code>false</code> to enable Single-Sign-On (SSO) in cases where the official Facebook app is on the 
device.  Default is <code>true</code>, meaning the traditional, dialog-based
authentication is used rather than SSO. See  the
<a href="http://developers.facebook.com/docs/guides/mobile">Facebook Mobile Guide</a> for 
details of their Single-Sign-On scheme.</p>
<p>To use the built-in iOS 6 login, set this property to <code>false</code>.
This property is read-only on Mobile Web.</p>
 */
Modules.Facebook.forceDialogAuth = null;

/**
 * @property loggedIn
 * @type Boolean
 * @readonly
 * <p>Indicates if the user is logged in.</p>
 */
Modules.Facebook.loggedIn = null;

/**
 * @property permissions
 * @type String[]
 * <p>Array of permissions to request for your app.</p>
 * @description <p>Be sure the permissions you want are set before calling
{@link Modules.Facebook#method-authorize authorize}.</p>
<p>To use the build-in iOS 6 login, this property cannot contain any of the following:
offline_access, publish_actions, publish_stream, publish_checkins,
ads_management, create_event, rsvp_event, manage_friendlists, manage_notifications,
or manage_pages.</p>
<p>For a complete list of permissions, see the 
<a href="http://developers.facebook.com/docs/reference/api/permissions/">official Facebook Permissions Reference</a></p>
 */
Modules.Facebook.permissions = null;

/**
 * @property uid
 * @type String
 * @readonly
 * <p>Unique user ID returned from Facebook.</p>
 */
Modules.Facebook.uid = null;

/**
 * @class Modules.Map
 * @typestr Submodule of Modules
 * @platform android 3.1
 * @extends Titanium.Module
 * <p>Add-on map module using the Google Maps Android API v2.</p>
 * @description <p>This module is a replacement for the built-in Titanium.Map module on Android, which uses the Google Maps API v1.
The Google Maps API v1 is deprecated and Google will no longer issue new Maps API v1 keys after March 3rd, 2013. New
applications should use this module on Android.</p>
<p>Applications with existing Maps API v1 keys can continue to use the Titanium.Map module on Android,
or transition to the new ti.map add-on module.</p>
<p>For more instructions and examples of using the module, refer to the
<a href="#!/guide/Google_Maps_v2_for_Android">Google Maps v2 for Android guide</a>.</p>
<h3>Requirements</h3>
<ul>
<li>Google Maps API key (required for both development and production)</li>
<li>Google Play services SDK installed using the Android SDK manager</li>
<li>This module only works on Android devices.  This module is not supported on the Android emulator</li>
</ul>
<h3>Getting Started</h3>
<ul>
<li>Download the ti.map module from
    <a href="https://marketplace.appcelerator.com/apps/5005">https://marketplace.appcelerator.com/apps/5005</a>.<ul>
<li>Unpack the module to your Titanium SDK home directory, for example,
    <code>/Users/.../Library/Application Support/Titanium</code>, which make the module available to all your
    projects.</li>
<li>Alternatively, you can copy the ZIP file to your <code>Resources</code> folder, which makes the module
    available to a single project.</li>
</ul>
</li>
<li>
<p>Edit the <code>modules</code> section of your tiapp.xml file to include this module:</p>
<pre><code>...
    &lt;modules&gt;
        &lt;!-- Add this line to your modules section --&gt;
        &lt;module platform="android"&gt;ti.map&lt;/module&gt;
    &lt;/modules&gt;
...
</code></pre>
</li>
<li>
<p>Obtain a Google Maps API key.  For instructions, refer to
    <a href="https://developers.google.com/maps/documentation/android/start#the_google_maps_api_key">Google Maps Android API v2: The Google Maps API Key</a></p>
</li>
<li>
<p>Add the following settings and permissions to the Android manifest section of the tiapp.xml
    file. Replace the two instances of <code>&lt;com.domain.appid&gt;</code> with your application's ID (package name)
    and replace "PASTE YOUR GOOGLE MAPS API KEY HERE" with the Google API key you obtained:</p>
<pre><code>...
    &lt;android xmlns:android="http://schemas.android.com/apk/res/android"&gt;
        &lt;manifest&gt;
            &lt;!-- Allows the API to download data from Google Map servers --&gt;
            &lt;uses-permission android:name="android.permission.INTERNET"/&gt;
            &lt;!-- Allows the API to cache data --&gt;
            &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;
            &lt;!-- Use GPS for device location --&gt;
            &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/&gt;
            &lt;!-- Use Wi-Fi or mobile connection for device location --&gt;
            &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/&gt;
            &lt;!-- Allows the API to access Google web-based services --&gt;
            &lt;uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES"/&gt;
            &lt;!-- Specify OpenGL ES 2.0 as a requirement --&gt;
            &lt;uses-feature android:glEsVersion="0x00020000" android:required="true"/&gt;
            &lt;!-- Replace com.domain.appid with your application ID --&gt;
            &lt;uses-permission android:name="&lt;com.domain.appid&gt;.permission.MAPS_RECEIVE"/&gt;
            &lt;permission android:name="&lt;com.domain.appid&gt;.permission.MAPS_RECEIVE"
                android:protectionLevel="signature"/&gt;
            &lt;application&gt;
                &lt;!-- Replace "PASTE YOUR GOOGLE MAPS API KEY HERE" with the Google API key you obtained --&gt;
                &lt;meta-data android:name="com.google.android.maps.v2.API_KEY"
                    android:value="PASTE YOUR GOOGLE MAPS API KEY HERE"/&gt;
            &lt;/application&gt;
        &lt;/manifest&gt;
    &lt;/android&gt;
...
</code></pre>
</li>
<li>
<p>Instantiate the module with the <code>require('ti.map')</code> method, then make subsequent API calls with
     the new map object.</p>
<pre><code>var MapModule = require('ti.map');
var mapview = MapModule.createView({mapType:MapModule.NORMAL_TYPE});
</code></pre>
</li>
</ul>
 * <h3>Examples</h3>
 * <h4>Map Example</h4>
 * <p><p>This is a basic map example that places a custom annotation on the map, and 
listens for click events on the annotation. </p>
<p>In this example, a custom property (<code>myid</code>) is added to the annotation object.
While adding custom members to a Titanium object is not generally recommended,
in this case it provides a mechanism for uniquely identifying an annotation. This
can be useful, for example, if the annotations are dynamically generated 
and it is not practical to identify them by title.</p></p><pre>var MapModule = require('ti.map');
var win = Titanium.UI.createWindow();

var mountainView = MapModule.createAnnotation({
    latitude:37.390749,
    longitude:-122.081651,
    title:"Appcelerator Headquarters",
    subtitle:'Mountain View, CA',
    pincolor:MapModule.ANNOTATION_RED,
    myid:1 // Custom property to uniquely identify this annotation.
});

var mapview = MapModule.createView({
    mapType: MapModule.NORMAL_TYPE,
    region: {latitude:33.74511, longitude:-84.38993,
            latitudeDelta:0.01, longitudeDelta:0.01},
    animate:true,
    regionFit:true,
    userLocation:true,
    annotations:[mountainView]
});

win.add(mapview);
// Handle click events on any annotations on this map.
mapview.addEventListener('click', function(evt) {
    Ti.API.info("Annotation " + evt.title + " clicked, id: " + evt.annotation.myid);
});
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>This example loads the Google Maps v2 module and assigns it to the <code>Alloy.Globals.Map</code> namespace
in the initializer file.  In the XML markup, add a View element with its <code>ns</code>
(namespace) attribute set to <code>Alloy.Globals.Map</code>.  In the controller, use
the <code>Alloy.Globals.Map</code> namespace to reference the map module.</p>
<p><code>alloy.js</code>:</p></p><pre>// Loads the map module, which can be referenced by Alloy.Globals.Map
Alloy.Globals.Map = require('ti.map');
</pre>
 * <p><p><code>app/views/index.xml</code>:</p></p><pre>&lt;Alloy&gt;
    &lt;Window&gt;
        &lt;!-- Use the Alloy.Globals.Map namespace to create a map module view --&gt;
        &lt;View id="mapview" ns="Alloy.Globals.Map" onClick="report" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p><code>app/controllers/index.js</code>:</p></p><pre>function report(evt) {
    Ti.API.info("Annotation " + evt.title + " clicked, id: " + evt.annotation.myid);
}

// API calls to the map module need to use the Alloy.Globals.Map reference
var mountainView = Alloy.Globals.Map.createAnnotation({
    latitude:37.390749,
    longitude:-122.081651,
    title:"Appcelerator Headquarters",
    subtitle:'Mountain View, CA',
    pincolor:Alloy.Globals.Map.ANNOTATION_RED,
    myid:1 // Custom property to uniquely identify this annotation.
});

$.mapview.region = {latitude:33.74511, longitude:-84.38993,
                    latitudeDelta:0.01, longitudeDelta:0.01};
$.mapview.addAnnotation(mountainView);

$.index.open();</pre>
 */
Modules.Map = {};

/**
 * @class Modules.Map.Annotation
 * @typestr Object of Modules.Map
 * @platform android 3.1
 * @extends Titanium.Proxy
 * <p>Represents a labeled point of interest on the map that the user can click on.</p>
 * @description <p>The <code>Annotation</code> object gives you low-level control over annotations that can be added to 
{@link Modules.Map.View map view}. An annotation must have its <code>latitude</code> and <code>longitude</code>
properties set to appear on a map.</p>
<p>An annotation has two states: selected and deselected. A deselected annotation
is marked by a pin image. When the user selects the pin, the full annotation is 
displayed.</p>
<p>You can specify a custom image for the map pin by setting the
{@link Modules.Map.Annotation#property-image image} property. </p>
<p>When the user clicks on an annotation, a <code>click</code> event is generated. The annotation
itself does not generate these events. You must add event listeners to the map view instead.</p>
<p>Use the {@link Modules.Map#method-createAnnotation} method to create an annotation.</p>
 */
Modules.Map.Annotation = {};

/**
 * @method getCustomView
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-customView customView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 3.1
*/
Modules.Map.Annotation.getCustomView = function(){};

/**
 * @method getDraggable
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-draggable draggable} property.</p>
 * @return {Boolean} 
*/
Modules.Map.Annotation.getDraggable = function(){};

/**
 * @method getImage
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-image image} property.</p>
 * @return {String} 
*/
Modules.Map.Annotation.getImage = function(){};

/**
 * @method getLatitude
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-latitude latitude} property.</p>
 * @return {Number} 
*/
Modules.Map.Annotation.getLatitude = function(){};

/**
 * @method getLeftButton
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-leftButton leftButton} property.</p>
 * @return {String} 
 * @platform android 3.1
*/
Modules.Map.Annotation.getLeftButton = function(){};

/**
 * @method getLeftView
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-leftView leftView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 3.1
*/
Modules.Map.Annotation.getLeftView = function(){};

/**
 * @method getLongitude
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-longitude longitude} property.</p>
 * @return {Number} 
*/
Modules.Map.Annotation.getLongitude = function(){};

/**
 * @method getPincolor
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-pincolor pincolor} property.</p>
 * @return {Number} 
*/
Modules.Map.Annotation.getPincolor = function(){};

/**
 * @method getRightButton
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-rightButton rightButton} property.</p>
 * @return {String} 
 * @platform android 3.1
*/
Modules.Map.Annotation.getRightButton = function(){};

/**
 * @method getRightView
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-rightView rightView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 3.1
*/
Modules.Map.Annotation.getRightView = function(){};

/**
 * @method getSubtitle
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-subtitle subtitle} property.</p>
 * @return {String} 
*/
Modules.Map.Annotation.getSubtitle = function(){};

/**
 * @method getSubtitleid
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-subtitleid subtitleid} property.</p>
 * @return {String} 
 * @platform android 3.1
*/
Modules.Map.Annotation.getSubtitleid = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-title title} property.</p>
 * @return {String} 
*/
Modules.Map.Annotation.getTitle = function(){};

/**
 * @method getTitleid
 * <p>Gets the value of the {@link Modules.Map.Annotation#property-titleid titleid} property.</p>
 * @return {String} 
 * @platform android 3.1
*/
Modules.Map.Annotation.getTitleid = function(){};

/**
 * @method setCustomView
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-customView customView} property.</p>
 * @param {Titanium.UI.View} customView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.Annotation.setCustomView = function(customView){};

/**
 * @method setDraggable
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-draggable draggable} property.</p>
 * @param {Boolean} draggable 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Annotation.setDraggable = function(draggable){};

/**
 * @method setImage
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-image image} property.</p>
 * @param {String} image 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Annotation.setImage = function(image){};

/**
 * @method setLatitude
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-latitude latitude} property.</p>
 * @param {Number} latitude 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Annotation.setLatitude = function(latitude){};

/**
 * @method setLeftButton
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-leftButton leftButton} property.</p>
 * @param {String} leftButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.Annotation.setLeftButton = function(leftButton){};

/**
 * @method setLeftView
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-leftView leftView} property.</p>
 * @param {Titanium.UI.View} leftView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.Annotation.setLeftView = function(leftView){};

/**
 * @method setLongitude
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-longitude longitude} property.</p>
 * @param {Number} longitude 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Annotation.setLongitude = function(longitude){};

/**
 * @method setPincolor
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-pincolor pincolor} property.</p>
 * @param {Number} pincolor 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Annotation.setPincolor = function(pincolor){};

/**
 * @method setRightButton
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-rightButton rightButton} property.</p>
 * @param {String} rightButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.Annotation.setRightButton = function(rightButton){};

/**
 * @method setRightView
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-rightView rightView} property.</p>
 * @param {Titanium.UI.View} rightView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.Annotation.setRightView = function(rightView){};

/**
 * @method setSubtitle
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-subtitle subtitle} property.</p>
 * @param {String} subtitle 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Annotation.setSubtitle = function(subtitle){};

/**
 * @method setSubtitleid
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-subtitleid subtitleid} property.</p>
 * @param {String} subtitleid 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.Annotation.setSubtitleid = function(subtitleid){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Annotation.setTitle = function(title){};

/**
 * @method setTitleid
 * <p>Sets the value of the {@link Modules.Map.Annotation#property-titleid titleid} property.</p>
 * @param {String} titleid 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.Annotation.setTitleid = function(titleid){};

/**
 * @property customView
 * @type Titanium.UI.View
 * @platform android 3.1
 * <p>Defines a custom view to be used by the annotation.</p>
 * @description <p>Must be set during creation. <strong>User interaction is disabled on the view.</strong>
No view interaction events (click, touchstart etc) will be fired.</p>
 */
Modules.Map.Annotation.customView = null;

/**
 * @property [draggable=false]
 * @type Boolean
 * <p>Determines whether the pin can be dragged by the user.</p>
 * @description <p>When an annotation is draggable, it can be moved by the user by long pressing on the pin.</p>
 */
Modules.Map.Annotation.draggable = null;

/**
 * @property [image=If not specified, a standard map pin image is used.]
 * @type String
 * <p>Image to use for the the pin.</p>
 * @description <p>Must be set during creation. This is ignored if the customView property is set.</p>
 */
Modules.Map.Annotation.image = null;

/**
 * @property latitude
 * @type Number
 * <p>Latitude of the annotation, in decimal degrees.</p>
 */
Modules.Map.Annotation.latitude = null;

/**
 * @property leftButton
 * @type String
 * @platform android 3.1
 * <p>Left button image on the annotation, specified as an image URL.</p>
 */
Modules.Map.Annotation.leftButton = null;

/**
 * @property leftView
 * @type Titanium.UI.View
 * @platform android 3.1
 * <p>Left view that is displayed on the annotation.</p>
 * @description <p>This is ignored if the <code>leftButton</code> property is set.</p>
 */
Modules.Map.Annotation.leftView = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude of the annotation, in decimal degrees.</p>
 */
Modules.Map.Annotation.longitude = null;

/**
 * @property pincolor
 * @type Number
 * <p>Pin color.</p>
 * @description <p>Pin color is ignored if a custom pin image is specified using {@link Modules.Map.Annotation#property-image}.</p>
 */
Modules.Map.Annotation.pincolor = null;

/**
 * @property rightButton
 * @type String
 * @platform android 3.1
 * <p>Right button image on the annotation, specified as an image URL.</p>
 */
Modules.Map.Annotation.rightButton = null;

/**
 * @property rightView
 * @type Titanium.UI.View
 * @platform android 3.1
 * <p>Right view that is displayed on the annotation.</p>
 * @description <p>This is ignored if the <code>rightButton</code> property is set.</p>
 */
Modules.Map.Annotation.rightView = null;

/**
 * @property subtitle
 * @type String
 * <p>Secondary title of the annotation view.</p>
 */
Modules.Map.Annotation.subtitle = null;

/**
 * @property subtitleid
 * @type String
 * @platform android 3.1
 * <p>Key in the locale file to use for the subtitle property.</p>
 */
Modules.Map.Annotation.subtitleid = null;

/**
 * @property title
 * @type String
 * <p>Primary title of the annotation view.</p>
 */
Modules.Map.Annotation.title = null;

/**
 * @property titleid
 * @type String
 * @platform android 3.1
 * <p>Key in the locale file to use for the title property.</p>
 */
Modules.Map.Annotation.titleid = null;

/**
 * @class Modules.Map.Route
 * @typestr Object of Modules.Map
 * @platform android 3.1
 * @extends Titanium.Proxy
 * <p>Represents a path between two or more points of interest.</p>
 * @description <p>The <code>Route</code> object gives you low-level control over routes that can be added to a
{@link Modules.Map.View map view}. A route must have its <code>points</code> property set to appear on a map.</p>
<p>Use the {@link Modules.Map#method-createRoute} method to create a route.</p>
 */
Modules.Map.Route = {};

/**
 * @method getColor
 * <p>Gets the value of the {@link Modules.Map.Route#property-color color} property.</p>
 * @return {String} 
*/
Modules.Map.Route.getColor = function(){};

/**
 * @method getPoints
 * <p>Gets the value of the {@link Modules.Map.Route#property-points points} property.</p>
 * @return {MapPointType[]} 
*/
Modules.Map.Route.getPoints = function(){};

/**
 * @method getWidth
 * <p>Gets the value of the {@link Modules.Map.Route#property-width width} property.</p>
 * @return {Number} 
*/
Modules.Map.Route.getWidth = function(){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Modules.Map.Route#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Route.setColor = function(color){};

/**
 * @method setPoints
 * <p>Sets the value of the {@link Modules.Map.Route#property-points points} property.</p>
 * @param {MapPointType[]} points 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Route.setPoints = function(points){};

/**
 * @method setWidth
 * <p>Sets the value of the {@link Modules.Map.Route#property-width width} property.</p>
 * @param {Number} width 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.Route.setWidth = function(width){};

/**
 * @property [color=black]
 * @type String
 * <p>Color to use when drawing the route, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Modules.Map.Route.color = null;

/**
 * @property points
 * @type MapPointType[]
 * <p>Array of map points making up the route.</p>
 */
Modules.Map.Route.points = null;

/**
 * @property [width=10]
 * @type Number
 * <p>Line width in pixels to use when drawing the route.</p>
 */
Modules.Map.Route.width = null;

/**
 * @class Modules.Map.View
 * @typestr Object of Modules.Map
 * @platform android 3.1
 * @extends Titanium.UI.View
 * <p>Map view is used for embedding native mapping capabilities as a view in your application.</p>
 * @description <p>With native maps, you can control the mapping location, the type of map, the zoom level 
and you can add custom annotations and routes directly to the map. Once the map view is
displayed, the user can pan, zoom and tilt the map using the native control gestures.</p>
<p>Use the {@link Modules.Map#method-createView} method to create a map view.</p>
<p>All latitude and longitude values are specified in decimal degrees. Values in degrees,
minutes and seconds (DMS) must be converted to decimal degrees before being passed to
the map view.</p>
<p>You can add {@link Modules.Map.Annotation Annotation} objects to the map to mark points of
interest. An annotation has two states: selected and deselected. A deselected annotation
is marked by a pin image. When selected, the full annotation is displayed, typically
including a title and an optional subtitle.</p>
<p>You can add {@link Modules.Map.Route Route} objects to the map to create paths between
two or more points of interest.</p>
 */
Modules.Map.View = {};

















/**
 * @method addAnnotation
 * <p>Adds a new annotation to the map.</p>
 * @param {Modules.Map.Annotation} annotation 
 * <p>a {@link Modules.Map.Annotation} instance.</p>
 * @return void
*/
Modules.Map.View.addAnnotation = function(annotation){};

/**
 * @method addAnnotations
 * <p>Adds one or more new annotations to the map.</p>
 * @param {Modules.Map.Annotation[]} annotations 
 * <p>Array of {@link Modules.Map.Annotation Annotation} objects</p>
 * @return void
*/
Modules.Map.View.addAnnotations = function(annotations){};

/**
 * @method addRoute
 * <p>Adds a route to the map.</p>
 * @param {Modules.Map.Route} route 
 * <p>Modules.Map.Route</p>
 * @return void
*/
Modules.Map.View.addRoute = function(route){};

/**
 * @method deselectAnnotation
 * <p>Deselects the specified annotation, so the main annotation is hidden and only
a pin image is shown.</p>
 * @param {String/Modules.Map.Annotation} annotation 
 * <p>Annotation to deselect, identified by an annotation title or a {@link Modules.Map.Annotation} reference.</p>
 * @return void
*/
Modules.Map.View.deselectAnnotation = function(annotation){};

/**
 * @method getAnchorPoint 
 * @hide
*/Modules.Map.View.getAnchorPoint = function(){};

/**
 * @method getAnimate
 * <p>Gets the value of the {@link Modules.Map.View#method-animate animate} property.</p>
 * @return {Boolean} 
*/
Modules.Map.View.getAnimate = function(){};

/**
 * @method getAnnotations
 * <p>Gets the value of the {@link Modules.Map.View#property-annotations annotations} property.</p>
 * @return {Modules.Map.Annotation[]} 
*/
Modules.Map.View.getAnnotations = function(){};

/**
 * @method getBackgroundLeftCap 
 * @hide
*/Modules.Map.View.getBackgroundLeftCap = function(){};

/**
 * @method getBackgroundTopCap 
 * @hide
*/Modules.Map.View.getBackgroundTopCap = function(){};

/**
 * @method getEnableZoomControls
 * <p>Gets the value of the {@link Modules.Map.View#property-enableZoomControls enableZoomControls} property.</p>
 * @return {Boolean} 
*/
Modules.Map.View.getEnableZoomControls = function(){};

/**
 * @method getMapType
 * <p>Gets the value of the {@link Modules.Map.View#property-mapType mapType} property.</p>
 * @return {Number} 
*/
Modules.Map.View.getMapType = function(){};

/**
 * @method getRegion
 * <p>Gets the value of the {@link Modules.Map.View#property-region region} property.</p>
 * @return {MapRegionTypev2} 
*/
Modules.Map.View.getRegion = function(){};

/**
 * @method getTraffic
 * <p>Gets the value of the {@link Modules.Map.View#property-traffic traffic} property.</p>
 * @return {Boolean} 
*/
Modules.Map.View.getTraffic = function(){};

/**
 * @method getUserLocation
 * <p>Gets the value of the {@link Modules.Map.View#property-userLocation userLocation} property.</p>
 * @return {Boolean} 
*/
Modules.Map.View.getUserLocation = function(){};

/**
 * @method getUserLocationButton
 * <p>Gets the value of the {@link Modules.Map.View#property-userLocationButton userLocationButton} property.</p>
 * @return {Boolean} 
 * @platform android 3.1.1
*/
Modules.Map.View.getUserLocationButton = function(){};

/**
 * @method removeAllAnnotations
 * <p>Removes all annotations from the map.</p>
 * @return void
*/
Modules.Map.View.removeAllAnnotations = function(){};

/**
 * @method removeAnnotation
 * <p>Removes an existing annotation from the map.</p>
 * @param {String/Modules.Map.Annotation} annotation 
 * <p>Annotation to remove, identified by an annotation title or a {@link Modules.Map.Annotation} reference.</p>
 * @return void
*/
Modules.Map.View.removeAnnotation = function(annotation){};

/**
 * @method removeAnnotations
 * <p>Removes one or more existing annotations from the map.</p>
 * @description <p>Annotations can be identified by title or by a {@link Modules.Map.Annotation}
reference.</p>
 * @param {String[]/Modules.Map.Annotation[]} annotations 
 * <p>Array of annotations to remove.</p>
 * @return void
*/
Modules.Map.View.removeAnnotations = function(annotations){};

/**
 * @method removeRoute
 * <p>Remove a previously added route.</p>
 * @param {Modules.Map.Route} route 
 * <p>An instance of {@link Modules.Map.Route}</p>
 * @return void
*/
Modules.Map.View.removeRoute = function(route){};

/**
 * @method selectAnnotation
 * <p>Selects the annotation, showing the full annotation.</p>
 * @param {String/Modules.Map.Annotation} annotation 
 * <p>Annotation to show, identified by an annotation title or a {@link Modules.Map.Annotation} reference.</p>
 * @return void
*/
Modules.Map.View.selectAnnotation = function(annotation){};

/**
 * @method setAnchorPoint 
 * @hide
*/Modules.Map.View.setAnchorPoint = function(){};

/**
 * @method setAnimate
 * <p>Sets the value of the {@link Modules.Map.View#method-animate animate} property.</p>
 * @param {Boolean} animate 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.View.setAnimate = function(animate){};

/**
 * @method setAnnotations
 * <p>Sets the value of the {@link Modules.Map.View#property-annotations annotations} property.</p>
 * @param {Modules.Map.Annotation[]} annotations 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.View.setAnnotations = function(annotations){};

/**
 * @method setBackgroundLeftCap 
 * @hide
*/Modules.Map.View.setBackgroundLeftCap = function(){};

/**
 * @method setBackgroundTopCap 
 * @hide
*/Modules.Map.View.setBackgroundTopCap = function(){};

/**
 * @method setEnableZoomControls
 * <p>Sets the value of the {@link Modules.Map.View#property-enableZoomControls enableZoomControls} property.</p>
 * @param {Boolean} enableZoomControls 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.View.setEnableZoomControls = function(enableZoomControls){};

/**
 * @method setLocation
 * <p>Sets the map location and zoom level.</p>
 * @description <p>The location is set using a simple dictionary object, described in {@link MapLocationTypeV2}. If <code>latitudeDelta</code>
and <code>longitudeDelta</code> are set, these specified parameters bound the area of interest, which is centered
and displayed at the greatest possible zoom level. This method can only be called after the map
completes loading. Before that, use {@link Modules.Map.View#property-region region} to set the map location.
For example:</p>
<pre><code> myMapView.setLocation({
    latitude:37.337681, longitude:-122.038193, animate:true,
    latitudeDelta:0.04, longitudeDelta:0.04});
</code></pre>
 * @param {MapLocationTypeV2} location 
 * <p>Dictionary specifying the location and the zoom level for the map.</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.View.setLocation = function(location){};

/**
 * @method setMapType
 * <p>Sets the type of map (satellite, normal, or terrain).</p>
 * @param {Number} mapType 
 * <p>Map type constant, either {@link Modules.Map#property-NORMAL_TYPE}, {@link Modules.Map#property-SATELLITE_TYPE},
{@link Modules.Map#property-TERRAIN_TYPE} or {@link Modules.Map#property-HYBRID_TYPE}.</p>
 * @return void
*/
Modules.Map.View.setMapType = function(mapType){};

/**
 * @method setRegion
 * <p>Sets the value of the {@link Modules.Map.View#property-region region} property.</p>
 * @param {MapRegionTypev2} region 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.View.setRegion = function(region){};

/**
 * @method setTraffic
 * <p>Sets the value of the {@link Modules.Map.View#property-traffic traffic} property.</p>
 * @param {Boolean} traffic 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.View.setTraffic = function(traffic){};

/**
 * @method setUserLocation
 * <p>Sets the value of the {@link Modules.Map.View#property-userLocation userLocation} property.</p>
 * @param {Boolean} userLocation 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Map.View.setUserLocation = function(userLocation){};

/**
 * @method setUserLocationButton
 * <p>Sets the value of the {@link Modules.Map.View#property-userLocationButton userLocationButton} property.</p>
 * @param {Boolean} userLocationButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1.1
*/
Modules.Map.View.setUserLocationButton = function(userLocationButton){};

/**
 * @method zoom
 * <p>Zooms in or out of the map.</p>
 * @description <p>Zooms in or out by specifying a relative zoom level. A positive value increases
the current zoom level and a negative value decreases the zoom level.</p>
<p>Each increase in zoom level increases the magnification by a factor of two.</p>
 * @param {Number} level 
 * <p>Relative zoom level (positive to zoom in, negative to zoom out).</p>
 * @return void
 * @platform android 3.1
*/
Modules.Map.View.zoom = function(level){};

/**
 * @property anchorPoint 
 * @hide
*/Modules.Map.View.anchorPoint = null;

/**
 * @property [animate=false]
 * @type Boolean
 * <p>Indicates if changes to the mapping region should be animated.</p>
 * @description <p>Setting this to 'false' will not stop the animation from clicking the My Location button, 
since that is native Android behavior. </p>
 */
Modules.Map.View.animate = null;

/**
 * @property annotations
 * @type Modules.Map.Annotation[]
 * <p>An array of annotations to add to the map.</p>
 * @description <p>There is no guarantee that the order of elements in the <code>annotations</code> property will be
maintained when creating, adding or deleting annotations from the Ti.Map.View object.
If the application depends on the annotations being in a set order, it should keep 
references to all of the annotations in a separate array.</p>
 */
Modules.Map.View.annotations = null;

/**
 * @property backgroundLeftCap 
 * @hide
*/Modules.Map.View.backgroundLeftCap = null;

/**
 * @property backgroundTopCap 
 * @hide
*/Modules.Map.View.backgroundTopCap = null;

/**
 * @property [enableZoomControls=true]
 * @type Boolean
 * <p>Enables or disables the built-in zoom controls.</p>
 * @description <p>If enabled, the zoom controls are a pair of buttons (one for zooming in, one for zooming out) that appear on the screen. 
When pressed, they cause the camera to zoom in (or out) by one zoom level. If disabled, the zoom controls are not shown.</p>
 */
Modules.Map.View.enableZoomControls = null;

/**
 * @property [mapType=NORMAL_TYPE]
 * @type Number
 * <p>Map type, either: {@link Modules.Map#property-NORMAL_TYPE}, {@link Modules.Map#property-SATELLITE_TYPE}, {@link Modules.Map#property-TERRAIN_TYPE}
or {@link Modules.Map#property-HYBRID_TYPE}</p>
 */
Modules.Map.View.mapType = null;

/**
 * @property [region=latitude 0, longitude 0]
 * @type MapRegionTypev2
 * <p>A dictionary specifying the location and zoom level of the map.</p>
 */
Modules.Map.View.region = null;

/**
 * @property [traffic=false]
 * @type Boolean
 * <p>Toggles the traffic layer on or off.</p>
 * @description <p>Set to <code>true</code> to display the traffic layer or <code>false</code> to hide it.
This is subject to the availability of traffic data.</p>
 */
Modules.Map.View.traffic = null;

/**
 * @property [userLocation=false]
 * @type Boolean
 * <p>Boolean indicating if the user's current device location should be shown on the
map.</p>
 * @description <p>If <code>true</code>, the user's location is marked with a pin, and the My Location button will appear in the top
right corner of the screen. </p>
 */
Modules.Map.View.userLocation = null;

/**
 * @property [userLocationButton=true]
 * @type Boolean
 * @platform android 3.1.1
 * <p>Enable or disables the My Location button. If the button is enabled, it is only shown when <code>userLocation</code>
is enabled.</p>
 * @description <p>If <code>true</code>, the My Location button is enabled.</p>
 */
Modules.Map.View.userLocationButton = null;

/**
 * @method addEventListener 
 * @hide
*/Modules.Map.addEventListener = function(){};

/**
 * @method createAnnotation
 * <p>Creates and returns an instance of {@link Modules.Map.Annotation}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Map.Annotation} except those marked not-creation or read-only.</p>
 * @return {Modules.Map.Annotation} 
 * @platform android 3.1
*/
Modules.Map.createAnnotation = function(parameters){};

/**
 * @method createRoute
 * <p>Creates and returns an instance of {@link Modules.Map.Route}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Map.Route} except those marked not-creation or read-only.</p>
 * @return {Modules.Map.Route} 
 * @platform android 3.1
*/
Modules.Map.createRoute = function(parameters){};

/**
 * @method createView
 * <p>Creates and returns an instance of {@link Modules.Map.View}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Map.View} except those marked not-creation or read-only.</p>
 * @return {Modules.Map.View} 
 * @platform android 3.1
*/
Modules.Map.createView = function(parameters){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Map.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Map.getBubbleParent = function(){};

/**
 * @method isGooglePlayServicesAvailable
 * <p>Returns a code to indicate whether Google Play Services is available on the device.</p>
 * @return {Number} <p>One of the following status codes:
{@link Modules.Map#property-SUCCESS}, {@link Modules.Map#property-SERVICE_MISSING},
{@link Modules.Map#property-SERVICE_VERSION_UPDATE_REQUIRED},
{@link Modules.Map#property-SERVICE_DISABLED} or {@link Modules.Map#property-SERVICE_INVALID}.</p>
 * @platform android 3.1.1
*/
Modules.Map.isGooglePlayServicesAvailable = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Map.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Map.setBubbleParent = function(){};

/**
 * @property ANNOTATION_AZURE
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to azure via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_AZURE = null;

/**
 * @property ANNOTATION_BLUE
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to blue via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_BLUE = null;

/**
 * @property ANNOTATION_CYAN
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to cyan via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_CYAN = null;

/**
 * @property ANNOTATION_DRAG_STATE_END
 * @type Number
 * @readonly
 * @platform android 3.1
 * <p>Used in the {@link Modules.Map.View#event-pinchangedragstate pinchangedragstate} event 
to indicate that the user finished moving the annotation.</p>
 */
Modules.Map.ANNOTATION_DRAG_STATE_END = null;

/**
 * @property ANNOTATION_DRAG_STATE_START
 * @type Number
 * @readonly
 * @platform android 3.1
 * <p>Used in the {@link Modules.Map.View#event-pinchangedragstate pinchangedragstate} event 
to indicate that the user started dragging the annotation.</p>
 */
Modules.Map.ANNOTATION_DRAG_STATE_START = null;

/**
 * @property ANNOTATION_GREEN
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to green via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_GREEN = null;

/**
 * @property ANNOTATION_MAGENTA
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to magenta via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_MAGENTA = null;

/**
 * @property ANNOTATION_ORANGE
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to orange via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_ORANGE = null;

/**
 * @property ANNOTATION_RED
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to red via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_RED = null;

/**
 * @property ANNOTATION_ROSE
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to rose via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_ROSE = null;

/**
 * @property ANNOTATION_VIOLET
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to violet via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_VIOLET = null;

/**
 * @property ANNOTATION_YELLOW
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to yellow via the 
{@link Modules.Map.Annotation#property-pincolor} property.</p>
 */
Modules.Map.ANNOTATION_YELLOW = null;

/**
 * @property HYBRID_TYPE
 * @type Number
 * @readonly
 * <p>Used with {@link Modules.Map.View#property-mapType mapType} to display a satellite image of the area with road and road name information layered on top.</p>
 */
Modules.Map.HYBRID_TYPE = null;

/**
 * @property NORMAL_TYPE
 * @type Number
 * @readonly
 * <p>Used with {@link Modules.Map.View#property-mapType mapType} to display a street map that shows the position of all roads and some road names.</p>
 */
Modules.Map.NORMAL_TYPE = null;

/**
 * @property SATELLITE_TYPE
 * @type Number
 * @readonly
 * <p>Used with {@link Modules.Map.View#property-mapType mapType} to display satellite imagery of the area.</p>
 */
Modules.Map.SATELLITE_TYPE = null;

/**
 * @property SERVICE_DISABLED
 * @type Number
 * @readonly
 * <p>Code returned from {@link Modules.Map#method-isGooglePlayServicesAvailable}. Google Play services has been disabled on this device.</p>
 */
Modules.Map.SERVICE_DISABLED = null;

/**
 * @property SERVICE_INVALID
 * @type Number
 * @readonly
 * <p>Code returned from {@link Modules.Map#method-isGooglePlayServicesAvailable}. The version of Google Play services installed on this device is not authentic.</p>
 */
Modules.Map.SERVICE_INVALID = null;

/**
 * @property SERVICE_MISSING
 * @type Number
 * @readonly
 * <p>Code returned from {@link Modules.Map#method-isGooglePlayServicesAvailable}. Google Play services is not installed on the device.</p>
 */
Modules.Map.SERVICE_MISSING = null;

/**
 * @property SERVICE_VERSION_UPDATE_REQUIRED
 * @type Number
 * @readonly
 * <p>Code returned from {@link Modules.Map#method-isGooglePlayServicesAvailable}. Google Play services is out of date.</p>
 */
Modules.Map.SERVICE_VERSION_UPDATE_REQUIRED = null;

/**
 * @property SUCCESS
 * @type Number
 * @readonly
 * <p>Code returned from {@link Modules.Map#method-isGooglePlayServicesAvailable}. Google Play services is available, and the connection is successful.</p>
 */
Modules.Map.SUCCESS = null;

/**
 * @property TERRAIN_TYPE
 * @type Number
 * @readonly
 * <p>Used with {@link Modules.Map.View#property-mapType mapType} to display the terrain that shows the position of all roads and some road names.</p>
 */
Modules.Map.TERRAIN_TYPE = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Map.bubbleParent = null;

/**
 * @class Modules.Newsstand
 * @typestr Submodule of Modules
 * @platform iphone 1.0
 * @platform ipad 1.0
 * @extends Titanium.Module
 * <p>The Newsstand module allows you to access Apple's NewsKit APIs</p>
 * @description <h3>Requirements</h3>
<p>This module requires iOS 5 or greater</p>
<h3>Newsstand Resources</h3>
<ul>
<li><a href="https://developer.apple.com/newsstand/">Newsstand for Developers</a></li>
<li><a href="https://developer.apple.com/library/ios/#documentation/StoreKit/Reference/NewsstandKit_Framework/_index.html">Newsstand Kit Framework Reference</a></li>
</ul>
<h3>Publishing</h3>
<p>Apple allows you to update your app icon in iTunes connect so that the latest issue can always be displayed. Documentation around setting this up can be found in the <a href="https://developer.apple.com/library/ios/#documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/14_Newsstand/Newsstand.html">iTunes Connect Developer Guide</a>.</p>
<h3>Getting Started</h3>
<p>View the <a href="#!/guide/Using_Titanium_Modules">Using Titanium Modules</a> document for instructions on getting
started with using this module in your application.</p>
<h3>Accessing the Newsstand Module</h3>
<p>To access this module from JavaScript, you would do the following:</p>
<pre><code>var Newsstand = require("ti.newsstand");
</code></pre>
<p>The newsstand variable is a reference to the Module object.</p>
<h3>Setup</h3>
<ol>
<li>Setup the app as a Newsstand app by adding the code below to your tiapp.xml</li>
<li>Modify the <code>UINewsstandBindingEdge</code> and <code>UINewsstandBindingType</code> values to get different decorations on the icons. Available options can be found in Apple's <a href="https://developer.apple.com/library/mac/#documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html">CoreFoundationKeys Documentation</a>.</li>
<li>Add <code>newsstandicon.png</code> to the 'Resources/iphone' directory next to appicon.png</li>
<li>Run the app, you should see it in the Newsstand folder.</li>
<li>During development, be sure to call {@link Modules.Newsstand#method-enableDevMode} to remove the daily download limit.</li>
</ol>
<p>tiapp.xml</p>
<pre><code>&lt;ios&gt;
    &lt;plist&gt;
        &lt;dict&gt;
            &lt;key&gt;CFBundleIcons&lt;/key&gt;
            &lt;dict&gt;
                &lt;key&gt;CFBundlePrimaryIcon&lt;/key&gt;
                &lt;dict&gt;
                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;
                    &lt;array&gt;
                        &lt;string&gt;appicon.png&lt;/string&gt;
                    &lt;/array&gt;
                &lt;/dict&gt;
                &lt;key&gt;UINewsstandIcon&lt;/key&gt;
                &lt;dict&gt;
                    &lt;key&gt;CFBundleIconFiles&lt;/key&gt;
                    &lt;array&gt;
                        &lt;string&gt;newsstandicon.png&lt;/string&gt;
                    &lt;/array&gt;
                    &lt;key&gt;UINewsstandBindingEdge&lt;/key&gt;
                    &lt;string&gt;UINewsstandBindingEdgeLeft&lt;/string&gt;
                    &lt;key&gt;UINewsstandBindingType&lt;/key&gt;
                    &lt;string&gt;UINewsstandBindingTypeMagazine&lt;/string&gt;
                &lt;/dict&gt;
            &lt;/dict&gt;
            &lt;key&gt;UINewsstandApp&lt;/key&gt;
            &lt;true/&gt;
            &lt;key&gt;UIBackgroundModes&lt;/key&gt;
            &lt;array&gt;
                &lt;string&gt;newsstand-content&lt;/string&gt;
            &lt;/array&gt;
        &lt;/dict&gt;
    &lt;/plist&gt;
&lt;/ios&gt;
</code></pre>
<h3>Push Notifications</h3>
<p>Push notifications can be sent to the device to notify it that a new issue is available. The notification payload must contain a "content-available" key set to 1. If this is not set, iOS will not allow the application to wake in the background to download a new issue.</p>
<pre><code>{
  "aps":{
    "content-available":1,
        },
   "device_tokens": ["exampleToken4F2509D125889AED3466F4D1376B26C374190B3974739"]
}
</code></pre>
<p>Use the {@link Titanium.Network#property-NOTIFICATION_TYPE_NEWSSTAND} type when calling {@link Titanium.Network#method-registerForPushNotifications}</p>
<pre><code>Ti.Network.registerForPushNotifications({
    types:[
        Ti.Network.NOTIFICATION_TYPE_NEWSSTAND
    ],
    success: eventSuccess,
    error: eventError,
    callback: eventCallback
});
</code></pre>
<p>To enable your application to download assets in the background in response to a push notification, you <em>must</em> wrap 
your {@link Modules.Newsstand.Issue#method-downloadAsset} calls with calls to {@link Modules.Newsstand#method-beginBackgroundDownloadRequests} and {@link Modules.Newsstand#method-endBackgroundDownloadRequests}.</p>
<p>For example, the event callback specified for {@link Titanium.Network#method-registerForPushNotifications} might look like the following:</p>
<pre><code>function eventCallback(e) {
    if (e.data['content-available'] === 1) {
        Newsstand.beginBackgroundDownloadRequests();
        var issue = Newsstand.getIssue({
            name: issues[0].name
        }); 
        if (!issue) {
            // if issue is not found then add it
            issue = Newsstand.addIssue({
                name: name,
                date: new Date()
            });
        }
        issue.downloadAsset({
            url: issues[0].content,
            userInfo: {
                id: 9999,
                name: 'TESTBACKGROUND'
            }
        });
        Newsstand.endBackgroundDownloadRequests();
    }
}
</code></pre>
 */
Modules.Newsstand = {};

/**
 * @class Modules.Newsstand.Issue
 * @typestr Object of Modules.Newsstand
 * @extends Titanium.Proxy
 * <p>A {@link Modules.Newsstand} object which represents an issue from the Newsstand library.</p>
 */
Modules.Newsstand.Issue = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Newsstand.Issue.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Newsstand.Issue.applyProperties = function(){};

/**
 * @method downloadAsset
 * <p>Downloads an asset for this issue. This connection is managed by the system. This allows the download to run in the background even when the app is not running. Download progress and errors can be captured using event listeners.</p>
 * @description <p><strong>Note:</strong> Throws an exception if called twice to download the same asset for a single issue.</p>
<p><strong>Example</strong></p>
<pre><code>issue.downloadAsset({
    url:contentURL,
    filename:'TEST.TST',
    userInfo:{
        id:1234,
        name:'TEST1'
    }
});
</code></pre>
 * @param {Object} props 
 * 
 * @return void
*/
Modules.Newsstand.Issue.downloadAsset = function(props){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Newsstand.Issue.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Newsstand.Issue.getBubbleParent = function(){};

/**
 * @method getContentURL
 * <p>Gets the value of the {@link Modules.Newsstand.Issue#property-contentURL contentURL} property.</p>
 * @return {String} 
*/
Modules.Newsstand.Issue.getContentURL = function(){};

/**
 * @method getDate
 * <p>Gets the value of the {@link Modules.Newsstand.Issue#property-date date} property.</p>
 * @return {String} 
*/
Modules.Newsstand.Issue.getDate = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Newsstand.Issue#property-name name} property.</p>
 * @return {String} 
*/
Modules.Newsstand.Issue.getName = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Modules.Newsstand.Issue#property-status status} property.</p>
 * @return {String} 
*/
Modules.Newsstand.Issue.getStatus = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Newsstand.Issue.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Newsstand.Issue.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Newsstand.Issue.bubbleParent = null;

/**
 * @property contentURL
 * @type String
 * @readonly
 * <p>The contentURL of the issue</p>
 * @description <p>This is the location assets downloaded for the issue will be saved.</p>
<p><strong>Note:</strong> contentURL will be undefined after an issue is removed from the library.</p>
 */
Modules.Newsstand.Issue.contentURL = null;

/**
 * @property date
 * @type String
 * @readonly
 * <p>The date of the issue</p>
 */
Modules.Newsstand.Issue.date = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>The unique name of the issue</p>
 */
Modules.Newsstand.Issue.name = null;

/**
 * @property status
 * @type String
 * @readonly
 * <p>The status of the issue</p>
 * @description <p>Possible statuses:</p>
<ul>
<li>{@link Modules.Newsstand#property-ISSUE_CONTENT_STATUS_NONE}</li>
<li>{@link Modules.Newsstand#property-ISSUE_CONTENT_STATUS_DOWNLOADING}</li>
<li>{@link Modules.Newsstand#property-ISSUE_CONTENT_STATUS_AVAILABLE}</li>
</ul>
 */
Modules.Newsstand.Issue.status = null;





/**
 * @method addIssue
 * <p>Adds an issues to the library.</p>
 * @description <p>Throws an exception if name and date are invalid. Also throws an exception if you use a name that is already taken by another issue.</p>
<p>Returns a {@link Modules.Newsstand.Issue} representing the issue that was added to the library or undefined if the issues could not be added to the library.</p>
<p><strong>Example</strong></p>
<pre><code>var issueDate = new Date();
issueDate.setFullYear(2013);
issueDate.setMonth(0);
issueDate.setDate(14);
var issue = Newsstand.addIssue({
    name: "Magazine-0", 
    date: issueDate
});
</code></pre>
 * @param {Object} props 
 * 
 * @return {Modules.Newsstand.Issue} 
*/
Modules.Newsstand.addIssue = function(props){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Newsstand.applyProperties = function(){};

/**
 * @method beginBackgroundDownloadRequests
 * <p>Signals the start of a series of {@link Modules.Newsstand.Issue#method-downloadAsset} calls. This call notifies the device that additional time may be needed by the application while running in the background.</p>
 * @description <p><strong>Example</strong></p>
<pre><code>Newsstand.beginBackgroundDownloadRequests();
issue1.downloadAsset(...);
issue2.downloadAsset(...);
Newsstand.endBackgroundDownloadRequests();
</code></pre>
 * @return void
*/
Modules.Newsstand.beginBackgroundDownloadRequests = function(){};

/**
 * @method enableDevMode
 * <p>Newsstand push notifications are only allowed one background download per day. This function will disable this limit for development devices during testing.</p>
 * @description <p><strong>Note:</strong> A development device refers to a device which has been recognized in Xcode Organizer as having the "Use for Development" checkbox enabled. </p>
<p><strong>Example</strong></p>
<pre><code>Newsstand.enableDevMode();
</code></pre>
 * @return void
*/
Modules.Newsstand.enableDevMode = function(){};

/**
 * @method endBackgroundDownloadRequests
 * <p>Signals the end of a series of {@link Modules.Newsstand.Issue#method-downloadAsset} calls. This call notifies the device that the application no longer requires additional time while running in the background.</p>
 * @description <p><strong>Example</strong></p>
<pre><code>Newsstand.beginBackgroundDownloadRequests();
issue1.downloadAsset(...);
issue2.downloadAsset(...);
Newsstand.endBackgroundDownloadRequests();
</code></pre>
 * @return void
*/
Modules.Newsstand.endBackgroundDownloadRequests = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Newsstand.fireEvent = function(){};

/**
 * @method getApplicationIconBadgeNumber
 * <p>Gets the value of the {@link Modules.Newsstand#property-applicationIconBadgeNumber applicationIconBadgeNumber} property.</p>
 * @return {Number} 
*/
Modules.Newsstand.getApplicationIconBadgeNumber = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Newsstand.getBubbleParent = function(){};

/**
 * @method getCurrentlyReadingIssue
 * <p>Gets the value of the {@link Modules.Newsstand#property-currentlyReadingIssue currentlyReadingIssue} property.</p>
 * @return {Modules.Newsstand.Issue} 
*/
Modules.Newsstand.getCurrentlyReadingIssue = function(){};

/**
 * @method getIssue
 * <p>Retrieves an issue from the library via its unique name.</p>
 * @description <p>Returns a {@link Modules.Newsstand.Issue} representing the issue or undefined if the issue does not exist in the library.</p>
<p><strong>Example</strong></p>
<pre><code>var issue = Newsstand.getIssue({
    name: "Magazine-0"
});
</code></pre>
 * @param {Object} props 
 * 
 * @return {Modules.Newsstand.Issue} 
*/
Modules.Newsstand.getIssue = function(props){};

/**
 * @method getIssues
 * <p>Gets the value of the {@link Modules.Newsstand#property-issues issues} property.</p>
 * @return {Modules.Newsstand.Issue[]} 
*/
Modules.Newsstand.getIssues = function(){};

/**
 * @method removeIssue
 * <p>Removes an issue from the library.</p>
 * @description <p><strong>Note:</strong> It is possible to hold on to a {@link Modules.Newsstand.Issue} even after it is removed from the library. This is not something you want to do, because issues are useless if they are not in the library. Most of the properties of the issue will still be available excelpt <code>contentURL</code> which will be undefined. </p>
<p><strong>Example</strong></p>
<pre><code>Newsstand.removeIssue(issueToRemove);
</code></pre>
 * @param {Modules.Newsstand.Issue} issue 
 * <p>The issue to be removed.</p>
 * @return void
*/
Modules.Newsstand.removeIssue = function(issue){};

/**
 * @method setApplicationIconBadgeNumber
 * <p>Sets the value of the {@link Modules.Newsstand#property-applicationIconBadgeNumber applicationIconBadgeNumber} property.</p>
 * @param {Number} applicationIconBadgeNumber 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Newsstand.setApplicationIconBadgeNumber = function(applicationIconBadgeNumber){};

/**
 * @method setBasicAuthentication
 * <p>Sets the username and password that will be used if the {@link Modules.Newsstand.Issue#method-downloadAsset} call needs to authenticate.</p>
 * @description <p><strong>Example</strong></p>
<pre><code>Newsstand.setBasicAuthentication({
    username: "jalter",
    password: "password"
});
</code></pre>
 * @param {Object} props 
 * 
 * @return void
*/
Modules.Newsstand.setBasicAuthentication = function(props){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Newsstand.setBubbleParent = function(){};

/**
 * @method setCurrentlyReadingIssue
 * <p>Sets the value of the {@link Modules.Newsstand#property-currentlyReadingIssue currentlyReadingIssue} property.</p>
 * @param {Modules.Newsstand.Issue} currentlyReadingIssue 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Newsstand.setCurrentlyReadingIssue = function(currentlyReadingIssue){};

/**
 * @method setIconImage
 * <p>Sets the value of the {@link Modules.Newsstand#property-iconImage iconImage} property.</p>
 * @param {Titanium.Filesystem.File} iconImage 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Newsstand.setIconImage = function(iconImage){};

/**
 * @property ISSUE_CONTENT_STATUS_AVAILABLE
 * @type Number
 * @readonly
 * <p>Downloading of assets is not taking place and there is issue content at contentURL.</p>
 */
Modules.Newsstand.ISSUE_CONTENT_STATUS_AVAILABLE = null;

/**
 * @property ISSUE_CONTENT_STATUS_DOWNLOADING
 * @type Number
 * @readonly
 * <p>The issue has assets that are currently downloading.</p>
 */
Modules.Newsstand.ISSUE_CONTENT_STATUS_DOWNLOADING = null;

/**
 * @property ISSUE_CONTENT_STATUS_NONE
 * @type Number
 * @readonly
 * <p>Assets are not downloading for the issue and there is no content at contentURL.</p>
 */
Modules.Newsstand.ISSUE_CONTENT_STATUS_NONE = null;

/**
 * @property applicationIconBadgeNumber
 * @type Number
 * <p>Accesses or sets the icon badge number of the app. Instead of displaying a badge number on the app icon, this will set the "new" badge on the app icon if the number is greater than 0.</p>
 */
Modules.Newsstand.applicationIconBadgeNumber = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Newsstand.bubbleParent = null;

/**
 * @property currentlyReadingIssue
 * @type Modules.Newsstand.Issue
 * <p>Accesses or sets the newsstand issue that the user is currently reading. If no issue is set, it will be undefined.</p>
<p>Newsstand Kit takes this setting into consideration when it purges back issues because of low levels of available flash storage.</p>
 */
Modules.Newsstand.currentlyReadingIssue = null;

/**
 * @property iconImage
 * @type Titanium.Filesystem.File
 * <p>Sets the image of the application icon.</p>
 * @description <p><strong>Note:</strong> If the image is not within the dimensions outlined in the Newsstand Icon section of the <a href="http://developer.apple.com/library/ios/#documentation/userexperience/conceptual/mobilehig/IconsImages/IconsImages.html">iOS Human Interface Guidelines</a>, it may not be displayed.</p>
<p><strong>Note:</strong> Sometimes this does not work on the simulator. Works consistently on device.</p>
<p><strong>Example</strong></p>
<pre><code>var file = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory,'newIcon.png');
Newsstand.iconImage = file;
</code></pre>
 */
Modules.Newsstand.iconImage = null;

/**
 * @property issues
 * @type Modules.Newsstand.Issue[]
 * @readonly
 * <p>Returns an array of {@link Modules.Newsstand.Issue}s representing the current issues in the library.</p>
 */
Modules.Newsstand.issues = null;

/**
 * @class Modules.Nfc
 * @typestr Submodule of Modules
 * @platform android 1.0
 * @extends Titanium.Module
 * <p>Near Field Communication (NFC) module</p>
 * @description <p>This module provides access to Near Field Communication (NFC) functionality, allowing applications to read and write<br />
NFC tags. A "tag" may actually be another device that appears as a tag.</p>
<h3>NFC Resources</h3>
<ul>
<li><a href="http://developer.android.com/guide/topics/connectivity/nfc/index.html">Near Field Communication</a></li>
<li><a href="http://developer.android.com/reference/android/nfc/package-summary.html">android.nfc</a></li>
</ul>
<h3>Requirements</h3>
<ul>
<li>An NFC capable device is required.</li>
<li>Android API level 10</li>
</ul>
<h3>Getting Started</h3>
<ul>
<li>View the <a href="#!/guide/Using_Titanium_Modules">Using Titanium Modules</a> 
    document for instructions on getting started with using this module in your application.</li>
</ul>
<h3>Accessing the Module</h3>
<ul>
<li>
<p>Use <code>require</code> to access this module from JavaScript:</p>
<pre><code>var nfc = require("ti.nfc");
</code></pre>
<p>The <code>nfc</code> variable is a reference to the Module object.</p>
</li>
</ul>
<h3>Tag Dispatching and Intent Filters</h3>
<ul>
<li>
<p>The Android <a href="http://developer.android.com/guide/topics/connectivity/nfc/nfc.html#tag-dispatch">tag dispatch system</a>
    is responsible for dispatching NFC messages to the appropriate application. In the
    situation where you are not using foreground dispatching, you will need to define intent-filters in the 
    tiapp.xml file to specify which types of NFC messages the application wants to receive. By using intent-filters in
    the tiapp.xml file, the application will be automatically started if a matching
    NFC message is dispatched. </p>
<p>Add code similar to the following to your tiapp.xml file:</p>
<ul>
<li>Replace occurrences of the activity name with your activity name.</li>
<li><code>android:launchMode="singleTask"</code> is needed so that new intents that result from NFC message dispatching do not start a new activity in your application.</li>
<li>
<p>Replace the NFC specific intent filters with filters appropriate for your application.</p>
<pre><code>&lt;android xmlns:android="http://schemas.android.com/apk/res/android"&gt;
    &lt;manifest&gt;
        &lt;application&gt;
            &lt;activity android:name=".TagviewerActivity"
             android:label="TagViewer" android:theme="@style/Theme.Titanium"
             android:configChanges="keyboardHidden|orientation"
             android:launchMode="singleTask"&gt;
                &lt;intent-filter&gt;
                    &lt;action android:name="android.intent.action.MAIN" /&gt;
                    &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
                &lt;/intent-filter&gt;
                &lt;intent-filter&gt;
                    &lt;action android:name="android.nfc.action.NDEF_DISCOVERED"/&gt;
                    &lt;category android:name="android.intent.category.DEFAULT"/&gt;
                    &lt;data android:mimeType="text/plain"/&gt;
                &lt;/intent-filter&gt;
                &lt;intent-filter&gt;
                    &lt;action android:name="android.nfc.action.NDEF_DISCOVERED"/&gt;
                    &lt;category android:name="android.intent.category.DEFAULT"/&gt;
                    &lt;data android:scheme="http"/&gt;
                &lt;/intent-filter&gt;
            &lt;/activity&gt;
        &lt;/application&gt;
    &lt;/manifest&gt;
&lt;/android&gt;
</code></pre>
</li>
</ul>
<p>Note that if you are using <a href="http://developer.android.com/guide/topics/connectivity/nfc/advanced-nfc.html#foreground-dispatch">foreground dispatching</a>
you do not need to define intent filters in the application's tiapp.xml file.</p>
</li>
</ul>
<h3>Creating an Adapter</h3>
<ul>
<li>
<p>The NFC adapter gives you access to the features of the NFC device. The NFC adapter proxy is always
    associated with the activity that was the current activity when it was created. Therefore, the NFC 
    Adapter should be created after the activity has been opened. You can use the window <code>open</code> event to know
    when the activity has been opened. </p>
<pre><code>$.index.addEventListener('open', function(e) {
    nfcAdapter = nfc.createNfcAdapter({
        onNdefDiscovered: handleDiscovery,
        onTagDiscovered: handleDiscovery,
        onTechDiscovered: handleDiscovery
    });
});
</code></pre>
</li>
</ul>
<h3>Handling Intents</h3>
<ul>
<li>
<p>NFC Intents are dispatched to an activity by the Android tag dispatch system. When your activity receives a new intent,
    it must forward the intent to the <code>onNewIntent</code> method of the NFC adapter for processing.</p>
<pre><code>var act = Ti.Android.currentActivity;
act.addEventListener('newintent', function(e) {
    nfcAdapter.onNewIntent(e.intent);
});
</code></pre>
<p>If your application is started as the result of an NFC intent, that intent will automatically be processed when the
NFC module is loaded.</p>
</li>
</ul>
<h3>Foreground Dispatch</h3>
<ul>
<li>
<p>The foreground dispatch system allows an activity to intercept an intent and claim priority over other activities that handle the same intent.
    When using foreground dispatching, you must process the <code>pause</code> and <code>resume</code> events on the activity and enable or disable
    foreground dispatching.</p>
<pre><code>var act = Ti.Android.currentActivity;
act.addEventListener('resume', function(e) {
    nfcAdapter.enableForegroundDispatch(dispatchFilter);
});
act.addEventListener('pause', function(e) {
    nfcAdapter.disableForegroundDispatch();
});
</code></pre>
</li>
</ul>
<h3>Example applications</h3>
<ul>
<li>
<p>Example applications are located in the <code>example</code> folder of the module:</p>
<ul>
<li><code>TagBeam</code> demonstrates how to use Android Beam to send messages to another NFC capable device.</li>
<li><code>TagForeground</code> demonstrates how to read NFC tags only when the application is in the foreground.</li>
<li><code>TagViewer</code> demonstrates how to receive NFC tag intents even when the application is not running.</li>
<li><code>TagWriter</code> demonstrates how to write to an NFC tag using the Ndef tag technology data format.</li>
</ul>
</li>
</ul>
 * <h3>Example</h3>
 * <h4>Creating NFC Adapter</h4>
 * <p><p>This example demonstrates the proper technique for creating an NFC adapter in the current activity. The
NFC Adapter should be created after the activity has been opened.</p></p><pre>var nfc = require('ti.nfc');
var nfcAdapter = null;

$.index.addEventListener('open', function(e) {
    // Must wait until the activity has been opened before setting up NFC
    // Create the NFC adapter to be associated with this activity. 
    // There should only be ONE adapter created per activity.
    nfcAdapter = nfc.createNfcAdapter({
        onNdefDiscovered: handleDiscovery,
        onTagDiscovered: handleDiscovery,
        onTechDiscovered: handleDiscovery
    });

    // It's possible that the device does not support NFC. Check it here
    // before we go any further.
    if (!nfcAdapter.isEnabled()) {
        alert('NFC is not enabled on this device');
        return;
    }
});

$.index.open();</pre>
 */
Modules.Nfc = {};

/**
 * @class Modules.Nfc.NdefMessage
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Titanium.Proxy
 * <p>Represents an immutable NDEF message.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createNdefMessage} method to create an NDEF message.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NdefMessage.html">NdefMessage</a></p>
 */
Modules.Nfc.NdefMessage = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefMessage.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefMessage.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefMessage.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefMessage.getBubbleParent = function(){};

/**
 * @method getRecords
 * <p>Gets the value of the {@link Modules.Nfc.NdefMessage#property-records records} property.</p>
 * @return {Modules.Nfc.NdefRecord[]} 
*/
Modules.Nfc.NdefMessage.getRecords = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefMessage.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefMessage.setBubbleParent = function(){};

/**
 * @method setRecords
 * <p>Sets the value of the {@link Modules.Nfc.NdefMessage#property-records records} property.</p>
 * @param {Modules.Nfc.NdefRecord[]} records 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefMessage.setRecords = function(records){};

/**
 * @method toByte
 * <p>Return the NDEF message as raw bytes.</p>
 * @return {Titanium.Blob} 
*/
Modules.Nfc.NdefMessage.toByte = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefMessage.bubbleParent = null;

/**
 * @property records
 * @type Modules.Nfc.NdefRecord[]
 * <p>NDEF records inside this NDEF message.</p>
 */
Modules.Nfc.NdefMessage.records = null;

/**
 * @class Modules.Nfc.NdefRecord
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Titanium.Proxy
 * <p>Represents an immutable NDEF record.</p>
 * @description <p>The NDEF record is the base type for more type-specific NDEF records. You will generally
work with the type-specific NDEF records (e.g. NdefRecordText, NdefRecordUri, etc.) which have
more applicable properties for each type of record.</p>
<p>Use one of the {@link Modules.Nfc#method-createNdefRecordApplication}, {@link Modules.Nfc#method-createNdefRecordEmpty}, 
{@link Modules.Nfc#method-createNdefRecordExternal}, {@link Modules.Nfc#method-createNdefRecordMedia}, {@link Modules.Nfc#method-createNdefRecordSmartPoster},
{@link Modules.Nfc#method-createNdefRecordText}, {@link Modules.Nfc#method-createNdefRecordUnknown}, or {@link Modules.Nfc#method-createNdefRecordUri} method 
variants to create an NDEF record.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NdefRecord.html">NdefRecord</a></p>
 */
Modules.Nfc.NdefRecord = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecord.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecord.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecord.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecord.getBubbleParent = function(){};

/**
 * @method getHashCode
 * <p>Returns the integer hash code for this object.</p>
 * @return {Number} 
*/
Modules.Nfc.NdefRecord.getHashCode = function(){};

/**
 * @method getId
 * <p>Returns the variable length ID.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecord.getId = function(){};

/**
 * @method getPayload
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecord#property-payload payload} property.</p>
 * @return {Titanium.Blob} 
*/
Modules.Nfc.NdefRecord.getPayload = function(){};

/**
 * @method getRecordType
 * <p>Returns the record type.</p>
 * @description <p>This is the class name of the NDEF record (e.g. NdefRecordText)</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecord.getRecordType = function(){};

/**
 * @method getTnf
 * <p>Returns the 3-bit TNF.</p>
 * @return {Number} 
*/
Modules.Nfc.NdefRecord.getTnf = function(){};

/**
 * @method getType
 * <p>Returns the variable length Type field.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecord.getType = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecord.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecord.setBubbleParent = function(){};

/**
 * @method setPayload
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecord#property-payload payload} property.</p>
 * @param {Titanium.Blob} payload 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecord.setPayload = function(payload){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecord.bubbleParent = null;

/**
 * @property hashCode
 * @type Number
 * @readonly
 * <p>The integer hash code for this object.</p>
 */
Modules.Nfc.NdefRecord.hashCode = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>The variable length ID.</p>
 */
Modules.Nfc.NdefRecord.id = null;

/**
 * @property payload
 * @type Titanium.Blob
 * <p>The variable length payload for the record.</p>
 */
Modules.Nfc.NdefRecord.payload = null;

/**
 * @property recordType
 * @type String
 * @readonly
 * <p>The record type.</p>
 */
Modules.Nfc.NdefRecord.recordType = null;

/**
 * @property tnf
 * @type Number
 * @readonly
 * <p>The 3-bit TNF.</p>
 */
Modules.Nfc.NdefRecord.tnf = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The variable length Type field.</p>
 */
Modules.Nfc.NdefRecord.type = null;

/**
 * @class Modules.Nfc.NdefRecordApplication
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record indicating the package that should be used to handle the entire NDEF message.</p>
 * @description <p>This record type was introduced in Android 4.0 (API level 14).</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createApplicationRecord(java.lang.String)">createApplicationRecord</a></p>
 */
Modules.Nfc.NdefRecordApplication = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordApplication.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordApplication.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordApplication.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordApplication.getBubbleParent = function(){};

/**
 * @method getPackageName
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordApplication#property-packageName packageName} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordApplication.getPackageName = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordApplication.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordApplication.setBubbleParent = function(){};

/**
 * @method setPackageName
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordApplication#property-packageName packageName} property.</p>
 * @param {String} packageName 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordApplication.setPackageName = function(packageName){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordApplication.bubbleParent = null;

/**
 * @property packageName
 * @type String
 * <p>Application package name.</p>
 */
Modules.Nfc.NdefRecordApplication.packageName = null;

/**
 * @class Modules.Nfc.NdefRecordEmpty
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record that is empty.</p>
 */
Modules.Nfc.NdefRecordEmpty = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordEmpty.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordEmpty.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordEmpty.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordEmpty.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordEmpty.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordEmpty.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordEmpty.bubbleParent = null;

/**
 * @class Modules.Nfc.NdefRecordExternal
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record containing external (application-specific) data.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createExternal(java.lang.String,%20java.lang.String,%20byte[])">createExternal</a></p>
 */
Modules.Nfc.NdefRecordExternal = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordExternal.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordExternal.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordExternal.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordExternal.getBubbleParent = function(){};

/**
 * @method getDomain
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordExternal#property-domain domain} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordExternal.getDomain = function(){};

/**
 * @method getDomainType
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordExternal#property-domainType domainType} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordExternal.getDomainType = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordExternal.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordExternal.setBubbleParent = function(){};

/**
 * @method setDomain
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordExternal#property-domain domain} property.</p>
 * @param {String} domain 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordExternal.setDomain = function(domain){};

/**
 * @method setDomainType
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordExternal#property-domainType domainType} property.</p>
 * @param {String} domainType 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordExternal.setDomainType = function(domainType){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordExternal.bubbleParent = null;

/**
 * @property domain
 * @type String
 * <p>Domain name of issuing organization.</p>
 */
Modules.Nfc.NdefRecordExternal.domain = null;

/**
 * @property domainType
 * @type String
 * <p>Domain-specific type of data.</p>
 */
Modules.Nfc.NdefRecordExternal.domainType = null;

/**
 * @class Modules.Nfc.NdefRecordMedia
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record containing MIME data.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createMime(java.lang.String,%20byte[])">createMime</a></p>
 */
Modules.Nfc.NdefRecordMedia = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordMedia.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordMedia.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordMedia.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordMedia.getBubbleParent = function(){};

/**
 * @method getMimeType
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordMedia#property-mimeType mimeType} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordMedia.getMimeType = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordMedia.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordMedia.setBubbleParent = function(){};

/**
 * @method setMimeType
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordMedia#property-mimeType mimeType} property.</p>
 * @param {String} mimeType 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordMedia.setMimeType = function(mimeType){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordMedia.bubbleParent = null;

/**
 * @property mimeType
 * @type String
 * <p>A valid MIME type.</p>
 */
Modules.Nfc.NdefRecordMedia.mimeType = null;

/**
 * @class Modules.Nfc.NdefRecordSmartPoster
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record containing a Smart Poster message.</p>
 */
Modules.Nfc.NdefRecordSmartPoster = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordSmartPoster.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordSmartPoster.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordSmartPoster.fireEvent = function(){};

/**
 * @method getAction
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-action action} property.</p>
 * @return {Number} 
*/
Modules.Nfc.NdefRecordSmartPoster.getAction = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordSmartPoster.getBubbleParent = function(){};

/**
 * @method getMimeType
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-mimeType mimeType} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordSmartPoster.getMimeType = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-title title} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordSmartPoster.getTitle = function(){};

/**
 * @method getUri
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-uri uri} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordSmartPoster.getUri = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordSmartPoster.removeEventListener = function(){};

/**
 * @method setAction
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-action action} property.</p>
 * @param {Number} action 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordSmartPoster.setAction = function(action){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordSmartPoster.setBubbleParent = function(){};

/**
 * @method setMimeType
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-mimeType mimeType} property.</p>
 * @param {String} mimeType 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordSmartPoster.setMimeType = function(mimeType){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordSmartPoster.setTitle = function(title){};

/**
 * @method setUri
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordSmartPoster#property-uri uri} property.</p>
 * @param {String} uri 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordSmartPoster.setUri = function(uri){};

/**
 * @property action
 * @type Number
 * <p>Recommended action.</p>
 */
Modules.Nfc.NdefRecordSmartPoster.action = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordSmartPoster.bubbleParent = null;

/**
 * @property mimeType
 * @type String
 * <p>A valid MIME type for the external resource.</p>
 */
Modules.Nfc.NdefRecordSmartPoster.mimeType = null;

/**
 * @property title
 * @type String
 * <p>Title for the Smart Poster.</p>
 */
Modules.Nfc.NdefRecordSmartPoster.title = null;

/**
 * @property uri
 * @type String
 * <p>Uri for the external resource.</p>
 */
Modules.Nfc.NdefRecordSmartPoster.uri = null;

/**
 * @class Modules.Nfc.NdefRecordText
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record containing text.</p>
 */
Modules.Nfc.NdefRecordText = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordText.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordText.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordText.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordText.getBubbleParent = function(){};

/**
 * @method getEncoding
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordText#property-encoding encoding} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordText.getEncoding = function(){};

/**
 * @method getLanguageCode
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordText#property-languageCode languageCode} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordText.getLanguageCode = function(){};

/**
 * @method getText
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordText#property-text text} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordText.getText = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordText.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordText.setBubbleParent = function(){};

/**
 * @method setEncoding
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordText#property-encoding encoding} property.</p>
 * @param {String} encoding 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordText.setEncoding = function(encoding){};

/**
 * @method setLanguageCode
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordText#property-languageCode languageCode} property.</p>
 * @param {String} languageCode 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordText.setLanguageCode = function(languageCode){};

/**
 * @method setText
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordText#property-text text} property.</p>
 * @param {String} text 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordText.setText = function(text){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordText.bubbleParent = null;

/**
 * @property encoding
 * @type String
 * <p>Encoding format. Default is ENCODING_UTF8 ("UTF-8");</p>
 */
Modules.Nfc.NdefRecordText.encoding = null;

/**
 * @property languageCode
 * @type String
 * <p>Language code. Defaults to current locale.</p>
 */
Modules.Nfc.NdefRecordText.languageCode = null;

/**
 * @property text
 * @type String
 * <p>Text.</p>
 */
Modules.Nfc.NdefRecordText.text = null;

/**
 * @class Modules.Nfc.NdefRecordUnknown
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record containing an unknown data format.</p>
 */
Modules.Nfc.NdefRecordUnknown = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordUnknown.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordUnknown.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordUnknown.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordUnknown.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordUnknown.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordUnknown.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordUnknown.bubbleParent = null;

/**
 * @class Modules.Nfc.NdefRecordUri
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Modules.Nfc.NdefRecord
 * <p>Represents an immutable NDEF record containing a URI.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createUri(java.lang.String)">createUri</a></p>
 */
Modules.Nfc.NdefRecordUri = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NdefRecordUri.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NdefRecordUri.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NdefRecordUri.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordUri.getBubbleParent = function(){};

/**
 * @method getUri
 * <p>Gets the value of the {@link Modules.Nfc.NdefRecordUri#property-uri uri} property.</p>
 * @return {String} 
*/
Modules.Nfc.NdefRecordUri.getUri = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NdefRecordUri.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordUri.setBubbleParent = function(){};

/**
 * @method setUri
 * <p>Sets the value of the {@link Modules.Nfc.NdefRecordUri#property-uri uri} property.</p>
 * @param {String} uri 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NdefRecordUri.setUri = function(uri){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NdefRecordUri.bubbleParent = null;

/**
 * @property uri
 * @type String
 * <p>URI or URL.</p>
 */
Modules.Nfc.NdefRecordUri.uri = null;

/**
 * @class Modules.Nfc.NfcAdapter
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Titanium.Proxy
 * <p>Represents the local NFC adapter.</p>
 * @description <p>The NFC adapter gives you access to the features of the NFC device. The NFC adapter proxy is always
associated with the activity that was the current activity when it was created. The NFC Adapter must
be created after the activity has been opened. You can use the window <code>open</code> event to know when the
activity has been opened.</p>
<p>Use the {@link Modules.Nfc#method-createNfcAdapter} method to create an NFC adapter.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html">NfcAdapter</a></p>
 * <h3>Examples</h3>
 * <h4>Foreground Dispatch</h4>
 * <p><p>This example uses foreground dispatch to receive NDEF messages only when the application is in the foreground.</p></p><pre>// Create the NFC adapter to be associated with this activity. 
// There should only be ONE adapter created per activity.
nfcAdapter = nfc.createNfcAdapter({
    onNdefDiscovered: handleDiscovery,
    onTagDiscovered: handleDiscovery,
    onTechDiscovered: handleDiscovery
});

// It's possible that the device does not support NFC. Check it here
// before we go any further.
if (!nfcAdapter.isEnabled()) {
    alert('NFC is not enabled on this device');
    return;
}

// All tag scans are received by the activity as a new intent. Each
// scan intent needs to be passed to the nfc adapter for processing.
var act = Ti.Android.currentActivity;
act.addEventListener('newintent', function(e) {
    nfcAdapter.onNewIntent(e.intent);
});

// To enable NFC dispatching only while the application is in the foreground,
// the application must signal the module whenever the application state changes.
act.addEventListener('resume', function(e) {
    nfcAdapter.enableForegroundDispatch(dispatchFilter);
});
act.addEventListener('pause', function(e) {
    nfcAdapter.disableForegroundDispatch();
});

// This application is only interested in receiving NFC messages while
// in the foreground. So the dispatch filter must be defined to identify
// what types of NFC messages to receive.
dispatchFilter = nfc.createNfcForegroundDispatchFilter({
    intentFilters: [
        { action: nfc.ACTION_NDEF_DISCOVERED, mimeType: 'text/plain' },
        { action: nfc.ACTION_NDEF_DISCOVERED, scheme: 'http', host: 'www.appcelerator.com' }
    ],
    techLists: [
        [ "android.nfc.tech.NfcF" ],
        [ "android.nfc.tech.Ndef" ],
        [ "android.nfc.tech.MifareClassic" ],
        [ "android.nfc.tech.NfcA" ]
    ]
});</pre>
 * <h4>Push Message</h4>
 * <p><p>This example sets a default push message to send using Android Beam.</p></p><pre>// Create the NFC adapter to be associated with this activity. 
// There should only be ONE adapter created per activity.
nfcAdapter = nfc.createNfcAdapter({});

// It's possible that the device does not support NFC. Check it here
// before we go any further.
if (!nfcAdapter.isNdefPushEnabled()) {
    alert('NFC is not enabled on this device');
    return;
}

// Set the default Ndef message to send when tapped
var textRecord = nfc.createNdefRecordText({
    text: "NDEF Push Sample"
});
var msg = nfc.createNdefMessage({
    records: [ textRecord ]
});
nfcAdapter.setNdefPushMessage(msg);</pre>
 * <h4>Push Message Callback</h4>
 * <p><p>This example uses the push message callback to dynamically create the NDEF message as needed.</p></p><pre>// Create the NFC adapter to be associated with this activity. 
// There should only be ONE adapter created per activity.
nfcAdapter = nfc.createNfcAdapter({
    onPushMessage: function() {
        if (sendText) {
            ndefRecord = nfc.createNdefRecordText({
                text: "Hello"
            });
        } else {
            ndefRecord = nfc.createNdefRecordUri({
                uri: "http://www.appcelerator.com"
            });
        }
        return nfc.createNdefMessage({
            records: [
                ndefRecord 
            ]
        });
    }
});

// It's possible that the device does not support NFC. Check it here
// before we go any further.
if (!nfcAdapter.isEnabled()) {
    alert('NFC is not enabled on this device');
    return;
}</pre>
 */
Modules.Nfc.NfcAdapter = {};

/**
 * @method disableForegroundDispatch
 * <p>Disable foreground dispatch to the current activity.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.disableForegroundDispatch = function(){};

/**
 * @method disableForegroundNdefPush
 * <p>Disable NDEF message push over P2P.</p>
 * @description <p>This method was deprecated in API level 14. Use <code>setNdefPushMessage</code> instead.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.disableForegroundNdefPush = function(){};

/**
 * @method enableForegroundDispatch
 * <p>Enable foreground dispatch to the current activity.</p>
 * @description <p>The foreground dispatch system allows an activity to intercept an intent and claim priority over other activities that handle the same intent.
When using foreground dispatching, you must process the <code>pause</code> and <code>resume</code> events on the activity. See the <code>Foreground Dispatch</code> example
for an example of enabling and disabling foreground dispatch during these events.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#enableForegroundDispatch(android.app.Activity,%20android.app.PendingIntent,%20android.content.IntentFilter[],%20java.lang.String[][])">enableForegroundDispatch</a></p>
 * @param {Modules.Nfc.NfcForegroundDispatchFilter} dispatchFilter 
 * <p>A filter specifying intent, intent filters and technology lists used to match dispatch intents.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.enableForegroundDispatch = function(dispatchFilter){};

/**
 * @method enableForegroundNdefPush
 * <p>Enable NDEF message push over P2P.</p>
 * @description <p>This method was deprecated in API level 14. Use <code>setNdefPushMessage</code> instead.</p>
 * @param {Modules.Nfc.NdefMessage} message 
 * <p>An NDEF message to push over NFC.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.enableForegroundNdefPush = function(message){};

/**
 * @method getOnBeamPushUris
 * <p>Gets the value of the {@link Modules.Nfc.NfcAdapter#property-onBeamPushUris onBeamPushUris} property.</p>
 * @return {Function} 
 * @platform android 1.2
*/
Modules.Nfc.NfcAdapter.getOnBeamPushUris = function(){};

/**
 * @method getOnNdefDiscovered
 * <p>Gets the value of the {@link Modules.Nfc.NfcAdapter#property-onNdefDiscovered onNdefDiscovered} property.</p>
 * @return {Callback<NdefDiscovered>} 
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.getOnNdefDiscovered = function(){};

/**
 * @method getOnPushComplete
 * <p>Gets the value of the {@link Modules.Nfc.NfcAdapter#property-onPushComplete onPushComplete} property.</p>
 * @return {Function} 
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.getOnPushComplete = function(){};

/**
 * @method getOnPushMessage
 * <p>Gets the value of the {@link Modules.Nfc.NfcAdapter#property-onPushMessage onPushMessage} property.</p>
 * @return {Function} 
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.getOnPushMessage = function(){};

/**
 * @method getOnTagDiscovered
 * <p>Gets the value of the {@link Modules.Nfc.NfcAdapter#property-onTagDiscovered onTagDiscovered} property.</p>
 * @return {Callback<NdefDiscovered>} 
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.getOnTagDiscovered = function(){};

/**
 * @method getOnTechDiscovered
 * <p>Gets the value of the {@link Modules.Nfc.NfcAdapter#property-onTechDiscovered onTechDiscovered} property.</p>
 * @return {Callback<NdefDiscovered>} 
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.getOnTechDiscovered = function(){};

/**
 * @method isEnabled
 * <p>Return true if this NFC Adapter has any features enabled.</p>
 * @return {Boolean} 
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.isEnabled = function(){};

/**
 * @method isNdefPushEnabled
 * <p>Return true if the NDEF Push (Android Beam) feature is enabled.</p>
 * @return {Boolean} 
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.isNdefPushEnabled = function(){};

/**
 * @method onNewIntent
 * <p>Processes a new intent received by an application.</p>
 * @description <p>The NFC tag dispatch system will dispatch an intent to your application when it discovers a tag
that matches your application's intent filters. Intents received by your application after it has
started MUST be passed to this method in order to be processed and parsed for processing by your
application. If the intent is recognized as an NFC action, this method will call your
<code>onNdefDiscovered</code>, <code>onTagDiscovered</code>, or <code>onTechDiscovered' callback with the parsed information.
You should add an event listener to the current activity for the</code>newintent` event in your application 
and call this method with the received intent.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>The Android intent received by your application</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.onNewIntent = function(intent){};

/**
 * @method setBeamPushUris
 * <p>Set one or more Uris to send using Android Beam.</p>
 * @description <p>See also
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#setBeamPushUris(android.net.Uri[],%20android.app.Activity)">setBeamPushUris</a></p>
 * @param {String[]} Uris 
 * <p>An array of Uri(s) to push over Android Beam.</p>
 * @return void
 * @platform android 1.2
*/
Modules.Nfc.NfcAdapter.setBeamPushUris = function(Uris){};

/**
 * @method setNdefPushMessage
 * <p>Set a static {@link Module.Nfc.NdefMessage} to send using Android Beam.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#setNdefPushMessage(android.nfc.NdefMessage,%20android.app.Activity,%20android.app.Activity...)">setNdefPushMessage</a></p>
 * @param {Modules.Nfc.NdefMessage} message 
 * <p>An NDEF message to push over NFC, or null to disable.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.setNdefPushMessage = function(message){};

/**
 * @method setOnBeamPushUris
 * <p>Sets the value of the {@link Modules.Nfc.NfcAdapter#property-onBeamPushUris onBeamPushUris} property.</p>
 * @param {Function} onBeamPushUris 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.2
*/
Modules.Nfc.NfcAdapter.setOnBeamPushUris = function(onBeamPushUris){};

/**
 * @method setOnNdefDiscovered
 * <p>Sets the value of the {@link Modules.Nfc.NfcAdapter#property-onNdefDiscovered onNdefDiscovered} property.</p>
 * @param {Function} onNdefDiscovered 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.setOnNdefDiscovered = function(onNdefDiscovered){};

/**
 * @method setOnPushComplete
 * <p>Sets the value of the {@link Modules.Nfc.NfcAdapter#property-onPushComplete onPushComplete} property.</p>
 * @param {Function} onPushComplete 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.setOnPushComplete = function(onPushComplete){};

/**
 * @method setOnPushMessage
 * <p>Sets the value of the {@link Modules.Nfc.NfcAdapter#property-onPushMessage onPushMessage} property.</p>
 * @param {Function} onPushMessage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.setOnPushMessage = function(onPushMessage){};

/**
 * @method setOnTagDiscovered
 * <p>Sets the value of the {@link Modules.Nfc.NfcAdapter#property-onTagDiscovered onTagDiscovered} property.</p>
 * @param {Function} onTagDiscovered 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.setOnTagDiscovered = function(onTagDiscovered){};

/**
 * @method setOnTechDiscovered
 * <p>Sets the value of the {@link Modules.Nfc.NfcAdapter#property-onTechDiscovered onTechDiscovered} property.</p>
 * @param {Function} onTechDiscovered 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.0
*/
Modules.Nfc.NfcAdapter.setOnTechDiscovered = function(onTechDiscovered){};

/**
 * @property onBeamPushUris
 * @type Function
 * @platform android 1.2
 * <p>Callback function used to dynamically generate one or more Uris to send using Android Beam.</p>
 * @description <p>The callback function must return an array of Uri(s) to be pushed.
This method is only available on Android 4.0 (API 16) and above.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#setBeamPushUrisCallback(android.nfc.NfcAdapter.CreateBeamUrisCallback,%20android.app.Activity)">setBeamPushUrisCallback</a></p>
 */
Modules.Nfc.NfcAdapter.onBeamPushUris = null;

/**
 * @property onNdefDiscovered
 * @type Callback<NdefDiscovered>
 * @platform android 1.0
 * <p>Callback function to execute when a tag with NDEF payload is discovered.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#ACTION_NDEF_DISCOVERED">ACTION_NDEF_DISCOVERED</a></p>
 */
Modules.Nfc.NfcAdapter.onNdefDiscovered = null;

/**
 * @property onPushComplete
 * @type Function
 * @platform android 1.0
 * <p>Callback function to execute on successful Android Beam operation.</p>
 * @description <p>This method is only available on Android 4.0 (API 14) and above. </p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#setOnNdefPushCompleteCallback(android.nfc.NfcAdapter.OnNdefPushCompleteCallback,%20android.app.Activity,%20android.app.Activity...)">setOnNdefPushCompleteCallback</a>
in the Android Developer Reference.</p>
 */
Modules.Nfc.NfcAdapter.onPushComplete = null;

/**
 * @property onPushMessage
 * @type Function
 * @platform android 1.0
 * <p>Callback function used to dynamically generated NDEF messsages to send using Android Beam.</p>
 * @description <p>The callback function must return an NDEF message to be used for the Android Beam operation.
This method is only available on Android 4.0 (API 14) and above. </p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback,%20android.app.Activity,%20android.app.Activity...)">setNdefPushMessageCallback</a>
in the Android Developer Reference.</p>
 */
Modules.Nfc.NfcAdapter.onPushMessage = null;

/**
 * @property onTagDiscovered
 * @type Callback<NdefDiscovered>
 * @platform android 1.0
 * <p>Callback function to execute when a tag is discovered.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#ACTION_TAG_DISCOVERED">ACTION_TAG_DISCOVERED</a></p>
 */
Modules.Nfc.NfcAdapter.onTagDiscovered = null;

/**
 * @property onTechDiscovered
 * @type Callback<NdefDiscovered>
 * @platform android 1.0
 * <p>Callback function to execute when a tag is discovered and activities are registered for the specific technologies on the tag.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#ACTION_TECH_DISCOVERED">ACTION_TECH_DISCOVERED</a></p>
 */
Modules.Nfc.NfcAdapter.onTechDiscovered = null;

/**
 * @class Modules.Nfc.NfcForegroundDispatchFilter
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Titanium.Proxy
 * <p>A filter specifying intent, intent filters and technology lists used to match dispatch intents.</p>
 * @description <p>The <enableForegroundDispatch> method is used to give priority to the foreground activity when dispatching
a discovered tag to an application. This proxy is used to specify the intent, intent filters, and technology
lists used to filter the dispatched intents. This proxy automatically creates the required pending intent and
will create an intent for the current activity if one is not provided.</p>
<p>Use the {@link Modules.Nfc#method-createNfcForegroundDispatchFilter} method to create a foreground dispatch filter.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/NfcAdapter.html#enableForegroundDispatch(android.app.Activity,%20android.app.PendingIntent,%20android.content.IntentFilter[],%20java.lang.String[][])">enableForegroundDispatch</a></p>
 * <h3>Example</h3>
 * <h4>Foreground Dispatch filter</h4>
 * <p><p>This example creates a dispatch filter used to filter NDEF messages that are of mime type 'text/plain' or
URI from 'http://www.appcelerator.com'. Additionally, the filter will match tags with the specified
technologies. The dispatch filter is then used when calling the <code>enableForegroundDispatch</code> API of the
{@link Modules.Nfc.NfcAdapter} proxy.</p></p><pre>dispatchFilter = nfc.createNfcForegroundDispatchFilter({
    intentFilters: [
        { action: nfc.ACTION_NDEF_DISCOVERED, mimeType: 'text/plain' },
        { action: nfc.ACTION_NDEF_DISCOVERED, scheme: 'http', host: 'www.appcelerator.com' }
    ],
    techLists: [
        [ "android.nfc.tech.NfcF", "android.nfc.tech.NfcA", "android.nfc.Ndef" ],
        [ "android.nfc.tech.Ndef" ],
        [ "android.nfc.tech.MifareClassic" ],
        [ "android.nfc.tech.NfcA" ]
    ]
});

// All tag scans are received by the activity as a new intent. Each
// scan intent needs to be passed to the nfc adapter for processing.
var act = Ti.Android.currentActivity;
act.addEventListener('newintent', function(e) {
    nfcAdapter.onNewIntent(e.intent);
});

// To enable NFC dispatching only while the application is in the foreground,
// the application must signal the module whenever the application state changes.
act.addEventListener('resume', function(e) {
    nfcAdapter.enableForegroundDispatch(dispatchFilter);
});
act.addEventListener('pause', function(e) {
    nfcAdapter.disableForegroundDispatch();
});</pre>
 */
Modules.Nfc.NfcForegroundDispatchFilter = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.NfcForegroundDispatchFilter.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.NfcForegroundDispatchFilter.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.NfcForegroundDispatchFilter.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.NfcForegroundDispatchFilter.getBubbleParent = function(){};

/**
 * @method getIntent
 * <p>Gets the value of the {@link Modules.Nfc.NfcForegroundDispatchFilter#property-intent intent} property.</p>
 * @return {Titanium.Android.Intent} 
*/
Modules.Nfc.NfcForegroundDispatchFilter.getIntent = function(){};

/**
 * @method getIntentFilters
 * <p>Gets the value of the {@link Modules.Nfc.NfcForegroundDispatchFilter#property-intentFilters intentFilters} property.</p>
 * @return {NfcIntentFilter[]} 
*/
Modules.Nfc.NfcForegroundDispatchFilter.getIntentFilters = function(){};

/**
 * @method getTechLists
 * <p>Gets the value of the {@link Modules.Nfc.NfcForegroundDispatchFilter#property-techLists techLists} property.</p>
 * @return {String[][]} 
*/
Modules.Nfc.NfcForegroundDispatchFilter.getTechLists = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.NfcForegroundDispatchFilter.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.NfcForegroundDispatchFilter.setBubbleParent = function(){};

/**
 * @method setIntent
 * <p>Sets the value of the {@link Modules.Nfc.NfcForegroundDispatchFilter#property-intent intent} property.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NfcForegroundDispatchFilter.setIntent = function(intent){};

/**
 * @method setIntentFilters
 * <p>Sets the value of the {@link Modules.Nfc.NfcForegroundDispatchFilter#property-intentFilters intentFilters} property.</p>
 * @param {NfcIntentFilter[]} intentFilters 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NfcForegroundDispatchFilter.setIntentFilters = function(intentFilters){};

/**
 * @method setTechLists
 * <p>Sets the value of the {@link Modules.Nfc.NfcForegroundDispatchFilter#property-techLists techLists} property.</p>
 * @param {String[][]} techLists 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.NfcForegroundDispatchFilter.setTechLists = function(techLists){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.NfcForegroundDispatchFilter.bubbleParent = null;

/**
 * @property intent
 * @type Titanium.Android.Intent
 * <p>The intent to start the dispatch when matched.</p>
 * @description <p>This optional property allows you to override the default behavior for dispatching the
intent. If an intent is not provided (the default behavior), then an intent based on the current
activity is automatically created with a flag of FLAG_ACTIVITY_SINGLE_TOP.</p>
 */
Modules.Nfc.NfcForegroundDispatchFilter.intent = null;

/**
 * @property intentFilters
 * @type NfcIntentFilter[]
 * <p>The intent filters to override dispatching for, or null to always dispatch.</p>
 */
Modules.Nfc.NfcForegroundDispatchFilter.intentFilters = null;

/**
 * @property techLists
 * @type String[][]
 * <p>The tech lists used to perform matching for dispatching the ACTION_TECH_DISCOVERED intent.</p>
 */
Modules.Nfc.NfcForegroundDispatchFilter.techLists = null;

/**
 * @class Modules.Nfc.NfcTag
 * @typestr Object of Modules.Nfc
 * @platform android 1.0
 * @extends Titanium.Proxy
 * <p>Represents an NFC tag that has been discovered</p>
 */
Modules.Nfc.NfcTag = {};

/**
 * @method getId
 * <p>Returns the tag identifier (if it has one)</p>
 * @return {String} 
*/
Modules.Nfc.NfcTag.getId = function(){};

/**
 * @method getTechList
 * <p>Returns the technologies available in this tag, as fully qualified class names.</p>
 * @return {String[]} 
*/
Modules.Nfc.NfcTag.getTechList = function(){};

/**
 * @property id
 * @type String
 * @readonly
 * <p>Tag identifier (if it has one)</p>
 */
Modules.Nfc.NfcTag.id = null;

/**
 * @property techList
 * @type String[]
 * @readonly
 * <p>Technologies available in this tag, as fully qualified class names.</p>
 */
Modules.Nfc.NfcTag.techList = null;

/**
 * @class Modules.Nfc.TagTechnology
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Titanium.Proxy
 * <p>Represents an interface to a specific tag technology.</p>
 * @description <p>NFC tags are based on a number of independently developed technologies and offer a wide range of
capabilities. The TagTechnology proxies provide access to these different technologies and capabilities.
The TagTechnology proxy is the base type for more type-specific tag technologies. You will
work with the type-specific tag technology proxies which provide capabilities for each tag technology.</p>
<p>Use one of the {@link Modules.Nfc#method-createTagTechnologyIsoDep}, {@link Modules.Nfc#method-createTagTechnologyMifareClassic},
{@link Modules.Nfc#method-createTagTechnologyMifareUltralight}, {@link Modules.Nfc#method-createTagTechnologyNdefFormatable},
{@link Modules.Nfc#method-createTagTechnologyNdef}, {@link Modules.Nfc#method-createTagTechnologyNfcA},
{@link Modules.Nfc#method-createTagTechnologyNfcB}, {@link Modules.Nfc#method-createTagTechnologyNfcF}, {@link Modules.Nfc#method-createTagTechnologyNfcV}
method variants to create a tag technology proxy.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/TagTechnology.html">TagTechnology</a></p>
 * <h3>Example</h3>
 * <h4>Write Ndef Tag</h4>
 * <p><p>This example uses the TECH_NDEF tag technology to write a {@link Modules.Nfc.NdefMessage} message to a tag.</p></p><pre>var tech = nfc.createTagTechnologyNdef({
    tag: scannedTag
});

if (!tech.isValid()) {
    alert("Failed to create Ndef tag type");
    return;
}

// Attempt to write an Ndef record to the tag
try {
    tech.connect();

    // It's possible that the tag is not writable, so we need to check first.
    if (!tech.isWritable()) {
        alert ("Tag is not writable");
    } else {
        // Create a new message to write to the tag
        var date = new Date();
        var textRecord = nfc.createNdefRecordText({
            text: "Titanium NFC module. Tag updated on " + date.toLocaleString() + "!!!"
        });
        var msg = nfc.createNdefMessage({
            records: [ textRecord ]
        });
    
        // Write to the tag
        tech.writeNdefMessage(msg);
    }
} catch (e) {
    alert("Error: " + e.message);
} finally {
    if (tech.isConnected()) {
        tech.close();
    }
}</pre>
 */
Modules.Nfc.TagTechnology = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnology.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnology.applyProperties = function(){};

/**
 * @method close
 * <p>Disable I/O operations to the tag and release resources.</p>
 * @return void
*/
Modules.Nfc.TagTechnology.close = function(){};

/**
 * @method connect
 * <p>Enable I/O operations to the tag.</p>
 * @description <p>Only one Tag Technology proxy can be connected to a Tag at a time.</p>
 * @return void
*/
Modules.Nfc.TagTechnology.connect = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnology.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnology.getBubbleParent = function(){};

/**
 * @method getTag
 * <p>Gets the value of the {@link Modules.Nfc.TagTechnology#property-tag tag} property.</p>
 * @return {Modules.Nfc.NfcTag} 
*/
Modules.Nfc.TagTechnology.getTag = function(){};

/**
 * @method isConnected
 * <p>Returns true if connect has completed, and close has not been called, and the tag is not known to be out of range.</p>
 * @return {Boolean} 
*/
Modules.Nfc.TagTechnology.isConnected = function(){};

/**
 * @method isValid
 * <p>Return true if this tag technology was successfully obtained.</p>
 * @return {Boolean} 
*/
Modules.Nfc.TagTechnology.isValid = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnology.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnology.setBubbleParent = function(){};

/**
 * @method setTag
 * <p>Sets the value of the {@link Modules.Nfc.TagTechnology#property-tag tag} property.</p>
 * @param {Modules.Nfc.NfcTag} tag 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Nfc.TagTechnology.setTag = function(tag){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnology.bubbleParent = null;

/**
 * @property tag
 * @type Modules.Nfc.NfcTag
 * <p>The tag technology that has been discovered.</p>
 * @description <p>When a tag is discovered, a {@link Modules.Nfc.NfcTag} proxy is created and passed as a property to the <code>onNdefDiscovered</code>, <code>onTagDiscovered</code>, or
<code>onTechDiscovered</code> callback (see {@link Modules.Nfc.NfcAdapter.NdefDiscovered}).</p>
 */
Modules.Nfc.TagTechnology.tag = null;

/**
 * @class Modules.Nfc.TagTechnologyIsoDep
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to ISO-DEP (ISO 14443-4) properties and I/O operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyIsoDep} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/IsoDep.html">IsoDep</a></p>
 */
Modules.Nfc.TagTechnologyIsoDep = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyIsoDep.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyIsoDep.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyIsoDep.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyIsoDep.getBubbleParent = function(){};

/**
 * @method getHiLayerResponse
 * <p>Return the higher layer response bytes for NfcB tags.</p>
 * @return {Titanium.Buffer} <p>ISO-DEP historical bytes, or null if this is not a NfcB tag.</p>
*/
Modules.Nfc.TagTechnologyIsoDep.getHiLayerResponse = function(){};

/**
 * @method getHistoricalBytes
 * <p>Return the ISO-DEP historical bytes for NfcA tags.</p>
 * @return {Titanium.Buffer} <p>ISO-DEP historical bytes, or null if this is not a NfcA tag.</p>
*/
Modules.Nfc.TagTechnologyIsoDep.getHistoricalBytes = function(){};

/**
 * @method getMaxTransceiveLength
 * <p>Return the maximum number of bytes that can be sent with <code>transceive</code>.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyIsoDep.getMaxTransceiveLength = function(){};

/**
 * @method getTimeout
 * <p>Get the current timeout for <code>transceive</code> in milliseconds.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyIsoDep.getTimeout = function(){};

/**
 * @method isExtendedLengthApduSupported
 * <p>Whether the NFC adapter on this device supports extended length APDUs.</p>
 * @return {Boolean} 
*/
Modules.Nfc.TagTechnologyIsoDep.isExtendedLengthApduSupported = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyIsoDep.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyIsoDep.setBubbleParent = function(){};

/**
 * @method setTimeout
 * <p>Set the timeout of <code>transceive</code> in milliseconds.</p>
 * @param {Number} timeout 
 * <p>Timeout value in milliseconds</p>
 * @return void
*/
Modules.Nfc.TagTechnologyIsoDep.setTimeout = function(timeout){};

/**
 * @method transceive
 * <p>Send raw ISO-DEP data to the tag and receive the response.</p>
 * @param {Titanium.Buffer} data 
 * <p>Bytes to send.</p>
 * @return {Titanium.Buffer} <p>Response bytes received.</p>
*/
Modules.Nfc.TagTechnologyIsoDep.transceive = function(data){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyIsoDep.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyMifareClassic
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to MIFARE Classic properties and I/O operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyMifareClassic} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/MifareClassic.html">MifareClassic</a></p>
 */
Modules.Nfc.TagTechnologyMifareClassic = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyMifareClassic.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyMifareClassic.applyProperties = function(){};

/**
 * @method authenticateSectorWithKeyA
 * <p>Authenticate a sector with key A.</p>
 * @param {Number} sectorIndex 
 * <p>Index of sector to authenticate, starting from 0.</p>
 * @param {Titanium.Buffer} key 
 * <p>6-byte authentication key.</p>
 * @return {Boolean} <p>Returns true on success, false on authentication failure.</p>
*/
Modules.Nfc.TagTechnologyMifareClassic.authenticateSectorWithKeyA = function(sectorIndex, key){};

/**
 * @method authenticateSectorWithKeyB
 * <p>Authenticate a sector with key B.</p>
 * @param {Number} sectorIndex 
 * <p>Index of sector to authenticate, starting from 0.</p>
 * @param {Titanium.Buffer} key 
 * <p>6-byte authentication key.</p>
 * @return {Boolean} <p>Returns true on success, false on authentication failure.</p>
*/
Modules.Nfc.TagTechnologyMifareClassic.authenticateSectorWithKeyB = function(sectorIndex, key){};

/**
 * @method blockToSector
 * <p>Return the sector that contains a given block.</p>
 * @param {Number} blockIndex 
 * <p>Index of block to lookup, starting from 0.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.blockToSector = function(blockIndex){};

/**
 * @method decrement
 * <p>Decrement a value block, storing the result in the temporary block on the tag.</p>
 * @param {Number} blockIndex 
 * <p>Index of block to decrement, starting from 0.</p>
 * @param {Number} value 
 * <p>Non-negative to decrement by.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareClassic.decrement = function(blockIndex, value){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareClassic.fireEvent = function(){};

/**
 * @method getBlockCount
 * <p>Return the total number of MIFARE Classic blocks.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.getBlockCount = function(){};

/**
 * @method getBlockCountInSector
 * <p>Return the number of blocks in the given sector.</p>
 * @param {Number} sectorIndex 
 * <p>Index of sector, starting from 0.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.getBlockCountInSector = function(sectorIndex){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareClassic.getBubbleParent = function(){};

/**
 * @method getMaxTransceiveLength
 * <p>Return the maximum number of bytes that can be sent with <code>transceive</code>.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.getMaxTransceiveLength = function(){};

/**
 * @method getSectorCount
 * <p>Return the number of MIFARE Classic sectors.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.getSectorCount = function(){};

/**
 * @method getSize
 * <p>Return the size of the tag in bytes.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.getSize = function(){};

/**
 * @method getTimeout
 * <p>Get the current <code>transceive</code> timeout in milliseconds.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.getTimeout = function(){};

/**
 * @method getType
 * <p>Return the type of this MIFARE Classic compatible tag.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.getType = function(){};

/**
 * @method increment
 * <p>Increment a value block, storing the result in the temporary block on the tag.</p>
 * @param {Number} blockIndex 
 * <p>Index of block to increment, starting from 0.</p>
 * @param {Number} value 
 * <p>Non-negative to increment by.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareClassic.increment = function(blockIndex, value){};

/**
 * @method readBlock
 * <p>Read 16-byte block.</p>
 * @param {Number} blockIndex 
 * <p>Index of block to read, starting from 0.</p>
 * @return {Titanium.Buffer} <p>16 byte block.</p>
*/
Modules.Nfc.TagTechnologyMifareClassic.readBlock = function(blockIndex){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyMifareClassic.removeEventListener = function(){};

/**
 * @method restore
 * <p>Copy from a value block to the temporary block.</p>
 * @param {Number} blockIndex 
 * <p>Index of block to copy from.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareClassic.restore = function(blockIndex){};

/**
 * @method sectorToBlock
 * <p>Return the first block of a given sector.</p>
 * @param {Number} sectorIndex 
 * <p>Index of sector to lookup, starting from 0.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareClassic.sectorToBlock = function(sectorIndex){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareClassic.setBubbleParent = function(){};

/**
 * @method setTimeout
 * <p>Set the <code>transceive</code> timeout in milliseconds.</p>
 * @param {Number} timeout 
 * <p>Timeout value in milliseconds.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareClassic.setTimeout = function(timeout){};

/**
 * @method transceive
 * <p>Send raw NfcA data to the tag and receive the response.</p>
 * @param {Titanium.Buffer} data 
 * <p>Bytes to send.</p>
 * @return {Titanium.Buffer} <p>Response bytes received.</p>
*/
Modules.Nfc.TagTechnologyMifareClassic.transceive = function(data){};

/**
 * @method transfer
 * <p>Copy from the temporary block to a value block.</p>
 * @param {Number} blockIndex 
 * <p>Index of block to copy to.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareClassic.transfer = function(blockIndex){};

/**
 * @method writeBlock
 * <p>Write 16-byte block.</p>
 * @param {Number} blockIndex 
 * <p>Index of block to write, starting from 0.</p>
 * @param {Titanium.Buffer} data 
 * <p>16 bytes of data to write.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareClassic.writeBlock = function(blockIndex, data){};

/**
 * @property KEY_DEFAULT
 * @type Titanium.Buffer
 * @readonly
 * <p>The default factory key.</p>
 */
Modules.Nfc.TagTechnologyMifareClassic.KEY_DEFAULT = null;

/**
 * @property KEY_MIFARE_APPLICATION_DIRECTORY
 * @type Titanium.Buffer
 * @readonly
 * <p>The well-known key for tags formatted according to the MIFARE Application Directory (MAD) specification.</p>
 */
Modules.Nfc.TagTechnologyMifareClassic.KEY_MIFARE_APPLICATION_DIRECTORY = null;

/**
 * @property KEY_NFC_FORUM
 * @type Titanium.Buffer
 * @readonly
 * <p>The well-known key for tags formatted according to the NDEF on MIFARE Classic specification.</p>
 */
Modules.Nfc.TagTechnologyMifareClassic.KEY_NFC_FORUM = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareClassic.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyMifareUltralight
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to MIFARE Ultralight properties and I/O operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyMifareUltralight} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html">MifareUltralight</a></p>
 */
Modules.Nfc.TagTechnologyMifareUltralight = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyMifareUltralight.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyMifareUltralight.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareUltralight.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareUltralight.getBubbleParent = function(){};

/**
 * @method getMaxTransceiveLength
 * <p>Return the maximum number of bytes that can be sent with <code>transceive</code>.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareUltralight.getMaxTransceiveLength = function(){};

/**
 * @method getTimeout
 * <p>Get the current <code>transceive</code> timeout in milliseconds.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareUltralight.getTimeout = function(){};

/**
 * @method getType
 * <p>Return the MIFARE Ultralight type of the tag.</p>
 * @description <p>One of MIFARE_ULTRALIGHT_TYPE_ULTRALIGHT, MIFARE_ULTRALIGHT_TYPE_ULTRALIGHT_C, or MIFARE_ULTRALIGHT_TYPE_UNKNOWN.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyMifareUltralight.getType = function(){};

/**
 * @method readPages
 * <p>Read 4 pages (16 bytes).</p>
 * @param {Number} pageOffset 
 * <p>Index of first page to read, starting from 0.</p>
 * @return {Titanium.Buffer} <p>4 pages (16 bytes)</p>
*/
Modules.Nfc.TagTechnologyMifareUltralight.readPages = function(pageOffset){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyMifareUltralight.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareUltralight.setBubbleParent = function(){};

/**
 * @method setTimeout
 * <p>Set the <code>transceive</code> timeout in milliseconds.</p>
 * @param {Number} timeout 
 * <p>Timeout value in milliseconds.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareUltralight.setTimeout = function(timeout){};

/**
 * @method transceive
 * <p>Send raw NfcA data to the tag and receive the response.</p>
 * @param {Titanium.Buffer} data 
 * <p>Bytes to send.</p>
 * @return {Titanium.Buffer} <p>Response bytes received.</p>
*/
Modules.Nfc.TagTechnologyMifareUltralight.transceive = function(data){};

/**
 * @method writePage
 * <p>Write 1 page (4 bytes).</p>
 * @param {Number} pageOffset 
 * <p>Index of page to write, starting from 0.</p>
 * @param {Titanium.Buffer} data 
 * <p>4 bytes to write.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyMifareUltralight.writePage = function(pageOffset, data){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyMifareUltralight.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyNdef
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to NDEF content and operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyNdef} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/Ndef.html">Ndef</a></p>
 */
Modules.Nfc.TagTechnologyNdef = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNdef.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyNdef.applyProperties = function(){};

/**
 * @method canMakeReadOnly
 * <p>Indicates whether a tag can be made read-only with <code>makeReadOnly</code>.</p>
 * @return {Boolean} <p>true if it is possible to make this tag read-only.</p>
*/
Modules.Nfc.TagTechnologyNdef.canMakeReadOnly = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyNdef.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNdef.getBubbleParent = function(){};

/**
 * @method getCachedNdefMessage
 * <p>Get the {@link Modules.Nfc.NdefMessage} that was read from the tag at discovery time.</p>
 * @return {Modules.Nfc.NdefMessage} <p>NDEF Message read from the tag at discovery time, can be null.</p>
*/
Modules.Nfc.TagTechnologyNdef.getCachedNdefMessage = function(){};

/**
 * @method getMaxSize
 * <p>Get the maximum NDEF message size in bytes.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNdef.getMaxSize = function(){};

/**
 * @method getNdefMessage
 * <p>Read the current {@link Modules.Nfc.NdefMessage} on this tag.</p>
 * @return {Modules.Nfc.NdefMessage} <p>The NDEF Message, can be null.</p>
*/
Modules.Nfc.TagTechnologyNdef.getNdefMessage = function(){};

/**
 * @method getType
 * <p>Get the NDEF tag type.</p>
 * @description <p>One of TAG_TYPE_NFC_FORUM_TYPE_1, TAG_TYPE_NFC_FORUM_TYPE_2, TAG_TYPE_NFC_FORUM_TYPE_3,
TAG_TYPE_NFC_FORUM_TYPE_4, TAG_TYPE_MIFARE_CLASSIC, or another NDEF tag type that has not
yet been formalized in the Android API.</p>
 * @return {String} 
*/
Modules.Nfc.TagTechnologyNdef.getType = function(){};

/**
 * @method isWritable
 * <p>Determine if the tag is writable.</p>
 * @return {Boolean} <p>true if the tag is writable.</p>
*/
Modules.Nfc.TagTechnologyNdef.isWritable = function(){};

/**
 * @method makeReadOnly
 * <p>Make a tag read-only.</p>
 * @return {Boolean} <p>true on success, false if it is not possible to make this tag read-only.</p>
*/
Modules.Nfc.TagTechnologyNdef.makeReadOnly = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNdef.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNdef.setBubbleParent = function(){};

/**
 * @method writeNdefMessage
 * <p>Overwrite the {@link Modules.Nfc.NdefMessage} on this tag.</p>
 * @param {Modules.Nfc.NdefMessage} message 
 * <p>The {@link Modules.Nfc.NdefMessage} to write</p>
 * @return void
*/
Modules.Nfc.TagTechnologyNdef.writeNdefMessage = function(message){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNdef.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyNdefFormatable
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provide access to NDEF format operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyNdefFormatable} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/NdefFormatable.html">NdefFormatable</a></p>
 */
Modules.Nfc.TagTechnologyNdefFormatable = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNdefFormatable.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyNdefFormatable.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyNdefFormatable.fireEvent = function(){};

/**
 * @method format
 * <p>Format a tag as NDEF, and write a {@link Modules.Nfc.NdefMessage}.</p>
 * @param {Modules.Nfc.NdefMessage} message 
 * <p>The NDEF message to write after formatting, can be null.</p>
 * @return void
*/
Modules.Nfc.TagTechnologyNdefFormatable.format = function(message){};

/**
 * @method formatReadOnly
 * <p>Formats a tag as NDEF, write a {@link Modules.Nfc.NdefMessage}, and make read-only.</p>
 * @param {Modules.Nfc.NdefMessage} message 
 * <p>The NDEF message to write after formatting</p>
 * @return void
*/
Modules.Nfc.TagTechnologyNdefFormatable.formatReadOnly = function(message){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNdefFormatable.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNdefFormatable.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNdefFormatable.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNdefFormatable.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyNfcA
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to NFC-A (ISO 14443-3A) properties and I/O operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyNfcA} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/NfcA.html">NfcA</a></p>
 */
Modules.Nfc.TagTechnologyNfcA = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcA.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyNfcA.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcA.fireEvent = function(){};

/**
 * @method getAtqa
 * <p>Return the ATQA/SENS_RES bytes from tag discovery.</p>
 * @return {Titanium.Buffer} <p>ATQA/SENS_RES bytes.</p>
*/
Modules.Nfc.TagTechnologyNfcA.getAtqa = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcA.getBubbleParent = function(){};

/**
 * @method getMaxTransceiveLength
 * <p>Return the maximum number of bytes that can be sent with <code>transceive</code>.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNfcA.getMaxTransceiveLength = function(){};

/**
 * @method getSak
 * <p>Return the SAK/SEL_RES bytes from tag discovery.</p>
 * @return {Number} <p>SAK bytes.</p>
*/
Modules.Nfc.TagTechnologyNfcA.getSak = function(){};

/**
 * @method getTimeout
 * <p>Get the current <code>transceive</code> timeout in milliseconds.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNfcA.getTimeout = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcA.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcA.setBubbleParent = function(){};

/**
 * @method setTimeout
 * <p>Set the timeout of <code>transceive</code> in milliseconds.</p>
 * @param {Number} timeout 
 * <p>Timeout value in milliseconds</p>
 * @return void
*/
Modules.Nfc.TagTechnologyNfcA.setTimeout = function(timeout){};

/**
 * @method transceive
 * <p>Send raw NFC-A commands to the tag and receive the response.</p>
 * @param {Titanium.Buffer} data 
 * <p>Bytes to send.</p>
 * @return {Titanium.Buffer} <p>Response bytes received.</p>
*/
Modules.Nfc.TagTechnologyNfcA.transceive = function(data){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcA.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyNfcB
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to NFC-B (ISO 14443-3B) properties and I/O operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyNfcB} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/NfcB.html">NfcB</a></p>
 */
Modules.Nfc.TagTechnologyNfcB = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcB.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyNfcB.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcB.fireEvent = function(){};

/**
 * @method getApplicationData
 * <p>Return the Application Data bytes from ATQB/SENSB_RES at tag discovery.</p>
 * @return {Titanium.Buffer} <p>Application Data bytes from ATQB/SENSB_RES bytes</p>
*/
Modules.Nfc.TagTechnologyNfcB.getApplicationData = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcB.getBubbleParent = function(){};

/**
 * @method getMaxTransceiveLength
 * <p>Return the maximum number of bytes that can be sent with <code>transceive</code>.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNfcB.getMaxTransceiveLength = function(){};

/**
 * @method getProtocolInfo
 * <p>Return the Protocol Info bytes from ATQB/SENSB_RES at tag discovery.</p>
 * @return {Titanium.Buffer} <p>Protocol Info bytes from ATQB/SENSB_RES bytes.</p>
*/
Modules.Nfc.TagTechnologyNfcB.getProtocolInfo = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcB.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcB.setBubbleParent = function(){};

/**
 * @method transceive
 * <p>Send raw NFC-B commands to the tag and receive the response.</p>
 * @param {Titanium.Buffer} data 
 * <p>Bytes to send.</p>
 * @return {Titanium.Buffer} <p>Response bytes received.</p>
*/
Modules.Nfc.TagTechnologyNfcB.transceive = function(data){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcB.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyNfcF
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to NFC-F (JIS 6319-4) properties and I/O operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyNfcF} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/NfcF.html">NfcF</a></p>
 */
Modules.Nfc.TagTechnologyNfcF = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcF.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyNfcF.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcF.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcF.getBubbleParent = function(){};

/**
 * @method getManufacturer
 * <p>Return the Manufacturer bytes from tag discovery.</p>
 * @return {Titanium.Buffer} <p>Manufacturer bytes.</p>
*/
Modules.Nfc.TagTechnologyNfcF.getManufacturer = function(){};

/**
 * @method getMaxTransceiveLength
 * <p>Return the maximum number of bytes that can be sent with <code>transceive</code>.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNfcF.getMaxTransceiveLength = function(){};

/**
 * @method getSystemCode
 * <p>Return the System Code bytes from tag discovery.</p>
 * @return {Titanium.Buffer} <p>System Code bytes.</p>
*/
Modules.Nfc.TagTechnologyNfcF.getSystemCode = function(){};

/**
 * @method getTimeout
 * <p>Get the current <code>transceive</code> timeout in milliseconds.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNfcF.getTimeout = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcF.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcF.setBubbleParent = function(){};

/**
 * @method setTimeout
 * <p>Set the timeout of <code>transceive</code> in milliseconds.</p>
 * @param {Number} timeout 
 * <p>Timeout value in milliseconds</p>
 * @return void
*/
Modules.Nfc.TagTechnologyNfcF.setTimeout = function(timeout){};

/**
 * @method transceive
 * <p>Send raw NFC-F commands to the tag and receive the response.</p>
 * @param {Titanium.Buffer} data 
 * <p>Bytes to send.</p>
 * @return {Titanium.Buffer} <p>Response bytes received.</p>
*/
Modules.Nfc.TagTechnologyNfcF.transceive = function(data){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcF.bubbleParent = null;

/**
 * @class Modules.Nfc.TagTechnologyNfcV
 * @typestr Object of Modules.Nfc
 * @platform android 1.1
 * @extends Modules.Nfc.TagTechnology
 * <p>Provides access to NFC-V (ISO 15693) properties and I/O operations on a {@link Modules.Nfc.NfcTag}.</p>
 * @description <p>Use the {@link Modules.Nfc#method-createTagTechnologyNfcV} method to create this tag technology.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/nfc/tech/NfcV.html">NfcV</a></p>
 */
Modules.Nfc.TagTechnologyNfcV = {};

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcV.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.TagTechnologyNfcV.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcV.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcV.getBubbleParent = function(){};

/**
 * @method getDsfId
 * <p>Return the DSF ID bytes from tag discovery.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNfcV.getDsfId = function(){};

/**
 * @method getMaxTransceiveLength
 * <p>Return the maximum number of bytes that can be sent with <code>transceive</code>.</p>
 * @return {Number} 
*/
Modules.Nfc.TagTechnologyNfcV.getMaxTransceiveLength = function(){};

/**
 * @method getResponseFlags
 * <p>Return the Response Flag bytes from tag discovery.</p>
 * @return {Number} <p>Response Flag bytes.</p>
*/
Modules.Nfc.TagTechnologyNfcV.getResponseFlags = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.TagTechnologyNfcV.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcV.setBubbleParent = function(){};

/**
 * @method transceive
 * <p>Send raw NFC-V commands to the tag and receive the response.</p>
 * @param {Titanium.Buffer} data 
 * <p>Bytes to send.</p>
 * @return {Titanium.Buffer} <p>Response bytes received.</p>
*/
Modules.Nfc.TagTechnologyNfcV.transceive = function(data){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.TagTechnologyNfcV.bubbleParent = null;

/**
 * @method addEventListener 
 * @hide
*/Modules.Nfc.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Modules.Nfc.applyProperties = function(){};

/**
 * @method createNdefMessage
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefMessage}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefMessage} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefMessage} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefMessage = function(parameters){};

/**
 * @method createNdefRecordApplication
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordApplication}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordApplication} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordApplication} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordApplication = function(parameters){};

/**
 * @method createNdefRecordEmpty
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordEmpty}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordEmpty} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordEmpty} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordEmpty = function(parameters){};

/**
 * @method createNdefRecordExternal
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordExternal}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordExternal} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordExternal} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordExternal = function(parameters){};

/**
 * @method createNdefRecordMedia
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordMedia}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordMedia} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordMedia} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordMedia = function(parameters){};

/**
 * @method createNdefRecordSmartPoster
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordSmartPoster}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordSmartPoster} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordSmartPoster} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordSmartPoster = function(parameters){};

/**
 * @method createNdefRecordText
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordText}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordText} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordText} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordText = function(parameters){};

/**
 * @method createNdefRecordUnknown
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordUnknown}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordUnknown} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordUnknown} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordUnknown = function(parameters){};

/**
 * @method createNdefRecordUri
 * <p>Creates and returns an instance of {@link Modules.Nfc.NdefRecordUri}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NdefRecordUri} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NdefRecordUri} 
 * @platform android 1.0
*/
Modules.Nfc.createNdefRecordUri = function(parameters){};

/**
 * @method createNfcAdapter
 * <p>Creates and returns an instance of {@link Modules.Nfc.NfcAdapter}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NfcAdapter} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NfcAdapter} 
 * @platform android 1.0
*/
Modules.Nfc.createNfcAdapter = function(parameters){};

/**
 * @method createNfcForegroundDispatchFilter
 * <p>Creates and returns an instance of {@link Modules.Nfc.NfcForegroundDispatchFilter}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.NfcForegroundDispatchFilter} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.NfcForegroundDispatchFilter} 
 * @platform android 1.0
*/
Modules.Nfc.createNfcForegroundDispatchFilter = function(parameters){};

/**
 * @method createTagTechnologyIsoDep
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyIsoDep}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyIsoDep} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyIsoDep} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyIsoDep = function(parameters){};

/**
 * @method createTagTechnologyMifareClassic
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyMifareClassic}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyMifareClassic} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyMifareClassic} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyMifareClassic = function(parameters){};

/**
 * @method createTagTechnologyMifareUltralight
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyMifareUltralight}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyMifareUltralight} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyMifareUltralight} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyMifareUltralight = function(parameters){};

/**
 * @method createTagTechnologyNdef
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyNdef}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyNdef} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyNdef} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyNdef = function(parameters){};

/**
 * @method createTagTechnologyNdefFormatable
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyNdefFormatable}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyNdefFormatable} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyNdefFormatable} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyNdefFormatable = function(parameters){};

/**
 * @method createTagTechnologyNfcA
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyNfcA}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyNfcA} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyNfcA} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyNfcA = function(parameters){};

/**
 * @method createTagTechnologyNfcB
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyNfcB}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyNfcB} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyNfcB} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyNfcB = function(parameters){};

/**
 * @method createTagTechnologyNfcF
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyNfcF}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyNfcF} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyNfcF} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyNfcF = function(parameters){};

/**
 * @method createTagTechnologyNfcV
 * <p>Creates and returns an instance of {@link Modules.Nfc.TagTechnologyNfcV}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Nfc.TagTechnologyNfcV} except those marked not-creation or read-only.</p>
 * @return {Modules.Nfc.TagTechnologyNfcV} 
 * @platform android 1.1
*/
Modules.Nfc.createTagTechnologyNfcV = function(parameters){};

/**
 * @method fireEvent 
 * @hide
*/Modules.Nfc.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Nfc.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Modules.Nfc.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Nfc.setBubbleParent = function(){};

/**
 * @property ACTION_NDEF_DISCOVERED
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Intent to start an activity when a tag with NDEF payload is discovered.</p>
 */
Modules.Nfc.ACTION_NDEF_DISCOVERED = null;

/**
 * @property ACTION_TAG_DISCOVERED
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Intent to start an activity when a tag is discovered.</p>
 */
Modules.Nfc.ACTION_TAG_DISCOVERED = null;

/**
 * @property ACTION_TECH_DISCOVERED
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Intent to start an activity when a tag is discovered and activities are registered for the specific technologies on the tag.</p>
 */
Modules.Nfc.ACTION_TECH_DISCOVERED = null;

/**
 * @property ENCODING_UTF16
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
Indicates UTF-16 text encoding.</p>
 */
Modules.Nfc.ENCODING_UTF16 = null;

/**
 * @property ENCODING_UTF8
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
Indicates UTF-8 text encoding.</p>
 */
Modules.Nfc.ENCODING_UTF8 = null;

/**
 * @property MIFARE_BLOCK_SIZE
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
Size of a MIFARE CLassic block (in bytes).</p>
 */
Modules.Nfc.MIFARE_BLOCK_SIZE = null;

/**
 * @property MIFARE_SIZE_1K
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
Tag contains 16 sectors, each with 4 blocks.</p>
 */
Modules.Nfc.MIFARE_SIZE_1K = null;

/**
 * @property MIFARE_SIZE_2K
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
Tag contains 32 sectors, each with 4 blocks.</p>
 */
Modules.Nfc.MIFARE_SIZE_2K = null;

/**
 * @property MIFARE_SIZE_4K
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
Tag contains 40 sectors.</p>
 */
Modules.Nfc.MIFARE_SIZE_4K = null;

/**
 * @property MIFARE_SIZE_MINI
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
Tag contains 5 sectors, each with 4 blocks.</p>
 */
Modules.Nfc.MIFARE_SIZE_MINI = null;

/**
 * @property MIFARE_TAG_TYPE_CLASSIC
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
A MIFARE Classic tag.</p>
 */
Modules.Nfc.MIFARE_TAG_TYPE_CLASSIC = null;

/**
 * @property MIFARE_TAG_TYPE_PLUS
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
A MIFARE Plus tag.</p>
 */
Modules.Nfc.MIFARE_TAG_TYPE_PLUS = null;

/**
 * @property MIFARE_TAG_TYPE_PRO
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
A MIFARE Pro tag.</p>
 */
Modules.Nfc.MIFARE_TAG_TYPE_PRO = null;

/**
 * @property MIFARE_TAG_TYPE_UNKNOWN
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_CLASSIC tag technology.
A MIFARE Classic compatible card of unknown type.</p>
 */
Modules.Nfc.MIFARE_TAG_TYPE_UNKNOWN = null;

/**
 * @property MIFARE_ULTRALIGHT_PAGE_SIZE
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_ULTRALIGHT tag technology.
Size of a MIFARE Ultralight page (in bytes).</p>
 */
Modules.Nfc.MIFARE_ULTRALIGHT_PAGE_SIZE = null;

/**
 * @property MIFARE_ULTRALIGHT_TYPE_ULTRALIGHT
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_ULTRALIGHT tag technology.
A MIFARE Ultralight tag.</p>
 */
Modules.Nfc.MIFARE_ULTRALIGHT_TYPE_ULTRALIGHT = null;

/**
 * @property MIFARE_ULTRALIGHT_TYPE_ULTRALIGHT_C
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_ULTRALIGHT tag technology.
A MIFARE Ultralight C tag.</p>
 */
Modules.Nfc.MIFARE_ULTRALIGHT_TYPE_ULTRALIGHT_C = null;

/**
 * @property MIFARE_ULTRALIGHT_TYPE_UNKNOWN
 * @type Number
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_MIFARE_ULTRALIGHT tag technology.
A MIFARE Ultralight compatible tag of unknown type.</p>
 */
Modules.Nfc.MIFARE_ULTRALIGHT_TYPE_UNKNOWN = null;

/**
 * @property RECOMMENDED_ACTION_DO_ACTION
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with NdefSmartPoster records (RTD_SMART_POSTER).</p>
 */
Modules.Nfc.RECOMMENDED_ACTION_DO_ACTION = null;

/**
 * @property RECOMMENDED_ACTION_OPEN_FOR_EDITING
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with NdefSmartPoster records (RTD_SMART_POSTER).</p>
 */
Modules.Nfc.RECOMMENDED_ACTION_OPEN_FOR_EDITING = null;

/**
 * @property RECOMMENDED_ACTION_SAVE_FOR_LATER
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with NdefSmartPoster records (RTD_SMART_POSTER).</p>
 */
Modules.Nfc.RECOMMENDED_ACTION_SAVE_FOR_LATER = null;

/**
 * @property RECOMMENDED_ACTION_UNKNOWN
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with NdefSmartPoster records (RTD_SMART_POSTER).</p>
 */
Modules.Nfc.RECOMMENDED_ACTION_UNKNOWN = null;

/**
 * @property RTD_ALTERNATIVE_CARRIER
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
RTD Alternative Carrier type. For use with TNF_WELL_KNOWN.</p>
 */
Modules.Nfc.RTD_ALTERNATIVE_CARRIER = null;

/**
 * @property RTD_HANDOVER_CARRIER
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
RTD Handover Carrier type. For use with TNF_WELL_KNOWN.</p>
 */
Modules.Nfc.RTD_HANDOVER_CARRIER = null;

/**
 * @property RTD_HANDOVER_REQUEST
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
RTD Handover Request type. For use with TNF_WELL_KNOWN.</p>
 */
Modules.Nfc.RTD_HANDOVER_REQUEST = null;

/**
 * @property RTD_HANDOVER_SELECT
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
RTD Handover Select type. For use with TNF_WELL_KNOWN.</p>
 */
Modules.Nfc.RTD_HANDOVER_SELECT = null;

/**
 * @property RTD_SMART_POSTER
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
RTD Smart Poster type. For use with TNF_WELL_KNOWN.</p>
 */
Modules.Nfc.RTD_SMART_POSTER = null;

/**
 * @property RTD_TEXT
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
RTD Text type. For use with TNF_WELL_KNOWN.</p>
 */
Modules.Nfc.RTD_TEXT = null;

/**
 * @property RTD_URI
 * @type String
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
RTD URI type. For use with TNF_WELL_KNOWN.</p>
 */
Modules.Nfc.RTD_URI = null;

/**
 * @property TAG_TYPE_MIFARE_CLASSIC
 * @type String
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_NDEF tag technology.
NDEF on MIFARE Classic.</p>
 */
Modules.Nfc.TAG_TYPE_MIFARE_CLASSIC = null;

/**
 * @property TAG_TYPE_NFC_FORUM_TYPE_1
 * @type String
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_NDEF tag technology.
NFC Forum Tag Type 1.</p>
 */
Modules.Nfc.TAG_TYPE_NFC_FORUM_TYPE_1 = null;

/**
 * @property TAG_TYPE_NFC_FORUM_TYPE_2
 * @type String
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_NDEF tag technology.
NFC Forum Tag Type 2.</p>
 */
Modules.Nfc.TAG_TYPE_NFC_FORUM_TYPE_2 = null;

/**
 * @property TAG_TYPE_NFC_FORUM_TYPE_3
 * @type String
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_NDEF tag technology.
NFC Forum Tag Type 3.</p>
 */
Modules.Nfc.TAG_TYPE_NFC_FORUM_TYPE_3 = null;

/**
 * @property TAG_TYPE_NFC_FORUM_TYPE_4
 * @type String
 * @readonly
 * @platform android 1.1
 * <p>Used with TECH_NDEF tag technology.
NFC Forum Tag Type 4.</p>
 */
Modules.Nfc.TAG_TYPE_NFC_FORUM_TYPE_4 = null;

/**
 * @property TECH_ISODEP
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_ISODEP = null;

/**
 * @property TECH_MIFARE_CLASSIC
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_MIFARE_CLASSIC = null;

/**
 * @property TECH_MIFARE_ULTRALIGHT
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_MIFARE_ULTRALIGHT = null;

/**
 * @property TECH_NDEF
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_NDEF = null;

/**
 * @property TECH_NDEFFORMATABLE
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_NDEFFORMATABLE = null;

/**
 * @property TECH_NFCA
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_NFCA = null;

/**
 * @property TECH_NFCB
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_NFCB = null;

/**
 * @property TECH_NFCF
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_NFCF = null;

/**
 * @property TECH_NFCV
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Available tag technology used with getTechList and AdapterProxy.</p>
 */
Modules.Nfc.TECH_NFCV = null;

/**
 * @property TNF_ABSOLUTE_URI
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.
Indicates the type field contains an absolute-URI BNF construct defined by RFC 3986.</p>
 */
Modules.Nfc.TNF_ABSOLUTE_URI = null;

/**
 * @property TNF_EMPTY
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.
Indicates the record is empty.</p>
 */
Modules.Nfc.TNF_EMPTY = null;

/**
 * @property TNF_EXTERNAL_TYPE
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.
Indicates the type field contains an external type name.</p>
 */
Modules.Nfc.TNF_EXTERNAL_TYPE = null;

/**
 * @property TNF_MIME_MEDIA
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
Indicates the type field contains a media-type BNF construct, defined by RFC 2046.</p>
 */
Modules.Nfc.TNF_MIME_MEDIA = null;

/**
 * @property TNF_UNCHANGED
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
Indicates the payload is an intermediate or final chunk of a chunked NDEF Record.</p>
 */
Modules.Nfc.TNF_UNCHANGED = null;

/**
 * @property TNF_UNKNOWN
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
Indicates the payload type is unknown.</p>
 */
Modules.Nfc.TNF_UNKNOWN = null;

/**
 * @property TNF_WELL_KNOWN
 * @type Number
 * @readonly
 * @platform android 1.0
 * <p>Used with ndefRecord records.  <br />
Indicates the type field contains a well-known RTD type name.</p>
 */
Modules.Nfc.TNF_WELL_KNOWN = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Nfc.bubbleParent = null;

/**
 * @class Modules.Tizen
 * @typestr Submodule of Modules
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The mine module of Tizen Web Device API</p>
 * @description <p>This is the Tizen root interface.</p>
 * <h3>Example</h3>
 * <h4>Attribute filter</h4>
 * <p><p>Use an attribute filter to remove a message from the message store.</p></p><pre>// folderId and emailService must be initialized to valid values

var Tizen = require('tizen'),
    attributeFilter = Tizen.createAttributeFilter({
        attributeName: 'folderId',
        matchFlag: Tizen.FILTER_MATCH_FLAG_EXACTLY,
        matchValue: folderId
    });

function messagesFoundCB(response) {
    if (response.success) {
        console.log('Message removed successfully.');
    }
    else {
        console.log('Failed to remove message.');
    }
}

// Remove selected message
emailService.messageStorage.findMessages(attributeFilter, messagesFoundCB);</pre>
 */
Modules.Tizen = {};

/**
 * @class Modules.Tizen.AbstractFilter
 * @typestr Object of Modules.Tizen
 * @extends Titanium.Proxy
 * <p>AbstractFilter is a common interface used by different types of object filters.</p>
 * @description <p>Never use this base interface directly, instead use AbstractFilter subtypes, such as 
AttributeFilter, AttributeRangeFilter, and CompositeFilter.</p>
 */
Modules.Tizen.AbstractFilter = {};

/**
 * @class Modules.Tizen.Alarm
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This API provides the functionality for setting and unsetting of alarms.</p>
 * <h3>Example</h3>
 * <h4>Relative alarm</h4>
 * <p><p>This example creates and adds a relative alarm. The clock app will show up periodically.</p></p><pre>var Tizen = require('tizen');

var alarm = Tizen.Alarm.createAlarmRelative({
        delay: 0, 
        period: 1800
    }),
    
Tizen.Alarm.add(alarm, 'org.tizen.clock'); </pre>
 */
Modules.Tizen.Alarm = {};

/**
 * @class Modules.Tizen.Alarm.Alarm
 * @typestr Object of Modules.Tizen.Alarm
 * @extends Titanium.Proxy
 * <p>This interface is an abstract interface for alarm types.</p>
 */
Modules.Tizen.Alarm.Alarm = {};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Alarm.Alarm#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Alarm.Alarm.getId = function(){};

/**
 * @property id
 * @type String
 * @readonly
 * <p>The alarm identifier.</p>
 */
Modules.Tizen.Alarm.Alarm.id = null;

/**
 * @class Modules.Tizen.Alarm.AlarmAbsolute
 * @typestr Object of Modules.Tizen.Alarm
 * @extends Modules.Tizen.Alarm.Alarm
 * <p>This interface provides an absolute alarm, which triggers at a specified absolute date.</p>
 * @description <p>If a period is provided, the alarm keeps triggering for the given interval. 
If the daysOfTheWeek array is not empty, the alarm triggers every week, for the given days, at 
the time defined by date attribute. </p>
 */
Modules.Tizen.Alarm.AlarmAbsolute = {};

/**
 * @method getDate
 * <p>Gets the value of the {@link Modules.Tizen.Alarm.AlarmAbsolute#property-date date} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Alarm.AlarmAbsolute.getDate = function(){};

/**
 * @method getDaysOfTheWeek
 * <p>Gets the value of the {@link Modules.Tizen.Alarm.AlarmAbsolute#property-daysOfTheWeek daysOfTheWeek} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Alarm.AlarmAbsolute.getDaysOfTheWeek = function(){};

/**
 * @method getNextScheduledDate
 * <p>Returns the date/time of the next alarm trigger.</p>
 * @description <p>If the alarm has expired, this method returns null. The returned date is precise to the 
second.</p>
 * @return {Date} 
*/
Modules.Tizen.Alarm.AlarmAbsolute.getNextScheduledDate = function(){};

/**
 * @method getPeriod
 * <p>Gets the value of the {@link Modules.Tizen.Alarm.AlarmAbsolute#property-period period} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Alarm.AlarmAbsolute.getPeriod = function(){};

/**
 * @property date
 * @type Date
 * @readonly
 * <p>An attribute to store the absolute date/time when the alarm is initially triggered.</p>
 * @description <p>This attribute is precise to the second; milliseconds will be ignored.</p>
 */
Modules.Tizen.Alarm.AlarmAbsolute.date = null;

/**
 * @property daysOfTheWeek
 * @type String[]
 * @readonly
 * <p>An attribute to store the days of the week associated with the recurrence rule.</p>
 * @description <p>By default, this attribute is set to an empty array. 
If this array is non-empty, the period attribute will be set to 
{@link Modules.Tizen.Alarm#property-PERIOD_WEEK}, since the alarm will recur weekly.
The period and daysOfTheWeek attributes are mutually exclusive. </p>
 */
Modules.Tizen.Alarm.AlarmAbsolute.daysOfTheWeek = null;

/**
 * @property period
 * @type Number
 * @readonly
 * <p>An attribute to store the duration in seconds between each trigger of the alarm.</p>
 * @description <p>By default, this attribute is set to null, indicating that this alarm does not repeat. The 
period and daysOfTheWeek attributes are mutually exclusive. </p>
 */
Modules.Tizen.Alarm.AlarmAbsolute.period = null;

/**
 * @class Modules.Tizen.Alarm.AlarmRelative
 * @typestr Object of Modules.Tizen.Alarm
 * @extends Modules.Tizen.Alarm.Alarm
 * <p>This interface provides the relative alarm, which occurs at a fixed interval in future.</p>
 * @description <p>This alarm triggers after a duration mentioned in delay attribute from the moment the alarm is 
added. If the interval attribute is set to true, the alarm is triggered repeatedly for the 
specified time. </p>
 */
Modules.Tizen.Alarm.AlarmRelative = {};

/**
 * @method getDelay
 * <p>Gets the value of the {@link Modules.Tizen.Alarm.AlarmRelative#property-delay delay} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Alarm.AlarmRelative.getDelay = function(){};

/**
 * @method getPeriod
 * <p>Gets the value of the {@link Modules.Tizen.Alarm.AlarmRelative#property-period period} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Alarm.AlarmRelative.getPeriod = function(){};

/**
 * @method getRemainingSeconds
 * <p>Returns duration (in seconds) before the next alarm is triggered.</p>
 * @description <p>If the alarm has expired, this method returns null.</p>
 * @return {Number} 
*/
Modules.Tizen.Alarm.AlarmRelative.getRemainingSeconds = function(){};

/**
 * @property delay
 * @type Number
 * @readonly
 * <p>An attribute to stores the difference in time (in seconds) between when an alarm is added 
and it is triggered.</p>
 */
Modules.Tizen.Alarm.AlarmRelative.delay = null;

/**
 * @property period
 * @type Number
 * @readonly
 * <p>(optional) An attribute to stores the duration (in seconds) between each trigger 
of an alarm.</p>
 * @description <p>By default, this attribute is set to null, indicating that this alarm does not repeat.</p>
 */
Modules.Tizen.Alarm.AlarmRelative.period = null;

/**
 * @method add
 * <p>Adds an alarm to the storage.</p>
 * @description <p>To use this method, you must to include the following privilege in the <code>tiapp.xml</code> file of 
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/alarm</code></li>
</ul>
 * @param {Modules.Tizen.Alarm.Alarm} alarm 
 * <p>An alarm to add.</p>
 * @param {String} applicationId 
 * <p>The ID of the application to execute when the alarm is triggered.</p>
 * @param {Modules.Tizen.Apps.ApplicationControl} appControl (optional)
 * <p>The data structure describing application control details.</p>
 * @return void
*/
Modules.Tizen.Alarm.add = function(alarm, applicationId, appControl){};

/**
 * @method createAlarmAbsolute
 * <p>Creates and returns an instance of {@link Modules.Tizen.Alarm.AlarmAbsolute}.</p>
 * @param {Date/AlarmAbsoluteInit1/AlarmAbsoluteInit2} parameterrs 
 * <p>Initial arguments for AlarmAbsolute.</p>
 * @return {Modules.Tizen.Alarm.AlarmAbsolute} 
*/
Modules.Tizen.Alarm.createAlarmAbsolute = function(parameterrs){};

/**
 * @method createAlarmRelative
 * <p>Creates and returns an instance of {@link Modules.Tizen.Alarm.AlarmRelative}.</p>
 * @param {Object} parameters 
 * <p>Initial arguments for AlarmRelative.</p>
 * @return {Modules.Tizen.Alarm.AlarmRelative} 
*/
Modules.Tizen.Alarm.createAlarmRelative = function(parameters){};

/**
 * @method getAlarm
 * <p>Returns an alarm as per the specified identifier.</p>
 * @param {String} id 
 * <p>The ID of the alarm to retrieve.</p>
 * @return {Modules.Tizen.Alarm.Alarm} 
*/
Modules.Tizen.Alarm.getAlarm = function(id){};

/**
 * @method getAll
 * <p>Returns all alarms.</p>
 * @description <p>This method returns all alarms in an application storage. 
Alarms that have already been triggered are removed automatically from the storage. </p>
 * @return {Modules.Tizen.Alarm.Alarm[]} 
*/
Modules.Tizen.Alarm.getAll = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Alarm.getBubbleParent = function(){};

/**
 * @method remove
 * <p>Removes an alarm from the storage.</p>
 * @description <p>To use this method, you must to include the following privilege in the <code>tiapp.xml</code> file of 
your Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/alarm</code></li>
</ul>
 * @param {String} id 
 * <p>The ID of the alarm to remove</p>
 * @return void
*/
Modules.Tizen.Alarm.remove = function(id){};

/**
 * @method removeAll
 * <p>Removes all alarms added by an application.</p>
 * @description <p>Because each application has its own alarm storage, this method will only remove alarms 
added by the calling application.</p>
 * @return void
*/
Modules.Tizen.Alarm.removeAll = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Alarm.setBubbleParent = function(){};

/**
 * @property PERIOD_DAY
 * @type Number
 * @readonly
 * <p>86400 - The period of a day. It defines the number of seconds per day.</p>
 */
Modules.Tizen.Alarm.PERIOD_DAY = null;

/**
 * @property PERIOD_HOUR
 * @type Number
 * @readonly
 * <p>3600 - The period of an hour. It defines the number of seconds per hour.</p>
 */
Modules.Tizen.Alarm.PERIOD_HOUR = null;

/**
 * @property PERIOD_MINUTE
 * @type Number
 * @readonly
 * <p>60 - The period of a minute. It defines the number of seconds per minute.</p>
 */
Modules.Tizen.Alarm.PERIOD_MINUTE = null;

/**
 * @property PERIOD_WEEK
 * @type Number
 * @readonly
 * <p>604800 - The period of a week. It define the number of seconds in a week.</p>
 */
Modules.Tizen.Alarm.PERIOD_WEEK = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Alarm.bubbleParent = null;

/**
 * @class Modules.Tizen.Apps
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This API provides a way to launch other applications and access application management.</p>
 * <h3>Example</h3>
 * <h4>Getting information about the installed applications</h4>
 * <p><p>The following example shows how to obtain and show various data about the installed 
applications.</p></p><pre>var self = Ti.UI.createWindow(),
    Tizen = require('tizen');

// Get the list of applications installed on the device.
Tizen.Apps.getAppsInfo(function(response) {
    if (response.success) {
        var data = [],
            i = 0,
            applications = response.applications,
            applicationsCount = applications.length,
            tableview = Ti.UI.createTableView({});

        // Generate app info to show in the table view
        for (; i &lt; applicationsCount; i++) {
            data.push({
                // AlertDialog title
                title: applications[i].name + '\n&lt;b&gt;' + applications[i].id + '&lt;/b&gt;',
                app_id: applications[i].id,
                app_name: applications[i].name
            });
        }

        tableview.data = data;
        
        self.add(tableview);
    } else {
        console.error(response.error);
    }
});</pre>
 */
Modules.Tizen.Apps = {};

/**
 * @class Modules.Tizen.Apps.Application
 * @typestr Object of Modules.Tizen.Apps
 * @extends Titanium.Proxy
 * <p>This interface defines the current application's information and the basic operations (such as 
exit or hide) for the current application.</p>
 */
Modules.Tizen.Apps.Application = {};

/**
 * @method exit
 * <p>Exits the current application.</p>
 * @return void
*/
Modules.Tizen.Apps.Application.exit = function(){};

/**
 * @method getAppInfo
 * <p>Gets the value of the {@link Modules.Tizen.Apps.Application#property-appInfo appInfo} property.</p>
 * @return {Modules.Tizen.Apps.ApplicationInformation} 
*/
Modules.Tizen.Apps.Application.getAppInfo = function(){};

/**
 * @method getContextId
 * <p>Gets the value of the {@link Modules.Tizen.Apps.Application#property-contextId contextId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.Application.getContextId = function(){};

/**
 * @method getRequestedAppControl
 * <p>Gets the requested application control passed to the current application.</p>
 * @description <p>Gets the requested application control that contains the application control passed by the 
{@link Modules.Tizen.Apps#method-launchAppControl launchAppControl} method from the calling application. 
The requested application control 
contains the reason the application was launched and what it has to perform. For example, an 
application might be launched to display an image on a page by other application's request. 
In all of these cases, the application is responsible for checking the contents of the 
application control and responding appropriately when it is launched.</p>
 * @return {Modules.Tizen.Apps.RequestedApplicationControl} 
*/
Modules.Tizen.Apps.Application.getRequestedAppControl = function(){};

/**
 * @method hide
 * <p>Hides the current application.</p>
 * @return void
*/
Modules.Tizen.Apps.Application.hide = function(){};

/**
 * @property appInfo
 * @type Modules.Tizen.Apps.ApplicationInformation
 * @readonly
 * <p>An attribute to store the application information for the current application.</p>
 */
Modules.Tizen.Apps.Application.appInfo = null;

/**
 * @property contextId
 * @type String
 * @readonly
 * <p>An attribute to store the ID of a running application.</p>
 */
Modules.Tizen.Apps.Application.contextId = null;

/**
 * @class Modules.Tizen.Apps.ApplicationContext
 * @typestr Object of Modules.Tizen.Apps
 * @extends Titanium.Proxy
 * <p>This interface defines the information available about a running application.</p>
 */
Modules.Tizen.Apps.ApplicationContext = {};

/**
 * @method getAppId
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationContext#property-appId appId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.ApplicationContext.getAppId = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationContext#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.ApplicationContext.getId = function(){};

/**
 * @property appId
 * @type String
 * @readonly
 * <p>An attribute to store the ID of an installed application.</p>
 */
Modules.Tizen.Apps.ApplicationContext.appId = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>An attribute to store the ID of a running application.</p>
 */
Modules.Tizen.Apps.ApplicationContext.id = null;

/**
 * @class Modules.Tizen.Apps.ApplicationControl
 * @typestr Object of Modules.Tizen.Apps
 * <p>This interface consists of an operation, URI, MIME type, and data.</p>
 * @description <p>Describes an action to be performed by other applications and is passed to launch other 
applications. If the system gets the application control request, it finds the corresponding 
application to be launched with the delivered application control and launches the selected 
application. </p>
 */
Modules.Tizen.Apps.ApplicationControl = {};

/**
 * @property category
 * @type Boolean
 * <p>(optional) An attribute to store the category of the application to be launched.</p>
 */
Modules.Tizen.Apps.ApplicationControl.category = null;

/**
 * @property data
 * @type Modules.Tizen.Apps.ApplicationControlData[]
 * <p>(optional) An array of attributes to store the data needed for an application control.</p>
 */
Modules.Tizen.Apps.ApplicationControl.data = null;

/**
 * @property mime
 * @type String
 * <p>(optional) An attribute to store the MIME type of a content.</p>
 */
Modules.Tizen.Apps.ApplicationControl.mime = null;

/**
 * @property operation
 * @type String
 * <p>An attribute to store the string that defines the action to be performed by an application 
control. </p>
 */
Modules.Tizen.Apps.ApplicationControl.operation = null;

/**
 * @property uri
 * @type String
 * <p>(optional) An attribute to store the URI needed by application control.</p>
 */
Modules.Tizen.Apps.ApplicationControl.uri = null;

/**
 * @class Modules.Tizen.Apps.ApplicationControlData
 * @typestr Object of Modules.Tizen.Apps
 * <p>This object defines a key/value pair used to pass data between applications through the 
{@link Modules.Tizen.Apps.ApplicationControl} interface.</p>
 */
Modules.Tizen.Apps.ApplicationControlData = {};

/**
 * @property key
 * @type String
 * <p>An attribute to store the name of a key.</p>
 */
Modules.Tizen.Apps.ApplicationControlData.key = null;

/**
 * @property value
 * @type String[]
 * <p>An attribute to store the value associated with a key.</p>
 */
Modules.Tizen.Apps.ApplicationControlData.value = null;

/**
 * @class Modules.Tizen.Apps.ApplicationInformation
 * @typestr Object of Modules.Tizen.Apps
 * @extends Titanium.Proxy
 * <p>This interface defines the metadata information available to an installed application.</p>
 */
Modules.Tizen.Apps.ApplicationInformation = {};

/**
 * @method getCategories
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-categories categories} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Apps.ApplicationInformation.getCategories = function(){};

/**
 * @method getIconPath
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-iconPath iconPath} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.ApplicationInformation.getIconPath = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.ApplicationInformation.getId = function(){};

/**
 * @method getInstallDate
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-installDate installDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Apps.ApplicationInformation.getInstallDate = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.ApplicationInformation.getName = function(){};

/**
 * @method getShow
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-show show} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Apps.ApplicationInformation.getShow = function(){};

/**
 * @method getSize
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-size size} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Apps.ApplicationInformation.getSize = function(){};

/**
 * @method getVersion
 * <p>Gets the value of the {@link Modules.Tizen.Apps.ApplicationInformation#property-version version} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.ApplicationInformation.getVersion = function(){};

/**
 * @property categories
 * @type String[]
 * @readonly
 * <p>An array of attributes to store the categories that the app belongs to.</p>
 */
Modules.Tizen.Apps.ApplicationInformation.categories = null;

/**
 * @property iconPath
 * @type String
 * @readonly
 * <p>An attribute to store the icon path of an application.</p>
 */
Modules.Tizen.Apps.ApplicationInformation.iconPath = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>An attribute to store the identifier of an application for application management.</p>
 */
Modules.Tizen.Apps.ApplicationInformation.id = null;

/**
 * @property installDate
 * @type Date
 * @readonly
 * <p>An attribute to store the application install/update time.</p>
 */
Modules.Tizen.Apps.ApplicationInformation.installDate = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>An attribute to store the name of an application.</p>
 */
Modules.Tizen.Apps.ApplicationInformation.name = null;

/**
 * @property show
 * @type Boolean
 * @readonly
 * <p>An attribute that determines whether the application information should be shown (such as in 
the menus) or not.</p>
 */
Modules.Tizen.Apps.ApplicationInformation.show = null;

/**
 * @property size
 * @type Number
 * @readonly
 * <p>An attribute to store the application size (installed space).</p>
 */
Modules.Tizen.Apps.ApplicationInformation.size = null;

/**
 * @property version
 * @type String
 * @readonly
 * <p>An attribute to store the version of an application.</p>
 */
Modules.Tizen.Apps.ApplicationInformation.version = null;

/**
 * @class Modules.Tizen.Apps.RequestedApplicationControl
 * @typestr Object of Modules.Tizen.Apps
 * @extends Titanium.Proxy
 * <p>Describes an action requested and passed from other application.</p>
 * @description <p>This interface consists of an application control object and 2 methods. It describes an action 
requested and passed from other application and is passed to launch other applications. </p>
<p>The newly launched application can get the requested application control through 
{@link Modules.Tizen.Apps.Application#method-getRequestedAppControl getRequestedAppControl} 
method, and send the results to the calling application through the 
{@link Modules.Tizen.Apps.RequestedApplicationControl#method-replyResult replyResult} 
method after performing the required action requested the calling application.</p>
 */
Modules.Tizen.Apps.RequestedApplicationControl = {};

/**
 * @method getAppControl
 * <p>Gets the value of the {@link Modules.Tizen.Apps.RequestedApplicationControl#property-appControl appControl} property.</p>
 * @return {Modules.Tizen.Apps.ApplicationControl} 
*/
Modules.Tizen.Apps.RequestedApplicationControl.getAppControl = function(){};

/**
 * @method getCallerAppId
 * <p>Gets the value of the {@link Modules.Tizen.Apps.RequestedApplicationControl#property-callerAppId callerAppId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.RequestedApplicationControl.getCallerAppId = function(){};

/**
 * @method replyFailure
 * <p>Notifies the calling application that the application failed to perform the requested action.  </p>
 * @return void
*/
Modules.Tizen.Apps.RequestedApplicationControl.replyFailure = function(){};

/**
 * @method replyResult
 * <p>Sends the results to the caller application.</p>
 * @param {Modules.Tizen.Apps.ApplicationControlData[]} data (optional)
 * <p>An array of ApplicationControlData objects.</p>
 * @return void
*/
Modules.Tizen.Apps.RequestedApplicationControl.replyResult = function(data){};

/**
 * @property appControl
 * @type Modules.Tizen.Apps.ApplicationControl
 * @readonly
 * <p>An attribute to store the application control object that describes caller application's 
request. </p>
 * @description <p>Contains the information that the calling application passed to launchAppControl. </p>
 */
Modules.Tizen.Apps.RequestedApplicationControl.appControl = null;

/**
 * @property callerAppId
 * @type String
 * @readonly
 * <p>An attribute to store the caller application's ID.</p>
 */
Modules.Tizen.Apps.RequestedApplicationControl.callerAppId = null;




/**
 * @method createApplicationControl
 * <p>Creates an instance of {@link Modules.Tizen.Apps.ApplicationControl}</p>
 * @param {Object} args 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details.</p>
 * @return {Modules.Tizen.Apps.ApplicationControl} 
*/
Modules.Tizen.Apps.createApplicationControl = function(args){};

/**
 * @method createApplicationControlData
 * <p>Creates an instance of {@link Modules.Tizen.Apps.ApplicationControlData}</p>
 * @param {Object} args 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details.</p>
 * @return {Modules.Tizen.Apps.ApplicationControlData} 
*/
Modules.Tizen.Apps.createApplicationControlData = function(args){};

/**
 * @method findAppControl
 * <p>Finds application information can be launched with the given application control.</p>
 * @description <p>An application can get a list of other applications can be launched with the application 
control.</p>
 * @param {Modules.Tizen.Apps.ApplicationControl} appControl 
 * <p>A data structure describing application control details.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure..</p>
 * @return void
*/
Modules.Tizen.Apps.findAppControl = function(appControl, callback){};

/**
 * @method getAppContext
 * <p>Gets the application context for the specified application context ID. </p>
 * @description <p>If the ID is set to null or is not set at all, the method returns the application context 
of the current application. </p>
<p>The list of running applications and their application IDs is obtained with 
{@link Modules.Tizen.Apps#method-getAppsContext getAppsContext}.</p>
 * @param {String} contextId (optional)
 * <p>A string representing an application context ID. If the ID is not provided, the 
application context of the calling application will be returned.</p>
 * @return {Modules.Tizen.Apps.ApplicationContext} 
*/
Modules.Tizen.Apps.getAppContext = function(contextId){};

/**
 * @method getAppInfo
 * <p>Gets application information for a specified application ID.</p>
 * @description <p>If the ID is set to null or not set at all, it returns application information for the 
current application. The list of installed applications and their application IDs is 
obtained with {@link Modules.Tizen.Apps#method-getAppsInfo getAppsInfo}. </p>
 * @param {String} id (optional)
 * <p>A string representing application ID. If the ID is not provided, the application 
information of the calling application will be returned.</p>
 * @return {Modules.Tizen.Apps.ApplicationInformation} 
*/
Modules.Tizen.Apps.getAppInfo = function(id){};

/**
 * @method getAppSharedURI
 * <p>Gets URI of read-only shared directory of application for a specified application ID.</p>
 * @description <p>The shared directory is used to export data to other applications. If the ID is set to null 
or not set at all, it returns shared directory URI for the current application.                </p>
 * @param {String} id (optional)
 * <p>A string representing application ID. If the ID is not provided, the shared directory 
URI of the calling application will be returned.</p>
 * @return {String} 
*/
Modules.Tizen.Apps.getAppSharedURI = function(id){};

/**
 * @method getAppsContext
 * <p>Gets a list of application contexts for applications that are currently running on a device.</p>
 * @description <p>The information contained for each application corresponds to the application state at the 
time when the list was generated. </p>
 * @param {Function} callback 
 * <p>The method to call when the invocation ends successfully.</p>
 * @return void
*/
Modules.Tizen.Apps.getAppsContext = function(callback){};

/**
 * @method getAppsInfo
 * <p>Gets the list of installed application's information on a device.</p>
 * @description <p>The information contained on each application corresponds to the application state at the 
moment when the list was generated. </p>
 * @param {Function} callback 
 * <p>The method to call when the invocation ends successfully.</p>
 * @return void
*/
Modules.Tizen.Apps.getAppsInfo = function(callback){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Apps.getBubbleParent = function(){};

/**
 * @method getCurrentApplication
 * <p>Gets the Application object defining the current application.</p>
 * @return {Modules.Tizen.Apps.Application} 
*/
Modules.Tizen.Apps.getCurrentApplication = function(){};

/**
 * @method launch
 * <p>Launches an application with the given application ID.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/application.launch</code></li>
</ul>
 * @param {String} id 
 * <p>A unique string representing application ID.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Apps.launch = function(id, callback){};

/**
 * @method launchAppControl
 * <p>Launches an application with the specified application control.</p>
 * @description <p>An application can launch other applications with the application control, and get back the 
results from the launched applications. The application control consists of an operation, 
URI, and MIME type, and describes the request to be performed by the newly launched 
application. The application control is passed to the 
{@link Modules.Tizen.Apps#method-launchAppControl launchAppControl} method to launch an 
application. The system tries to find the proper application to perform the requested 
application control, then launches the selected application.</p>
<p>The application control request is passed to the newly launched application and it can be 
accessed by {@link Modules.Tizen.Apps.Application#method-getRequestedAppControl getRequestedAppControl} 
method. The passed application control contains the 
reason the application was launched and information about what the application is doing. 
The launched application can send a result to the caller application with the 
{@link Modules.Tizen.Apps.RequestedApplicationControl#method-replyResult replyResult} 
method of the {@link Modules.Tizen.Apps.RequestedApplicationControl RequestedApplicationControl} 
interface.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/application.launch</code></li>
</ul>
 * @param {Modules.Tizen.Apps.ApplicationControl} appControl 
 * <p>The data structure describing application control details.</p>
 * @param {String} id 
 * <p>An identifier of the application to be launched. If the ID is null or not specified, 
then the system tries to find the application to be launched for the requested 
application control.</p>
 * @param {Function} callback (optional)
 * <p>The method to call when the invocation ends successfully or fails.</p>
 * @param {Function} replyCallback (optional)
 * <p>The method to invoke when the application gets back results from the launched 
application.</p>
 * @return void
*/
Modules.Tizen.Apps.launchAppControl = function(appControl, id, callback, replyCallback){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Apps.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Apps.bubbleParent = null;

/**
 * @class Modules.Tizen.AttributeFilter
 * @typestr Object of Modules.Tizen
 * @extends Modules.Tizen.AbstractFilter
 * <p>AttributeFilter represents a filter based on an object attribute.</p>
 * @description <p>Represents the query statement for the specified value of the matchValue by the rule of 
<code>matchFlag</code>. If no <code>matchValue</code> is defined, the filter will match all objects that have the 
attribute defined (same as the {@link Modules.Tizen#property-FILTER_MATCH_FLAG_EXISTS} filter works), 
otherwise, it will only match objects which have an attribute that matches the given value.</p>
 */
Modules.Tizen.AttributeFilter = {};

/**
 * @method getAttributeName
 * <p>Gets the value of the {@link Modules.Tizen.AttributeFilter#property-attributeName attributeName} property.</p>
 * @return {String} 
*/
Modules.Tizen.AttributeFilter.getAttributeName = function(){};

/**
 * @method getMatchFlag
 * <p>Gets the value of the {@link Modules.Tizen.AttributeFilter#property-matchFlag matchFlag} property.</p>
 * @return {String} 
*/
Modules.Tizen.AttributeFilter.getMatchFlag = function(){};

/**
 * @method getMatchValue
 * <p>Gets the value of the {@link Modules.Tizen.AttributeFilter#property-matchValue matchValue} property.</p>
 * @return {Object} 
*/
Modules.Tizen.AttributeFilter.getMatchValue = function(){};

/**
 * @method setAttributeName
 * <p>Sets the value of the {@link Modules.Tizen.AttributeFilter#property-attributeName attributeName} property.</p>
 * @param {String} attributeName 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.AttributeFilter.setAttributeName = function(attributeName){};

/**
 * @method setMatchFlag
 * <p>Sets the value of the {@link Modules.Tizen.AttributeFilter#property-matchFlag matchFlag} property.</p>
 * @param {String} matchFlag 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.AttributeFilter.setMatchFlag = function(matchFlag){};

/**
 * @method setMatchValue
 * <p>Sets the value of the {@link Modules.Tizen.AttributeFilter#property-matchValue matchValue} property.</p>
 * @param {Object} matchValue 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.AttributeFilter.setMatchValue = function(matchValue){};

/**
 * @property attributeName
 * @type String
 * <p>The name of the object attribute used for filtering.</p>
 * @description <p>This is the name of the object attribute exactly as it is defined in the object's interface. 
For attributes of complex type, use fully-qualified names (such as 'organizations.role' to 
filter on a contact's role in an organization). For attributes of an array type, the filter 
will match if any value in the array matches.</p>
 */
Modules.Tizen.AttributeFilter.attributeName = null;

/**
 * @property [matchFlag=Modules.Tizen.FILTER_MATCH_FLAG_EXACTLY]
 * @type String
 * <p>The match flag used for attribute-based filtering.</p>
 * @description <p>By default, this attribute is set to {@link Modules.Tizen#property-FILTER_MATCH_FLAG_EXACTLY}.</p>
 */
Modules.Tizen.AttributeFilter.matchFlag = null;

/**
 * @property matchValue
 * @type Object
 * <p>The value used for matching.</p>
 * @description <p>The filter will match if the attribute value matches the given matchValue.
This value is not used if the matchFlag is set to {@link Modules.Tizen#property-FILTER_MATCH_FLAG_EXISTS}. 
By default, this attribute is set to null.</p>
 */
Modules.Tizen.AttributeFilter.matchValue = null;

/**
 * @class Modules.Tizen.AttributeRangeFilter
 * @typestr Object of Modules.Tizen
 * @extends Modules.Tizen.AbstractFilter
 * <p>AttributeRangeFilter represents a filter based on an object attribute which has values that are 
within a particular range.  </p>
 * @description <p>Range filters, where only one boundary is set, are available.</p>
 */
Modules.Tizen.AttributeRangeFilter = {};

/**
 * @method getAttributeName
 * <p>Gets the value of the {@link Modules.Tizen.AttributeRangeFilter#property-attributeName attributeName} property.</p>
 * @return {String} 
*/
Modules.Tizen.AttributeRangeFilter.getAttributeName = function(){};

/**
 * @method getEndValue
 * <p>Gets the value of the {@link Modules.Tizen.AttributeRangeFilter#property-endValue endValue} property.</p>
 * @return {Object} 
*/
Modules.Tizen.AttributeRangeFilter.getEndValue = function(){};

/**
 * @method getInitialValue
 * <p>Gets the value of the {@link Modules.Tizen.AttributeRangeFilter#property-initialValue initialValue} property.</p>
 * @return {Object} 
*/
Modules.Tizen.AttributeRangeFilter.getInitialValue = function(){};

/**
 * @method setAttributeName
 * <p>Sets the value of the {@link Modules.Tizen.AttributeRangeFilter#property-attributeName attributeName} property.</p>
 * @param {String} attributeName 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.AttributeRangeFilter.setAttributeName = function(attributeName){};

/**
 * @method setEndValue
 * <p>Sets the value of the {@link Modules.Tizen.AttributeRangeFilter#property-endValue endValue} property.</p>
 * @param {Object} endValue 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.AttributeRangeFilter.setEndValue = function(endValue){};

/**
 * @method setInitialValue
 * <p>Sets the value of the {@link Modules.Tizen.AttributeRangeFilter#property-initialValue initialValue} property.</p>
 * @param {Object} initialValue 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.AttributeRangeFilter.setInitialValue = function(initialValue){};

/**
 * @property attributeName
 * @type String
 * <p>The name of the object attribute used for filtering.</p>
 * @description <p>This is the name of the object attribute exactly as it is defined in the object's interface. 
For attributes of complex type, use fully-qualified names (such as 'organizations.role' to 
filter on a contact's role in an organization). 
For attributes of an array type, the filter will match if any value in the array matches. </p>
 */
Modules.Tizen.AttributeRangeFilter.attributeName = null;

/**
 * @property endValue
 * @type Object
 * <p>Objects with an attribute that is strictly lower than to endValue will match.</p>
 * @description <p>By default, this attribute is set to null.</p>
 */
Modules.Tizen.AttributeRangeFilter.endValue = null;

/**
 * @property initialValue
 * @type Object
 * <p>Objects with an attribute that is greater than or equal to initialValue will match.</p>
 * @description <p>By default, this attribute is set to null.</p>
 */
Modules.Tizen.AttributeRangeFilter.initialValue = null;

/**
 * @class Modules.Tizen.Bluetooth
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This specification defines interfaces and methods to manage Bluetooth.</p>
 * @description <p>For more information on the Bluetooth features, see 
<a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.appprogramming%2Fhtml%2Fguide%2Fcommunication_guide%2Fbluetooth.htm">Bluetooth Guide</a>. </p>
 * <h3>Example</h3>
 * <h4>Enable or disable BlueTooth adapter</h4>
 * <p><p>This example shows how to enable or disable the default Bluetooth adapter using a GUI switch.</p></p><pre>var btAdapter = require('tizen').Bluetooth.getDefaultAdapter(),
    win = Ti.UI.createWindow({
        backgroundColor: '#fff'
    }),
    btSwitch = Ti.UI.createSwitch({
        top: 20,
        titleOn: 'Bluetooth enabled',
        titleOff: 'Bluetooth disabled',
        value: btAdapter.powered
    });

    btSwitch.addEventListener('change', function(e) {
        if (btAdapter.powered != btSwitch.value) {
            // initiate power switching
            btAdapter.setPowered(btSwitch.value, function(response) {
                if (response.success) {
                    btSwitch.enabled = true;
                    console.log('Bluetooth powered ' + (btSwitch.value ? 'on' : 'off') + ' success.');
                } else {
                    btSwitch.enabled = true;
                    console.log('Failed to power on Bluetooth: ' + e.message + '(' + e.name + ')');
                }
            });
        }

        btSwitch.enabled = false;  // disable switch until current operation is finished
    });</pre>
 */
Modules.Tizen.Bluetooth = {};

/**
 * @class Modules.Tizen.Bluetooth.BluetoothAdapter
 * @typestr Object of Modules.Tizen.Bluetooth
 * @extends Titanium.Proxy
 * <p>The Bluetooth adapter interface that provides access to control the device's Bluetooth adapter.  </p>
 * @description <p>This interface offers methods to control local Bluetooth behavior, such as:</p>
<ul>
<li>Turn on/off Bluetooth radio;</li>
<li>Scan for remote devices;</li>
<li>Access known devices;</li>
<li>Register a service in the device service database.</li>
</ul>
<p>To start device discovery, subscribe to one of the device discovery events defined in this 
interface. It will start automaticaly. Note that you should stop discovery using the 
{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-stopDiscovery stopDiscovery}
method as soon as you no longer need the discovery process.</p>
 */
Modules.Tizen.Bluetooth.BluetoothAdapter = {};






/**
 * @method createBonding
 * <p>Initiates the bonding process with a remote device.</p>
 * @description <p>To communicate with any remote Bluetooth device, it must be bonded (that is, the device 
should be authenticated). Only bonded devices can connect to services and exchange data with 
each other. This method initiates the bonding process with peer device, using the given MAC 
address. If the bonding process is successful, the device information is sent through 
callback.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.gap</code></li>
</ul>
 * @param {String} address 
 * <p>The MAC address of remote Bluetooth address to bond with.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.createBonding = function(address, callback){};

/**
 * @method destroyBonding
 * <p>Destroys bonding with a remote device.</p>
 * @description <p>This method initiates the process to remove the given address from the bonded devices list.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.gap</code></li>
</ul>
 * @param {String} address 
 * <p>Address of the bonded device.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.destroyBonding = function(address, callback){};

/**
 * @method getAddress
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothAdapter#property-address address} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.getAddress = function(){};

/**
 * @method getDevice
 * <p>Gets the BluetoothDevice object for a given device hardware address.</p>
 * @description <p>This method returns device information stored in the local Bluetooth adapter for the 
specified device. A valid hardware address must be passed, such as "35:F4:59:D1:7A:03".</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.gap</code></li>
</ul>
 * @param {String} address 
 * <p>Address of a remote Bluetooth device to get.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.getDevice = function(address, callback){};

/**
 * @method getKnownDevices
 * <p>Gets all the devices that have information stored in the local Bluetooth adapter.</p>
 * @description <p>A known device is one of the following:
    a bonded device
    a device found in last inquiry process
On success, it returns the list of currently known devices.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.gap</code></li>
</ul>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.getKnownDevices = function(callback){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothAdapter#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.getName = function(){};

/**
 * @method getPowered
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothAdapter#property-powered powered} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.getPowered = function(){};

/**
 * @method getVisible
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothAdapter#property-visible visible} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.getVisible = function(){};

/**
 * @method registerRFCOMMServiceByUUID
 * <p>Registers a service for other devices to consume.</p>
 * @description <p>This method registers a service record in the device service record database with the 
specified uuid, name and auto assigned channel. 
On success of the service registration, it returns a 
{@link Modules.Tizen.Bluetooth.BluetoothServiceHandler} object as the <code>handler</code> property of the
argument to <code>callback</code>, and listens for client connections. The service handler can be used to be
notified on client connections or to unregister 
the service. User interaction is mandatory to connect to a registered service and a link 
between devices is encrypted. This guarantees a 
registered service is securely protected.</p>
<p>Clients should do service discovery on this device with a specified uuid to determine the 
right channel.
{@link Modules.Tizen.Bluetooth.BluetoothServiceHandler#method-unregister unregister} can be used to 
unregister the service record from the device service 
database and stop listening for client connections.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.spp</code></li>
</ul>
 * @param {String} uuid 
 * <p>UUID of the service, to which clients can connect.</p>
 * @param {String} name 
 * <p>Name of the service.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.registerRFCOMMServiceByUUID = function(uuid, name, callback){};

/**
 * @method setName
 * <p>Sets the local Bluetooth adapter name.</p>
 * @description <p>Sends a request to Bluetooth hardware to change the name of the local Bluetooth adapter to 
<code>name</code>.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.admin</code></li>
</ul>
 * @param {String} name 
 * <p>Name to set.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.setName = function(name, callback){};

/**
 * @method setPowered
 * <p>Turns Bluetooth adapter on or off.</p>
 * @description <p>Sends a request to Bluetooth hardware to change the state to a given state. For most 
Bluetooth actions, the Bluetooth adapter must be powered on.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.admin</code></li>
</ul>
 * @param {Boolean} state 
 * <p>State to set: true to power on Bluetooth, false to power it off.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.setPowered = function(state, callback){};

/**
 * @method stopDiscovery
 * <p>Stops the device discovery process session, if active. Automatically unsubscribes from all 
"discovery" events.</p>
 * @description <p>Device discovery is a heavyweight procedure, hence we recommend stopping discovery as soon 
as required device is found. This method cancels an active discovery session.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.gap</code></li>
</ul>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothAdapter.stopDiscovery = function(callback){};

/**
 * @property address
 * @type String
 * @readonly
 * <p>The unique hardware address of the Bluetooth adapter, also known as the MAC address.</p>
 */
Modules.Tizen.Bluetooth.BluetoothAdapter.address = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>The readable name of the Bluetooth adapter.</p>
 */
Modules.Tizen.Bluetooth.BluetoothAdapter.name = null;

/**
 * @property powered
 * @type Boolean
 * @readonly
 * <p>Holds the current state of Bluetooth adapter.</p>
 */
Modules.Tizen.Bluetooth.BluetoothAdapter.powered = null;

/**
 * @property visible
 * @type Boolean
 * @readonly
 * <p>Holds the current visibility of the device.</p>
 */
Modules.Tizen.Bluetooth.BluetoothAdapter.visible = null;

/**
 * @class Modules.Tizen.Bluetooth.BluetoothClass
 * @typestr Object of Modules.Tizen.Bluetooth
 * @extends Titanium.Proxy
 * <p>Interface to represent Bluetooth Class of Device/Service(CoD).</p>
 * @description <p>Bluetooth device class describes the characteristics and capabilities of a device.</p>
<p>Bluetooth CoD is a 24 bit integer created by the union of three components:</p>
<pre><code>* Exactly one Major Device Class(bits 8-12 of CoD) - This is the highest level of 
granularity for defining a Bluetooth Device.

* Exactly one Minor Device Class(bits 2-7 of CoD) - This is to be interpreted only in the 
context of the Major Device Class. Thus, the meaning of these bits may change, depending on 
the value of 'Major Device Class'.

* Zero or more Major Service Classes(bits 13-23) - Represents the services supported by the 
device.
</code></pre>
<p>The major and minor classes are intended to define a general family of devices with which any 
particular implementation wishes to be associated. No assumptions should be made about specific 
functionality or characteristics of any application, based solely on the assignment of a major 
or minor device class.</p>
 */
Modules.Tizen.Bluetooth.BluetoothClass = {};

/**
 * @method getMajor
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothClass#property-major major} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Bluetooth.BluetoothClass.getMajor = function(){};

/**
 * @method getMinor
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothClass#property-minor minor} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothClass.getMinor = function(){};

/**
 * @method getServices
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothClass#property-services services} property.</p>
 * @return {Number[]} 
*/
Modules.Tizen.Bluetooth.BluetoothClass.getServices = function(){};

/**
 * @method hasService
 * <p>Checks whether the given service exists in the services.</p>
 * @description <p>Writes a sequence of bytes onto the socket and returns the number of bytes actually written. </p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.gap</code></li>
</ul>
 * @param {Number} service 
 * <p>The service to check.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Bluetooth.BluetoothClass.hasService = function(service){};

/**
 * @property major
 * @type Number
 * @readonly
 * <p>The major device class. The value is one of the constants defined for this type. </p>
 * @description <p>The supported major types are: </p>
<ul>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_MISC}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_COMPUTER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_PHONE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_NETWORK}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_AUDIO_VIDEO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_PERIPHERAL}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_IMAGING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_WEARABLE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_TOY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_HEALTH}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_UNCATEGORIZED}</li>
</ul>
 */
Modules.Tizen.Bluetooth.BluetoothClass.major = null;

/**
 * @property minor
 * @type String
 * @readonly
 * <p>The minor device class. The value is one of the constants defined for this type. </p>
 * @description <p>The supported minor types are: </p>
<ul>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAMCORDER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_HANDSFREE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_HEADPHONES}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_HIFI}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_LOUDSPEAKER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_MICROPHONE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_UNRECOGNIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_VCR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_DESKTOP}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_LAPTOP}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_SERVER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_WEARABLE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_THERMOMETER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_UNDEFINED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_CAMERA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_DISPLAY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_PRINTER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_SCANNER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_GAMEPAD}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_JOYSTICK}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CELLULAR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CORDLESS}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_ISDN}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_SMARTPHONE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_CONTROLLER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_DOLL}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_GAME}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_ROBOT}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_VEHICLE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_GLASSES}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_HELMET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_JACKET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_PAGER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAR_AUDIO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_GAMING_TOY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_PORTABLE_AUDIO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_SETTOP_BOX}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CAMERA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CONFERENCING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_WEARABLE_HEADSET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_ANKLE_PROSTHESIS}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_DATA_DISPLAY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_GLUCOSE_METER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_KNEE_PROSTHESIS}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_MEDICATION_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_OXIMETER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_STEP_COUNTER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_WEIGHING_SCALE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_CARD_READER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DEGITIZER_TABLET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DIGITAL_PEN}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_SCANNER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_POINTING_DEVICE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_REMOTE_CONTROL}</li>
<li><Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_SENSING_DEVICE ></li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_WRITST_WATCH}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_DISPLAY_AND_LOUDSPEAKER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BLOOD_PRESSURE_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BODY_COMPOSITION_ANALYZER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_RATE_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_INPUT_DEVICE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_MODEM_OR_GATEWAY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_HANDHELD_PC_OR_PDA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_PALM_PC_OR_PDA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE}</li>
</ul>
 */
Modules.Tizen.Bluetooth.BluetoothClass.minor = null;

/**
 * @property services
 * @type Number[]
 * @readonly
 * <p>The services provided by this device.The value is one of the constants defined for this type. </p>
 * @description <p>The supported types are: </p>
<ul>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_LIMITED_DISCOVERABILITY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_POSITIONING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_NETWORKING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_RENDERING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_CAPTURING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_OBJECT_TRANSFER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_AUDIO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_TELEPHONY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_INFORMATION}</li>
</ul>
 */
Modules.Tizen.Bluetooth.BluetoothClass.services = null;

/**
 * @class Modules.Tizen.Bluetooth.BluetoothDevice
 * @typestr Object of Modules.Tizen.Bluetooth
 * @extends Titanium.Proxy
 * <p>The interface which represents a remote Bluetooth device.</p>
 * @description <p>This interface holds information about a remote device available on a local Bluetooth device, 
such as device name, address, bonding status, etc.
A BluetoothDevice object can be retrieved using one of the following APIs:</p>
<ul>
<li>{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-getDevice getDevice}</li>
<li>{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-getKnownDevices getKnownDevices}</li>
<li>{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-createBonding createBonding}</li>
</ul>
 */
Modules.Tizen.Bluetooth.BluetoothDevice = {};

/**
 * @method connectToServiceByUUID
 * <p>Creates a socket connection to the specified service UUID.</p>
 * @description <p>This method attempts to open a connection to the service identified by uuid on this remote 
device. This performs an SDP(Service Discovery Protocol) lookup on the local device for the 
given uuid and determines which channel to use.</p>
<p>If opening a connection is successful, then a BluetoothSocket object with open state is sent
using callback, through which data can be exchanged by both devices.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.spp</code></li>
</ul>
 * @param {String} uuid 
 * <p>128 bit unique identifier, which represents the service record on the device.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothDevice.connectToServiceByUUID = function(uuid, callback){};

/**
 * @method getAddress
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothDevice#property-address address} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothDevice.getAddress = function(){};

/**
 * @method getDeviceClass
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothDevice#property-deviceClass deviceClass} property.</p>
 * @return {Modules.Tizen.Bluetooth.BluetoothClass} 
*/
Modules.Tizen.Bluetooth.BluetoothDevice.getDeviceClass = function(){};

/**
 * @method getIsBonded
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothDevice#property-isBonded isBonded} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Bluetooth.BluetoothDevice.getIsBonded = function(){};

/**
 * @method getIsConnected
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothDevice#property-isConnected isConnected} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Bluetooth.BluetoothDevice.getIsConnected = function(){};

/**
 * @method getIsTrusted
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothDevice#property-isTrusted isTrusted} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Bluetooth.BluetoothDevice.getIsTrusted = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothDevice#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothDevice.getName = function(){};

/**
 * @method getUuids
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothDevice#property-uuids uuids} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Bluetooth.BluetoothDevice.getUuids = function(){};

/**
 * @property address
 * @type String
 * @readonly
 * <p>The hardware address of the device.</p>
 */
Modules.Tizen.Bluetooth.BluetoothDevice.address = null;

/**
 * @property deviceClass
 * @type Modules.Tizen.Bluetooth.BluetoothClass
 * @readonly
 * <p>The device class, which represents the type of the device and the services it provides.</p>
 */
Modules.Tizen.Bluetooth.BluetoothDevice.deviceClass = null;

/**
 * @property isBonded
 * @type Boolean
 * @readonly
 * <p>The bond state of the device with the local device.</p>
 */
Modules.Tizen.Bluetooth.BluetoothDevice.isBonded = null;

/**
 * @property isConnected
 * @type Boolean
 * @readonly
 * <p>The connection state of the Bluetooth device with the local Bluetooth adapter.</p>
 */
Modules.Tizen.Bluetooth.BluetoothDevice.isConnected = null;

/**
 * @property isTrusted
 * @type Boolean
 * @readonly
 * <p>The value is necessary to check if the local Bluetooth adapter recognizes the Bluetooth
device as a trusted device. </p>
 */
Modules.Tizen.Bluetooth.BluetoothDevice.isTrusted = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>The readable name of the device.</p>
 */
Modules.Tizen.Bluetooth.BluetoothDevice.name = null;

/**
 * @property uuids
 * @type String[]
 * @readonly
 * <p>The list of 128 bit service UUIDs available on this device.</p>
 */
Modules.Tizen.Bluetooth.BluetoothDevice.uuids = null;

/**
 * @class Modules.Tizen.Bluetooth.BluetoothServiceHandler
 * @typestr Object of Modules.Tizen.Bluetooth
 * @extends Titanium.Proxy
 * <p>The Bluetooth service interface.</p>
 */
Modules.Tizen.Bluetooth.BluetoothServiceHandler = {};


/**
 * @method getIsConnected
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothServiceHandler#property-isConnected isConnected} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Bluetooth.BluetoothServiceHandler.getIsConnected = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothServiceHandler#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothServiceHandler.getName = function(){};

/**
 * @method getUuid
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothServiceHandler#property-uuid uuid} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothServiceHandler.getUuid = function(){};

/**
 * @method unregister
 * <p>Unregisters a service record from service database.</p>
 * @description <p>This method unregisters a service record from the Bluetooth services record database and 
stops listening for new connections to this service.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.spp</code></li>
</ul>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothServiceHandler.unregister = function(callback){};

/**
 * @property isConnected
 * @type Boolean
 * @readonly
 * <p>The value is necessary to check if any other Bluetooth devices use this service.</p>
 */
Modules.Tizen.Bluetooth.BluetoothServiceHandler.isConnected = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>The name of the service.</p>
 */
Modules.Tizen.Bluetooth.BluetoothServiceHandler.name = null;

/**
 * @property uuid
 * @type String
 * @readonly
 * <p>UUID of the service.</p>
 */
Modules.Tizen.Bluetooth.BluetoothServiceHandler.uuid = null;

/**
 * @class Modules.Tizen.Bluetooth.BluetoothSocket
 * @typestr Object of Modules.Tizen.Bluetooth
 * @extends Titanium.Proxy
 * <p>The interface to represent the Bluetooth socket.</p>
 * @description <p>The socket object is created by 
{@link Modules.Tizen.Bluetooth.BluetoothDevice#method-connectToServiceByUUID connectToServiceByUUID} or 
{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-registerRFCOMMServiceByUUID registerRFCOMMServiceByUUID}.</p>
 */
Modules.Tizen.Bluetooth.BluetoothSocket = {};




/**
 * @method close
 * <p>Closes the socket.</p>
 * @description <p>Calling this method closes the socket. BluetoothSocket.state changes to 
{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_SOCKET_STATE_CLOSED}, and  'socketclosed' is invoked on 
success. </p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.spp</code></li>
</ul>
 * @return void
*/
Modules.Tizen.Bluetooth.BluetoothSocket.close = function(){};

/**
 * @method getPeer
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothSocket#property-peer peer} property.</p>
 * @return {Modules.Tizen.Bluetooth.BluetoothDevice} 
*/
Modules.Tizen.Bluetooth.BluetoothSocket.getPeer = function(){};

/**
 * @method getState
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothSocket#property-state state} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothSocket.getState = function(){};

/**
 * @method getUuid
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth.BluetoothSocket#property-uuid uuid} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bluetooth.BluetoothSocket.getUuid = function(){};

/**
 * @method readData
 * <p>Reads data from the socket.</p>
 * @description <p>This should be called only in the 'socketmessagereceived' handler, that is, when data is 
ready on the socket. </p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.spp</code></li>
</ul>
 * @return {Number[]} 
*/
Modules.Tizen.Bluetooth.BluetoothSocket.readData = function(){};

/**
 * @method writeData
 * <p>Writes data onto the socket.</p>
 * @description <p>Writes a sequence of bytes onto the socket and returns the number of bytes actually written. </p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/bluetooth.spp</code></li>
</ul>
 * @param {Number[]} data 
 * <p>Data to send.</p>
 * @return {Number} 
*/
Modules.Tizen.Bluetooth.BluetoothSocket.writeData = function(data){};

/**
 * @property peer
 * @type Modules.Tizen.Bluetooth.BluetoothDevice
 * @readonly
 * <p>The peer device to which this socket is connected.</p>
 */
Modules.Tizen.Bluetooth.BluetoothSocket.peer = null;

/**
 * @property state
 * @type String
 * @readonly
 * <p>The current socket state.  The value is one of the constants defined for this type. </p>
 * @description <p>The supported state types are: {@link Modules.Tizen.Bluetooth#property-BLUETOOTH_SOCKET_STATE_CLOSED}, 
and {@link Modules.Tizen.Bluetooth#property-BLUETOOTH_SOCKET_STATE_OPEN}.</p>
 */
Modules.Tizen.Bluetooth.BluetoothSocket.state = null;

/**
 * @property uuid
 * @type String
 * @readonly
 * <p>Service UUID to which this socket is connected.</p>
 */
Modules.Tizen.Bluetooth.BluetoothSocket.uuid = null;

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Bluetooth.getBubbleParent = function(){};

/**
 * @method getDefaultAdapter
 * <p>Returns the default local Bluetooth adapter.</p>
 * @return {Modules.Tizen.Bluetooth.BluetoothAdapter} 
*/
Modules.Tizen.Bluetooth.getDefaultAdapter = function(){};

/**
 * @method getDeviceMajor
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth#property-deviceMajor deviceMajor} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Bluetooth.getDeviceMajor = function(){};

/**
 * @method getDeviceMinor
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth#property-deviceMinor deviceMinor} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Bluetooth.getDeviceMinor = function(){};

/**
 * @method getDeviceService
 * <p>Gets the value of the {@link Modules.Tizen.Bluetooth#property-deviceService deviceService} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Bluetooth.getDeviceService = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Bluetooth.setBubbleParent = function(){};

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_AUDIO_VIDEO
 * @type Number
 * @readonly
 * <p>0x04 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_AUDIO_VIDEO = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_COMPUTER
 * @type Number
 * @readonly
 * <p>0x01 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_COMPUTER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_HEALTH
 * @type Number
 * @readonly
 * <p>0x09</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_HEALTH = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_IMAGING
 * @type Number
 * @readonly
 * <p>0x06 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_IMAGING = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_MISC
 * @type Number
 * @readonly
 * <p>0x00 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_MISC = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_NETWORK
 * @type Number
 * @readonly
 * <p>0x03 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_NETWORK = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_PERIPHERAL
 * @type Number
 * @readonly
 * <p>0x05 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_PERIPHERAL = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_PHONE
 * @type Number
 * @readonly
 * <p>0x02 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_PHONE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_TOY
 * @type Number
 * @readonly
 * <p>0x08</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_TOY = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_UNCATEGORIZED
 * @type Number
 * @readonly
 * <p>0x1F </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_UNCATEGORIZED = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MAJOR_WEARABLE
 * @type Number
 * @readonly
 * <p>0x07 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MAJOR_WEARABLE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAMCORDER
 * @type Number
 * @readonly
 * <p>0x0d</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAMCORDER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAR_AUDIO
 * @type Number
 * @readonly
 * <p>0x08</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAR_AUDIO = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_DISPLAY_AND_LOUDSPEAKER
 * @type Number
 * @readonly
 * <p>0x0f</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_DISPLAY_AND_LOUDSPEAKER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_GAMING_TOY
 * @type Number
 * @readonly
 * <p>0x12</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_GAMING_TOY = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_HANDSFREE
 * @type Number
 * @readonly
 * <p>0x02</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_HANDSFREE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_HEADPHONES
 * @type Number
 * @readonly
 * <p>0x06</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_HEADPHONES = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_HIFI
 * @type Number
 * @readonly
 * <p>0x0a</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_HIFI = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_LOUDSPEAKER
 * @type Number
 * @readonly
 * <p>0x05</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_LOUDSPEAKER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_MICROPHONE
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_MICROPHONE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_MONITOR
 * @type Number
 * @readonly
 * <p>0x0e</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_MONITOR = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_PORTABLE_AUDIO
 * @type Number
 * @readonly
 * <p>0x07</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_PORTABLE_AUDIO = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_SETTOP_BOX
 * @type Number
 * @readonly
 * <p>0x09</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_SETTOP_BOX = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_UNRECOGNIZED
 * @type Number
 * @readonly
 * <p>0x00</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_UNRECOGNIZED = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_VCR
 * @type Number
 * @readonly
 * <p>0x0b</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_VCR = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CAMERA
 * @type Number
 * @readonly
 * <p>0x0c</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CAMERA = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CONFERENCING
 * @type Number
 * @readonly
 * <p>0x10</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CONFERENCING = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_AV_WEARABLE_HEADSET
 * @type Number
 * @readonly
 * <p>0x01</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_AV_WEARABLE_HEADSET = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_DESKTOP
 * @type Number
 * @readonly
 * <p>0x01</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_DESKTOP = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_HANDHELD_PC_OR_PDA
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_HANDHELD_PC_OR_PDA = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_LAPTOP
 * @type Number
 * @readonly
 * <p>0x03</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_LAPTOP = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_PALM_PC_OR_PDA
 * @type Number
 * @readonly
 * <p>0x05</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_PALM_PC_OR_PDA = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_SERVER
 * @type Number
 * @readonly
 * <p>0x02</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_SERVER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_UNCATEGORIZED
 * @type Number
 * @readonly
 * <p>0x00 </p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_UNCATEGORIZED = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_WEARABLE
 * @type Number
 * @readonly
 * <p>0x06</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_WEARABLE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_ANKLE_PROSTHESIS
 * @type Number
 * @readonly
 * <p>0x0d</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_ANKLE_PROSTHESIS = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BLOOD_PRESSURE_MONITOR
 * @type Number
 * @readonly
 * <p>0x01</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BLOOD_PRESSURE_MONITOR = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BODY_COMPOSITION_ANALYZER
 * @type Number
 * @readonly
 * <p>0x09</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BODY_COMPOSITION_ANALYZER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_DATA_DISPLAY
 * @type Number
 * @readonly
 * <p>0x07</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_DATA_DISPLAY = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_GLUCOSE_METER
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_GLUCOSE_METER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_KNEE_PROSTHESIS
 * @type Number
 * @readonly
 * <p>0x0c</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_KNEE_PROSTHESIS = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_MEDICATION_MONITOR
 * @type Number
 * @readonly
 * <p>0x0b</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_MEDICATION_MONITOR = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_OXIMETER
 * @type Number
 * @readonly
 * <p>0x05</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_OXIMETER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_RATE_MONITOR
 * @type Number
 * @readonly
 * <p>0x06</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_RATE_MONITOR = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_STEP_COUNTER
 * @type Number
 * @readonly
 * <p>0x08</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_STEP_COUNTER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_THERMOMETER
 * @type Number
 * @readonly
 * <p>0x02</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_THERMOMETER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_UNDEFINED
 * @type Number
 * @readonly
 * <p>0x00</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_UNDEFINED = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_WEIGHING_SCALE
 * @type Number
 * @readonly
 * <p>0x03</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_WEIGHING_SCALE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_CAMERA
 * @type Number
 * @readonly
 * <p>0x08</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_CAMERA = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_DISPLAY
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_DISPLAY = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_PRINTER
 * @type Number
 * @readonly
 * <p>0x20</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_PRINTER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_SCANNER
 * @type Number
 * @readonly
 * <p>0x10</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_SCANNER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_UNCATEGORIZED
 * @type Number
 * @readonly
 * <p>0x00</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_UNCATEGORIZED = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_CARD_READER
 * @type Number
 * @readonly
 * <p>0x06</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_CARD_READER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DEGITIZER_TABLET
 * @type Number
 * @readonly
 * <p>0x05</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DEGITIZER_TABLET = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DIGITAL_PEN
 * @type Number
 * @readonly
 * <p>0x07</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DIGITAL_PEN = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_GAMEPAD
 * @type Number
 * @readonly
 * <p>0x02</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_GAMEPAD = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_INPUT_DEVICE
 * @type Number
 * @readonly
 * <p>0x09</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_INPUT_DEVICE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_SCANNER
 * @type Number
 * @readonly
 * <p>0x08</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_SCANNER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_JOYSTICK
 * @type Number
 * @readonly
 * <p>0x01</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_JOYSTICK = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD
 * @type Number
 * @readonly
 * <p>0x10</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE
 * @type Number
 * @readonly
 * <p>0x30</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_POINTING_DEVICE
 * @type Number
 * @readonly
 * <p>0x20</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_POINTING_DEVICE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_REMOTE_CONTROL
 * @type Number
 * @readonly
 * <p>0x03</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_REMOTE_CONTROL = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_SENSING_DEVICE
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_SENSING_DEVICE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_UNCATEGORIZED
 * @type Number
 * @readonly
 * <p>0</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_UNCATEGORIZED = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CELLULAR
 * @type Number
 * @readonly
 * <p>0x01</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CELLULAR = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CORDLESS
 * @type Number
 * @readonly
 * <p>0x02</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CORDLESS = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_ISDN
 * @type Number
 * @readonly
 * <p>0x05</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_ISDN = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_MODEM_OR_GATEWAY
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_MODEM_OR_GATEWAY = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_SMARTPHONE
 * @type Number
 * @readonly
 * <p>0x03</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_SMARTPHONE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_UNCATEGORIZED
 * @type Number
 * @readonly
 * <p>0x00</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_UNCATEGORIZED = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_TOY_CONTROLLER
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_TOY_CONTROLLER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_TOY_DOLL
 * @type Number
 * @readonly
 * <p>0x03</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_TOY_DOLL = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_TOY_GAME
 * @type Number
 * @readonly
 * <p>0x05</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_TOY_GAME = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_TOY_ROBOT
 * @type Number
 * @readonly
 * <p>0x01</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_TOY_ROBOT = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_TOY_VEHICLE
 * @type Number
 * @readonly
 * <p>0x02</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_TOY_VEHICLE = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_GLASSES
 * @type Number
 * @readonly
 * <p>0x05</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_GLASSES = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_HELMET
 * @type Number
 * @readonly
 * <p>0x04</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_HELMET = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_JACKET
 * @type Number
 * @readonly
 * <p>0x03</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_JACKET = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_PAGER
 * @type Number
 * @readonly
 * <p>0x02</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_PAGER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_WRITST_WATCH
 * @type Number
 * @readonly
 * <p>0x01</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_WRITST_WATCH = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_AUDIO
 * @type Number
 * @readonly
 * <p>0x0100</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_AUDIO = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_CAPTURING
 * @type Number
 * @readonly
 * <p>0x0040</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_CAPTURING = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_INFORMATION
 * @type Number
 * @readonly
 * <p>0x0400</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_INFORMATION = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_LIMITED_DISCOVERABILITY
 * @type Number
 * @readonly
 * <p>0x0001</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_LIMITED_DISCOVERABILITY = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_NETWORKING
 * @type Number
 * @readonly
 * <p>0x0010</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_NETWORKING = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_OBJECT_TRANSFER
 * @type Number
 * @readonly
 * <p>0x0080</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_OBJECT_TRANSFER = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_POSITIONING
 * @type Number
 * @readonly
 * <p>0x0008</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_POSITIONING = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_RENDERING
 * @type Number
 * @readonly
 * <p>0x0020</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_RENDERING = null;

/**
 * @property BLUETOOTH_CLASS_DEVICE_SERVICE_TELEPHONY
 * @type Number
 * @readonly
 * <p>0x0200</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_SERVICE_TELEPHONY = null;

/**
 * @property BLUETOOTH_SOCKET_STATE_CLOSED
 * @type Number
 * @readonly
 * <p>Closed state of Bluetooth socket.</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_SOCKET_STATE_CLOSED = null;

/**
 * @property BLUETOOTH_SOCKET_STATE_OPEN
 * @type Number
 * @readonly
 * <p>Open state of Bluetooth socket.</p>
 */
Modules.Tizen.Bluetooth.BLUETOOTH_SOCKET_STATE_OPEN = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Bluetooth.bubbleParent = null;

/**
 * @property deviceMajor
 * @type Number
 * @readonly
 * <p>Accessor to major device class identifiers of Bluetooth class of device (CoD).</p>
 * @description <p>The supported major types are: </p>
<ul>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_MISC}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_COMPUTER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_PHONE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_NETWORK}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_AUDIO_VIDEO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_PERIPHERAL}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_IMAGING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_WEARABLE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_TOY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_HEALTH}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MAJOR_UNCATEGORIZED}</li>
</ul>
 */
Modules.Tizen.Bluetooth.deviceMajor = null;

/**
 * @property deviceMinor
 * @type Number
 * @readonly
 * <p>Accessor to minor device class identifiers of Bluetooth class of device (CoD). </p>
 * @description <p>The supported minor types are: </p>
<ul>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAMCORDER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_HANDSFREE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_HEADPHONES}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_HIFI}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_LOUDSPEAKER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_MICROPHONE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_UNRECOGNIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_VCR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_DESKTOP}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_LAPTOP}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_SERVER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_WEARABLE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_THERMOMETER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_UNDEFINED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_CAMERA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_DISPLAY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_PRINTER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_SCANNER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_IMAGING_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_GAMEPAD}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_JOYSTICK}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CELLULAR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_CORDLESS}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_ISDN}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_SMARTPHONE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_UNCATEGORIZED}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_CONTROLLER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_DOLL}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_GAME}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_ROBOT}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_TOY_VEHICLE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_GLASSES}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_HELMET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_JACKET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_PAGER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_CAR_AUDIO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_GAMING_TOY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_PORTABLE_AUDIO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_SETTOP_BOX}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CAMERA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_VIDEO_CONFERENCING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_WEARABLE_HEADSET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_ANKLE_PROSTHESIS}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_DATA_DISPLAY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_GLUCOSE_METER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_KNEE_PROSTHESIS}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_MEDICATION_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_OXIMETER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_STEP_COUNTER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_WEIGHING_SCALE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_CARD_READER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DEGITIZER_TABLET}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_DIGITAL_PEN}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_SCANNER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_POINTING_DEVICE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_REMOTE_CONTROL}</li>
<li><Modules.Tizen.Bluetooth.BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_SENSING_DEVICE ></li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_WEARABLE_WRITST_WATCH}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_AV_DISPLAY_AND_LOUDSPEAKER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BLOOD_PRESSURE_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_BODY_COMPOSITION_ANALYZER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_HEALTH_PULSE_RATE_MONITOR}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_HANDHELD_INPUT_DEVICE}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PHONE_MODEM_OR_GATEWAY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_HANDHELD_PC_OR_PDA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_COMPUTER_PALM_PC_OR_PDA}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_MINOR_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE}</li>
</ul>
 */
Modules.Tizen.Bluetooth.deviceMinor = null;

/**
 * @property deviceService
 * @type Number
 * @readonly
 * <p>Accessor to major service class identifiers of Bluetooth class of device (CoD). </p>
 * @description <p>The supported types are: </p>
<ul>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_LIMITED_DISCOVERABILITY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_POSITIONING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_NETWORKING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_RENDERING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_CAPTURING}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_OBJECT_TRANSFER}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_AUDIO}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_TELEPHONY}</li>
<li>{@link Modules.Tizen.Bluetooth#property-BLUETOOTH_CLASS_DEVICE_SERVICE_INFORMATION}</li>
</ul>
 */
Modules.Tizen.Bluetooth.deviceService = null;

/**
 * @class Modules.Tizen.Bookmark
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This interface provides access to the bookmark folder and bookmark item.</p>
 */
Modules.Tizen.Bookmark = {};

/**
 * @class Modules.Tizen.Bookmark.Bookmark
 * @typestr Object of Modules.Tizen.Bookmark
 * @extends Titanium.Proxy
 * <p>This interface is an abstract interface for {@link Modules.Tizen.Bookmark.BookmarkItem} and {@link Modules.Tizen.Bookmark.BookmarkFolder} types. </p>
 */
Modules.Tizen.Bookmark.Bookmark = {};

/**
 * @class Modules.Tizen.Bookmark.BookmarkFolder
 * @typestr Object of Modules.Tizen.Bookmark
 * @extends Modules.Tizen.Bookmark.Bookmark
 * <p>This interface implements the BookmarkFolder object.</p>
 */
Modules.Tizen.Bookmark.BookmarkFolder = {};

/**
 * @method getParent
 * <p>Gets the value of the {@link Modules.Tizen.Bookmark.BookmarkFolder#property-parent parent} property.</p>
 * @return {Modules.Tizen.Bookmark.BookmarkFolder} 
*/
Modules.Tizen.Bookmark.BookmarkFolder.getParent = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Modules.Tizen.Bookmark.BookmarkFolder#property-title title} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bookmark.BookmarkFolder.getTitle = function(){};

/**
 * @property parent
 * @type Modules.Tizen.Bookmark.BookmarkFolder
 * @readonly
 * <p>The parent bookmark folder.
This attribute is meaningful when this object is successfully added or retrieved. If this BookmarkItem is not added yet, its value is set to undefined.
If the parent bookmark folder indicates the root bookmark folder, the value will be null.</p>
 */
Modules.Tizen.Bookmark.BookmarkFolder.parent = null;

/**
 * @property title
 * @type String
 * @readonly
 * <p>The title of the bookmark folder.</p>
 */
Modules.Tizen.Bookmark.BookmarkFolder.title = null;

/**
 * @class Modules.Tizen.Bookmark.BookmarkItem
 * @typestr Object of Modules.Tizen.Bookmark
 * @extends Modules.Tizen.Bookmark.Bookmark
 * <p>This interface implements the BookmarkItem object.</p>
 */
Modules.Tizen.Bookmark.BookmarkItem = {};

/**
 * @method getParent
 * <p>Gets the value of the {@link Modules.Tizen.Bookmark.BookmarkItem#property-parent parent} property.</p>
 * @return {Modules.Tizen.Bookmark.BookmarkFolder} 
*/
Modules.Tizen.Bookmark.BookmarkItem.getParent = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Modules.Tizen.Bookmark.BookmarkItem#property-title title} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bookmark.BookmarkItem.getTitle = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Modules.Tizen.Bookmark.BookmarkItem#property-url url} property.</p>
 * @return {String} 
*/
Modules.Tizen.Bookmark.BookmarkItem.getUrl = function(){};

/**
 * @property parent
 * @type Modules.Tizen.Bookmark.BookmarkFolder
 * @readonly
 * <p>The parent bookmark folder.
This attribute is meaningful when this object is successfully added or retrieved. If this BookmarkItem is not added yet, its value is set to undefined.
If the parent bookmark folder indicates the root bookmark folder, the value will be null.</p>
 */
Modules.Tizen.Bookmark.BookmarkItem.parent = null;

/**
 * @property title
 * @type String
 * @readonly
 * <p>The title of the bookmark.</p>
 */
Modules.Tizen.Bookmark.BookmarkItem.title = null;

/**
 * @property url
 * @type String
 * @readonly
 * <p>The uri of the bookmark.</p>
 */
Modules.Tizen.Bookmark.BookmarkItem.url = null;

/**
 * @method add
 * <p>Adds a bookmark item or a bookmark folder.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/bookmark.write</code></li>
</ul>
<p>This is a platform level privilege.</p>
 * @param {Modules.Tizen.Bookmark.Bookmark} bookmark 
 * <p>The bookmark to be added.</p>
 * @param {Modules.Tizen.Bookmark.BookmarkFolder} parentFolder (optional)
 * <p>The parent folder of a bookmark to be added.</p>
 * @return void
*/
Modules.Tizen.Bookmark.add = function(bookmark, parentFolder){};

/**
 * @method createBookmarkFolder
 * <p>Creates an instance of {@link Modules.Tizen.Bookmark.BookmarkFolder}</p>
 * @param {Object} args 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details.</p>
 * @return {Modules.Tizen.Bookmark.BookmarkFolder} 
*/
Modules.Tizen.Bookmark.createBookmarkFolder = function(args){};

/**
 * @method createBookmarkItem
 * <p>Creates an instance of {@link Modules.Tizen.Bookmark.BookmarkItem}</p>
 * @param {Object} args 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details.</p>
 * @return {Modules.Tizen.Bookmark.BookmarkItem} 
*/
Modules.Tizen.Bookmark.createBookmarkItem = function(args){};

/**
 * @method getBookmarks
 * <p>Gets all bookmark items and bookmark folders.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/bookmark.read</code></li>
</ul>
<p>This is a platform level privilege.</p>
 * @param {Modules.Tizen.Bookmark.BookmarkFolder} parentFolder (optional)
 * <p>The parent bookmark folder to retrieve the result bookmarks.</p>
 * @param {Boolean} recursive (optional)
 * <p>The flag indicating whether sub-bookmarks are also retrieved recursively or not.</p>
 * @return {Modules.Tizen.Bookmark.Bookmark[]} 
*/
Modules.Tizen.Bookmark.getBookmarks = function(parentFolder, recursive){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Bookmark.getBubbleParent = function(){};

/**
 * @method remove
 * <p>Gets information of the installed packages.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/bookmark.write</code></li>
</ul>
<p>This is a platform level privilege.</p>
 * @param {Modules.Tizen.Bookmark.Bookmark} bookmark (optional)
 * <p>The bookmark to be removed.</p>
 * @return void
*/
Modules.Tizen.Bookmark.remove = function(bookmark){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Bookmark.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Bookmark.bubbleParent = null;

/**
 * @class Modules.Tizen.Calendar
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>interfaces and methods for users to manage their schedule.</p>
 * @description <p>Separate calendars can be implemented for group related events or tasks. For example, a user may 
have a work, personal, and family calendar. A calendar entry is called an event and is composed 
of a series of attributes, such as purpose, starting time, and duration. A calendar is a 
collection of events.
Internet Calendaring and Scheduling Core Object Specification (iCalendar), defines a format for 
exchanging event items. Mapping to specified event/task attributes in this API is as per this 
specification. 
To know more about this specification, see <a href="http://tools.ietf.org/html/rfc5545">RFC 5545</a>.</p>
<p>This API provides functionality to read, create, delete, and update items in specific calendars. 
Calendars can be obtained using the {@link Modules.Tizen.Calendar#method-getCalendars getCalendars} 
method, which returns an array of {@link Modules.Tizen.Calendar Calendar} objects.</p>
<p>The <code>Calendar</code> module is a thin wrapper on the Tizen <code>Calendar</code> class.</p>
<p>See also:</p>
<ul>
<li>
<p><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fcalendar.html">Tizen Calendar API</a></p>
</li>
<li>
<p><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.appprogramming%2Fhtml%2Fguide%2Fsocial_guide%2Fcalendar.htm">Tizen  System Info Guide</a></p>
</li>
</ul>
 * <h3>Example</h3>
 * <h4>Create and add an event</h4>
 * <p><p>Create a single event and add it to the default calendar.</p></p><pre>var Tizen = require('tizen'),
    calendar = Tizen.Calendar.getDefaultCalendar('EVENT');

try {
    var calendarEvent = Tizen.Calendar.createCalendarEvent({
        description: 'Remember the milk',
        summary: 'Milk',
        startDate: new Date(2013, 4, 25, 18, 0),
        duration: 3600000,
        location: 'Grocery store'
    });
    calendar.add(calendarEvent);
} catch (err) {
    console.error('Error adding event. Type: ' + err.type + ", message: " + err.message);
    return;
}</pre>
 */
Modules.Tizen.Calendar = {};

/**
 * @class Modules.Tizen.Calendar.CalendarAlarm
 * @typestr Object of Modules.Tizen.Calendar
 * @extends Titanium.Proxy
 * <p>An interface that contains information related to an event alarm or reminder.</p>
 */
Modules.Tizen.Calendar.CalendarAlarm = {};

/**
 * @method getAbsoluteDate
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-absoluteDate absoluteDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarAlarm.getAbsoluteDate = function(){};

/**
 * @method getBefore
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-before before} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Calendar.CalendarAlarm.getBefore = function(){};

/**
 * @method getDescription
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-description description} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAlarm.getDescription = function(){};

/**
 * @method getMethod
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-method method} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAlarm.getMethod = function(){};

/**
 * @method setAbsoluteDate
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-absoluteDate absoluteDate} property.</p>
 * @param {Date} absoluteDate 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAlarm.setAbsoluteDate = function(absoluteDate){};

/**
 * @method setBefore
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-before before} property.</p>
 * @param {Number} before 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAlarm.setBefore = function(before){};

/**
 * @method setDescription
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-description description} property.</p>
 * @param {String} description 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAlarm.setDescription = function(description){};

/**
 * @method setMethod
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAlarm#property-method method} property.</p>
 * @param {String} method 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAlarm.setMethod = function(method){};

/**
 * @property absoluteDate
 * @type Date
 * <p>An attribute to record the absolute date and time when an alarm should be triggered.</p>
 * @description <p><code>absoluteDate</code> and <code>before</code> are mutually exclusive.</p>
<p>This attribute is precise to the second. Milliseconds are ignored.</p>
 */
Modules.Tizen.Calendar.CalendarAlarm.absoluteDate = null;

/**
 * @property before
 * @type Number
 * <p>An attribute to store the duration before an event starts on which the alarm should be 
triggered.</p>
 * @description <p>The duration should be positive.
<code>absoluteDate</code> and <code>before</code> are mutually exclusive.</p>
<p>Will be rounded to integer seconds.</p>
 */
Modules.Tizen.Calendar.CalendarAlarm.before = null;

/**
 * @property description
 * @type String
 * <p>An attribute to store the description of an alarm.</p>
 * @description <p>When the method is {@link Modules.Tizen.Calendar#property-ALARM_METHOD_DISPLAY}, the alarm must also 
include a non-null description attribute, 
which contains the text to be displayed when the alarm is triggered. </p>
 */
Modules.Tizen.Calendar.CalendarAlarm.description = null;

/**
 * @property method
 * @type String
 * <p>An attribute to denote the notification method used by an alarm.</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ALARM_METHOD_SOUND}</li>
<li>{@link Modules.Tizen.Calendar#property-ALARM_METHOD_DISPLAY}</li>
</ul>
 */
Modules.Tizen.Calendar.CalendarAlarm.method = null;

/**
 * @class Modules.Tizen.Calendar.CalendarAttendee
 * @typestr Object of Modules.Tizen.Calendar
 * @extends Titanium.Proxy
 * <p>This interface implements the CalendarAttendee object that contains information about an event 
attendee.</p>
<p>By default, each of the attributes of this interface are undefined.</p>
 */
Modules.Tizen.Calendar.CalendarAttendee = {};

/**
 * @method getContactRef
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-contactRef contactRef} property.</p>
 * @return {Modules.Tizen.ContactRef} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getContactRef = function(){};

/**
 * @method getDelegateURI
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-delegateURI delegateURI} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getDelegateURI = function(){};

/**
 * @method getDelegatorURI
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-delegatorURI delegatorURI} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getDelegatorURI = function(){};

/**
 * @method getGroup
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-group group} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getGroup = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getName = function(){};

/**
 * @method getRole
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-role role} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getRole = function(){};

/**
 * @method getRsvp
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-rsvp rsvp} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getRsvp = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-status status} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getStatus = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getType = function(){};

/**
 * @method getUri
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-uri uri} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarAttendee.getUri = function(){};

/**
 * @method setContactRef
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-contactRef contactRef} property.</p>
 * @param {Modules.Tizen.ContactRef} contactRef 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setContactRef = function(contactRef){};

/**
 * @method setDelegateURI
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-delegateURI delegateURI} property.</p>
 * @param {String} delegateURI 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setDelegateURI = function(delegateURI){};

/**
 * @method setDelegatorURI
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-delegatorURI delegatorURI} property.</p>
 * @param {String} delegatorURI 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setDelegatorURI = function(delegatorURI){};

/**
 * @method setGroup
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-group group} property.</p>
 * @param {String} group 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setGroup = function(group){};

/**
 * @method setName
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-name name} property.</p>
 * @param {String} name 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setName = function(name){};

/**
 * @method setRole
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-role role} property.</p>
 * @param {String} role 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setRole = function(role){};

/**
 * @method setRsvp
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-rsvp rsvp} property.</p>
 * @param {Boolean} rsvp 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setRsvp = function(rsvp){};

/**
 * @method setStatus
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-status status} property.</p>
 * @param {String} status 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setStatus = function(status){};

/**
 * @method setType
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-type type} property.</p>
 * @param {String} type 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setType = function(type){};

/**
 * @method setUri
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarAttendee#property-uri uri} property.</p>
 * @param {String} uri 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarAttendee.setUri = function(uri){};

/**
 * @property contactRef
 * @type Modules.Tizen.ContactRef
 * <p>An attribute to store the participant's reference in the Contact API.</p>
 * @description <p>If the contact is not resolved, this attribute will be set to null. </p>
 */
Modules.Tizen.Calendar.CalendarAttendee.contactRef = null;

/**
 * @property delegateURI
 * @type String
 * <p>An attribute to stores the URI of the attendee to whom the person has delegated his 
participation. (See RFC 5545, Section 3.2.5.)</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.delegateURI = null;

/**
 * @property delegatorURI
 * @type String
 * <p>An attribute to store the URI of the person who has delegated their participation to this 
attendee. (See RFC 5545, Section 3.2.4.)</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.delegatorURI = null;

/**
 * @property group
 * @type String
 * <p>An attribute to store the participant's group or list membership. 
(See RFC 5545, Section 3.2.11.)</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.group = null;

/**
 * @property name
 * @type String
 * <p>An attribute to store the name of an attendee.</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.name = null;

/**
 * @property role
 * @type String
 * <p>An attribute to denote the role of the attendee. (See RFC 5545, Section 3.2.16.)</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_ROLE_REQ_PARTICIPANT}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_ROLE_OPT_PARTICIPANT}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_ROLE_NON_PARTICIPANT}</li>
</ul>
<p>The default value is {@link Modules.Tizen.Calendar#property-ATTENDEE_ROLE_REQ_PARTICIPANT}.</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.role = null;

/**
 * @property rsvp
 * @type Boolean
 * <p>An attribute to store the attendee's participation status reply (RSVP). 
(See RFC 5545, Section 3.2.17.)</p>
 * @description <p>By default, this attribute is set to FALSE.</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.rsvp = null;

/**
 * @property status
 * @type String
 * <p>An attribute to store the participant's attendance status. (See RFC 5545, Section 3.2.12.)</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_PENDING}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_ACCEPTED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_DECLINED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_TENTATIVE}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_DELEGATED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_COMPLETED}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_IN_PROCESS}</li>
</ul>
<p>The default value is {@link Modules.Tizen.Calendar#property-ATTENDEE_STATUS_PENDING}.</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.status = null;

/**
 * @property type
 * @type String
 * <p>An attribute to indicate the type of a participant. (See RFC 5545, Section 3.2.3.)</p>
 * @description <p>The value is one of the constants defined for this type: </p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_INDIVIDUAL}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_GROUP}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_RESOURCE}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_ROOM}</li>
<li>{@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_UNKNOWN}</li>
</ul>
<p>The default value is {@link Modules.Tizen.Calendar#property-ATTENDEE_TYPE_INDIVIDUAL}.</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.type = null;

/**
 * @property uri
 * @type String
 * <p>An attribute to store the URI for the attendee.</p>
 * @description <p>This is often an email in the form 'mailto:name@domain.com'.</p>
 */
Modules.Tizen.Calendar.CalendarAttendee.uri = null;

/**
 * @class Modules.Tizen.Calendar.CalendarEvent
 * @typestr Object of Modules.Tizen.Calendar
 * @extends Modules.Tizen.Calendar.CalendarItem
 * <p>An interface that implements the calendarEvent object.</p>
 */
Modules.Tizen.Calendar.CalendarEvent = {};

/**
 * @method expandRecurrence
 * <p>This method takes into consideration all the parameters of the event recurrence rule to 
generate the instances occurring in a given time interval.</p>
 * @description <p>The call involves retrieving from the database detached instances of an event to replace 
their corresponding virtual instances in the returned list. 
The client can then use CalendarEvent.isDetached attribute to identify detached instances.
If the event is not saved to a calendar yet, only virtual instances will be returned.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {Date} startDate 
 * <p>The start date/ time of an event(inclusive).</p>
 * @param {Date} endDate 
 * <p>The end date/ time of an event (inclusive).</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarEvent.expandRecurrence = function(startDate, endDate, callback){};

/**
 * @method getAvailability
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarEvent#property-availability availability} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarEvent.getAvailability = function(){};

/**
 * @method getEndDate
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarEvent#property-endDate endDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarEvent.getEndDate = function(){};

/**
 * @method getIsDetached
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarEvent#property-isDetached isDetached} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Calendar.CalendarEvent.getIsDetached = function(){};

/**
 * @method getRecurrenceRule
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarEvent#property-recurrenceRule recurrenceRule} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarEvent.getRecurrenceRule = function(){};

/**
 * @method setAvailability
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarEvent#property-availability availability} property.</p>
 * @param {String} availability 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarEvent.setAvailability = function(availability){};

/**
 * @method setEndDate
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarEvent#property-endDate endDate} property.</p>
 * @param {Date} endDate 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarEvent.setEndDate = function(endDate){};

/**
 * @method setRecurrenceRule
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarEvent#property-recurrenceRule recurrenceRule} property.</p>
 * @param {Date} recurrenceRule 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarEvent.setRecurrenceRule = function(recurrenceRule){};

/**
 * @property availability
 * @type String
 * <p>An attribute to indicate the availability of a person for an event. 
(See RFC 5545 - Section 3.2.9).</p>
 * @description <p>The value is one of the constants defined for this parameter : 
{@link Modules.Tizen.Calendar#property-EVENT_AVAILABILITY_BUSY} or 
{@link Modules.Tizen.Calendar#property-EVENT_AVAILABILITY_FREE}.</p>
<p>The default value is {@link Modules.Tizen.Calendar#property-EVENT_AVAILABILITY_BUSY}.</p>
 */
Modules.Tizen.Calendar.CalendarEvent.availability = null;

/**
 * @property endDate
 * @type Date
 * <p>An attribute to store the end date/time of an event.(see RFC 5545 - Section 3.8.2.2).</p>
 * @description <p>This endDate must be in the same time zone as the startDate. 
Note that duration and endDate are mutually exclusive, only one of them can be non-null.</p>
<p>This attribute is precise to the second. Milliseconds are ignored.</p>
<p>The default value for this attribute is null.</p>
 */
Modules.Tizen.Calendar.CalendarEvent.endDate = null;

/**
 * @property isDetached
 * @type Boolean
 * @readonly
 * <p>An attribute that behaves like a flag to indicate if an instance of a recurring event is 
detached and if it has been modified and saved to the calendar.</p>
 */
Modules.Tizen.Calendar.CalendarEvent.isDetached = null;

/**
 * @property recurrenceRule
 * @type Date
 * <p>An attribute to denote the recurrence rule for the event.</p>
 * @description <p>The generated instances of a recurring event will have the same recurrence rule as their 
parent.
This is useful when editing a particular event instance and choosing to update all instances 
from it.</p>
<p>The detached instances (specific instances that have been modified as saved to the calendar) 
of a recurring event will not have any recurrence rule. 
No recurrence rule can be set on detached instances either. If one tries to set a recurrence 
rule on a detached event, 
a NotSupportedError should be thrown. Detached instances can be distinguished by checking 
their isDetached attribute. (See RFC 5545, Section 3.3.10.)</p>
 */
Modules.Tizen.Calendar.CalendarEvent.recurrenceRule = null;

/**
 * @class Modules.Tizen.Calendar.CalendarEventId
 * @typestr Object of Modules.Tizen.Calendar
 * <p>This interface contains a UID and an optional recurrence ID attribute to identify calendar 
events.</p>
 * @description <p>The recurrence identifier (rid attribute) is used to identify a particular instance of a 
recurring event. 
All instances of the same recurring event have the same UID but different recurrence IDs.</p>
 */
Modules.Tizen.Calendar.CalendarEventId = {};

/**
 * @property rid
 * @type String
 * <p>(optional) An attribute to store the recurrence ID of a CalendarEvent instance.</p>
 * @description <p>This attribute is used in conjunction with the <code>uid</code> property to identify 
a specific instance of a recurring event.</p>
<p>The parent of a recurrence instance has its rid set to null.
By default, this attribute is set to null. 
(See RFC 5545 (section 3.8.4.4) for more details about this parameter.)</p>
 */
Modules.Tizen.Calendar.CalendarEventId.rid = null;

/**
 * @property uid
 * @type String
 * <p>An attribute to persistently, and uniquely identify a calendar event.</p>
 * @description <p>This value is assigned by the platform when the event is added to the calendar, 
it is locally unique and persistent for the life time of the event and it cannot be modified 
by the developers.</p>
<p>See RFC 5545 (section 3.8.4.7) for more details about this parameter and algorithms to 
guarantee assignment of unique values. This value is assigned by the platform when the 
{@link Modules.Tizen.Calendar.CalendarInstance#method-add add} method is successfully invoked.</p>
 */
Modules.Tizen.Calendar.CalendarEventId.uid = null;

/**
 * @class Modules.Tizen.Calendar.CalendarInstance
 * @typestr Object of Modules.Tizen.Calendar
 * @extends Titanium.Proxy
 * <p>This interface that has methods to manage events or tasks in a calendar. 
A Calendar object contains a set of events or tasks, depending on the calendar type.</p>
 * @description <p>This interface offers the following methods to manage events in a calendar:</p>
<ul>
<li>
<p>Finding items using a key-value filter.</p>
</li>
<li>
<p>Adding items to a specific calendar using {@link Modules.Tizen.Calendar.CalendarInstance#method-add add}
/ {@link Modules.Tizen.Calendar.CalendarInstance#method-addBatch addBatch} methods.</p>
</li>
<li>
<p>Updating existing items using [update](Modules.Tizen.Calendar.CalendarInstance.update] / 
{@link Modules.Tizen.Calendar.CalendarInstance#method-updateBatch updateBatch} methods.</p>
</li>
<li>
<p>Deleting existing items using {@link Modules.Tizen.Calendar.CalendarInstance#method-remove remove} / 
{@link Modules.Tizen.Calendar.CalendarInstance#method-removeBatch removeBatch} methods.</p>
</li>
</ul>
 */
Modules.Tizen.Calendar.CalendarInstance = {};




/**
 * @method add
 * <p>Adds an item to the calendar synchronously.</p>
 * @description <p>If the item is successfully inserted in the calendar, 
the CalendarItem will have its identifier (id attribute) set when the method returns.
To update an existing item, call the [update](Modules.Tizen.Calendar.CalendarInstance.update]
method instead. 
If you wish to add a copy of an existing CalendarItem object, 
call {@link Modules.Tizen.Calendar.CalendarItem#method-clone clone} method first and pass the clone to the 
{@link Modules.Tizen.Calendar.CalendarInstance#method-add add} method.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.write</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarItem} item 
 * <p>The calendar item to be added.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarInstance.add = function(item){};

/**
 * @method addBatch
 * <p>Adds an array of items to the calendar asynchronously.</p>
 * @description <p>If all the items are successfully added to the calendar, the success callback will be 
invoked, passing the list of CalendarItem objects that were added,
with their identifier set (id attribute).</p>
<p>If you wish to update an existing item, call the 
[update](Modules.Tizen.Calendar.CalendarInstance.update] method instead. 
If you wish to add a copy of an existing CalendarItem object, 
call {@link Modules.Tizen.Calendar.CalendarItem#method-clone clone} method first and pass the clone to 
the  {@link Modules.Tizen.Calendar.CalendarInstance#method-add add} method.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.write</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarItem[]} items 
 * <p>The list of calendar items to add.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarInstance.addBatch = function(items, callback){};

/**
 * @method find
 * <p>Finds and fetches an array of CalendarItem objects for items stored in the calendar 
according to the supplied filter if it is valid else it will return all the items stored.</p>
 * @description <p>If the filter is passed and contains valid values, only those values in the calendar that 
match the filter criteria as specified in the AbstractFilter interface will be returned in 
the <code>callback</code>. If no filter is passed, or the filter contains any invalid value which is 
null or undefined, then the implementation must return the full list of items in the 
<code>callback</code>. If no items are available in the calendar (it is empty) or no item matches the 
filter criteria, the <code>callback</code> will be invoked with an empty array.</p>
<p>Filter specific remarks:</p>
<ul>
<li>For event filtering based on start/end dates, items that recur during the given time 
interval will be found, even if the parent item itself is outside the interval.</li>
<li>For event filtering based on the identifier, the identifier type should be 
CalendarEventID (uid and rid). If no recurrence ID is given, the filter will match both 
the parent event and all its detached instances.</li>
</ul>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of 
your Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @param {Modules.Tizen.AbstractFilter} filter (optional)
 * <p>The supplied data used to filter the results of the 
{@link Modules.Tizen.Calendar.CalendarInstance find} method.</p>
 * @param {Modules.Tizen.SortMode} sortMode (optional)
 * <p>The sort order in which the items return.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarInstance.find = function(callback, filter, sortMode){};

/**
 * @method get
 * <p>Gets the calendar item with the specified identifier.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarEventId} id 
 * <p>The Calendar item identifier.</p>
 * @return {Modules.Tizen.Calendar.CalendarItem} <p>The matching CalendarItem object</p>
*/
Modules.Tizen.Calendar.CalendarInstance.get = function(id){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarInstance#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarInstance.getId = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarInstance#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarInstance.getName = function(){};

/**
 * @method remove
 * <p>Removes an item from the calendar that corresponds to the specified identifier. This 
method will throw an exception if it fails to remove the specified calendar item.</p>
 * @description <p>For (recurring) events: In the case of calendar events, if the recurrence id (rid attribute) 
is set to null, this method will remove the event identified by uid, and all of its possible 
detached instances.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.write</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarEventId} id 
 * <p>The identifier (ID attribute) of the item object to delete.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarInstance.remove = function(id){};

/**
 * @method removeBatch
 * <p>Removes several items from the calendar asynchronously depending on the specified 
identifiers.</p>
 * @description <p>For (recurring) events: In the case of calendar events, if the recurrence id, rid, is set to 
null, 
this method will remove the event identified by uid, as well as all its possible detached 
instances.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.write</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarEventId[]} ids 
 * <p>The identifiers (id attribute) of the items to delete</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarInstance.removeBatch = function(ids, callback){};

/**
 * @method update
 * <p>Updates an existing item in the calendar synchronously with the one specified in the argument.</p>
 * @description <p>In case of recurring events, the default behavior is to update all their instances 
(including their detached ones), 
as well. If you don't want that, the updateAllInstances flag should be set to false.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.write</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarItem} item 
 * <p>The Item object to update.</p>
 * @param {Boolean} updateAllInstances (optional)
 * <p>The flag indicating whether all the event instances should be updated as well or not 
(default value is true). 
This parameter only applies to calendar events, and doesn't apply to tasks.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarInstance.update = function(item, updateAllInstances){};

/**
 * @method updateBatch
 * <p>Updates an array of existing items in the calendar asynchronously with the specified 
values in the argument.</p>
 * @description <p>In case of recurring events, the default behavior is to update all their instances 
(including their detached ones), 
as well. If you don't want that, the updateAllInstances flag should be set to false.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.write</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarItem[]} items 
 * <p>The list of calendar item objects to update.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @param {Boolean} updateAllInstances (optional)
 * <p>The flag indicating whether all the event instances should be updated as well or not 
(default value is true). 
This parameter only applies to calendar events, and doesn't apply to tasks.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarInstance.updateBatch = function(items, callback, updateAllInstances){};

/**
 * @property id
 * @type String
 * @readonly
 * <p>An attribute to uniquely identify a calendar.</p>
 */
Modules.Tizen.Calendar.CalendarInstance.id = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>An attribute to assign a readable (descriptive) name for a calendar, such as work, 
personal, etc.</p>
 */
Modules.Tizen.Calendar.CalendarInstance.name = null;

/**
 * @class Modules.Tizen.Calendar.CalendarItem
 * @typestr Object of Modules.Tizen.Calendar
 * @extends Titanium.Proxy
 * <p>This is a parent interface that is used to create Calendar events and tasks. 
These attributes are shared by both events and tasks.</p>
 */
Modules.Tizen.Calendar.CalendarItem = {};

/**
 * @method clone
 * <p>Clones the CalendarItem object, detached from any calendar.</p>
 * @description <p>The CalendarItem object returned by the {@link Modules.Tizen.Calendar.CalendarItem#method-clone clone} 
method will have its identifier set to null and will be detached from any calendar.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.write</code></li>
</ul>
 * @param {Modules.Tizen.Calendar.CalendarItem} item 
 * <p>The new clone of the CalendarItem object.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.clone = function(item){};

/**
 * @method convertToString
 * <p>Converts the calendar item to a string format that will be generated and returned 
synchronously. </p>
 * @description <p>The export format is set using the format parameter.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {String} format 
 * <p>The format to use for exporting.</p>
 * @return {String} <p>The representation of the Calendar item.</p>
*/
Modules.Tizen.Calendar.CalendarItem.convertToString = function(format){};

/**
 * @method getAlarms
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-alarms alarms} property.</p>
 * @return {Modules.Tizen.Calendar.CalendarAlarm[]} 
*/
Modules.Tizen.Calendar.CalendarItem.getAlarms = function(){};

/**
 * @method getAttendees
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-attendees attendees} property.</p>
 * @return {Modules.Tizen.Calendar.CalendarAttendee[]} 
*/
Modules.Tizen.Calendar.CalendarItem.getAttendees = function(){};

/**
 * @method getCalendarId
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-calendarId calendarId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getCalendarId = function(){};

/**
 * @method getCategories
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-categories categories} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Calendar.CalendarItem.getCategories = function(){};

/**
 * @method getDescription
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-description description} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getDescription = function(){};

/**
 * @method getDuration
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-duration duration} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Calendar.CalendarItem.getDuration = function(){};

/**
 * @method getGeolocation
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-geolocation geolocation} property.</p>
 * @return {Modules.Tizen.SimpleCoordinates} 
*/
Modules.Tizen.Calendar.CalendarItem.getGeolocation = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-id id} property.</p>
 * @return {CalendarItemId} 
*/
Modules.Tizen.Calendar.CalendarItem.getId = function(){};

/**
 * @method getIsAllDay
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-isAllDay isAllDay} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Calendar.CalendarItem.getIsAllDay = function(){};

/**
 * @method getLastModificationDate
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-lastModificationDate lastModificationDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarItem.getLastModificationDate = function(){};

/**
 * @method getLocation
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-location location} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getLocation = function(){};

/**
 * @method getOrganizer
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-organizer organizer} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getOrganizer = function(){};

/**
 * @method getPriority
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-priority priority} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getPriority = function(){};

/**
 * @method getStartDate
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-startDate startDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarItem.getStartDate = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-status status} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getStatus = function(){};

/**
 * @method getSummary
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-summary summary} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getSummary = function(){};

/**
 * @method getVisibility
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-visibility visibility} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarItem.getVisibility = function(){};

/**
 * @method setAlarms
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-alarms alarms} property.</p>
 * @param {Modules.Tizen.Calendar.CalendarAlarm[]} alarms 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setAlarms = function(alarms){};

/**
 * @method setAttendees
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-attendees attendees} property.</p>
 * @param {Modules.Tizen.Calendar.CalendarAttendee[]} attendees 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setAttendees = function(attendees){};

/**
 * @method setCalendarId
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-calendarId calendarId} property.</p>
 * @param {String} calendarId 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setCalendarId = function(calendarId){};

/**
 * @method setCategories
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-categories categories} property.</p>
 * @param {String[]} categories 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setCategories = function(categories){};

/**
 * @method setDescription
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-description description} property.</p>
 * @param {String} description 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setDescription = function(description){};

/**
 * @method setDuration
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-duration duration} property.</p>
 * @param {Number} duration 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setDuration = function(duration){};

/**
 * @method setGeolocation
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-geolocation geolocation} property.</p>
 * @param {Modules.Tizen.SimpleCoordinates} geolocation 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setGeolocation = function(geolocation){};

/**
 * @method setIsAllDay
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-isAllDay isAllDay} property.</p>
 * @param {Boolean} isAllDay 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setIsAllDay = function(isAllDay){};

/**
 * @method setLocation
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-location location} property.</p>
 * @param {String} location 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setLocation = function(location){};

/**
 * @method setOrganizer
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-organizer organizer} property.</p>
 * @param {String} organizer 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setOrganizer = function(organizer){};

/**
 * @method setPriority
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-priority priority} property.</p>
 * @param {String} priority 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setPriority = function(priority){};

/**
 * @method setStartDate
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-startDate startDate} property.</p>
 * @param {Date} startDate 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setStartDate = function(startDate){};

/**
 * @method setStatus
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-status status} property.</p>
 * @param {String} status 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setStatus = function(status){};

/**
 * @method setSummary
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-summary summary} property.</p>
 * @param {String} summary 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setSummary = function(summary){};

/**
 * @method setVisibility
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarItem#property-visibility visibility} property.</p>
 * @param {String} visibility 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarItem.setVisibility = function(visibility){};

/**
 * @property alarms
 * @type Modules.Tizen.Calendar.CalendarAlarm[]
 * <p>An attribute array to lists the alarms (or reminders) associated to an item.</p>
 */
Modules.Tizen.Calendar.CalendarItem.alarms = null;

/**
 * @property attendees
 * @type Modules.Tizen.Calendar.CalendarAttendee[]
 * <p>An attribute array that lists the people attending an event. (See RFC 5545 - Section 3.8.4.3).</p>
 * @description <p>By default, this attribute is set to an empty array.</p>
 */
Modules.Tizen.Calendar.CalendarItem.attendees = null;

/**
 * @property calendarId
 * @type String
 * <p>An attribute to identify the calendar in which this item is saved.</p>
 * @description <p>By default, this attribute is set to null.</p>
 */
Modules.Tizen.Calendar.CalendarItem.calendarId = null;

/**
 * @property categories
 * @type String[]
 * <p>An attribute to indicate the item categories or subtypes of a calendar component. </p>
 * @description <p>The categories are useful in searching for a calendar component of a particular type and 
category. 
(See RFC 5545 - Section 3.8.1.2).  </p>
<p>Examples of categories are personal, work, vacation, travel, etc.
By default, this attribute is set to an empty array.</p>
 */
Modules.Tizen.Calendar.CalendarItem.categories = null;

/**
 * @property description
 * @type String
 * <p>An attribute to store the textual descriptions of an item.</p>
 * @description <p>It is usually used to provide a more complete description of the item and any supporting 
information than what is provided in the summary attribute. (See RFC 5545 - Section 3.8.1.5).</p>
<p>The default value is an empty string.</p>
 */
Modules.Tizen.Calendar.CalendarItem.description = null;

/**
 * @property duration
 * @type Number
 * <p>An attribute to denote the duration of the calendar component. (See RFC 5545 - Section 3.8.2.5).</p>
 * @description <p>By default, this attribute is set to null.</p>
<p>duration and endDate / dueDate are mutually exclusive, hence, only one of them have null.</p>
<p>Be rounded to second.</p>
 */
Modules.Tizen.Calendar.CalendarItem.duration = null;

/**
 * @property geolocation
 * @type Modules.Tizen.SimpleCoordinates
 * <p>An attribute to store the global position latitude and longitude of the location where 
the event is planned to take place. (See RFC 5545 - Section 3.8.1.6).</p>
 */
Modules.Tizen.Calendar.CalendarItem.geolocation = null;

/**
 * @property id
 * @type CalendarItemId
 * @readonly
 * <p>An attribute to persistently and uniquely identify an item in implementation.</p>
 * @description <p>Includes a UID and a possible recurrence ID that is needed to identify a particular instance 
of a recurring event.</p>
 */
Modules.Tizen.Calendar.CalendarItem.id = null;

/**
 * @property isAllDay
 * @type Boolean
 * <p>An attribute that behaves like a flag to indicate whether an event is an all-day event or not.</p>
 * @description <p>If set to true, then the time and time zone of the startDate are to be ignored and are not 
guaranteed to be stored in the database. An all-day event always covers the whole day, 
regardless of which time zone it was defined in and what the current time zone is. The 
duration must be n<em>60</em>24 minutes for an event lasting n days.</p>
<p>The default value for this attribute is false.</p>
 */
Modules.Tizen.Calendar.CalendarItem.isAllDay = null;

/**
 * @property lastModificationDate
 * @type Date
 * @readonly
 * <p>An attribute to identify the last modified date and time of an item.</p>
 * @description <p>This attribute is automatically populated and cannot be edited by the client.
(See RFC 5545 - Section 3.8.7.3).</p>
 */
Modules.Tizen.Calendar.CalendarItem.lastModificationDate = null;

/**
 * @property location
 * @type String
 * <p>An attribute to store the location or the intended venue for the activity defined by the 
calendar item. (See RFC 5545 - Section 3.8.1.7)</p>
 * @description <p>The default value for this attribute is an empty string.</p>
 */
Modules.Tizen.Calendar.CalendarItem.location = null;

/**
 * @property organizer
 * @type String
 * <p>An attribute to store the name of the person who organized this event. 
(See RFC 5545 - Section 3.8.4.3).</p>
 * @description <p>By default, this attribute is initialized to an empty string.</p>
 */
Modules.Tizen.Calendar.CalendarItem.organizer = null;

/**
 * @property priority
 * @type String
 * <p>An attribute to indicate the priority level of an item</p>
 * @description <p>May be used to relatively prioritize multiple items during a given period of time. 
(See RFC 5545 - Section 3.8.1.9).</p>
<p>The default value for this attribute is {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_LOW} 
priority.</p>
<p>If the native item database supports another priority schema (such as a range from 1 to 9), 
the implementation must convert those values to the supported values. 
For instance, RFC 5545 suggests the following mapping for a range from 1 to 9:</p>
<ul>
<li>1-4 to {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_HIGH},</li>
<li>5 to {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_MEDIUM},</li>
<li>6-9 to {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_PRIORITY_LOW}.</li>
</ul>
 */
Modules.Tizen.Calendar.CalendarItem.priority = null;

/**
 * @property startDate
 * @type Date
 * <p>An attribute to store the start date/time for an item. (see RFC 5545 - Section 3.8.2.4).</p>
 * @description <p>The default value for this attribute is null.</p>
<p><code>startDate</code> must be specified in the same time zone as <code>endDate</code> / <code>dueDate</code> if provided.</p>
 */
Modules.Tizen.Calendar.CalendarItem.startDate = null;

/**
 * @property status
 * @type String
 * <p>An attribute to store the overall confirmation status for a calendar component. 
(See RFC 5545 - Section 3.8.1.11).</p>
 * @description <p>For an event, the default value is {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_STATUS_CONFIRMED}.
For a task, the default value is {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_STATUS_NEEDS_ACTION}.</p>
 */
Modules.Tizen.Calendar.CalendarItem.status = null;

/**
 * @property summary
 * @type String
 * <p>An attribute to store a short summary or subject for an item. (See RFC 5545 - Section 3.8.1.12)</p>
 * @description <p>The default value is an empty string.</p>
 */
Modules.Tizen.Calendar.CalendarItem.summary = null;

/**
 * @property visibility
 * @type String
 * <p>An attribute to mark the visibility (secrecy) level of the item. 
(See RFC 5545 - Section 3.8.1.3).</p>
 * @description <p>The value is one of the constants defined for this parameter : </p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_VISIBILITY_PUBLIC}</li>
<li>{@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_VISIBILITY_PRIVATE}</li>
</ul>
<p>The default value is {@link Modules.Tizen.Calendar#property-CALENDAR_ITEM_VISIBILITY_PUBLIC}.</p>
 */
Modules.Tizen.Calendar.CalendarItem.visibility = null;

/**
 * @class Modules.Tizen.Calendar.CalendarRecurrenceRule
 * @typestr Object of Modules.Tizen.Calendar
 * @extends Titanium.Proxy
 * <p>This interface implements the CalendarRecurrenceRule object, which contains information about 
the recurrence of an event. (See RFC 5545, Section 3.3.10.)</p>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule = {};

/**
 * @method getDaysOfTheWeek
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-daysOfTheWeek daysOfTheWeek} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.getDaysOfTheWeek = function(){};

/**
 * @method getExceptions
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-exceptions exceptions} property.</p>
 * @return {Date[]} 
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.getExceptions = function(){};

/**
 * @method getFrequency
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-frequency frequency} property.</p>
 * @return {String} 
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.getFrequency = function(){};

/**
 * @method getInterval
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-interval interval} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.getInterval = function(){};

/**
 * @method getOccurrenceCount
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-occurrenceCount occurrenceCount} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.getOccurrenceCount = function(){};

/**
 * @method getSetPositions
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-setPositions setPositions} property.</p>
 * @return {Number[]} 
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.getSetPositions = function(){};

/**
 * @method getUntilDate
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-untilDate untilDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.getUntilDate = function(){};

/**
 * @method setDaysOfTheWeek
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-daysOfTheWeek daysOfTheWeek} property.</p>
 * @param {String[]} daysOfTheWeek 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.setDaysOfTheWeek = function(daysOfTheWeek){};

/**
 * @method setExceptions
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-exceptions exceptions} property.</p>
 * @param {Date[]} exceptions 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.setExceptions = function(exceptions){};

/**
 * @method setFrequency
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-frequency frequency} property.</p>
 * @param {String} frequency 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.setFrequency = function(frequency){};

/**
 * @method setInterval
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-interval interval} property.</p>
 * @param {Number} interval 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.setInterval = function(interval){};

/**
 * @method setOccurrenceCount
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-occurrenceCount occurrenceCount} property.</p>
 * @param {Number} occurrenceCount 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.setOccurrenceCount = function(occurrenceCount){};

/**
 * @method setSetPositions
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-setPositions setPositions} property.</p>
 * @param {Number[]} setPositions 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.setSetPositions = function(setPositions){};

/**
 * @method setUntilDate
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarRecurrenceRule#property-untilDate untilDate} property.</p>
 * @param {Date} untilDate 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarRecurrenceRule.setUntilDate = function(untilDate){};

/**
 * @property daysOfTheWeek
 * @type String[]
 * <p>An attribute to store the days of the week associated with the recurrence rule.</p>
 * @description <p>This property value is valid only for recurrence rules with a frequency type of 
{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_WEEKLY}, 
{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_MONTHLY}, and 
{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_YEARLY}.
This property corresponds to BYDAY in RFC 5545.</p>
<p>By default, this attribute is set to an empty array.</p>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule.daysOfTheWeek = null;

/**
 * @property exceptions
 * @type Date[]
 * <p>An attribute to list date/time exceptions for the recurring event. (See RFC 5545, 
Section 3.8.5.1.)</p>
 * @description <p>This attribute is precise to the second. Milliseconds are ignored.
This property corresponds to EXDATE in RFC 5545.</p>
<p>By default, this attribute is set to an empty array.</p>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule.exceptions = null;

/**
 * @property frequency
 * @type String
 * <p>An attribute to store the frequency of a recurrence rule.</p>
 * @description <p>This property corresponds to FREQ in RFC 5545.</p>
<p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_DAILY}</li>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_WEEKLY}</li>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_MONTHLY}</li>
<li>{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_YEARLY}</li>
</ul>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule.frequency = null;

/**
 * @property interval
 * @type Number
 * <p>An attribute to specify how often the recurrence rule repeats over the unit of time 
indicated by its frequency.</p>
 * @description <p>This attribute is linked to the frequency attribute and for a interval of n, 
the event will recur every n of recurrence attribute.</p>
<p>For example, if the interval attribute is set to 2 and frequency attribute is set to 
{@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_WEEKLY}, 
then the event will recur every 2 weeks.</p>
<p>The default interval value is 1, that is, every day if the CalendarRecurrenceRule frequency 
attribute is {@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_DAILY}, 
every week if frequency is {@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_WEEKLY}, every 
month if frequency is {@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_MONTHLY} or every 
year if frequency is {@link Modules.Tizen.Calendar#property-RECURRENCE_RULE_FREQUENCY_YEARLY}.</p>
<p>This property corresponds to INTERVAL in RFC 5545.</p>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule.interval = null;

/**
 * @property occurrenceCount
 * @type Number
 * <p>An attribute to indicate the number of occurrences of a recurring event.</p>
 * @description <p>The recurrence duration of an event can be defined using either an end date (<code>untilDate</code> 
attribute) or a number of occurrences (<code>occurrenceCount</code> attribute).
By default, this attribute is set to -1, meaning that the event recurs infinitely, unless 
<code>untilDate</code> is set.</p>
<p>This property corresponds to COUNT in RFC 5545.</p>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule.occurrenceCount = null;

/**
 * @property setPositions
 * @type Number[]
 * <p>An attribute to store a list of ordinal numbers that filters which recurrences to include in 
the recurrence rule's frequency.</p>
 * @description <p>For example, a yearly recurrence rule that has a daysOfTheWeek value that specifies Monday 
through Friday, and a setPositions array containing 2 and -1, occurs only on the second 
weekday and last weekday of every year.
Values can be from 1 to 366 or -366 to -1. Negative values indicate counting backwards from 
the end of the recurrence rule's frequency (week, month, or year).
This attribute must only be used in conjunction with another BYxxx rule part 
(such as daysOfTheWeek).
This property corresponds to BYSETPOS in RFC 5545.</p>
<p>By default, this attribute is set to an empty array</p>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule.setPositions = null;

/**
 * @property untilDate
 * @type Date
 * <p>An attribute to indicate the end date of a recurrence duration of an event using either an 
end date (<code>untilDate</code> attribute) or a number of occurrences (<code>occurrenceCount</code> attribute).</p>
 * @description <p>By default, this attribute is set to null, meaning that the event recurs infinitely, unless 
<code>occurrenceCount</code> is set.
This attribute is precise to the second. Milliseconds are ignored.</p>
<p>This property corresponds to UNTIL in RFC 5545.</p>
 */
Modules.Tizen.Calendar.CalendarRecurrenceRule.untilDate = null;

/**
 * @class Modules.Tizen.Calendar.CalendarTask
 * @typestr Object of Modules.Tizen.Calendar
 * @extends Modules.Tizen.Calendar.CalendarItem
 * <p>An interface that implements the CalendarTask object.</p>
 */
Modules.Tizen.Calendar.CalendarTask = {};

/**
 * @method getCompletedDate
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarTask#property-completedDate completedDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarTask.getCompletedDate = function(){};

/**
 * @method getDueDate
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarTask#property-dueDate dueDate} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Calendar.CalendarTask.getDueDate = function(){};

/**
 * @method getProgress
 * <p>Gets the value of the {@link Modules.Tizen.Calendar.CalendarTask#property-progress progress} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Calendar.CalendarTask.getProgress = function(){};

/**
 * @method setCompletedDate
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarTask#property-completedDate completedDate} property.</p>
 * @param {Date} completedDate 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarTask.setCompletedDate = function(completedDate){};

/**
 * @method setDueDate
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarTask#property-dueDate dueDate} property.</p>
 * @param {Date} dueDate 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarTask.setDueDate = function(dueDate){};

/**
 * @method setProgress
 * <p>Sets the value of the {@link Modules.Tizen.Calendar.CalendarTask#property-progress progress} property.</p>
 * @param {Number} progress 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Calendar.CalendarTask.setProgress = function(progress){};

/**
 * @property completedDate
 * @type Date
 * <p>An attribute to record the date and time when an task is completed. 
(See RFC 5545 - Section 3.8.2.1).</p>
 * @description <p>This attribute is precise to the second. Milliseconds are ignored.</p>
<p>The default value is undefined. If no value is provided, the task is not completed yet.</p>
 */
Modules.Tizen.Calendar.CalendarTask.completedDate = null;

/**
 * @property dueDate
 * @type Date
 * <p>An attribute to store the due date and time for completing a task. 
(See RFC 5545 - Section 3.8.2.3).</p>
 * @description <p>This dueDate must be in the same time zone as the startDate. The duration and dueDate are 
mutually exclusive, so only one of them can have the value null at any given time.</p>
<p>This attribute is precise to the second. Milliseconds are ignored.
The default value is undefined. If no value is provided, the task doesn't have a due date.</p>
 */
Modules.Tizen.Calendar.CalendarTask.dueDate = null;

/**
 * @property progress
 * @type Number
 * <p>An attribute to denote the percent of completion of a task.</p>
 * @description <p>The value is a positive integer between 0 and 100. 
A value of 0 indicates the task has not been started yet. 
A value of 100 indicates that the task has been completed.</p>
<p>Integer values in between indicate the percent partially complete. 
(See RFC 5545 - Section 3.8.1.8).</p>
<p>The default value is 0, implies that the task has not been started.</p>
 */
Modules.Tizen.Calendar.CalendarTask.progress = null;

/**
 * @method createCalendarAlarm
 * <p>Creates an instance of {@link Modules.Tizen.Calendar.CalendarAlarm}</p>
 * @param {CalendarAlarmInitWithDate/CalendarAlarmInitWithDuration} alarmParameters 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details. </p>
 * @return {Modules.Tizen.Calendar.CalendarAlarm} 
*/
Modules.Tizen.Calendar.createCalendarAlarm = function(alarmParameters){};

/**
 * @method createCalendarAttendee
 * <p>Creates an instance of {@link Modules.Tizen.Calendar.CalendarAttendee}</p>
 * @param {CalendarAttendeeInit} attendeeParameters 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details. </p>
 * @return {Modules.Tizen.Calendar.CalendarAttendee} 
*/
Modules.Tizen.Calendar.createCalendarAttendee = function(attendeeParameters){};

/**
 * @method createCalendarEvent
 * <p>Creates an instance of {@link Modules.Tizen.Calendar.CalendarEvent}</p>
 * @param {CalendarEventInit/RepresentationInit} eventParameters 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details. </p>
 * @return {Modules.Tizen.Calendar.CalendarEvent} 
*/
Modules.Tizen.Calendar.createCalendarEvent = function(eventParameters){};

/**
 * @method createCalendarEventId
 * <p>Creates and returns an instance of {@link Modules.Tizen.Calendar.CalendarEventId}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Tizen.Calendar.CalendarEventId} except those marked not-creation or read-only.</p>
 * @return {Modules.Tizen.Calendar.CalendarEventId} 
*/
Modules.Tizen.Calendar.createCalendarEventId = function(parameters){};

/**
 * @method createCalendarRecurrenceRule
 * <p>Creates an instance of {@link Modules.Tizen.Calendar.CalendarRecurrenceRule}</p>
 * @param {CalendarRecurrenceRuleInit} recurrenceRuleParameters 
 * <p>Parameters required to initialize the object being created. See the documentation on the
type of this argument for more details. </p>
 * @return {Modules.Tizen.Calendar.CalendarRecurrenceRule} 
*/
Modules.Tizen.Calendar.createCalendarRecurrenceRule = function(recurrenceRuleParameters){};

/**
 * @method createCalendarTask
 * <p>Creates an instance of {@link Modules.Tizen.Calendar.CalendarTask}</p>
 * @param {Object/RepresentationInit} taskParameters 
 * <p>Parameters required to initialize the object being created. See the documentation on the
types of this argument for more details.</p>
 * @return {Modules.Tizen.Calendar.CalendarTask} 
*/
Modules.Tizen.Calendar.createCalendarTask = function(taskParameters){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Calendar.getBubbleParent = function(){};

/**
 * @method getCalendar
 * <p>Gets the calendar with the specified identifier and type.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {String} type 
 * <p>The type of calendar. Can be one of {@link Modules.Tizen.Calendar#property-CALENDAR_TYPE_EVENT} or 
{@link Modules.Tizen.Calendar#property-CALENDAR_TYPE_TASK}.</p>
 * @param {String} id 
 * <p>The calendar identifier.</p>
 * @return {Modules.Tizen.Calendar.CalendarInstance} <p>The matching Calendar object.</p>
*/
Modules.Tizen.Calendar.getCalendar = function(type, id){};

/**
 * @method getCalendars
 * <p>Gets an array of Calendar objects.</p>
 * @description <p>If the operation completes successfully, the <code>callback</code> will be invoked with all the 
calendars found and available. </p>
<p>The first calendar in the list is always the default calendar.</p>
<p>If no Calendar object is available, the <code>callback</code> is invoked with an empty array.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {String} type 
 * <p>The type of calendar. Can be one of {@link Modules.Tizen.Calendar#property-CALENDAR_TYPE_EVENT} and
{@link Modules.Tizen.Calendar#property-CALENDAR_TYPE_TASK}.            </p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Calendar.getCalendars = function(type, callback){};

/**
 * @method getDefaultCalendar
 * <p>Gets the default calendar, which is used for new items.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {String} type 
 * <p>The type of calendar. Can be one of {@link Modules.Tizen.Calendar#property-CALENDAR_TYPE_EVENT} or
{@link Modules.Tizen.Calendar#property-CALENDAR_TYPE_TASK}.</p>
 * @return {Modules.Tizen.Calendar.CalendarInstance} <p>The default Calendar object.</p>
*/
Modules.Tizen.Calendar.getDefaultCalendar = function(type){};

/**
 * @method getUnifiedCalendar
 * <p>Gets the aggregation of all calendars.</p>
 * @description <p>The unified calendar is the aggregation of all calendars that are obtained from getCalendars 
and contains all events or tasks. It does not have the calendar id nor name which are set to 
null. </p>
<p>If an item is added to the unified calendar, it will be saved in the default calendar. </p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/calendar.read</code></li>
</ul>
 * @param {String} type 
 * <p>The unified Calendar object.</p>
 * @return {Modules.Tizen.Calendar.CalendarInstance} <p>The default Calendar object.</p>
*/
Modules.Tizen.Calendar.getUnifiedCalendar = function(type){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Calendar.setBubbleParent = function(){};

/**
 * @property ALARM_METHOD_DISPLAY
 * @type String
 * @readonly
 * <p>DISPLAY indicates the type of an alarm if display on screen without any sound is used to 
alert the user.</p>
 */
Modules.Tizen.Calendar.ALARM_METHOD_DISPLAY = null;

/**
 * @property ALARM_METHOD_SOUND
 * @type String
 * @readonly
 * <p>SOUND indicates the type of an alarm if sound is played to alert the user.</p>
 */
Modules.Tizen.Calendar.ALARM_METHOD_SOUND = null;

/**
 * @property ATTENDEE_ROLE_CHAIR
 * @type String
 * @readonly
 * <p>CHAIR - if the attendee is the chairperson of the event.</p>
 */
Modules.Tizen.Calendar.ATTENDEE_ROLE_CHAIR = null;

/**
 * @property ATTENDEE_ROLE_NON_PARTICIPANT
 * @type String
 * @readonly
 * <p>NON_PARTICIPANT - if the attendee is not a participant but is copied for information 
purposes</p>
 */
Modules.Tizen.Calendar.ATTENDEE_ROLE_NON_PARTICIPANT = null;

/**
 * @property ATTENDEE_ROLE_OPT_PARTICIPANT
 * @type String
 * @readonly
 * <p>OPT_PARTICIPANT - if the participation of an attendee is optional</p>
 */
Modules.Tizen.Calendar.ATTENDEE_ROLE_OPT_PARTICIPANT = null;

/**
 * @property ATTENDEE_ROLE_REQ_PARTICIPANT
 * @type String
 * @readonly
 * <p>REQ_PARTICIPANT - if the participation of an attendee is mandatory</p>
 */
Modules.Tizen.Calendar.ATTENDEE_ROLE_REQ_PARTICIPANT = null;

/**
 * @property ATTENDEE_STATUS_ACCEPTED
 * @type String
 * @readonly
 * <p>ACCEPTED - if the participant has accepted the event</p>
 */
Modules.Tizen.Calendar.ATTENDEE_STATUS_ACCEPTED = null;

/**
 * @property ATTENDEE_STATUS_COMPLETED
 * @type String
 * @readonly
 * <p>COMPLETED - if the participant's event has been completed</p>
 */
Modules.Tizen.Calendar.ATTENDEE_STATUS_COMPLETED = null;

/**
 * @property ATTENDEE_STATUS_DECLINED
 * @type String
 * @readonly
 * <p>DECLINED - if the participant has declined the event</p>
 */
Modules.Tizen.Calendar.ATTENDEE_STATUS_DECLINED = null;

/**
 * @property ATTENDEE_STATUS_DELEGATED
 * @type String
 * @readonly
 * <p>DELEGATED - if the participant has delegated attendance to another participant</p>
 */
Modules.Tizen.Calendar.ATTENDEE_STATUS_DELEGATED = null;

/**
 * @property ATTENDEE_STATUS_IN_PROCESS
 * @type String
 * @readonly
 * <p>IN_PROCESS - if the participant's event is currently in process</p>
 */
Modules.Tizen.Calendar.ATTENDEE_STATUS_IN_PROCESS = null;

/**
 * @property ATTENDEE_STATUS_PENDING
 * @type String
 * @readonly
 * <p>PENDING - if the participant has not yet responded to the event</p>
 */
Modules.Tizen.Calendar.ATTENDEE_STATUS_PENDING = null;

/**
 * @property ATTENDEE_STATUS_TENTATIVE
 * @type String
 * @readonly
 * <p>TENTATIVE - if the participant has tentatively accepted the event</p>
 */
Modules.Tizen.Calendar.ATTENDEE_STATUS_TENTATIVE = null;

/**
 * @property ATTENDEE_TYPE_GROUP
 * @type String
 * @readonly
 * <p>GROUP - Group of individuals</p>
 */
Modules.Tizen.Calendar.ATTENDEE_TYPE_GROUP = null;

/**
 * @property ATTENDEE_TYPE_INDIVIDUAL
 * @type String
 * @readonly
 * <p>INDIVIDUAL - Individual</p>
 */
Modules.Tizen.Calendar.ATTENDEE_TYPE_INDIVIDUAL = null;

/**
 * @property ATTENDEE_TYPE_RESOURCE
 * @type String
 * @readonly
 * <p>RESOURCE  - Physical resource</p>
 */
Modules.Tizen.Calendar.ATTENDEE_TYPE_RESOURCE = null;

/**
 * @property ATTENDEE_TYPE_ROOM
 * @type String
 * @readonly
 * <p>ROOM - Room resource</p>
 */
Modules.Tizen.Calendar.ATTENDEE_TYPE_ROOM = null;

/**
 * @property ATTENDEE_TYPE_UNKNOWN
 * @type String
 * @readonly
 * <p>UNKNOWN - Unknown</p>
 */
Modules.Tizen.Calendar.ATTENDEE_TYPE_UNKNOWN = null;

/**
 * @property BY_DAY_VALUE_FR
 * @type String
 * @readonly
 * <p>FR indicates the values for CalendarRecurrenceRule.daysOfWeek.</p>
 */
Modules.Tizen.Calendar.BY_DAY_VALUE_FR = null;

/**
 * @property BY_DAY_VALUE_MO
 * @type String
 * @readonly
 * <p>MO  indicates the values for CalendarRecurrenceRule.daysOfWeek.</p>
 */
Modules.Tizen.Calendar.BY_DAY_VALUE_MO = null;

/**
 * @property BY_DAY_VALUE_SA
 * @type String
 * @readonly
 * <p>SA indicates the values for CalendarRecurrenceRule.daysOfWeek.</p>
 */
Modules.Tizen.Calendar.BY_DAY_VALUE_SA = null;

/**
 * @property BY_DAY_VALUE_SU
 * @type String
 * @readonly
 * <p>SU indicates the values for CalendarRecurrenceRule.daysOfWeek.</p>
 */
Modules.Tizen.Calendar.BY_DAY_VALUE_SU = null;

/**
 * @property BY_DAY_VALUE_TH
 * @type String
 * @readonly
 * <p>TH indicates the values for CalendarRecurrenceRule.daysOfWeek.</p>
 */
Modules.Tizen.Calendar.BY_DAY_VALUE_TH = null;

/**
 * @property BY_DAY_VALUE_TU
 * @type String
 * @readonly
 * <p>TU indicates the values for CalendarRecurrenceRule.daysOfWeek.</p>
 */
Modules.Tizen.Calendar.BY_DAY_VALUE_TU = null;

/**
 * @property BY_DAY_VALUE_WE
 * @type String
 * @readonly
 * <p>WE indicates the values for CalendarRecurrenceRule.daysOfWeek.</p>
 */
Modules.Tizen.Calendar.BY_DAY_VALUE_WE = null;

/**
 * @property CALENDAR_ITEM_PRIORITY_HIGH
 * @type String
 * @readonly
 * <p>HIGH - if item priority is high</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_PRIORITY_HIGH = null;

/**
 * @property CALENDAR_ITEM_PRIORITY_LOW
 * @type String
 * @readonly
 * <p>LOW - if item priority is low</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_PRIORITY_LOW = null;

/**
 * @property CALENDAR_ITEM_PRIORITY_MEDIUM
 * @type String
 * @readonly
 * <p>MEDIUM - if item priority is medium</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_PRIORITY_MEDIUM = null;

/**
 * @property CALENDAR_ITEM_STATUS_CANCELLED
 * @type String
 * @readonly
 * <p>CANCELLED - if the event/task is cancelled.</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_STATUS_CANCELLED = null;

/**
 * @property CALENDAR_ITEM_STATUS_COMPLETED
 * @type String
 * @readonly
 * <p>COMPLETED - if the task has been cancelled.</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_STATUS_COMPLETED = null;

/**
 * @property CALENDAR_ITEM_STATUS_CONFIRMED
 * @type String
 * @readonly
 * <p>CONFIRMED - if the event is confirmed.</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_STATUS_CONFIRMED = null;

/**
 * @property CALENDAR_ITEM_STATUS_IN_PROCESS
 * @type String
 * @readonly
 * <p>IN_PROCESS - if the task has been completed.</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_STATUS_IN_PROCESS = null;

/**
 * @property CALENDAR_ITEM_STATUS_NEEDS_ACTION
 * @type String
 * @readonly
 * <p>NEEDS_ACTION - if the task needs action.</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_STATUS_NEEDS_ACTION = null;

/**
 * @property CALENDAR_ITEM_STATUS_TENTATIVE
 * @type String
 * @readonly
 * <p>TENTATIVE - if the event is tentative.</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_STATUS_TENTATIVE = null;

/**
 * @property CALENDAR_ITEM_VISIBILITY_CONFIDENTIAL
 * @type String
 * @readonly
 * <p>CONFIDENTIAL - if item visibility is confidential</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_VISIBILITY_CONFIDENTIAL = null;

/**
 * @property CALENDAR_ITEM_VISIBILITY_PRIVATE
 * @type String
 * @readonly
 * <p>PRIVATE - if item visiblity is private</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_VISIBILITY_PRIVATE = null;

/**
 * @property CALENDAR_ITEM_VISIBILITY_PUBLIC
 * @type String
 * @readonly
 * <p>PUBLIC - if item visibility is public</p>
 */
Modules.Tizen.Calendar.CALENDAR_ITEM_VISIBILITY_PUBLIC = null;

/**
 * @property CALENDAR_TEXT_FORMAT_ICALENDAR_20
 * @type String
 * @readonly
 * <p>ICALENDAR_20 is type of textual format of a Calendar if the textual format is iCalendar v2.0.</p>
 */
Modules.Tizen.Calendar.CALENDAR_TEXT_FORMAT_ICALENDAR_20 = null;

/**
 * @property CALENDAR_TEXT_FORMAT_VCALENDAR_10
 * @type String
 * @readonly
 * <p>VCALENDAR_10 is type of textual format of a Calendar if the textual format is vCalendar v1.0</p>
 */
Modules.Tizen.Calendar.CALENDAR_TEXT_FORMAT_VCALENDAR_10 = null;

/**
 * @property CALENDAR_TYPE_EVENT
 * @type String
 * @readonly
 * <p>EVENT indicates the type of a calendar if a calendar contains events (VEVENT objects)</p>
 */
Modules.Tizen.Calendar.CALENDAR_TYPE_EVENT = null;

/**
 * @property CALENDAR_TYPE_TASK
 * @type String
 * @readonly
 * <p>TASK indicates the type of a calendar if a calendar contains tasks (VTODO objects)</p>
 */
Modules.Tizen.Calendar.CALENDAR_TYPE_TASK = null;

/**
 * @property EVENT_AVAILABILITY_BUSY
 * @type String
 * @readonly
 * <p>BUSY indicates the availability of time for an event.</p>
 */
Modules.Tizen.Calendar.EVENT_AVAILABILITY_BUSY = null;

/**
 * @property EVENT_AVAILABILITY_FREE
 * @type String
 * @readonly
 * <p>FREE indicates the availability of time for an event if the specified time slot is not 
vacant.</p>
 */
Modules.Tizen.Calendar.EVENT_AVAILABILITY_FREE = null;

/**
 * @property RECURRENCE_RULE_FREQUENCY_DAILY
 * @type String
 * @readonly
 * <p>DAILY indicates the type of frequency for the recurrence of an event if the event occurs 
daily.</p>
 */
Modules.Tizen.Calendar.RECURRENCE_RULE_FREQUENCY_DAILY = null;

/**
 * @property RECURRENCE_RULE_FREQUENCY_MONTHLY
 * @type String
 * @readonly
 * <p>MONTHLY indicates the type of frequency for the recurrence of an event if the event occurs 
monthly.</p>
 */
Modules.Tizen.Calendar.RECURRENCE_RULE_FREQUENCY_MONTHLY = null;

/**
 * @property RECURRENCE_RULE_FREQUENCY_WEEKLY
 * @type String
 * @readonly
 * <p>WEEKLY indicates the type of frequency for the recurrence of an event if the event occurs 
weekly.</p>
 */
Modules.Tizen.Calendar.RECURRENCE_RULE_FREQUENCY_WEEKLY = null;

/**
 * @property RECURRENCE_RULE_FREQUENCY_YEARLY
 * @type String
 * @readonly
 * <p>YEARLY indicates the type of frequency for the recurrence of an event if the event occurs 
yearly.</p>
 */
Modules.Tizen.Calendar.RECURRENCE_RULE_FREQUENCY_YEARLY = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Calendar.bubbleParent = null;

/**
 * @class Modules.Tizen.CallHistory
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level CallHistory module.</p>
 * @description <p>This API provides interfaces and methods for retrieving information from the call history.</p>
<p>For more information on the CallHistory features, see 
<a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.appprogramming%2Fhtml%2Fguide%2Fsocial_guide%2Fcall.htm">Tizen Web App Programming: Call History</a></p>
 * <h3>Example</h3>
 * <h4>Become aware of call-related events.</h4>
 * <p><p>Subscribe/unsubscribe to call history event listeners, and observe changes, using graphical 
user interface and console logs.</p></p><pre>var Tizen = require('tizen'),
    win = Ti.UI.createWindow({
        title: 'Call history listeners'
    }),
    addListenerBtn = Ti.UI.createButton({
        title: 'Add listeners',
        top: 20,
        left: 5
    }),
    removeListenerBtn = Ti.UI.createButton({
        title: 'Remove listeners',
        top: 60,
        left: 5
    });

function onItemsAdded(e) {
    var i = 0,
        items = e.items,
        itemsCount = items.length;
    console.log('New call events.');
    
    for (; i &lt; itemsCount; i++) {
        console.log(items[i].remoteParties[0].remoteParty + ': ' + items[i].startTime);
    }
}

function onItemsChanged(e) {
    // Do something even more interesting...
}

addListenerBtn.addEventListener('click', function () {
    try {
        // Register a call history callback
        Tizen.CallHistory.addEventListener('itemsadded', onItemsAdded);
        Tizen.CallHistory.addEventListener('itemschanged', onItemsChanged);

        addListenerBtn.enabled = false;

        removeListenerBtn.addEventListener('click', function () {
            try {
                // Unregister a previously registered listener
                Tizen.CallHistory.removeEventListener('itemsadded', onItemsAdded);
                Tizen.CallHistory.removeEventListener('itemschanged', onItemsChanged);
                win.remove(removeListenerBtn);
            } catch (removeExc) {
                console.error('Exception - code: ' + removeExc.name + ' message: ' + removeExc.message);
            }
            addListenerBtn.enabled = true;
            removeListenerBtn.removeEventListener('click');
        });

        win.add(removeListenerBtn);
    } catch (error) {
        console.error('Exception - code: ' + error.name + ' message: ' + error.message);
    }
});

win.add(addListenerBtn);</pre>
 */
Modules.Tizen.CallHistory = {};

/**
 * @class Modules.Tizen.CallHistory.CallHistoryEntry
 * @typestr Object of Modules.Tizen.CallHistory
 * <p>This interface represents the subset of properties of calls, which become a call record in the 
call history after the call ends.</p>
 */
Modules.Tizen.CallHistory.CallHistoryEntry = {};

/**
 * @property direction
 * @type String
 * <p>An attribute to store to indicate whether the call was dialed, received, missed, blocked or 
rejected.</p>
 * @description <p>The following values are the supported:</p>
<ul>
<li>'DIALED' - for dialed calls</li>
<li>'RECEIVED' - for received calls</li>
<li>'MISSEDNEW' - for missed calls not seen yet</li>
<li>'MISSED' - for missed calls</li>
<li>'BLOCKED' - for blocked calls</li>
<li>'REJECTED' - for rejected calls</li>
</ul>
 */
Modules.Tizen.CallHistory.CallHistoryEntry.direction = null;

/**
 * @property duration
 * @type Number
 * @readonly
 * <p>An attribute to store the duration of the call in seconds.</p>
 * @description <p>The exact meaning is defined by the back-end. The intention of this attribute is to count 
the duration from media channels up to the moment when media channels tear down, on the same 
call service. If the call gets migrated to another service, another call history entry is 
used. </p>
 */
Modules.Tizen.CallHistory.CallHistoryEntry.duration = null;

/**
 * @property features
 * @type String[]
 * @readonly
 * <p>An array of attributes to store the features associated with the call service are saved to 
call history.</p>
 * @description <p>The following values are the supported:</p>
<ul>
<li>CALL - for all call types</li>
<li>VOICECALL - for voice-only calls</li>
<li>VIDEOCALL - for audio and video channel support in the call</li>
<li>EMERGENCYCALL - to denote an emergency call</li>
</ul>
 */
Modules.Tizen.CallHistory.CallHistoryEntry.features = null;

/**
 * @property remoteParties
 * @type Modules.Tizen.CallHistory.RemoteParty[]
 * @readonly
 * <p>An array of attributes to store the remote parties participating in the call.</p>
 */
Modules.Tizen.CallHistory.CallHistoryEntry.remoteParties = null;

/**
 * @property startTime
 * @type Date
 * @readonly
 * <p>An attribute to store the start time of the call. </p>
 * @description <p>The exact meaning is defined by the back-end. The intention of this attribute is to give the 
moment when media channels come up. </p>
 */
Modules.Tizen.CallHistory.CallHistoryEntry.startTime = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>An attribute to store the service type of the call saved to call history.</p>
 * @description <p>The following values are the supported:</p>
<ul>
<li>TEL - for all protocols with phone number addressing (PSTN, GSM, CDMA, LTE, etc.)</li>
<li>XMPP - for generic XMPP calls</li>
<li>SIP - for generic SIP calls</li>
</ul>
 */
Modules.Tizen.CallHistory.CallHistoryEntry.type = null;

/**
 * @property uid
 * @type String
 * @readonly
 * <p>An attribute to store The unique identifier of a call record.</p>
 */
Modules.Tizen.CallHistory.CallHistoryEntry.uid = null;

/**
 * @class Modules.Tizen.CallHistory.RemoteParty
 * @typestr Object of Modules.Tizen.CallHistory
 * @platform tizen 3.1
 * <p>This interface represents remote parties.</p>
 */
Modules.Tizen.CallHistory.RemoteParty = {};

/**
 * @property personId
 * @type String
 * @readonly
 * <p>An attribute to store the identifier of the person that the raw contact belongs to.</p>
 * @description <p>If the contact cannot be resolved, the value is null. See Contact API for more information.</p>
 */
Modules.Tizen.CallHistory.RemoteParty.personId = null;

/**
 * @property remoteParty
 * @type String
 * @readonly
 * <p>An attribute to store the RPID.</p>
 * @description <p>The remote party identifier (RPID) that is a unique identifier used by a service with call 
capability. It also includes phone numbers. Contacts are also defined per service, so an 
RPID can be resolved to a Contact. A null value means that the remote is hidden (private 
number).</p>
 */
Modules.Tizen.CallHistory.RemoteParty.remoteParty = null;



/**
 * @method find
 * <p>Finds and returns call history items.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/callhistory.read</code></li>
</ul>
 * @param {Function} callback 
 * <p>This is a callback interface of CallHistory operations. </p>
 * @param {Modules.Tizen.AbstractFilter} filter (optional)
 * <p>A filter defined on {@link Modules.Tizen.CallHistory.CallHistoryEntry CallHistoryEntry}
attributes. Use {@link Modules.Tizen.AbstractFilter AbstractFilter} subtypes, such as 
{@link Modules.Tizen.AttributeRangeFilter AttributeFilter}, 
{@link Modules.Tizen.AttributeRangeFilter AttributeRangeFilter}, and 
{@link Modules.Tizen.CompositeFilter CompositeFilter}.</p>
 * @param {Modules.Tizen.SortMode} sortMode (optional)
 * <p>The sorting order preference of the result set.</p>
 * @param {Number} limit (optional)
 * <p>The maximum limits the query result is set to as specified by the parameter (It is 
the same meaning as SQL LIMIT). If 0, there is no limit set.</p>
 * @param {Number} offset (optional)
 * <p>The offset in the result set, from where the results are listed.
(It has the same semantics as SQL OFFSET). The number of results listed is maximum the 
specified limit parameter. Defaults to 0, meaning no offset.</p>
 * @return void
*/
Modules.Tizen.CallHistory.find = function(callback, filter, sortMode, limit, offset){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.CallHistory.getBubbleParent = function(){};

/**
 * @method remove
 * <p>Removes a call history entry synchronously by deleting it.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/callhistory.write</code></li>
</ul>
 * @param {Modules.Tizen.CallHistory.CallHistoryEntry} entry 
 * <p>Call history entry to be deleted.</p>
 * @return void
*/
Modules.Tizen.CallHistory.remove = function(entry){};

/**
 * @method removeAll
 * <p>Removes the complete call history by deleting it.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/callhistory.write</code></li>
</ul>
 * @param {Function} callback (optional)
 * <p>A generic success handler.</p>
 * @return void
*/
Modules.Tizen.CallHistory.removeAll = function(callback){};

/**
 * @method removeBatch
 * <p>Removes a list of call history entries asynchronously by deleting them.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/callhistory.write</code></li>
</ul>
 * @param {Modules.Tizen.CallHistory.CallHistoryEntry[]} entries 
 * <p>A list of call history entries to delete.</p>
 * @param {Function} callback (optional)
 * <p>A generic success handler.</p>
 * @return void
*/
Modules.Tizen.CallHistory.removeBatch = function(entries, callback){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.CallHistory.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.CallHistory.bubbleParent = null;

/**
 * @class Modules.Tizen.CompositeFilter
 * @typestr Object of Modules.Tizen
 * @extends Modules.Tizen.AbstractFilter
 * <p>CompositeFilter represents a set of filters.</p>
 * @description <p>The composite filters can be one of the 2 types:
The union - used to filter objects that match any of the filters it includes.
The intersection - used to filter objects that match all filters it includes.</p>
 */
Modules.Tizen.CompositeFilter = {};

/**
 * @method getFilters
 * <p>Gets the value of the {@link Modules.Tizen.CompositeFilter#property-filters filters} property.</p>
 * @return {Modules.Tizen.AbstractFilter[]} 
*/
Modules.Tizen.CompositeFilter.getFilters = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.CompositeFilter#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.CompositeFilter.getType = function(){};

/**
 * @method setFilters
 * <p>Sets the value of the {@link Modules.Tizen.CompositeFilter#property-filters filters} property.</p>
 * @param {Modules.Tizen.AbstractFilter[]} filters 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.CompositeFilter.setFilters = function(filters){};

/**
 * @method setType
 * <p>Sets the value of the {@link Modules.Tizen.CompositeFilter#property-type type} property.</p>
 * @param {String} type 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.CompositeFilter.setType = function(type){};

/**
 * @property [filters=FILTER_MATCH_FLAG_EXACTLY]
 * @type Modules.Tizen.AbstractFilter[]
 * <p>The list of filters in the composite filter.</p>
 */
Modules.Tizen.CompositeFilter.filters = null;

/**
 * @property type
 * @type String
 * <p>The name of the object attribute used for filtering.</p>
 * @description <p>Use {@link Modules.Tizen#property-COMPOSITE_FILTER_TYPE_UNION} or {@link Modules.Tizen#property-COMPOSITE_FILTER_TYPE_INTERSECTION}</p>
 */
Modules.Tizen.CompositeFilter.type = null;

/**
 * @class Modules.Tizen.ContactRef
 * @typestr Object of Modules.Tizen
 * @extends Titanium.Proxy
 * <p>Contains both the identifier of the address book which the contact is in, and the contact 
identifier within this address book.</p>
 * @description <p>This interface is used by other APIs to uniquely and globaly identify contacts.</p>
 */
Modules.Tizen.ContactRef = {};

/**
 * @method getAddressBookId
 * <p>Gets the value of the {@link Modules.Tizen.ContactRef#property-addressBookId addressBookId} property.</p>
 * @return {String} 
*/
Modules.Tizen.ContactRef.getAddressBookId = function(){};

/**
 * @method getContactId
 * <p>Gets the value of the {@link Modules.Tizen.ContactRef#property-contactId contactId} property.</p>
 * @return {String} 
*/
Modules.Tizen.ContactRef.getContactId = function(){};

/**
 * @method setAddressBookId
 * <p>Sets the value of the {@link Modules.Tizen.ContactRef#property-addressBookId addressBookId} property.</p>
 * @param {String} addressBookId 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.ContactRef.setAddressBookId = function(addressBookId){};

/**
 * @method setContactId
 * <p>Sets the value of the {@link Modules.Tizen.ContactRef#property-contactId contactId} property.</p>
 * @param {String} contactId 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.ContactRef.setContactId = function(contactId){};

/**
 * @property addressBookId
 * @type String
 * <p>The address book identifier.</p>
 * @description <p>The value of this attribute shall be null if the address book is the default address book.</p>
 */
Modules.Tizen.ContactRef.addressBookId = null;

/**
 * @property contactId
 * @type String
 * <p>The contact identifier inside the address book.</p>
 */
Modules.Tizen.ContactRef.contactId = null;

/**
 * @class Modules.Tizen.DataControl
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>Provides a way to access specific data that is exported by other applications.</p>
 * @description <p>Please read about Tizen's Native DataControl API to know how to share own application 
data with other applications.</p>
 */
Modules.Tizen.DataControl = {};

/**
 * @class Modules.Tizen.DataControl.DataControlConsumerObject
 * @typestr Object of Modules.Tizen.DataControl
 * @extends Titanium.Proxy
 * <p>This interface provides common attributes for other derived <code>DataControlCunsumerObject</code>.</p>
 */
Modules.Tizen.DataControl.DataControlConsumerObject = {};

/**
 * @method getDataId
 * <p>Gets the value of the {@link Modules.Tizen.DataControl.DataControlConsumerObject#property-dataId dataId} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataControl.DataControlConsumerObject.getDataId = function(){};

/**
 * @method getProviderId
 * <p>Gets the value of the {@link Modules.Tizen.DataControl.DataControlConsumerObject#property-providerId providerId} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataControl.DataControlConsumerObject.getProviderId = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.DataControl.DataControlConsumerObject#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataControl.DataControlConsumerObject.getType = function(){};

/**
 * @property dataId
 * @type String
 * @readonly
 * <p>The dataId identifies specific data, usually a database table to process(insert, delete, 
update).</p>
 * @description <p>The string consists of one or more components, separated by a slash('/').</p>
 */
Modules.Tizen.DataControl.DataControlConsumerObject.dataId = null;

/**
 * @property providerId
 * @type String
 * @readonly
 * <p>An attribute to hold a provider identifier of the application whom it shares the <code>DataControl</code>
with.</p>
 * @description <p>This attribute should be known to users who want to interact with application to provide. </p>
 */
Modules.Tizen.DataControl.DataControlConsumerObject.providerId = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>An attribute to store the DataType.</p>
 * @description <p>Valid values are: 
[DATA_TYPE_MAP](Modules.Tizen.DataControl.DATA_TYPE_MAP] or 
[DATA_TYPE_SQL](Modules.Tizen.DataControl.DATA_TYPE_SQL].</p>
 */
Modules.Tizen.DataControl.DataControlConsumerObject.type = null;

/**
 * @class Modules.Tizen.DataControl.MappedDataControlConsumer
 * @typestr Object of Modules.Tizen.DataControl
 * @extends Titanium.Proxy
 * <p>This interface defines MAP data type operations.</p>
 */
Modules.Tizen.DataControl.MappedDataControlConsumer = {};

/**
 * @method addValue
 * <p>Adds the value associated with the specified key to a key-values map owned by MAP-type data 
control provider. </p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {String} key 
 * <p>The key to search a mapped data.</p>
 * @param {String} value 
 * <p>The value to add into values array mapped by the key.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.MappedDataControlConsumer.addValue = function(reqId, key, value, callback){};

/**
 * @method getValue
 * <p>Gets value associated with the specified key, from a key-values map owned by MAP-type data 
control provider. </p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {String} value 
 * <p>The value to remove from a values array mapped by the key.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.MappedDataControlConsumer.getValue = function(reqId, value, callback){};

/**
 * @method removeValue
 * <p>Removes the value associated with the specified key from a key-values map owned by MAP-type 
data control provider. </p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {String} key 
 * <p>The key to search a mapped data.</p>
 * @param {String} value 
 * <p>The value to remove from a values array mapped by the key.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.MappedDataControlConsumer.removeValue = function(reqId, key, value, callback){};

/**
 * @method updateValue
 * <p>Sets the value associated with the specified key with a new value. </p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {String} key 
 * <p>The key to search a mapped data.</p>
 * @param {String} oldValue 
 * <p>The value to update in values array mapped by the key.</p>
 * @param {String} newValue 
 * <p>The new value to replace in values array mapped by the key.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.MappedDataControlConsumer.updateValue = function(reqId, key, oldValue, newValue, callback){};

/**
 * @class Modules.Tizen.DataControl.SQLDataControlConsumer
 * @typestr Object of Modules.Tizen.DataControl
 * @extends Titanium.Proxy
 * <p>This interface defines SQL data type operations.</p>
 */
Modules.Tizen.DataControl.SQLDataControlConsumer = {};

/**
 * @method insert
 * <p>Inserts new rows into a table owned by an SQL-type data control provider.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {RowData} insertionData 
 * <p>The data on columns and values to insert.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.SQLDataControlConsumer.insert = function(reqId, insertionData, callback){};

/**
 * @method remove
 * <p>Delete rows from a table that is owned by an SQL-type data control provider. </p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {RowData} where 
 * <p>A filter to select desired rows to update. It is an SQL <code>WHERE</code> clause excluding the <code>WHERE</code>
itself such as <code>column1 = 'stringValue' AND column2 = numericValue</code>.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.SQLDataControlConsumer.remove = function(reqId, where, callback){};

/**
 * @method select
 * <p>Selects the specified columns to be queried.</p>
 * @description <p>The result set of the specified columns is retrieved from a table owned by an SQL-type data 
control provider.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {String[]} columns 
 * <p>The columns to select.</p>
 * @param {RowData} where 
 * <p>A filter to select desired rows to update. It is an SQL <code>WHERE</code> clause excluding the <code>WHERE</code>
itself such as <code>column1 = 'stringValue' AND column2 = numericValue</code>.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.SQLDataControlConsumer.select = function(reqId, columns, where, callback){};

/**
 * @method update
 * <p>Updates values of a table owned by an SQL-type data control provider.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {Number} reqId 
 * <p>A unique identifier for the current operation. A developer should increase reqId value 
to ensure it is unique for each method.</p>
 * @param {RowData} updateData 
 * <p>The data on columns and values to update.</p>
 * @param {RowData} where 
 * <p>A filter to select desired rows to update. It is an SQL <code>WHERE</code> clause excluding the <code>WHERE</code>
itself such as <code>column1 = 'stringValue' AND column2 = numericValue</code>.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataControl.SQLDataControlConsumer.update = function(reqId, updateData, where, callback){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.DataControl.getBubbleParent = function(){};

/**
 * @method getDataControlConsumer
 * <p>Gets a {@link Modules.Tizen.DataControl.DataControlConsumerObject DataControlConsumerObject} 
with a given <code>type</code>.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application: </p>
<ul>
<li><code>http://tizen.org/privilege/datacontrol.consumer</code> (privilege level: <em>partner</em>)</li>
</ul>
 * @param {String} providerId 
 * <p>A provider ID to use and it should be shared between DataControl provider and 
DataControl consumer.</p>
 * @param {String} dataId 
 * <p>A string for identifying a specific data.</p>
 * @param {String} type (optional)
 * <p>The <code>DataType</code> to use. Valid values are: 
[DATA_TYPE_MAP](Modules.Tizen.DataControl.DATA_TYPE_MAP] or 
[DATA_TYPE_SQL](Modules.Tizen.DataControl.DATA_TYPE_SQL].</p>
 * @return {Modules.Tizen.DataControl.DataControlConsumerObject} 
*/
Modules.Tizen.DataControl.getDataControlConsumer = function(providerId, dataId, type){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.DataControl.setBubbleParent = function(){};

/**
 * @property DATA_TYPE_MAP
 * @type String
 * @readonly
 * <p>Map data storage type, simple key-value store.</p>
 */
Modules.Tizen.DataControl.DATA_TYPE_MAP = null;

/**
 * @property DATA_TYPE_SQL
 * @type String
 * @readonly
 * <p>Sql data storage type, with SQL-like access.</p>
 */
Modules.Tizen.DataControl.DATA_TYPE_SQL = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.DataControl.bubbleParent = null;

/**
 * @class Modules.Tizen.DataSynchronization
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This API provides methods to synchronize contact and event data to the server using the OMA
DS 1.2 protocol.</p>
 * @description <p>To know the details of this specification, visit <a href="OMA%20web%20page">http://www.openmobilealliance.org/</a>.</p>
 */
Modules.Tizen.DataSynchronization = {};

/**
 * @class Modules.Tizen.DataSynchronization.SyncInfo
 * @typestr Object of Modules.Tizen.DataSynchronization
 * @extends Titanium.Proxy
 * <p>This interface defines the sync information.</p>
 * @description <p>The {@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_MANUAL MANUAL} sync mode accepts the sync type 
and the {@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_PERIODIC PERIODIC} mode accepts the sync 
interval, whereas the {@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_PUSH PUSH} mode does not 
accept any additional parameters.</p>
 */
Modules.Tizen.DataSynchronization.SyncInfo = {};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncInfo.getId = function(){};

/**
 * @method getInterval
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-interval interval} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncInfo.getInterval = function(){};

/**
 * @method getMode
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-mode mode} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncInfo.getMode = function(){};

/**
 * @method getPassword
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-password password} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncInfo.getPassword = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncInfo.getType = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-url url} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncInfo.getUrl = function(){};

/**
 * @method setId
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-id id} property.</p>
 * @param {String} id 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncInfo.setId = function(id){};

/**
 * @method setInterval
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-interval interval} property.</p>
 * @param {String} interval 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncInfo.setInterval = function(interval){};

/**
 * @method setMode
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-mode mode} property.</p>
 * @param {String} mode 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncInfo.setMode = function(mode){};

/**
 * @method setPassword
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-password password} property.</p>
 * @param {String} password 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncInfo.setPassword = function(password){};

/**
 * @method setType
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-type type} property.</p>
 * @param {String} type 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncInfo.setType = function(type){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncInfo#property-url url} property.</p>
 * @param {String} url 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncInfo.setUrl = function(url){};

/**
 * @property id
 * @type String
 * <p>An attribute to store the login ID for the sync server.</p>
 * @description <p>When an attempt to retrieve the saved value is made, it will return null to prevent any 
compromise on the privacy of the login ID.</p>
 */
Modules.Tizen.DataSynchronization.SyncInfo.id = null;

/**
 * @property interval
 * @type String
 * <p>An attribute to store the sync interval.</p>
 * @description <p>This attribute is used when the sync mode is set to 
{@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_PERIODIC PERIODIC} option. Can be one of:</p>
<ul>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_5_MINUTES SYNC_INTERVAL_5_MINUTES}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_15_MINUTES SYNC_INTERVAL_15_MINUTES}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_1_HOUR SYNC_INTERVAL_1_HOUR}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_4_HOURS SYNC_INTERVAL_4_HOURS}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_12_HOURS SYNC_INTERVAL_12_HOURS}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_1_DAY SYNC_INTERVAL_1_DAY}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_1_WEEK SYNC_INTERVAL_1_WEEK}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_INTERVAL_1_MONTH SYNC_INTERVAL_1_MONTH}</li>
</ul>
 */
Modules.Tizen.DataSynchronization.SyncInfo.interval = null;

/**
 * @property mode
 * @type String
 * <p>An attribute to store the sync mode.</p>
 * @description <p>Can be one of: {@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_MANUAL MANUAL}, 
{@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_PERIODIC PERIODIC}, or
{@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_PUSH PUSH}.</p>
 */
Modules.Tizen.DataSynchronization.SyncInfo.mode = null;

/**
 * @property password
 * @type String
 * <p>An attribute to store the login password to the sync server.</p>
 * @description <p>When an attempt to retrieve the saved value is made, it will return null to prevent any 
compromise on the privacy of the login ID.</p>
 */
Modules.Tizen.DataSynchronization.SyncInfo.password = null;

/**
 * @property type
 * @type String
 * <p>An attribute to store the sync type.</p>
 * @description <p>This attribute is used when the sync mode is set to 
{@link Modules.Tizen.DataSynchronization#property-SYNC_MODE_MANUAL MANUAL} option. Can be one of:</p>
<ul>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_TWO_WAY SYNC_TYPE_TWO_WAY}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_SLOW SYNC_TYPE_SLOW}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_ONE_WAY_FROM_CLIENT SYNC_TYPE_ONE_WAY_FROM_CLIENT}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_REFRESH_FROM_CLIENT SYNC_TYPE_REFRESH_FROM_CLIENT}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_ONE_WAY_FROM_SERVER SYNC_TYPE_ONE_WAY_FROM_SERVER}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_REFRESH_FROM_SERVER SYNC_TYPE_REFRESH_FROM_SERVER}</li>
</ul>
 */
Modules.Tizen.DataSynchronization.SyncInfo.type = null;

/**
 * @property url
 * @type String
 * <p>An attribute to store the URL of the sync server.</p>
 */
Modules.Tizen.DataSynchronization.SyncInfo.url = null;

/**
 * @class Modules.Tizen.DataSynchronization.SyncProfileInfo
 * @typestr Object of Modules.Tizen.DataSynchronization
 * @extends Titanium.Proxy
 * <p>This interface defines the sync profile information, based on which the synchronization is 
performed.</p>
 */
Modules.Tizen.DataSynchronization.SyncProfileInfo = {};

/**
 * @method getProfileId
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-profileId profileId} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.getProfileId = function(){};

/**
 * @method getProfileName
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-profileName profileName} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.getProfileName = function(){};

/**
 * @method getServiceInfo
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-serviceInfo serviceInfo} property.</p>
 * @return {Modules.Tizen.DataSynchronization.SyncServiceInfo[]} 
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.getServiceInfo = function(){};

/**
 * @method getSyncInfo
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-syncInfo syncInfo} property.</p>
 * @return {Modules.Tizen.DataSynchronization.SyncInfo} 
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.getSyncInfo = function(){};

/**
 * @method setProfileId
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-profileId profileId} property.</p>
 * @param {String} profileId 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.setProfileId = function(profileId){};

/**
 * @method setProfileName
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-profileName profileName} property.</p>
 * @param {String} profileName 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.setProfileName = function(profileName){};

/**
 * @method setServiceInfo
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-serviceInfo serviceInfo} property.</p>
 * @param {Modules.Tizen.DataSynchronization.SyncServiceInfo[]} serviceInfo 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.setServiceInfo = function(serviceInfo){};

/**
 * @method setSyncInfo
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo#property-syncInfo syncInfo} property.</p>
 * @param {Modules.Tizen.DataSynchronization.SyncInfo} syncInfo 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncProfileInfo.setSyncInfo = function(syncInfo){};

/**
 * @property profileId
 * @type String
 * <p>An attribute to store the unique identifier provided by the platform for a profile that has 
been successfully added. </p>
 */
Modules.Tizen.DataSynchronization.SyncProfileInfo.profileId = null;

/**
 * @property profileName
 * @type String
 * <p>An attribute to store the profile name.</p>
 */
Modules.Tizen.DataSynchronization.SyncProfileInfo.profileName = null;

/**
 * @property serviceInfo
 * @type Modules.Tizen.DataSynchronization.SyncServiceInfo[]
 * <p>(optional) An attribute to indicate the service info.</p>
 */
Modules.Tizen.DataSynchronization.SyncProfileInfo.serviceInfo = null;

/**
 * @property syncInfo
 * @type Modules.Tizen.DataSynchronization.SyncInfo
 * <p>An attribute to store the sync info.</p>
 */
Modules.Tizen.DataSynchronization.SyncProfileInfo.syncInfo = null;

/**
 * @class Modules.Tizen.DataSynchronization.SyncServiceInfo
 * @typestr Object of Modules.Tizen.DataSynchronization
 * @extends Titanium.Proxy
 * <p>This interface defines the sync service information.</p>
 */
Modules.Tizen.DataSynchronization.SyncServiceInfo = {};

/**
 * @method getEnable
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-enable enable} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.getEnable = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-id id} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.getId = function(){};

/**
 * @method getPassword
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-password password} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.getPassword = function(){};

/**
 * @method getServerDatabaseUri
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-serverDatabaseUri serverDatabaseUri} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.getServerDatabaseUri = function(){};

/**
 * @method getServiceType
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-serviceType serviceType} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.getServiceType = function(){};

/**
 * @method setEnable
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-enable enable} property.</p>
 * @param {Boolean} enable 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.setEnable = function(enable){};

/**
 * @method setId
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-id id} property.</p>
 * @param {Boolean} id 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.setId = function(id){};

/**
 * @method setPassword
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-password password} property.</p>
 * @param {Boolean} password 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.setPassword = function(password){};

/**
 * @method setServerDatabaseUri
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-serverDatabaseUri serverDatabaseUri} property.</p>
 * @param {String} serverDatabaseUri 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.setServerDatabaseUri = function(serverDatabaseUri){};

/**
 * @method setServiceType
 * <p>Sets the value of the {@link Modules.Tizen.DataSynchronization.SyncServiceInfo#property-serviceType serviceType} property.</p>
 * @param {String} serviceType 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.SyncServiceInfo.setServiceType = function(serviceType){};

/**
 * @property enable
 * @type Boolean
 * <p>An attribute to enable or disable a service category for sync.</p>
 */
Modules.Tizen.DataSynchronization.SyncServiceInfo.enable = null;

/**
 * @property id
 * @type Boolean
 * <p>(optional) An attribute to store the sync service DB access ID to the server.</p>
 * @description <p>This is used only when the server requires a separate access right to each DB. When the 
saved value is retrieved, it will return <code>null</code> not to reveal the privacy issue.</p>
 */
Modules.Tizen.DataSynchronization.SyncServiceInfo.id = null;

/**
 * @property password
 * @type Boolean
 * <p>(optional) An attribute to store the sync service DB access password to the server.</p>
 * @description <p>This is used only when the server requires a separate access right to each DB. When the 
saved value is retrieved, it will return <code>null</code> not to reveal the privacy issue.</p>
 */
Modules.Tizen.DataSynchronization.SyncServiceInfo.password = null;

/**
 * @property serverDatabaseUri
 * @type String
 * <p>An attribute to store the sync service DB URI of the server.</p>
 */
Modules.Tizen.DataSynchronization.SyncServiceInfo.serverDatabaseUri = null;

/**
 * @property serviceType
 * @type String
 * <p>An attribute to indicate the sync service type.</p>
 * @description <p>Can be either 
{@link Modules.Tizen.DataSynchronization#property-SYNC_SERVICE_TYPE_CONTACT SYNC_SERVICE_TYPE_CONTACT} or
{@link Modules.Tizen.DataSynchronization#property-SYNC_SERVICE_TYPE_EVENT SYNC_SERVICE_TYPE_EVENT}.</p>
 */
Modules.Tizen.DataSynchronization.SyncServiceInfo.serviceType = null;

/**
 * @class Modules.Tizen.DataSynchronization.SyncStatistics
 * @typestr Object of Modules.Tizen.DataSynchronization
 * @extends Titanium.Proxy
 * <p>This interface defines the sync statistics for a profile service.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics = {};

/**
 * @method getClientToServerAdded
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-clientToServerAdded clientToServerAdded} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getClientToServerAdded = function(){};

/**
 * @method getClientToServerRemoved
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-clientToServerRemoved clientToServerRemoved} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getClientToServerRemoved = function(){};

/**
 * @method getClientToServerTotal
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-clientToServerTotal clientToServerTotal} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getClientToServerTotal = function(){};

/**
 * @method getClientToServerUpdated
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-clientToServerUpdated clientToServerUpdated} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getClientToServerUpdated = function(){};

/**
 * @method getLastSyncTime
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-lastSyncTime lastSyncTime} property.</p>
 * @return {Date} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getLastSyncTime = function(){};

/**
 * @method getServerToClientAdded
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-serverToClientAdded serverToClientAdded} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getServerToClientAdded = function(){};

/**
 * @method getServerToClientRemoved
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-serverToClientRemoved serverToClientRemoved} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getServerToClientRemoved = function(){};

/**
 * @method getServerToClientTotal
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-serverToClientTotal serverToClientTotal} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getServerToClientTotal = function(){};

/**
 * @method getServerToClientUpdated
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-serverToClientUpdated serverToClientUpdated} property.</p>
 * @return {Number} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getServerToClientUpdated = function(){};

/**
 * @method getServiceType
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-serviceType serviceType} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getServiceType = function(){};

/**
 * @method getSyncStatus
 * <p>Gets the value of the {@link Modules.Tizen.DataSynchronization.SyncStatistics#property-syncStatus syncStatus} property.</p>
 * @return {String} 
*/
Modules.Tizen.DataSynchronization.SyncStatistics.getSyncStatus = function(){};

/**
 * @property clientToServerAdded
 * @type Number
 * @readonly
 * <p>An attribute to indicate the number of added items from the client to the server direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.clientToServerAdded = null;

/**
 * @property clientToServerRemoved
 * @type Number
 * @readonly
 * <p>An attribute to indicate the number of removed items from the client to the server direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.clientToServerRemoved = null;

/**
 * @property clientToServerTotal
 * @type Number
 * @readonly
 * <p>An attribute to indicate the total number of items from the client to the server direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.clientToServerTotal = null;

/**
 * @property clientToServerUpdated
 * @type Number
 * @readonly
 * <p>An attribute to indicate the number of updated items from the client to the server direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.clientToServerUpdated = null;

/**
 * @property lastSyncTime
 * @type Date
 * @readonly
 * <p>An attribute to store the last sync time.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.lastSyncTime = null;

/**
 * @property serverToClientAdded
 * @type Number
 * @readonly
 * <p>An attribute to indicate the number of added items from the server to the client direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.serverToClientAdded = null;

/**
 * @property serverToClientRemoved
 * @type Number
 * @readonly
 * <p>An attribute to indicate the number of removed items from the server to the client direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.serverToClientRemoved = null;

/**
 * @property serverToClientTotal
 * @type Number
 * @readonly
 * <p>An attribute to indicate the total number of items sent from the server to the client direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.serverToClientTotal = null;

/**
 * @property serverToClientUpdated
 * @type Number
 * @readonly
 * <p>An attribute to indicate the number of updated items from the server to the client direction.</p>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.serverToClientUpdated = null;

/**
 * @property serviceType
 * @type String
 * @readonly
 * <p>An attribute to indicate the sync service type.</p>
 * @description <p>Can be one of:</p>
<ul>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_TWO_WAY SYNC_TYPE_TWO_WAY}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_SLOW SYNC_TYPE_SLOW}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_ONE_WAY_FROM_CLIENT SYNC_TYPE_ONE_WAY_FROM_CLIENT}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_REFRESH_FROM_CLIENT SYNC_TYPE_REFRESH_FROM_CLIENT}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_ONE_WAY_FROM_SERVER SYNC_TYPE_ONE_WAY_FROM_SERVER}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_TYPE_REFRESH_FROM_SERVER SYNC_TYPE_REFRESH_FROM_SERVER}</li>
</ul>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.serviceType = null;

/**
 * @property syncStatus
 * @type String
 * @readonly
 * <p>An attribute to store the last sync status for a corresponding service category.</p>
 * @description <p>Can be one of:</p>
<ul>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_STATUS_SUCCESS SYNC_STATUS_SUCCESS}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_STATUS_FAIL SYNC_STATUS_FAIL}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_STATUS_STOP SYNC_STATUS_STOP}</li>
<li>{@link Modules.Tizen.DataSynchronization#property-SYNC_STATUS_NONE SYNC_STATUS_NONE}</li>
</ul>
 */
Modules.Tizen.DataSynchronization.SyncStatistics.syncStatus = null;

/**
 * @method add
 * <p>Adds a sync profile.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @param {Modules.Tizen.DataSynchronization.SyncProfileInfo} profile 
 * <p>The sync profile information to add.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.add = function(profile){};

/**
 * @method createSyncInfo
 * <p>Adds an instance of {@link Modules.Tizen.DataSynchronization.SyncInfo SyncInfo}.</p>
 * @param {Object} params 
 * <p>Parameters required to initialize the object being created. Not all combinations of
parameters are allowed - please see the documentation for the propertoes of
{@link Modules.Tizen.DataSynchronization.SyncInfo SyncInfo} for information on the
allowed combinations.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.createSyncInfo = function(params){};

/**
 * @method createSyncProfileInfo
 * <p>Creates and returns an instance of {@link Modules.Tizen.DataSynchronization.SyncProfileInfo}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Tizen.DataSynchronization.SyncProfileInfo} except those marked not-creation or read-only.</p>
 * @return {Modules.Tizen.DataSynchronization.SyncProfileInfo} 
*/
Modules.Tizen.DataSynchronization.createSyncProfileInfo = function(parameters){};

/**
 * @method createSyncServiceInfo
 * <p>Creates and returns an instance of {@link Modules.Tizen.DataSynchronization.SyncServiceInfo}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Modules.Tizen.DataSynchronization.SyncServiceInfo} except those marked not-creation or read-only.</p>
 * @return {Modules.Tizen.DataSynchronization.SyncServiceInfo} 
*/
Modules.Tizen.DataSynchronization.createSyncServiceInfo = function(parameters){};

/**
 * @method getAll
 * <p>Gets the information of all sync profiles saved in a device.</p>
 * @description <p>An attempt to retrieve a <code>SyncProfileInfo</code> doesn't get any confidential information such as
the password of <code>SyncInfo</code> or <code>SyncServiceInfo</code>, but instead will return null.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @return {Modules.Tizen.DataSynchronization.SyncProfileInfo[]} <p>The profile information array.</p>
*/
Modules.Tizen.DataSynchronization.getAll = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.DataSynchronization.getBubbleParent = function(){};

/**
 * @method getMaxProfilesNum
 * <p>Gets the maximum number of supported sync profiles on a platform.</p>
 * @description <p>Normally the platform sets a limitation on the number of supported profiles. It will return
0 or negative value if no limitation is set.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @return {Number} <p>The number of supported profiles on a platform.</p>
*/
Modules.Tizen.DataSynchronization.getMaxProfilesNum = function(){};

/**
 * @method getProfilesNum
 * <p>Gets the current number of sync profiles on a device.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @return {Number} <p>The current number of profiles on a device.</p>
*/
Modules.Tizen.DataSynchronization.getProfilesNum = function(){};

/**
 * @method getSyncProfileInfo
 * <p>Gets the {@link Modules.Tizen.DataSynchronization.SyncProfileInfo SyncProfileInfo} object from a
given profile ID.</p>
 * @description <p>An attempt to retrieve a <code>SyncProfileInfo</code> doesn't get any confidential information such as
the password of <code>SyncInfo</code> or <code>SyncServiceInfo</code>, but instead will return null.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @param {Number} profileId 
 * <p>The ID to use to get the profile information.</p>
 * @return {Modules.Tizen.DataSynchronization.SyncProfileInfo} <p>The profile information of the given ID.</p>
*/
Modules.Tizen.DataSynchronization.getSyncProfileInfo = function(profileId){};

/**
 * @method remove
 * <p>Removes an existing sync profile.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @param {Number} profileId 
 * <p>The sync profile ID to remove.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.remove = function(profileId){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.DataSynchronization.setBubbleParent = function(){};

/**
 * @method startSync
 * <p>Starts a sync operation with a given profile ID.</p>
 * @description <p>If the sync mode is set to <code>MANUAL</code>, the synchronization will not start automatically until
this method is called. This method will work even in <code>PUSH</code> or <code>PERIODIC</code> mode.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @param {Number} profileId 
 * <p>The profile ID with which to initiate the sync operation.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.startSync = function(profileId, callback){};

/**
 * @method stopSync
 * <p>Stops an ongoing sync operation that is specified by the <code>profileId</code> parameter.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @param {Number} profileId 
 * <p>The ID of the ongoing sync operation to stop.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.stopSync = function(profileId){};

/**
 * @method update
 * <p>Updates an existing sync profile.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of
your Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/datasync</code></li>
</ul>
<p>This is a public-level privilege.</p>
 * @param {Modules.Tizen.DataSynchronization.SyncProfileInfo} profile 
 * <p>The sync profile information to update.</p>
 * @return void
*/
Modules.Tizen.DataSynchronization.update = function(profile){};

/**
 * @property SYNC_INTERVAL_12_HOURS
 * @type String
 * @readonly
 * <p>Time interval of 12 hours.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_12_HOURS = null;

/**
 * @property SYNC_INTERVAL_15_MINUTES
 * @type String
 * @readonly
 * <p>Time interval of 15 minutes.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_15_MINUTES = null;

/**
 * @property SYNC_INTERVAL_1_DAY
 * @type String
 * @readonly
 * <p>Time interval of 1 day.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_1_DAY = null;

/**
 * @property SYNC_INTERVAL_1_HOUR
 * @type String
 * @readonly
 * <p>Time interval of 1 hour.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_1_HOUR = null;

/**
 * @property SYNC_INTERVAL_1_MONTH
 * @type String
 * @readonly
 * <p>Time interval of 1 month.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_1_MONTH = null;

/**
 * @property SYNC_INTERVAL_1_WEEK
 * @type String
 * @readonly
 * <p>Time interval of 1 week.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_1_WEEK = null;

/**
 * @property SYNC_INTERVAL_4_HOURS
 * @type String
 * @readonly
 * <p>Time interval of 4 hours.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_4_HOURS = null;

/**
 * @property SYNC_INTERVAL_5_MINUTES
 * @type String
 * @readonly
 * <p>Time interval of 5 minutes.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_INTERVAL_5_MINUTES = null;

/**
 * @property SYNC_MODE_MANUAL
 * @type String
 * @readonly
 * <p>Indicates that the synchronization starts by manual trigger.</p>
 * @description <p>The sync type should be specified. The default value is TWO_WAY.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_MODE_MANUAL = null;

/**
 * @property SYNC_MODE_PERIODIC
 * @type String
 * @readonly
 * <p>Indicates that the synchronization starts automatically by a preset period.
The sync interval should be provided.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_MODE_PERIODIC = null;

/**
 * @property SYNC_MODE_PUSH
 * @type String
 * @readonly
 * <p>Indicates that the synchronization starts automatically when changes are made.</p>
 * @description <p>The sync type is set to TWO_WAY. The synchronization can be triggered by the server based on
the standard SAN, Server Alerted Notification, sync type.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_MODE_PUSH = null;

/**
 * @property SYNC_SERVICE_TYPE_CONTACT
 * @type String
 * @readonly
 * <p>Indicates the device contact records.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_SERVICE_TYPE_CONTACT = null;

/**
 * @property SYNC_SERVICE_TYPE_EVENT
 * @type String
 * @readonly
 * <p>Indicates the device calendar event records.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_SERVICE_TYPE_EVENT = null;

/**
 * @property SYNC_STATUS_FAIL
 * @type String
 * @readonly
 * <p>Indicates the sync has failed.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_STATUS_FAIL = null;

/**
 * @property SYNC_STATUS_NONE
 * @type String
 * @readonly
 * <p>Indicates the sync was never performed.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_STATUS_NONE = null;

/**
 * @property SYNC_STATUS_STOP
 * @type String
 * @readonly
 * <p>Indicates the sync has been stopped by user's action.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_STATUS_STOP = null;

/**
 * @property SYNC_STATUS_SUCCESS
 * @type String
 * @readonly
 * <p>Indicates the sync is successful.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_STATUS_SUCCESS = null;

/**
 * @property SYNC_TYPE_ONE_WAY_FROM_CLIENT
 * @type String
 * @readonly
 * <p>Indicates a sync type in which the client sends its modifications to the server but the
server does not send its modifications back to the client.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_TYPE_ONE_WAY_FROM_CLIENT = null;

/**
 * @property SYNC_TYPE_ONE_WAY_FROM_SERVER
 * @type String
 * @readonly
 * <p>Indicates a sync type in which the client gets all modifications from the server but the
client does not send its modifications to the server.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_TYPE_ONE_WAY_FROM_SERVER = null;

/**
 * @property SYNC_TYPE_REFRESH_FROM_CLIENT
 * @type String
 * @readonly
 * <p>Indicates a sync type in which the client sends all its data from a database to the server.</p>
 * @description <p>The server is then expected to replace all data in the target database with the data
received from the client.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_TYPE_REFRESH_FROM_CLIENT = null;

/**
 * @property SYNC_TYPE_REFRESH_FROM_SERVER
 * @type String
 * @readonly
 * <p>Indicates a sync type in which the server sends all its data from a database to the client.
The client is then expected to replace all data in the target database with the
data received from the server.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_TYPE_REFRESH_FROM_SERVER = null;

/**
 * @property SYNC_TYPE_SLOW
 * @type String
 * @readonly
 * <p>Indicates a form of two-way sync in which the client and the server exchange all the data
from their database.</p>
 * @description <p>This type of sync is used for the first sync, or after a synchronization failure.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_TYPE_SLOW = null;

/**
 * @property SYNC_TYPE_TWO_WAY
 * @type String
 * @readonly
 * <p>Indicates a normal sync type in which the client and the server exchange information about
modified data in these devices.</p>
 */
Modules.Tizen.DataSynchronization.SYNC_TYPE_TWO_WAY = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.DataSynchronization.bubbleParent = null;

/**
 * @class Modules.Tizen.Download
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The Download module provides methods to asynchronously download the contents of a URL to a storage.</p>
 * <h3>Example</h3>
 * <h4>Download workflow</h4>
 * <p><p>Demonstrates how to initiate and handle a download.</p></p><pre>var Tizen = require('tizen'),
    listener = {
        onDataStream: function(request, receivedSize, totalSize) {
            console.log('"onDataStream" event. id=' + request.id + ', receivedSize=' + receivedSize + ', totalSize=' + totalSize);
        },
        onPause: function(request) {
            console.log('"onPause" event.');
        },
        onCancel: function(request) {
            console.log('"onCancel" event.');
        },
        onLoad: function(request, fullPath) {
            console.log('"onLoad" event.');
        },
        onError: function(request, error) {
            console.error('"onError" event:' + error.name);
    },
    downloadRequest = Tizen.Download.createDownloadRequest({
        url: 'http://preview.appcelerator.com/appcelerator/studio/standalone/install/rc/Titanium_Studio.exe',
        destination: 'documents',
        fileName: 'Titanium_Studio.exe')
    });

downloadRequest.send(listener);</pre>
 */
Modules.Tizen.Download = {};

/**
 * @class Modules.Tizen.Download.DownloadRequest
 * @typestr Object of Modules.Tizen.Download
 * @extends Titanium.Proxy
 * <p>Defines the download request object.</p>
 */
Modules.Tizen.Download.DownloadRequest = {};

/**
 * @method abort
 * <p>Cancels an ongoing download operation that is specified by the downloadId parameter.</p>
 * @return void
*/
Modules.Tizen.Download.DownloadRequest.abort = function(){};

/**
 * @method getDestination
 * <p>Gets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-destination destination} property.</p>
 * @return {String} 
*/
Modules.Tizen.Download.DownloadRequest.getDestination = function(){};

/**
 * @method getFileName
 * <p>Gets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-fileName fileName} property.</p>
 * @return {String} 
*/
Modules.Tizen.Download.DownloadRequest.getFileName = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-id id} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Download.DownloadRequest.getId = function(){};

/**
 * @method getMIMEtype
 * <p>Gets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-MIMEtype MIMEtype} property.</p>
 * @return {String} 
*/
Modules.Tizen.Download.DownloadRequest.getMIMEtype = function(){};

/**
 * @method getState
 * <p>Gets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-state state} property.</p>
 * @return {String} 
*/
Modules.Tizen.Download.DownloadRequest.getState = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-url url} property.</p>
 * @return {String} 
*/
Modules.Tizen.Download.DownloadRequest.getUrl = function(){};

/**
 * @method pause
 * <p>Pauses an ongoing download operation that is specified by the downloadId parameter. The paused download operation can be resumed later by the {@link Modules.Tizen.Download.DownloadRequest#method-resume resume} method.</p>
 * @return void
*/
Modules.Tizen.Download.DownloadRequest.pause = function(){};

/**
 * @method resume
 * <p>Resumes a paused download operation that is specified by the downloadId parameter.</p>
 * @return void
*/
Modules.Tizen.Download.DownloadRequest.resume = function(){};

/**
 * @method send
 * <p>Starts a download operation with the specified URL information.</p>
 * @description <p>Returns an identifier for each download operation.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/download</code></li>
</ul>
 * @param {DownloadCallback} downloadCallback (optional)
 * <p>The method to invoke when the download state changes or an error occurs.</p>
 * @return {Number} 
*/
Modules.Tizen.Download.DownloadRequest.send = function(downloadCallback){};

/**
 * @method setDestination
 * <p>Sets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-destination destination} property.</p>
 * @param {String} destination 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Download.DownloadRequest.setDestination = function(destination){};

/**
 * @method setFileName
 * <p>Sets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-fileName fileName} property.</p>
 * @param {String} fileName 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Download.DownloadRequest.setFileName = function(fileName){};

/**
 * @method setListener
 * <p>Sets the download callback to the download operation of given id. It's possible to change or register the listener of download operation using the saved id.</p>
 * @param {DownloadCallback} downloadCallback 
 * <p>The method to invoke when the download state changes or an error occurs.</p>
 * @return void
*/
Modules.Tizen.Download.DownloadRequest.setListener = function(downloadCallback){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Modules.Tizen.Download.DownloadRequest#property-url url} property.</p>
 * @param {String} url 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Download.DownloadRequest.setUrl = function(url){};

/**
 * @property MIMEtype
 * @type String
 * @readonly
 * <p>Returns a valid MIME type of the downloaded file when the download operation has been 
started and successfully retrieved the file header.</p>
 */
Modules.Tizen.Download.DownloadRequest.MIMEtype = null;

/**
 * @property destination
 * @type String
 * <p>Stores the folder path of the destination folder to which a requested file object will be 
downloaded.</p>
 * @description <p>If the destination is not specified,  the file will be downloaded to the default storage 
"Downloads".</p>
 */
Modules.Tizen.Download.DownloadRequest.destination = null;

/**
 * @property fileName
 * @type String
 * <p>An attribute to store the file name for the specified URL.</p>
 * @description <p>If the file name is not given, the original file name from URL is used.</p>
 */
Modules.Tizen.Download.DownloadRequest.fileName = null;

/**
 * @property id
 * @type Number
 * @readonly
 * <p>The ID of the corresponding download operation.</p>
 */
Modules.Tizen.Download.DownloadRequest.id = null;

/**
 * @property state
 * @type String
 * @readonly
 * <p>Gets the download state of an operation for current downloadRequest object</p>
 */
Modules.Tizen.Download.DownloadRequest.state = null;

/**
 * @property url
 * @type String
 * <p>Store the URL of the object to download.</p>
 */
Modules.Tizen.Download.DownloadRequest.url = null;

/**
 * @method createDownloadRequest
 * <p>Creates {@link Modules.Tizen.Download.DownloadRequest} object.</p>
 * @param {DownloadRequestInit} parameters 
 * <p>Initial parameters for {@link Modules.Tizen.Download.DownloadRequest}.</p>
 * @return {Modules.Tizen.Download.DownloadRequest} 
*/
Modules.Tizen.Download.createDownloadRequest = function(parameters){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Download.getBubbleParent = function(){};

/**
 * @method getDownloadRequest
 * <p>Gets the DownloadRequest object from a given id.</p>
 * @description <p>Returns the download request information of the given id.</p>
 * @param {Number} downloadId 
 * <p>The ID to get the download request information.</p>
 * @return {Modules.Tizen.Download.DownloadRequest} 
*/
Modules.Tizen.Download.getDownloadRequest = function(downloadId){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Download.setBubbleParent = function(){};

/**
 * @property DOWNLOAD_STATE_CANCELED
 * @type String
 * @readonly
 * <p>Indicates that the download operation is canceled by user request.</p>
 */
Modules.Tizen.Download.DOWNLOAD_STATE_CANCELED = null;

/**
 * @property DOWNLOAD_STATE_COMPLETED
 * @type String
 * @readonly
 * <p>Indicates that the download operation is in a completed state.</p>
 */
Modules.Tizen.Download.DOWNLOAD_STATE_COMPLETED = null;

/**
 * @property DOWNLOAD_STATE_DOWNLOADING
 * @type String
 * @readonly
 * <p>Indicates that the download operation is in progress.</p>
 */
Modules.Tizen.Download.DOWNLOAD_STATE_DOWNLOADING = null;

/**
 * @property DOWNLOAD_STATE_FAILED
 * @type String
 * @readonly
 * <p>Indicates that the download operation has failed due to some reasons.</p>
 */
Modules.Tizen.Download.DOWNLOAD_STATE_FAILED = null;

/**
 * @property DOWNLOAD_STATE_PAUSED
 * @type String
 * @readonly
 * <p>Indicates that the download operation is in a paused state by user request.</p>
 */
Modules.Tizen.Download.DOWNLOAD_STATE_PAUSED = null;

/**
 * @property DOWNLOAD_STATE_QUEUED
 * @type String
 * @readonly
 * <p>Indicates that the download operation is listed in a queue.</p>
 */
Modules.Tizen.Download.DOWNLOAD_STATE_QUEUED = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Download.bubbleParent = null;

/**
 * @class Modules.Tizen.MessagePort
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This API provides the functionality for communicating with other applications.</p>
 * <h3>Example</h3>
 * <h4>Example</h4>
 * <pre>//Code for the first application
var localMsgPort = Tizen.MessagePort.requestLocalMessagePort('MessagePortA');
localMsgPort.addEventListener('received', function(e) {
    alert(e.data[0].value); //Some message
});

//Code for the second application
var remoteMsgPort = Tizen.MessagePort.requestRemoteMessagePort('D0zb7HQO2e.KSHelp', 'MessagePortA');
remoteMsgPort.sendMessage([
    {
        key: 'First',
        value: 'Some message'
    }
]);</pre>
 */
Modules.Tizen.MessagePort = {};

/**
 * @class Modules.Tizen.MessagePort.LocalMessagePort
 * @typestr Object of Modules.Tizen.MessagePort
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>This interface provides methods to receive data.</p>
 */
Modules.Tizen.MessagePort.LocalMessagePort = {};


/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.LocalMessagePort.getBubbleParent = function(){};

/**
 * @method getIsTrusted
 * <p>Gets the value of the {@link Modules.Tizen.MessagePort.LocalMessagePort#property-isTrusted isTrusted} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.MessagePort.LocalMessagePort.getIsTrusted = function(){};

/**
 * @method getMessagePortName
 * <p>Gets the value of the {@link Modules.Tizen.MessagePort.LocalMessagePort#property-messagePortName messagePortName} property.</p>
 * @return {String} 
*/
Modules.Tizen.MessagePort.LocalMessagePort.getMessagePortName = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.LocalMessagePort.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.LocalMessagePort.bubbleParent = null;

/**
 * @property isTrusted
 * @type Boolean
 * @readonly
 * <p>An attribute that determines whether the message port is trusted or not.</p>
 */
Modules.Tizen.MessagePort.LocalMessagePort.isTrusted = null;

/**
 * @property messagePortName
 * @type String
 * @readonly
 * <p>An attribute that stores the name of the message port name.</p>
 */
Modules.Tizen.MessagePort.LocalMessagePort.messagePortName = null;

/**
 * @class Modules.Tizen.MessagePort.RemoteMessagePort
 * @typestr Object of Modules.Tizen.MessagePort
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>This interface provides interface provides methods to send messages.</p>
 */
Modules.Tizen.MessagePort.RemoteMessagePort = {};

/**
 * @method getAppId
 * <p>Gets the value of the {@link Modules.Tizen.MessagePort.RemoteMessagePort#property-appId appId} property.</p>
 * @return {String} 
*/
Modules.Tizen.MessagePort.RemoteMessagePort.getAppId = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.RemoteMessagePort.getBubbleParent = function(){};

/**
 * @method getIsTrusted
 * <p>Gets the value of the {@link Modules.Tizen.MessagePort.RemoteMessagePort#property-isTrusted isTrusted} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.MessagePort.RemoteMessagePort.getIsTrusted = function(){};

/**
 * @method getMessagePortName
 * <p>Gets the value of the {@link Modules.Tizen.MessagePort.RemoteMessagePort#property-messagePortName messagePortName} property.</p>
 * @return {String} 
*/
Modules.Tizen.MessagePort.RemoteMessagePort.getMessagePortName = function(){};

/**
 * @method sendMessage
 * <p>Sends messages to the specified application.</p>
 * @param {MessagePortDataItem[]} data 
 * <p>The name of the local message port to retrieve.</p>
 * @param {Modules.Tizen.MessagePort.LocalMessagePort} localMessagePort 
 * <p>LocalMessagePort object that gives local message port of the current application.
It can be used to receive reply messages from the other end of the message port.</p>
 * @return void
*/
Modules.Tizen.MessagePort.RemoteMessagePort.sendMessage = function(data, localMessagePort){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.RemoteMessagePort.setBubbleParent = function(){};

/**
 * @property appId
 * @type String
 * @readonly
 * <p>An attribute that store the application ID to connect with.</p>
 */
Modules.Tizen.MessagePort.RemoteMessagePort.appId = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.RemoteMessagePort.bubbleParent = null;

/**
 * @property isTrusted
 * @type Boolean
 * @readonly
 * <p>An attribute that determines whether the message port is trusted or not.</p>
 */
Modules.Tizen.MessagePort.RemoteMessagePort.isTrusted = null;

/**
 * @property messagePortName
 * @type String
 * @readonly
 * <p>An attribute to store the message port name.</p>
 */
Modules.Tizen.MessagePort.RemoteMessagePort.messagePortName = null;

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.getBubbleParent = function(){};

/**
 * @method requestLocalMessagePort
 * <p>Requests a LocalMessage Port instance to start receiving message from another application.</p>
 * @param {String} localMessagePortName 
 * <p>The name of the local message port to retrieve.</p>
 * @return {Modules.Tizen.MessagePort.LocalMessagePort} 
*/
Modules.Tizen.MessagePort.requestLocalMessagePort = function(localMessagePortName){};

/**
 * @method requestRemoteMessagePort
 * <p>Requests a RemoteMessagePort instance to send message to another application.</p>
 * @param {String} appId 
 * <p>The ID of the application to send messages.</p>
 * @param {String} remoteMessagePortName 
 * <p>The name of remote message port.</p>
 * @return {Modules.Tizen.MessagePort.RemoteMessagePort} 
*/
Modules.Tizen.MessagePort.requestRemoteMessagePort = function(appId, remoteMessagePortName){};

/**
 * @method requestTrustedLocalMessagePort
 * <p>Requests a trusted LocalMessagePort instance to receive message from another application.</p>
 * @param {String} localMessagePortName 
 * <p>The name of the local message port to retrieve.</p>
 * @return {Modules.Tizen.MessagePort.LocalMessagePort} 
*/
Modules.Tizen.MessagePort.requestTrustedLocalMessagePort = function(localMessagePortName){};

/**
 * @method requestTrustedRemoteMessagePort
 * <p>Requests a trusted RemoteMessagePort instance to receive message from another application.</p>
 * @param {String} appId 
 * <p>The ID of the application to send messages.</p>
 * @param {String} remoteMessagePortName 
 * <p>The name of remote message port.</p>
 * @return {Modules.Tizen.MessagePort.RemoteMessagePort} 
*/
Modules.Tizen.MessagePort.requestTrustedRemoteMessagePort = function(appId, remoteMessagePortName){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.MessagePort.bubbleParent = null;

/**
 * @class Modules.Tizen.Messaging
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This specification defines interfaces to manage Message, retrieve messaging services.</p>
 * @description <p>There is a object that allows access to the messaging API. Fetches all existing messaging 
services by type or a messaging service of a given type for concrete account. </p>
 * <h3>Example</h3>
 * <h4>Enumerate all folders in an email account.</h4>
 * <p><p>This example shows how to enumerate all folders in an email account (like inbox, sent, etc).</p></p><pre>var Tizen = require('tizen'),
    serviceType = Tizen.Messaging.MESSAGE_SERVICE_TAG_MESSAGINGEMAIL,
    emailService;

// Initialize email service (Tizen object which allows email functionality).
function initEmailService(callBack) {
    Tizen.Messaging.getMessageServices(serviceType, function (response) {
        if (response.success) {
            var services = response.services;
            if (services.length === 0) {
                console.error('The following error occurred: Services list is empty.');
                return;
            }

            services[0] &amp;&amp; (emailService = services[0]);
            callBack &amp;&amp; callBack();
        } else {
            console.log(response.error);
        }
    });
}

// Search for, and print the names of, the email folders.
function findFolders() {

    function foldersListCB(response) {
        if (response.success) {
            var folders = response.folders,
                foldersCount = folders.length,
                i = 0;

            console.log(foldersCount + ' folder(s) found.');

            if (foldersCount === 0) {
                console.log('Folders not found.');
                return;
            }

            // Print the folder names to the console
            for (; i &lt; foldersCount; i++) {
                console.log('Folder: ' + folders[i].name);
            }
        } else {
            console.log('Error: ' + response.error);
        });
    }

    // Search for email folders
    try {
        // Start to search list of folders from email account
        var attributeFilter = Tizen.createAttributeFilter({
            attributeName: 'serviceId',
            matchFlag: 'EXACTLY',
            matchValue: emailService.id
        });

        emailService.messageStorage.findFolders(attributeFilter, foldersListCB);
    } catch(exc) {
        console.log('Error: ' + exc.message);
    }
}

initEmailService(findFolders);</pre>
 */
Modules.Tizen.Messaging = {};

/**
 * @class Modules.Tizen.Messaging.Message
 * @typestr Object of Modules.Tizen.Messaging
 * @extends Titanium.Proxy
 * <p>Defines the content and attributes of a message.</p>
 * @description <p>This interface allows a web application to define the set of properties linked to a message.
It also allows an application to retrieve the content of a message through the 
{@link Modules.Tizen.Messaging.MessageStorage}
methods. 
In those cases, the implementation MAY return, in some situations, only the meta-information of 
a message without the loaded body. 
In those situations, the method 
{@link Modules.Tizen.Messaging.MessageService#method-loadMessageBody loadMessageBody}
should be used.</p>
 */
Modules.Tizen.Messaging.Message = {};

/**
 * @method getAttachments
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-attachments attachments} property.</p>
 * @return {Modules.Tizen.Messaging.MessageAttachment[]} 
*/
Modules.Tizen.Messaging.Message.getAttachments = function(){};

/**
 * @method getBcc
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-bcc bcc} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Messaging.Message.getBcc = function(){};

/**
 * @method getBody
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-body body} property.</p>
 * @return {Modules.Tizen.Messaging.MessageBody} 
*/
Modules.Tizen.Messaging.Message.getBody = function(){};

/**
 * @method getCc
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-cc cc} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Messaging.Message.getCc = function(){};

/**
 * @method getConversationId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-conversationId conversationId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getConversationId = function(){};

/**
 * @method getFolderId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-folderId folderId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getFolderId = function(){};

/**
 * @method getFrom
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-from from} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getFrom = function(){};

/**
 * @method getHasAttachment
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-hasAttachment hasAttachment} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Messaging.Message.getHasAttachment = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getId = function(){};

/**
 * @method getInResponseTo
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-inResponseTo inResponseTo} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getInResponseTo = function(){};

/**
 * @method getIsHighPriority
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-isHighPriority isHighPriority} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Messaging.Message.getIsHighPriority = function(){};

/**
 * @method getIsRead
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-isRead isRead} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Messaging.Message.getIsRead = function(){};

/**
 * @method getMessageStatus
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-messageStatus messageStatus} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getMessageStatus = function(){};

/**
 * @method getSubject
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-subject subject} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getSubject = function(){};

/**
 * @method getTimestamp
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-timestamp timestamp} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Messaging.Message.getTimestamp = function(){};

/**
 * @method getTo
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-to to} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Messaging.Message.getTo = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.Message#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.Message.getType = function(){};

/**
 * @method setAttachments
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-attachments attachments} property.</p>
 * @param {Modules.Tizen.Messaging.MessageAttachment[]} attachments 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setAttachments = function(attachments){};

/**
 * @method setBcc
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-bcc bcc} property.</p>
 * @param {String[]} bcc 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setBcc = function(bcc){};

/**
 * @method setBody
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-body body} property.</p>
 * @param {Modules.Tizen.Messaging.MessageBody} body 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setBody = function(body){};

/**
 * @method setCc
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-cc cc} property.</p>
 * @param {String[]} cc 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setCc = function(cc){};

/**
 * @method setInResponseTo
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-inResponseTo inResponseTo} property.</p>
 * @param {String} inResponseTo 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setInResponseTo = function(inResponseTo){};

/**
 * @method setIsHighPriority
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-isHighPriority isHighPriority} property.</p>
 * @param {Boolean} isHighPriority 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setIsHighPriority = function(isHighPriority){};

/**
 * @method setIsRead
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-isRead isRead} property.</p>
 * @param {Boolean} isRead 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setIsRead = function(isRead){};

/**
 * @method setSubject
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-subject subject} property.</p>
 * @param {String} subject 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setSubject = function(subject){};

/**
 * @method setTo
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.Message#property-to to} property.</p>
 * @param {String[]} to 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.Message.setTo = function(to){};

/**
 * @property attachments
 * @type Modules.Tizen.Messaging.MessageAttachment[]
 * <p>The list of the message attachments.</p>
 * @description <p>This array is empty if the message does not have attachments or the message body is not
loaded and the attachment info is inaccessible (in this case, the <code>hasAttachment</code> attribute 
has to be checked).</p>
 */
Modules.Tizen.Messaging.Message.attachments = null;

/**
 * @property bcc
 * @type String[]
 * <p>The blind carbon copy (bcc) address of a message. This property is used only with Email 
messages. </p>
 */
Modules.Tizen.Messaging.Message.bcc = null;

/**
 * @property body
 * @type Modules.Tizen.Messaging.MessageBody
 * <p>The body of a message.</p>
 */
Modules.Tizen.Messaging.Message.body = null;

/**
 * @property cc
 * @type String[]
 * <p>The carbon copy address of a message. This property is used only with Email messages.</p>
 */
Modules.Tizen.Messaging.Message.cc = null;

/**
 * @property conversationId
 * @type String
 * @readonly
 * <p>The unique identifier of the conversation to which this message belongs.</p>
 * @description <p>By default, this attribute is set to null.</p>
 */
Modules.Tizen.Messaging.Message.conversationId = null;

/**
 * @property folderId
 * @type String
 * @readonly
 * <p>The unique identifier of the folder to which this message belongs.</p>
 * @description <p>By default, this attribute is set to null.
For SMS and MMS, folderId can be one of these numbers:</p>
<ul>
<li>INBOX = 1,</li>
<li>OUTBOX = 2,</li>
<li>DRAFTS = 3,</li>
<li>SENTBOX = 4</li>
</ul>
 */
Modules.Tizen.Messaging.Message.folderId = null;

/**
 * @property from
 * @type String
 * @readonly
 * <p>The source address (or source phone number) of a message.</p>
 * @description <p>This property is set up by the device or the web runtime environment. By default, 
this attribute is set to null. </p>
 */
Modules.Tizen.Messaging.Message.from = null;

/**
 * @property hasAttachment
 * @type Boolean
 * @readonly
 * <p>The flag for existance of an attachment(s)</p>
 * @description <p>This property is true, if the message has one or more attachments.
This property is used only with Email and MMS messages.</p>
 */
Modules.Tizen.Messaging.Message.hasAttachment = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>The message unique identifier.</p>
 * @description <p>This property is the unique identifier for the message.
The <code>id</code> is a locally unique and persistent property, assigned by the device or the web 
runtime (WRT). For new messages created using the Message constructor, the <code>id</code> is assigned on 
the first occasion that the message is processed by the underlying platform, such as a call 
to {@link Modules.Tizen.Messaging.MessageService#method-sendMessage sendMessage}. Before the <code>id</code> is 
assigned, it is set to null. By default, this attribute is set to null.</p>
 */
Modules.Tizen.Messaging.Message.id = null;

/**
 * @property inResponseTo
 * @type String
 * <p>The unique identifier of the original message.</p>
 * @description <p>If the message was replied to or forwarded, this property contains the ID of the original 
message, otherwise it is set to null.</p>
 */
Modules.Tizen.Messaging.Message.inResponseTo = null;

/**
 * @property isHighPriority
 * @type Boolean
 * <p>The priority of a message.</p>
 * @description <p>This property is true, if the message has a high priority. False, if the message has a 
normal or low priority. This property is used only with Email messages.</p>
 */
Modules.Tizen.Messaging.Message.isHighPriority = null;

/**
 * @property isRead
 * @type Boolean
 * <p>The flag for read state. This property is true, if the message has been read. False, if not.</p>
 */
Modules.Tizen.Messaging.Message.isRead = null;

/**
 * @property messageStatus
 * @type String
 * @readonly
 * <p>The status of the given message.</p>
 * @description <p>It can be one of these values: SENT, SENDING, FAILED, DRAFT.</p>
<p>If the status of the current message does not correspond to any item from the list, an empty 
value will be returned.</p>
 */
Modules.Tizen.Messaging.Message.messageStatus = null;

/**
 * @property subject
 * @type String
 * <p>The subject of a message.</p>
 * @description <p>This property is used only with Email and MMS messages.</p>
 */
Modules.Tizen.Messaging.Message.subject = null;

/**
 * @property timestamp
 * @type Date
 * @readonly
 * <p>The timestamp of a message.</p>
 * @description <p>For a received message, the timestamps indicates the time a message was received. For a sent 
message, the timestamp indicates the time a message was sent. By default, this attribute is 
set to null. </p>
 */
Modules.Tizen.Messaging.Message.timestamp = null;

/**
 * @property to
 * @type String[]
 * <p>The destination of a message.</p>
 */
Modules.Tizen.Messaging.Message.to = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The type of the given message. </p>
 * @description <p>Can be one of this constants: </p>
<ul>
<li>{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_SMS}, </li>
<li>{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_MMS}, </li>
<li>{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_EMAIL}.</li>
</ul>
 */
Modules.Tizen.Messaging.Message.type = null;

/**
 * @class Modules.Tizen.Messaging.MessageAttachment
 * @typestr Object of Modules.Tizen.Messaging
 * @extends Titanium.Proxy
 * <p>Defines the content and attributes of a message attachment.</p>
 */
Modules.Tizen.Messaging.MessageAttachment = {};

/**
 * @method getFilePath
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageAttachment#property-filePath filePath} property.</p>
 * @return {Modules.Tizen.Messaging.MessageAttachment} 
*/
Modules.Tizen.Messaging.MessageAttachment.getFilePath = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageAttachment#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageAttachment.getId = function(){};

/**
 * @method getMessageId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageAttachment#property-messageId messageId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageAttachment.getMessageId = function(){};

/**
 * @method getMimeType
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageAttachment#property-mimeType mimeType} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageAttachment.getMimeType = function(){};

/**
 * @property filePath
 * @type Modules.Tizen.Messaging.MessageAttachment
 * @readonly
 * <p>The location path to the loaded attachment file.</p>
 * @description <p>It holds the location path to the loaded attachment file, appropriate for the File System 
API, NULL if the attachment is not loaded from the remote server.</p>
 */
Modules.Tizen.Messaging.MessageAttachment.filePath = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>The ID of the attachment.</p>
 * @description <p>It holds the identifier of the attachment within its parent message.
By default, this attribute is set to null.</p>
 */
Modules.Tizen.Messaging.MessageAttachment.id = null;

/**
 * @property messageId
 * @type String
 * @readonly
 * <p>The ID of the parent message.</p>
 * @description <p>By default, this attribute is set to null.</p>
 */
Modules.Tizen.Messaging.MessageAttachment.messageId = null;

/**
 * @property mimeType
 * @type String
 * @readonly
 * <p>The attachment MIME type.</p>
 * @description <p>It describes the MIME type of the attachment, for example; "text/html".
By default, this attribute is set to null.</p>
 */
Modules.Tizen.Messaging.MessageAttachment.mimeType = null;

/**
 * @class Modules.Tizen.Messaging.MessageBody
 * @typestr Object of Modules.Tizen.Messaging
 * @extends Titanium.Proxy
 * <p>Describes a message body.</p>
 * @description <p>Message body is comprised of a plain text part, an HTML part, and inline attachments.</p>
 */
Modules.Tizen.Messaging.MessageBody = {};

/**
 * @method getHtmlBody
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-htmlBody htmlBody} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageBody.getHtmlBody = function(){};

/**
 * @method getInlineAttachments
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-inlineAttachments inlineAttachments} property.</p>
 * @return {Modules.Tizen.Messaging.MessageAttachment} 
*/
Modules.Tizen.Messaging.MessageBody.getInlineAttachments = function(){};

/**
 * @method getLoaded
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-loaded loaded} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Messaging.MessageBody.getLoaded = function(){};

/**
 * @method getMessageId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-messageId messageId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageBody.getMessageId = function(){};

/**
 * @method getPlainBody
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-plainBody plainBody} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageBody.getPlainBody = function(){};

/**
 * @method setHtmlBody
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-htmlBody htmlBody} property.</p>
 * @param {String} htmlBody 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageBody.setHtmlBody = function(htmlBody){};

/**
 * @method setInlineAttachments
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-inlineAttachments inlineAttachments} property.</p>
 * @param {Modules.Tizen.Messaging.MessageAttachment} inlineAttachments 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageBody.setInlineAttachments = function(inlineAttachments){};

/**
 * @method setPlainBody
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.MessageBody#property-plainBody plainBody} property.</p>
 * @param {String} plainBody 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageBody.setPlainBody = function(plainBody){};

/**
 * @property htmlBody
 * @type String
 * <p>The HTML representation of the message body.</p>
 * @description <p>This attribute holds an empty string if the message does not have HTML body content. This 
property is used only with Email messages.</p>
 */
Modules.Tizen.Messaging.MessageBody.htmlBody = null;

/**
 * @property inlineAttachments
 * @type Modules.Tizen.Messaging.MessageAttachment
 * <p>The list of the inline attachments.</p>
 * @description <p>This array is empty, if the message does not have inline attachment or the message body is 
not loaded and attachments info is inaccessible (in this case the "loaded" attribute has to 
be checked).</p>
 */
Modules.Tizen.Messaging.MessageBody.inlineAttachments = null;

/**
 * @property loaded
 * @type Boolean
 * @readonly
 * <p>Loads the status of the message body.</p>
 * @description <p>This attribute describes whether the message body is loaded. It will be true if the message 
body is loaded, and false if the object is not loaded. The default value is false.</p>
 */
Modules.Tizen.Messaging.MessageBody.loaded = null;

/**
 * @property messageId
 * @type String
 * @readonly
 * <p>The ID of the parent message.</p>
 * @description <p>It holds the ID of the message containing this body.</p>
 */
Modules.Tizen.Messaging.MessageBody.messageId = null;

/**
 * @property plainBody
 * @type String
 * <p>The plain text representation of the message body.</p>
 */
Modules.Tizen.Messaging.MessageBody.plainBody = null;

/**
 * @class Modules.Tizen.Messaging.MessageConversation
 * @typestr Object of Modules.Tizen.Messaging
 * @extends Titanium.Proxy
 * <p>Defines the message conversation (also known as the thread of messages).</p>
 * @description <p>This interface allows a web application to get the set of properties linked to a conversation. 
This interface provides only read-only attributes. </p>
 */
Modules.Tizen.Messaging.MessageConversation = {};

/**
 * @method getBcc
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-bcc bcc} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Messaging.MessageConversation.getBcc = function(){};

/**
 * @method getCc
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-cc cc} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Messaging.MessageConversation.getCc = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageConversation.getId = function(){};

/**
 * @method getIsRead
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-isRead isRead} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageConversation.getIsRead = function(){};

/**
 * @method getLastMessageId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-lastMessageId lastMessageId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageConversation.getLastMessageId = function(){};

/**
 * @method getMessageCount
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-messageCount messageCount} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageConversation.getMessageCount = function(){};

/**
 * @method getPreview
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-preview preview} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageConversation.getPreview = function(){};

/**
 * @method getSubject
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-subject subject} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageConversation.getSubject = function(){};

/**
 * @method getTimestamp
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-timestamp timestamp} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Messaging.MessageConversation.getTimestamp = function(){};

/**
 * @method getTo
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-to to} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Messaging.MessageConversation.getTo = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageConversation.getType = function(){};

/**
 * @method getUnreadMessages
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageConversation#property-unreadMessages unreadMessages} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageConversation.getUnreadMessages = function(){};

/**
 * @property bcc
 * @type String[]
 * @readonly
 * <p>The blind carbon copy (bcc) address of the latest message in the conversation.</p>
 * @description <p>This property is used only for Email.</p>
 */
Modules.Tizen.Messaging.MessageConversation.bcc = null;

/**
 * @property cc
 * @type String[]
 * @readonly
 * <p>The carbon copy (cc) address of the latest message in the conversation.</p>
 * @description <p>This property is used only for Email.</p>
 */
Modules.Tizen.Messaging.MessageConversation.cc = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>The conversation unique identifier.</p>
 * @description <p>This property is the unique identifier for the conversation.
The <code>id</code> is a locally unique and persistent property, assigned by the device or the web 
runtime (WRT).</p>
 */
Modules.Tizen.Messaging.MessageConversation.id = null;

/**
 * @property isRead
 * @type String
 * @readonly
 * <p>The flag <code>isRead</code> for the latest message in the conversation.
This property is true, if the message has been read, false, if not.</p>
 */
Modules.Tizen.Messaging.MessageConversation.isRead = null;

/**
 * @property lastMessageId
 * @type String
 * @readonly
 * <p>The unique identifier of a latest message in conversation.</p>
 * @description <p>This property is set up by the device or the web runtime environment.</p>
 */
Modules.Tizen.Messaging.MessageConversation.lastMessageId = null;

/**
 * @property messageCount
 * @type Number
 * @readonly
 * <p>The count of messages in the conversation.</p>
 */
Modules.Tizen.Messaging.MessageConversation.messageCount = null;

/**
 * @property preview
 * @type String
 * @readonly
 * <p>A preview of the latest message in the conversation.</p>
 */
Modules.Tizen.Messaging.MessageConversation.preview = null;

/**
 * @property subject
 * @type String
 * @readonly
 * <p>Subject of the conversation (applicable for group chats, MMS, email).</p>
 */
Modules.Tizen.Messaging.MessageConversation.subject = null;

/**
 * @property timestamp
 * @type Date
 * @readonly
 * <p>The timestamp of the latest message in the conversation.
This property is set up by the device or the web runtime environment.</p>
 */
Modules.Tizen.Messaging.MessageConversation.timestamp = null;

/**
 * @property to
 * @type String[]
 * @readonly
 * <p>The destination of the latest message in the conversation.</p>
 */
Modules.Tizen.Messaging.MessageConversation.to = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The type of the given conversation. </p>
 * @description <p>Can be one of this constants: {@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_SMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_MMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_EMAIL}.</p>
 */
Modules.Tizen.Messaging.MessageConversation.type = null;

/**
 * @property unreadMessages
 * @type Number
 * @readonly
 * <p>The count of unread messages in the conversation.</p>
 */
Modules.Tizen.Messaging.MessageConversation.unreadMessages = null;

/**
 * @class Modules.Tizen.Messaging.MessageFolder
 * @typestr Object of Modules.Tizen.Messaging
 * @extends Titanium.Proxy
 * <p>Defines the email folder.</p>
 * @description <p>This interface allows a web application to get the set of properties that are linked to an email
folder.
The concept of folders is present in several email protocols, such as IMAP, Mail For Exchange.
If the Messaging service does not represent email or an email protocol supporting the concept of 
folders on a server, this service have one folder which is the standard INBOX folder.</p>
 */
Modules.Tizen.Messaging.MessageFolder = {};

/**
 * @method getContentType
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-contentType contentType} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageFolder.getContentType = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageFolder.getId = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-name name} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageFolder.getName = function(){};

/**
 * @method getParentId
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-parentId parentId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageFolder.getParentId = function(){};

/**
 * @method getPath
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-path path} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageFolder.getPath = function(){};

/**
 * @method getSynchronizable
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-synchronizable synchronizable} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Messaging.MessageFolder.getSynchronizable = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageFolder.getType = function(){};

/**
 * @method setName
 * <p>Sets the value of the {@link Modules.Tizen.Messaging.MessageFolder#property-name name} property.</p>
 * @param {Number} name 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageFolder.setName = function(name){};

/**
 * @property contentType
 * @type String
 * @readonly
 * <p>The type of the messages contained within this folder.</p>
 * @description <p>Can be one of this constants: {@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_SMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_MMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_EMAIL}.</p>
 */
Modules.Tizen.Messaging.MessageFolder.contentType = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>The folder unique identifier.</p>
 * @description <p>This property is the unique identifier for the folder.
The <code>id</code> is a locally unique and persistent property, assigned by the device or the web 
runtime (WRT).</p>
 */
Modules.Tizen.Messaging.MessageFolder.id = null;

/**
 * @property name
 * @type Number
 * <p>The visible name of the folder.</p>
 * @description <p>Can be modified. By default, it contains the folder name from the server.
In case the current Messaging service does not support remote folders on the server 
(and this folder is the only one that the current service has), this attribute contains 
the service name, by default.</p>
 */
Modules.Tizen.Messaging.MessageFolder.name = null;

/**
 * @property parentId
 * @type String
 * @readonly
 * <p>The unique identifier for the parent folder of this folder.</p>
 * @description <p>If this folder is a root folder, the parent folder id is null.</p>
 */
Modules.Tizen.Messaging.MessageFolder.parentId = null;

/**
 * @property path
 * @type String
 * @readonly
 * <p>The whole path of the remote folder on the server.</p>
 * @description <p>If the current Messaging service does not support remote folders on the server, this 
attribute will be empty.</p>
 */
Modules.Tizen.Messaging.MessageFolder.path = null;

/**
 * @property synchronizable
 * @type Boolean
 * @readonly
 * <p>This attribute shows whether this folder should be synchronized.
This attribute affects the behavior of the {@link Modules.Tizen.Messaging.MessageService#method-sync sync}
method.</p>
 */
Modules.Tizen.Messaging.MessageFolder.synchronizable = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The standard type of the folder.</p>
 * @description <p>It can be one of the following values: INBOX, OUTBOX, DRAFTS, SENTBOX.
If this folder is not a standard folder, an empty value must be returned.
This property is unique for each type within one Messaging service.</p>
 */
Modules.Tizen.Messaging.MessageFolder.type = null;

/**
 * @class Modules.Tizen.Messaging.MessageService
 * @typestr Object of Modules.Tizen.Messaging
 * @extends Titanium.Proxy
 * <p>Message creating, sending, and fetching capabilities.</p>
 * @description <p>This interface allows a web application to manipulate and send messages.
The interface allows you to fetch messages for all folders belonging to one account, with 
synchronizable flag set, using the {@link Modules.Tizen.Messaging.MessageService#method-sync sync} method, 
or for a given folder using the {@link Modules.Tizen.Messaging.MessageService#method-syncFolder syncFolder} 
method.
The interface allows you to fetch the message body for a given message using the
{@link Modules.Tizen.Messaging.MessageService#method-loadMessageBody loadMessageBody} method.</p>
 */
Modules.Tizen.Messaging.MessageService = {};

/**
 * @method getMessageStorage
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageService#property-messageStorage messageStorage} property.</p>
 * @return {Modules.Tizen.Messaging.MessageStorage} 
*/
Modules.Tizen.Messaging.MessageService.getMessageStorage = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.Messaging.MessageService#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.Messaging.MessageService.getType = function(){};

/**
 * @method loadMessageAttachment
 * <p>Attempts to load the specified message attachment.</p>
 * @description <p>This method is used only for EMAIL services. If the message attachment is already loaded, 
the callback will be invoked immediately.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.MessageAttachment} attachment 
 * <p>Message attachment to be loaded.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageService.loadMessageAttachment = function(attachment, callback){};

/**
 * @method loadMessageBody
 * <p>Attempts to load the body for the specified message.</p>
 * @description <p>It is the back end's responsibility to detect which mime parts of the message are related to 
the message body and should be loaded. If the message body is loaded,  the callback will be 
invoked immediately.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.MessageBody} message 
 * <p>Message with the body to be loaded.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageService.loadMessageBody = function(message, callback){};

/**
 * @method sendMessage
 * <p>Attempts to send the specified message.</p>
 * @description <p>The error message contains the name of the recipient who failed to receive the sent message.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.Message} message 
 * <p>The message to be sent.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageService.sendMessage = function(message, callback){};

/**
 * @method stopSync
 * <p>Stops {@link Modules.Tizen.Messaging.MessageService#method-sync sync} and 
{@link Modules.Tizen.Messaging.MessageService#method-syncFolder syncFolder} operation. </p>
 * @description <p>If the operationId argument is valid and corresponds to a service operation already in place, 
the operation MUST be stopped and its error callback MUST be invoked with error type 
AbortError.
If the operationId argument is not valid or does not correspond to a valid service operation, 
the method will return without any further action.</p>
 * @param {Number} opId 
 * <p>Service operation identifier.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageService.stopSync = function(opId){};

/**
 * @method sync
 * <p>Synchronizes the service content with an external mail server.</p>
 * @description <p>This method is used only for EMAIL services. This method performs the same actions as 
{@link Modules.Tizen.Messaging.MessageService#method-syncFolder syncFolder} for every folder with 
<code>Synchronizable</code> flag set within the current Messaging service.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Function} callback (optional)
 * <p>To be invoked if all the actions are completed successfully</p>
 * @param {Number} limit (optional)
 * <p>The maximum amount of messages retrieved within each folder.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageService.sync = function(callback, limit){};

/**
 * @method syncFolder
 * <p>Synchronizes the folder content with an external mail server.</p>
 * @description <p>This method is used only for EMAIL services. This method is performed the following actions:
export local changes within a given folder from device to server (If exportUpdates flag set).
retrieve the list of available messages from within the given folder.</p>
<p>Messages are retrieved from a given folder, even if synchronizable flag for this folder is 
not set. The backend is to decide which data is retrieved for every message. It can be:</p>
<ul>
<li>message header details</li>
<li>whole message body</li>
</ul>
<p>The limit of latest messages for the given folder MUST be retrieved and put into 
{@link Modules.Tizen.Messaging.MessageStorage}. If the limit is not set, the entire folder MUST be 
retrieved.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.MessageFolder} folder 
 * <p>Folder to be synchronized.</p>
 * @param {Function} callback (optional)
 * <p>Function to be invoked if all actions are completed successfully.</p>
 * @param {Number} limit (optional)
 * <p>The maximum amount of messages retrieved within a given folder.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageService.syncFolder = function(folder, callback, limit){};

/**
 * @property messageStorage
 * @type Modules.Tizen.Messaging.MessageStorage
 * @readonly
 * <p>The interface for accessing MessageStorage for this Messaging service.</p>
 * @description <p>If the backend does not support MessageStorage for this Messaging service, a WebAPIException 
is raised with error type NotSupportedError.</p>
 */
Modules.Tizen.Messaging.MessageService.messageStorage = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The tag supported by this messaging service. </p>
 * @description <p>Can be one of this constants: {@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_SMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_MMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_EMAIL}.</p>
 */
Modules.Tizen.Messaging.MessageService.type = null;

/**
 * @class Modules.Tizen.Messaging.MessageStorage
 * @typestr Object of Modules.Tizen.Messaging
 * @extends Titanium.Proxy
 * <p>MessageStorage management capabilities.</p>
 * @description <p>This interface allows a web application to query, update, and delete messages, and subscribe to 
MessageStorage changes. In addition to simple message queries, the MessageStorage interface 
provides functionality to find conversations and folders.</p>
<p>The conversation object represents a group of messages combined by the set of message fields. 
Email conversations are grouped by subject, while chat messages are grouped by sender and 
recipient fields.</p>
 */
Modules.Tizen.Messaging.MessageStorage = {};

/**
 * @method addConversationsChangeListener
 * <p>Subscribes to get notifications when MessageConversation changes.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/messaging.read</code></li>
</ul>
 * @param {MessageConversationsChangeCallback} conversationsChangeCallback 
 * <p>Function to be called when MessageConversation changes.</p>
 * @param {Modules.Tizen.AbstractFilter} filter (optional)
 * <p>Criteria to be used when filtering.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageStorage.addConversationsChangeListener = function(conversationsChangeCallback, filter){};

/**
 * @method addDraftMessage
 * <p>Adds a draft message to MessageStorage.</p>
 * @description <p>Added messages would be stored in the Drafts folder.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.Message} message 
 * <p>Draft message that should be added to the storage.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.addDraftMessage = function(message, callback){};

/**
 * @method addFoldersChangeListener
 * <p>Subscribes to get notification when MessageFolder changes.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.read</code></li>
</ul>
 * @param {MessageFoldersChangeCallback} foldersChangeCallback 
 * <p>Callback that is called when MessageFolder changes.</p>
 * @param {Modules.Tizen.AbstractFilter} filter (optional)
 * <p>Criteria to be used when filtering.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageStorage.addFoldersChangeListener = function(foldersChangeCallback, filter){};

/**
 * @method addMessagesChangeListener
 * <p>Subscribes to get notifications when MessageStorage changes.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.read</code></li>
</ul>
 * @param {MessagesChangeCallback} messagesChangeCallback 
 * <p>Function to be called when MessageStorage changes.</p>
 * @param {Modules.Tizen.AbstractFilter} filter (optional)
 * <p>Criteria to be used when filtering.</p>
 * @return {Number} 
*/
Modules.Tizen.Messaging.MessageStorage.addMessagesChangeListener = function(messagesChangeCallback, filter){};

/**
 * @method findConversations
 * <p>Queries conversations from MessageStorage.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.read</code></li>
</ul>
 * @param {Modules.Tizen.AbstractFilter} filter 
 * <p>Criteria to be used when filtering.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @param {Modules.Tizen.SortMode} sort (optional)
 * <p>Sorting rules for the query.</p>
 * @param {Number} limit (optional)
 * <p>Parameter for limiting the query result.</p>
 * @param {Number} offset (optional)
 * <p>Define offset of the query.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.findConversations = function(filter, callback, sort, limit, offset){};

/**
 * @method findFolders
 * <p>Queries folders from MessageStorage.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.read</code></li>
</ul>
 * @param {Modules.Tizen.AbstractFilter} filter 
 * <p>Criteria used when filtering.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.findFolders = function(filter, callback){};

/**
 * @method findMessages
 * <p>Queries messages from MessageStorage.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.read</code></li>
</ul>
 * @param {Modules.Tizen.AbstractFilter} filter 
 * <p>Criteria to be used when filtering.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @param {Modules.Tizen.SortMode} sort (optional)
 * <p>Sorting mode for the query.</p>
 * @param {Number} limit (optional)
 * <p>Parameter for limiting query result.</p>
 * @param {Number} offset (optional)
 * <p>Define offset of the query.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.findMessages = function(filter, callback, sort, limit, offset){};

/**
 * @method removeChangeListener
 * <p>This method allows a message notification subscription to be cancelled.</p>
 * @description <p>If the watchId argument is valid and corresponds to a subscription already in place, the 
subscription process MUST stop immediately 
and further MessagingStorage change notifications MUST NOT be invoked. If the subscriptionId
argument does not correspond to a valid 
subscription, the method will return without any further action.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.read</code></li>
</ul>
 * @param {Number} watchId 
 * <p>Identifier of the subscription returned by 
{@link Modules.Tizen.Messaging.MessageStorage#method-addMessagesChangeListener addMessagesChangeListener}, 
{@link Modules.Tizen.Messaging.MessageStorage#method-addConversationsChangeListener addConversationsChangeListener} or 
{@link Modules.Tizen.Messaging.MessageStorage#method-addFoldersChangeListener addFoldersChangeListener} 
methods. </p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.removeChangeListener = function(watchId){};

/**
 * @method removeConversations
 * <p>Deletes conversations from MessageStorage.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.MessageConversation[]} conversations 
 * <p>Array of conversations to be deleted.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.removeConversations = function(conversations, callback){};

/**
 * @method removeMessages
 * <p>Deletes messages from MessageStorage.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.Message[]} messages 
 * <p>Array of messages to be deleted.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.removeMessages = function(messages, callback){};

/**
 * @method updateMessages
 * <p>Updates messages in MessageStorage.</p>
 * @description <p>The backend MUST check whether the required updates can be applied and invoke the callback 
function with error message, if they cannot. Depending on the backend synchronization 
settings, the local changes in {@link Modules.Tizen.Messaging.MessageStorage} might be rewritten as
a result of invoking the {@link Modules.Tizen.Messaging.MessageService#method-sync sync} or 
{@link Modules.Tizen.Messaging.MessageService#method-syncFolder syncFolder} methods of the related 
message service.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/messaging.write</code></li>
</ul>
 * @param {Modules.Tizen.Messaging.Message[]} messages 
 * <p>Array that should be updated.</p>
 * @param {Function} callback (optional)
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.MessageStorage.updateMessages = function(messages, callback){};

/**
 * @method createMessage
 * <p>Returns the {@link Modules.Tizen.Messaging.Message} object.</p>
 * @param {MessageInit} initDict 
 * <p>Provides specifying message attributes upon message creation.</p>
 * @return {Modules.Tizen.Messaging.Message} 
*/
Modules.Tizen.Messaging.createMessage = function(initDict){};

/**
 * @method createMessageAttachment
 * <p>Returns the {@link Modules.Tizen.Messaging.MessageAttachment} object.</p>
 * @param {MessageAttachmentInit} initDict 
 * <p>Provides specifying attachment attributes upon messageAttachment creation.</p>
 * @return {Modules.Tizen.Messaging.MessageAttachment} 
*/
Modules.Tizen.Messaging.createMessageAttachment = function(initDict){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Messaging.getBubbleParent = function(){};

/**
 * @method getMessageServices
 * <p>Retrieves the messaging service of a given type for a given account, or all existing 
services supporting the given type, if <code>serviceId</code> is not given. </p>
 * @param {String} messageServiceType 
 * <p>Type of the services to be retrieved. Can be one of this constants: 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_SMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_MMS}, 
{@link Modules.Tizen.Messaging#property-MESSAGE_SERVICE_TAG_MESSAGING_EMAIL}.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.Messaging.getMessageServices = function(messageServiceType, callback){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Messaging.setBubbleParent = function(){};

/**
 * @property MESSAGE_SERVICE_TAG_MESSAGING_EMAIL
 * @type String
 * @readonly
 * <p>messaging.email constant for email services</p>
 */
Modules.Tizen.Messaging.MESSAGE_SERVICE_TAG_MESSAGING_EMAIL = null;

/**
 * @property MESSAGE_SERVICE_TAG_MESSAGING_MMS
 * @type String
 * @readonly
 * <p>messaging.mms constant for MMS services</p>
 */
Modules.Tizen.Messaging.MESSAGE_SERVICE_TAG_MESSAGING_MMS = null;

/**
 * @property MESSAGE_SERVICE_TAG_MESSAGING_SMS
 * @type String
 * @readonly
 * <p>messaging.sms constant for SMS services</p>
 */
Modules.Tizen.Messaging.MESSAGE_SERVICE_TAG_MESSAGING_SMS = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Messaging.bubbleParent = null;

/**
 * @class Modules.Tizen.NFC
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This API provides interfaces and methods for access to NFC devices.</p>
 * @description <p>Near Field Communication (NFC) is an international standard (ISO/IEC 18092) 
that specifies an interface and protocol for simple wireless interconnection 
of closely coupled devices operating at 13.56 MHz. 
There are three groups of application scenarios for NFC: The first one is 
to hold a device close to a wireless tag to exchange some digital information or data. 
The second is to hold two devices close to each other to exchange some information 
or data between them. The third one is to make payments by holding mobile phones 
close to point of sales terminals instead of swiping smart cards. 
Provides functionality to discover contents (such as images, videos, or music) 
that are available on the device. </p>
 * <h3>Example</h3>
 * <h4>Search tags</h4>
 * <p><p>This example shows how to start searching for new NFC tags around and display their names.</p></p><pre>var nfc = require('tizen').NFC,
    nfcAdapter;

// Tag detection handler
function setTagDetect(response) {
    var nfcTag;
    
    if (response.success) {
        var onSuccess = {
            onattach: function(tag) {
                console.log('Tag found:' + tag.type);
            },
            ondetach: function () {
                console.log('Tag successfully detached.');
            }
        };

        try {
            nfcAdapter.setTagListener(onSuccess);
        } catch (e) {
            console.error(e.name + ' : ' + e.message);
        }
    } else {
        console.error('Failed to power on NFC: ' + response.error);
    }
}

// Set up NFC and begin searching
try {
    nfcAdapter = nfc.getDefaultAdapter();
    nfcAdapter.setPowered(true, setTagDetect);
} catch (e) {
    console.error('Failed to power on NFC: ' + e.message);
}</pre>
 */
Modules.Tizen.NFC = {};

/**
 * @class Modules.Tizen.NFC.NDEFMessage
 * @typestr Object of Modules.Tizen.NFC
 * @extends Titanium.Proxy
 * <p>The NDEFMessage interface.</p>
 */
Modules.Tizen.NFC.NDEFMessage = {};

/**
 * @method getRecordCount
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFMessage#property-recordCount recordCount} property.</p>
 * @return {Number} 
*/
Modules.Tizen.NFC.NDEFMessage.getRecordCount = function(){};

/**
 * @method getRecords
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFMessage#property-records records} property.</p>
 * @return {Modules.Tizen.NFC.NDEFRecord[]} 
*/
Modules.Tizen.NFC.NDEFMessage.getRecords = function(){};

/**
 * @method setRecords
 * <p>Sets the value of the {@link Modules.Tizen.NFC.NDEFMessage#property-records records} property.</p>
 * @param {Modules.Tizen.NFC.NDEFRecord[]} records 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.NFC.NDEFMessage.setRecords = function(records){};

/**
 * @method toByte
 * <p>Gets the serial byte array of the NDEF message.</p>
 * @description <p>If the operation completes successfully, it returns the serial byte array of the NDEF message. 
If the result cannot be successfully retrieved, a WebAPIError with the reason for the error 
MUST be thrown.</p>
 * @return {Number[]} 
*/
Modules.Tizen.NFC.NDEFMessage.toByte = function(){};

/**
 * @property recordCount
 * @type Number
 * @readonly
 * <p>The number of records in the NDEFMessage.</p>
 */
Modules.Tizen.NFC.NDEFMessage.recordCount = null;

/**
 * @property records
 * @type Modules.Tizen.NFC.NDEFRecord[]
 * <p>The array of NDEFRecord objects in the NDEFMessage.</p>
 */
Modules.Tizen.NFC.NDEFMessage.records = null;

/**
 * @class Modules.Tizen.NFC.NDEFRecord
 * @typestr Object of Modules.Tizen.NFC
 * @extends Titanium.Proxy
 * <p>The NDEFRecord interface.</p>
 */
Modules.Tizen.NFC.NDEFRecord = {};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecord#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NDEFRecord.getId = function(){};

/**
 * @method getPayload
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecord#property-payload payload} property.</p>
 * @return {Titanium.Blob} 
*/
Modules.Tizen.NFC.NDEFRecord.getPayload = function(){};

/**
 * @method getTnf
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecord#property-tnf tnf} property.</p>
 * @return {Number} 
*/
Modules.Tizen.NFC.NDEFRecord.getTnf = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecord#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NDEFRecord.getType = function(){};

/**
 * @property id
 * @type String
 * @readonly
 * <p>The record ID. The byte array contains zero to 255 bytes. </p>
 * @description <p>By default, this attribute is set to an empty array. The byte array is converted to string</p>
 */
Modules.Tizen.NFC.NDEFRecord.id = null;

/**
 * @property payload
 * @type Titanium.Blob
 * @readonly
 * <p>The record payload. The byte array contains zero to (2^32 - 1) bytes. </p>
 * @description <p>The byte array is converted to {@link Titanium.Blob}</p>
 */
Modules.Tizen.NFC.NDEFRecord.payload = null;

/**
 * @property tnf
 * @type Number
 * @readonly
 * <p>The value of the record type (TNF value).</p>
 * @description <p>At least the following values MUST be supported:</p>
<ul>
<li>{@link Modules.Tizen.NFC#property-NFC_RECORD_TNF_EMPTY}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_RECORD_TNF_WELL_KNOWN}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_RECORD_TNF_MIME_MEDIA}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_RECORD_TNF_URI}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_RECORD_TNF_EXTERNAL_RTD}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_RECORD_TNF_UNKNOWN}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_RECORD_TNF_UNCHANGED}</li>
</ul>
 */
Modules.Tizen.NFC.NDEFRecord.tnf = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The specified type in byte array. The byte array contains zero to 255 bytes. The byte array 
is converted to string</p>
 */
Modules.Tizen.NFC.NDEFRecord.type = null;

/**
 * @class Modules.Tizen.NFC.NDEFRecordMedia
 * @typestr Object of Modules.Tizen.NFC
 * @extends Modules.Tizen.NFC.NDEFRecord
 * <p>The NDEFRecord that has mime type payload.</p>
 */
Modules.Tizen.NFC.NDEFRecordMedia = {};

/**
 * @method getMimeType
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecordMedia#property-mimeType mimeType} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NDEFRecordMedia.getMimeType = function(){};

/**
 * @property mimeType
 * @type String
 * @readonly
 * <p>The mime type [RFC 2046] (ex. text/plain, image/jpeg ).</p>
 */
Modules.Tizen.NFC.NDEFRecordMedia.mimeType = null;

/**
 * @class Modules.Tizen.NFC.NDEFRecordText
 * @typestr Object of Modules.Tizen.NFC
 * @extends Modules.Tizen.NFC.NDEFRecord
 * <p>The NDEFRecord that has the text type payload.</p>
 */
Modules.Tizen.NFC.NDEFRecordText = {};

/**
 * @method getEncoding
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecordText#property-encoding encoding} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NDEFRecordText.getEncoding = function(){};

/**
 * @method getLanguageCode
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecordText#property-languageCode languageCode} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NDEFRecordText.getLanguageCode = function(){};

/**
 * @method getText
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecordText#property-text text} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NDEFRecordText.getText = function(){};

/**
 * @property encoding
 * @type String
 * @readonly
 * <p>(optional) The encoding type. Possible values are: {@link Modules.Tizen.NFC#property-NDEF_RECORD_TEXT_ENCODING_UTF8} 
or {@link Modules.Tizen.NFC#property-NDEF_RECORD_TEXT_ENCODING_UTF16}</p>
 */
Modules.Tizen.NFC.NDEFRecordText.encoding = null;

/**
 * @property languageCode
 * @type String
 * @readonly
 * <p>The language code string value, followed by IANA[RFC 3066] (ex: en-US, ko-KR).</p>
 */
Modules.Tizen.NFC.NDEFRecordText.languageCode = null;

/**
 * @property text
 * @type String
 * @readonly
 * <p>The encoded text.</p>
 */
Modules.Tizen.NFC.NDEFRecordText.text = null;

/**
 * @class Modules.Tizen.NFC.NDEFRecordURI
 * @typestr Object of Modules.Tizen.NFC
 * @extends Modules.Tizen.NFC.NDEFRecord
 * <p>The NDEFRecord that has URI type payload.</p>
 */
Modules.Tizen.NFC.NDEFRecordURI = {};

/**
 * @method getUri
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NDEFRecordURI#property-uri uri} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NDEFRecordURI.getUri = function(){};

/**
 * @property uri
 * @type String
 * @readonly
 * <p>The URI string that will be stored in the payload.</p>
 */
Modules.Tizen.NFC.NDEFRecordURI.uri = null;

/**
 * @class Modules.Tizen.NFC.NFCAdapter
 * @typestr Object of Modules.Tizen.NFC
 * @extends Titanium.Proxy
 * <p>NFC adapter interface that provides access to control the adapter.</p>
 */
Modules.Tizen.NFC.NFCAdapter = {};



/**
 * @method getCachedMessage
 * <p>Gets NDEF message cached when the tag was detected.</p>
 * @description <p>If the operation completes successfully, the NDEF Message that was last read before 
launching your application should be returned. If the NDEF Message cannot be 
successfully retrieved, a WebAPIError with the reason for the error MUST be thrown.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.common</code></li>
</ul>
 * @return {Modules.Tizen.NFC.NDEFMessage} 
*/
Modules.Tizen.NFC.NFCAdapter.getCachedMessage = function(){};

/**
 * @method getPowered
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NFCAdapter#property-powered powered} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.NFC.NFCAdapter.getPowered = function(){};

/**
 * @method setPowered
 * <p>Turns NFC adapter on or off.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.admin</code></li>
</ul>
 * @param {Boolean} state 
 * <p>The state of NFC adapter.</p>
 * @param {Function} callback (optional)
 * <p>Function called when NFC adapter is enabled or disabled successfully or when an error 
has occurred.</p>
 * @return void
*/
Modules.Tizen.NFC.NFCAdapter.setPowered = function(state, callback){};

/**
 * @method setTagListener
 * <p>Registers a callback function to invoke when an NFC tag is detected.</p>
 * @description <p>If the registration completes successfully, the detectCallback MUST be invoked when NFC tag 
is detected. If no tagFilter is passed, it shall consider the default tagFilter. that is to 
set all tag types.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.tag</code></li>
</ul>
 * @param {NFCTagDetectCallback} detectCallback 
 * <p>The success callback to be invoked when an NFC tag is detected or lost.</p>
 * @param {String[]} tagFilter 
 * <p>Filter to be used when specific NFC tag is detected. Valid values are:</p>
<ul>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_GENERIC_TARGET}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_A}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_4A}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_3A}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_MINI}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_1K}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_4K}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_ULTRA}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_DESFIRE}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_B}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_4B}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_BPRIME}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_FELICA}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_JEWEL}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO15693}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_UNKNOWN_TARGET}</li>
</ul>
 * @return void
*/
Modules.Tizen.NFC.NFCAdapter.setTagListener = function(detectCallback, tagFilter){};

/**
 * @method unsetTagListener
 * <p>Unregisters the listener for detecting an NFC tag.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.tag</code></li>
</ul>
 * @return void
*/
Modules.Tizen.NFC.NFCAdapter.unsetTagListener = function(){};

/**
 * @property powered
 * @type Boolean
 * @readonly
 * <p>The state of the NFC adapter.</p>
 */
Modules.Tizen.NFC.NFCAdapter.powered = null;

/**
 * @class Modules.Tizen.NFC.NFCPeer
 * @typestr Object of Modules.Tizen.NFC
 * @extends Titanium.Proxy
 * <p>Accesses to the NFC peer-to-peer target.</p>
 */
Modules.Tizen.NFC.NFCPeer = {};


/**
 * @method getIsConnected
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NFCPeer#property-isConnected isConnected} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.NFC.NFCPeer.getIsConnected = function(){};

/**
 * @method sendNDEF
 * <p>Registers a callback function to be invoked when an NDEF message is received from the 
connected NFC peer-to-peer target.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.p2p</code></li>
</ul>
 * @param {Modules.Tizen.NFC.NDEFMessage} ndefMessage 
 * <p>NDEF message to send to NFC peer-to-peer target.</p>
 * @param {Function} callback 
 * <p>Invoked in case of successfully sending data to NFC peer-to-peer target or in case 
of any error during sending.</p>
 * @return void
*/
Modules.Tizen.NFC.NFCPeer.sendNDEF = function(ndefMessage, callback){};

/**
 * @property isConnected
 * @type Boolean
 * @readonly
 * <p>The value is necessary to check if this NFC peer-to-peer target is connected.</p>
 */
Modules.Tizen.NFC.NFCPeer.isConnected = null;

/**
 * @class Modules.Tizen.NFC.NFCTag
 * @typestr Object of Modules.Tizen.NFC
 * @extends Titanium.Proxy
 * <p>Accesses to the NFC tag.</p>
 */
Modules.Tizen.NFC.NFCTag = {};

/**
 * @method getIsConnected
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NFCTag#property-isConnected isConnected} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.NFC.NFCTag.getIsConnected = function(){};

/**
 * @method getIsSupportedNDEF
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NFCTag#property-isSupportedNDEF isSupportedNDEF} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.NFC.NFCTag.getIsSupportedNDEF = function(){};

/**
 * @method getNdefSize
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NFCTag#property-ndefSize ndefSize} property.</p>
 * @return {Number} 
*/
Modules.Tizen.NFC.NFCTag.getNdefSize = function(){};

/**
 * @method getProperties
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NFCTag#property-properties properties} property.</p>
 * @return {Object[]} 
*/
Modules.Tizen.NFC.NFCTag.getProperties = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.NFC.NFCTag#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.NFC.NFCTag.getType = function(){};

/**
 * @method readNDEF
 * <p>Reads NDEF data from the NFC tag.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.tag</code></li>
</ul>
 * @param {Function} callback 
 * <p>Invoked in case of successfully reading the NDEF Data or any error during reading 
the NDEF Data.</p>
 * @return void
*/
Modules.Tizen.NFC.NFCTag.readNDEF = function(callback){};

/**
 * @method transceive
 * <p>Access the raw format card.</p>
 * @description <p>Transceive function is the only way to access the raw format card (not formatted). 
Each tag type requires its own command to access tags. This API provides low level access
of tag operation. (Note that you must know each tag technology.)</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.tag</code></li>
</ul>
 * @param {Number[]} data 
 * <p>Raw data to transceive with the NFC tag.</p>
 * @param {Function} callback 
 * <p>Invoked in case of successfully transceiving the raw data or if any error occured.</p>
 * @return void
*/
Modules.Tizen.NFC.NFCTag.transceive = function(data, callback){};

/**
 * @method writeNDEF
 * <p>Writes NDEF data to the NFC tag.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
    Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.tag</code></li>
</ul>
 * @param {Modules.Tizen.NFC.NDEFMessage} ndefMessage 
 * <p>NDEF message to write to NFC tag.</p>
 * @param {Function} callback (optional)
 * <p>Invoked in case of successfully writing the NDEF Data or in case of any error during 
writing the NDEF Data.</p>
 * @return void
*/
Modules.Tizen.NFC.NFCTag.writeNDEF = function(ndefMessage, callback){};

/**
 * @property isConnected
 * @type Boolean
 * @readonly
 * <p>The value is necessary to check if this tag is connected.</p>
 */
Modules.Tizen.NFC.NFCTag.isConnected = null;

/**
 * @property isSupportedNDEF
 * @type Boolean
 * @readonly
 * <p>The value is necessary to check if the NFC Tag supports NDEF format.</p>
 */
Modules.Tizen.NFC.NFCTag.isSupportedNDEF = null;

/**
 * @property ndefSize
 * @type Number
 * @readonly
 * <p>The size of NDEF message stored in the tag.</p>
 */
Modules.Tizen.NFC.NFCTag.ndefSize = null;

/**
 * @property properties
 * @type Object[]
 * @readonly
 * <p>The value is all tag information. It is pairs of key and value. </p>
 * @description <p>The array's index is the pair's key and value is its value.</p>
 */
Modules.Tizen.NFC.NFCTag.properties = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The type of the NFC tag. Valid values are:</p>
<ul>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_GENERIC_TARGET}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_A}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_4A}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_3A}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_MINI}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_1K}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_4K}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_ULTRA}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_MIFARE_DESFIRE}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_B}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_4B}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO14443_BPRIME}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_FELICA}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_JEWEL}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_ISO15693}</li>
<li>{@link Modules.Tizen.NFC#property-NFC_TAG_TYPE_UNKNOWN_TARGET}</li>
</ul>
 */
Modules.Tizen.NFC.NFCTag.type = null;

/**
 * @method createNDEFMessage
 * <p>Creates a {@link Modules.Tizen.NFC.NDEFMessage} object.</p>
 * @param {NDEFMessageInitNDEFRecords/NDEFMessageInitRawData} parameters 
 * <p>Initial parameters for {@link Modules.Tizen.NFC.NDEFMessage}.</p>
 * @return {Modules.Tizen.NFC.NDEFMessage} 
*/
Modules.Tizen.NFC.createNDEFMessage = function(parameters){};

/**
 * @method createNDEFRecord
 * <p>Creates a {@link Modules.Tizen.NFC.NDEFRecord} object.</p>
 * @param {NDEFRecordInitRawData/NDEFRecordInit} parameters 
 * <p>Initial parameters for {@link Modules.Tizen.NFC.NDEFRecord}.</p>
 * @return {Modules.Tizen.NFC.NDEFRecord} 
*/
Modules.Tizen.NFC.createNDEFRecord = function(parameters){};

/**
 * @method createNDEFRecordMedia
 * <p>Creates a {@link Modules.Tizen.NFC.NDEFRecordMedia}.</p>
 * @param {NDEFRecordMediaInit} parameters 
 * <p>Initial parameters for {@link Modules.Tizen.NFC.NDEFRecordMedia}.</p>
 * @return {Modules.Tizen.NFC.NDEFRecordMedia} 
*/
Modules.Tizen.NFC.createNDEFRecordMedia = function(parameters){};

/**
 * @method createNDEFRecordText
 * <p>Creates a {@link Modules.Tizen.NFC.NDEFRecordText} object.</p>
 * @param {Object} parameters 
 * <p>Initial parameters for {@link Modules.Tizen.NFC.NDEFRecordText} object.</p>
 * @return {Modules.Tizen.NFC.NDEFRecordText} 
*/
Modules.Tizen.NFC.createNDEFRecordText = function(parameters){};

/**
 * @method createNDEFRecordURI
 * <p>Creates a {@link Modules.Tizen.NFC.NDEFRecordURI} object.</p>
 * @param {Object} parameters 
 * <p>Initial parameters for {@link Modules.Tizen.NFC.NDEFRecordURI}.</p>
 * @return {Modules.Tizen.NFC.NDEFRecordURI} 
*/
Modules.Tizen.NFC.createNDEFRecordURI = function(parameters){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.NFC.getBubbleParent = function(){};

/**
 * @method getDefaultAdapter
 * <p>Returns the default NFC adapter on the device.</p>
 * @description <p>NFC adapter interface provides access to control the NFC adapter. </p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of 
your Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/nfc.common</code></li>
</ul>
 * @return {Modules.Tizen.NFC.NFCAdapter} 
*/
Modules.Tizen.NFC.getDefaultAdapter = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.NFC.setBubbleParent = function(){};

/**
 * @property NDEF_RECORD_TEXT_ENCODING_UTF16
 * @type String
 * @readonly
 * <p>Indicates NDEFRecordText UTF16 encoding</p>
 */
Modules.Tizen.NFC.NDEF_RECORD_TEXT_ENCODING_UTF16 = null;

/**
 * @property NDEF_RECORD_TEXT_ENCODING_UTF8
 * @type String
 * @readonly
 * <p>Indicates NDEFRecordText UTF8 encoding</p>
 */
Modules.Tizen.NFC.NDEF_RECORD_TEXT_ENCODING_UTF8 = null;

/**
 * @property NFC_RECORD_TNF_EMPTY
 * @type Number
 * @readonly
 * <p>Indicates empty format of NDEF record's type field.</p>
 */
Modules.Tizen.NFC.NFC_RECORD_TNF_EMPTY = null;

/**
 * @property NFC_RECORD_TNF_EXTERNAL_RTD
 * @type Number
 * @readonly
 * <p>Indicates NFC Forum external type [NFC RTD] format in RFC 2046 [RFC 2046] of NDEF record's 
type field.</p>
 */
Modules.Tizen.NFC.NFC_RECORD_TNF_EXTERNAL_RTD = null;

/**
 * @property NFC_RECORD_TNF_MIME_MEDIA
 * @type Number
 * @readonly
 * <p>Indicates MIME Media types format in RFC 2046 [RFC 2046] of NDEF record's type field.</p>
 */
Modules.Tizen.NFC.NFC_RECORD_TNF_MIME_MEDIA = null;

/**
 * @property NFC_RECORD_TNF_UNCHANGED
 * @type Number
 * @readonly
 * <p>Indicates that the payload is an intermediate or final chunk of a chunked NDEF record.</p>
 */
Modules.Tizen.NFC.NFC_RECORD_TNF_UNCHANGED = null;

/**
 * @property NFC_RECORD_TNF_UNKNOWN
 * @type Number
 * @readonly
 * <p>Indicates unknown type format in RFC 2046 [RFC 2046] of NDEF record's type field.</p>
 */
Modules.Tizen.NFC.NFC_RECORD_TNF_UNKNOWN = null;

/**
 * @property NFC_RECORD_TNF_URI
 * @type Number
 * @readonly
 * <p>Indicates absolute URI, as defined in RFC 3986 [RFC 3986] format in RFC 2046 [RFC 2046] of 
NDEF record's type field.</p>
 */
Modules.Tizen.NFC.NFC_RECORD_TNF_URI = null;

/**
 * @property NFC_RECORD_TNF_WELL_KNOWN
 * @type Number
 * @readonly
 * <p>Indicates RTD(Record Type Definition) format of NDEF record's type field.</p>
 */
Modules.Tizen.NFC.NFC_RECORD_TNF_WELL_KNOWN = null;

/**
 * @property NFC_TAG_TYPE_FELICA
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_FELICA = null;

/**
 * @property NFC_TAG_TYPE_GENERIC_TARGET
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_GENERIC_TARGET = null;

/**
 * @property NFC_TAG_TYPE_ISO14443_3A
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_ISO14443_3A = null;

/**
 * @property NFC_TAG_TYPE_ISO14443_4A
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_ISO14443_4A = null;

/**
 * @property NFC_TAG_TYPE_ISO14443_4B
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_ISO14443_4B = null;

/**
 * @property NFC_TAG_TYPE_ISO14443_A
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_ISO14443_A = null;

/**
 * @property NFC_TAG_TYPE_ISO14443_B
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_ISO14443_B = null;

/**
 * @property NFC_TAG_TYPE_ISO14443_BPRIME
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_ISO14443_BPRIME = null;

/**
 * @property NFC_TAG_TYPE_ISO15693
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_ISO15693 = null;

/**
 * @property NFC_TAG_TYPE_JEWEL
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_JEWEL = null;

/**
 * @property NFC_TAG_TYPE_MIFARE_1K
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_MIFARE_1K = null;

/**
 * @property NFC_TAG_TYPE_MIFARE_4K
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_MIFARE_4K = null;

/**
 * @property NFC_TAG_TYPE_MIFARE_DESFIRE
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_MIFARE_DESFIRE = null;

/**
 * @property NFC_TAG_TYPE_MIFARE_MINI
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_MIFARE_MINI = null;

/**
 * @property NFC_TAG_TYPE_MIFARE_ULTRA
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_MIFARE_ULTRA = null;

/**
 * @property NFC_TAG_TYPE_UNKNOWN_TARGET
 * @type String
 * @readonly
 * <p>NFC tag type.</p>
 */
Modules.Tizen.NFC.NFC_TAG_TYPE_UNKNOWN_TARGET = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.NFC.bubbleParent = null;

/**
 * @class Modules.Tizen.Notification
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>Module for managing notifications created based on application events.</p>
 * @description <p>This module provides a way to notify user events that occur in applications to users.
which are represented by the {@link Modules.Tizen.Notification} object.</p>
<p>The <code>Notification</code> module is a thin wrapper on the Tizen <code>NotificationManager</code>
class.</p>
<p>See also:</p>
<ul>
<li>
<p><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fnotification.html">Tizen Notification API</a></p>
</li>
<li>
<p><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fnotification.html">Tizen  Notification Guide</a></p>
</li>
</ul>
 * <h3>Example</h3>
 * <h4>Simple notification</h4>
 * <p><p>Create and show a simple notification in the status bar.</p></p><pre>var Tizen = require('tizen'),
    // Notifications init parameters
    appControl = Tizen.Apps.createApplicationControl({
        operation: 'http://tizen.org/appcontrol/operation/create_content',
        uri: null
    }),        
    notificationDict = {
        content: 'Hello world',
        vibration: true, 
        appControl: appControl
    },

// Create and post notification
notification = Tizen.Notification.createStatusNotification({
    statusType: Tizen.Notification.STATUS_NOTIFICATION_TYPE_SIMPLE,
    title: 'Simple notification',
    notificationInitDict: notificationDict
});

Tizen.Notification.postNotification(notification);</pre>
 */
Modules.Tizen.Notification = {};

/**
 * @class Modules.Tizen.Notification.Notification
 * @typestr Object of Modules.Tizen.Notification
 * @extends Titanium.Proxy
 * <p>The interface which represents notification.</p>
 */
Modules.Tizen.Notification.Notification = {};

/**
 * @method getContent
 * <p>Gets the value of the {@link Modules.Tizen.Notification.Notification#property-content content} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.Notification.getContent = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Notification.Notification#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.Notification.getId = function(){};

/**
 * @method getPostedTime
 * <p>Gets the value of the {@link Modules.Tizen.Notification.Notification#property-postedTime postedTime} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Notification.Notification.getPostedTime = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Modules.Tizen.Notification.Notification#property-title title} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.Notification.getTitle = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.Notification.Notification#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.Notification.getType = function(){};

/**
 * @method setContent
 * <p>Sets the value of the {@link Modules.Tizen.Notification.Notification#property-content content} property.</p>
 * @param {String} content 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.Notification.setContent = function(content){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Modules.Tizen.Notification.Notification#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.Notification.setTitle = function(title){};

/**
 * @property content
 * @type String
 * <p>The content to display in the notification.</p>
 */
Modules.Tizen.Notification.Notification.content = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>A notification id.</p>
 */
Modules.Tizen.Notification.Notification.id = null;

/**
 * @property postedTime
 * @type Date
 * @readonly
 * <p>The time that the notification is posted.</p>
 */
Modules.Tizen.Notification.Notification.postedTime = null;

/**
 * @property title
 * @type String
 * <p>The title to display in the notification.</p>
 */
Modules.Tizen.Notification.Notification.title = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>A notification type.</p>
 */
Modules.Tizen.Notification.Notification.type = null;

/**
 * @class Modules.Tizen.Notification.NotificationDetailInfo
 * @typestr Object of Modules.Tizen.Notification
 * @extends Titanium.Proxy
 * <p>The NotificationDetailInfo object that contains the detail information to the notification.</p>
 * @description <p>By default, each of the attributes of this interface are undefined.</p>
 * <h3>Example</h3>
 * <h4>Simple notification</h4>
 * <pre>var detailInfo1 = new tizen.NotificationDetailInfo('Missed Call from James', 'Feb 11 2013');
notification.detailInfo = [detailInfo1];</pre>
 */
Modules.Tizen.Notification.NotificationDetailInfo = {};

/**
 * @method getMainText
 * <p>Gets the value of the {@link Modules.Tizen.Notification.NotificationDetailInfo#property-mainText mainText} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.NotificationDetailInfo.getMainText = function(){};

/**
 * @method getSubText
 * <p>Gets the value of the {@link Modules.Tizen.Notification.NotificationDetailInfo#property-subText subText} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.NotificationDetailInfo.getSubText = function(){};

/**
 * @method setMainText
 * <p>Sets the value of the {@link Modules.Tizen.Notification.NotificationDetailInfo#property-mainText mainText} property.</p>
 * @param {String} mainText 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.NotificationDetailInfo.setMainText = function(mainText){};

/**
 * @method setSubText
 * <p>Sets the value of the {@link Modules.Tizen.Notification.NotificationDetailInfo#property-subText subText} property.</p>
 * @param {String} subText 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.NotificationDetailInfo.setSubText = function(subText){};

/**
 * @property mainText
 * @type String
 * <p>The main content of the detail information. This attribute is available on simple status notifications.</p>
 */
Modules.Tizen.Notification.NotificationDetailInfo.mainText = null;

/**
 * @property subText
 * @type String
 * <p>The secondary content of the detail information.</p>
 */
Modules.Tizen.Notification.NotificationDetailInfo.subText = null;

/**
 * @class Modules.Tizen.Notification.StatusNotification
 * @typestr Object of Modules.Tizen.Notification
 * @extends Modules.Tizen.Notification.Notification
 * <p>The interface which represents status notification.</p>
 * @description <p>All notification must have the title attribute.</p>
<p>This interface offers additional attributes to represent notification 
displayed in the notification tray.</p>
 */
Modules.Tizen.Notification.StatusNotification = {};

/**
 * @method getAppControl
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-appControl appControl} property.</p>
 * @return {Modules.Tizen.Apps.ApplicationControl} 
*/
Modules.Tizen.Notification.StatusNotification.getAppControl = function(){};

/**
 * @method getAppId
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-appId appId} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.StatusNotification.getAppId = function(){};

/**
 * @method getBackgroundImagePath
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-backgroundImagePath backgroundImagePath} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.StatusNotification.getBackgroundImagePath = function(){};

/**
 * @method getDetailInfo
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-detailInfo detailInfo} property.</p>
 * @return {Modules.Tizen.Notification.NotificationDetailInfo[]} 
*/
Modules.Tizen.Notification.StatusNotification.getDetailInfo = function(){};

/**
 * @method getIconPath
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-iconPath iconPath} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.StatusNotification.getIconPath = function(){};

/**
 * @method getNumber
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-number number} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Notification.StatusNotification.getNumber = function(){};

/**
 * @method getProgressType
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-progressType progressType} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.StatusNotification.getProgressType = function(){};

/**
 * @method getProgressValue
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-progressValue progressValue} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Notification.StatusNotification.getProgressValue = function(){};

/**
 * @method getSoundPath
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-soundPath soundPath} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.StatusNotification.getSoundPath = function(){};

/**
 * @method getStatusType
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-statusType statusType} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.StatusNotification.getStatusType = function(){};

/**
 * @method getSubIconPath
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-subIconPath subIconPath} property.</p>
 * @return {String} 
*/
Modules.Tizen.Notification.StatusNotification.getSubIconPath = function(){};

/**
 * @method getThumbnails
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-thumbnails thumbnails} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Notification.StatusNotification.getThumbnails = function(){};

/**
 * @method getVibration
 * <p>Gets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-vibration vibration} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.Notification.StatusNotification.getVibration = function(){};

/**
 * @method setAppControl
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-appControl appControl} property.</p>
 * @param {Modules.Tizen.Apps.ApplicationControl} appControl 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setAppControl = function(appControl){};

/**
 * @method setAppId
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-appId appId} property.</p>
 * @param {String} appId 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setAppId = function(appId){};

/**
 * @method setBackgroundImagePath
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-backgroundImagePath backgroundImagePath} property.</p>
 * @param {String} backgroundImagePath 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setBackgroundImagePath = function(backgroundImagePath){};

/**
 * @method setDetailInfo
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-detailInfo detailInfo} property.</p>
 * @param {Modules.Tizen.Notification.NotificationDetailInfo[]} detailInfo 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setDetailInfo = function(detailInfo){};

/**
 * @method setIconPath
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-iconPath iconPath} property.</p>
 * @param {String} iconPath 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setIconPath = function(iconPath){};

/**
 * @method setNumber
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-number number} property.</p>
 * @param {Number} number 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setNumber = function(number){};

/**
 * @method setProgressType
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-progressType progressType} property.</p>
 * @param {String} progressType 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setProgressType = function(progressType){};

/**
 * @method setProgressValue
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-progressValue progressValue} property.</p>
 * @param {Number} progressValue 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setProgressValue = function(progressValue){};

/**
 * @method setSoundPath
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-soundPath soundPath} property.</p>
 * @param {String} soundPath 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setSoundPath = function(soundPath){};

/**
 * @method setSubIconPath
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-subIconPath subIconPath} property.</p>
 * @param {String} subIconPath 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setSubIconPath = function(subIconPath){};

/**
 * @method setThumbnails
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-thumbnails thumbnails} property.</p>
 * @param {String[]} thumbnails 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setThumbnails = function(thumbnails){};

/**
 * @method setVibration
 * <p>Sets the value of the {@link Modules.Tizen.Notification.StatusNotification#property-vibration vibration} property.</p>
 * @param {Boolean} vibration 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Notification.StatusNotification.setVibration = function(vibration){};

/**
 * @property appControl
 * @type Modules.Tizen.Apps.ApplicationControl
 * <p>Holds the application control to launch when the notification is selected from the 
notification tray.</p>
 */
Modules.Tizen.Notification.StatusNotification.appControl = null;

/**
 * @property appId
 * @type String
 * <p>Holds the application id to launch when the notification is selected from the notification 
tray.</p>
 */
Modules.Tizen.Notification.StatusNotification.appId = null;

/**
 * @property backgroundImagePath
 * @type String
 * <p>The image path to use as the background of the notification.
This attribute is available on simple or thumbnail status notifications.</p>
 */
Modules.Tizen.Notification.StatusNotification.backgroundImagePath = null;

/**
 * @property detailInfo
 * @type Modules.Tizen.Notification.NotificationDetailInfo[]
 * <p>Appends lines of the detail information to the notification. This attribute is available in simple
status notification. By default, this attribute is initialized with an empty array.
The maximum number of detail information elements in the array is 2.</p>
 */
Modules.Tizen.Notification.StatusNotification.detailInfo = null;

/**
 * @property iconPath
 * @type String
 * <p>The path to the icon to display in the notification.</p>
 */
Modules.Tizen.Notification.StatusNotification.iconPath = null;

/**
 * @property number
 * @type Number
 * <p>The number of events to display in the notification.</p>
 */
Modules.Tizen.Notification.StatusNotification.number = null;

/**
 * @property [progressType=Modules.Tizen.Notification.NOTIFICATION_PROGRESS_TYPE_PERCENTAGE]
 * @type String
 * <p>Defines the type for an ongoing notification's progress.</p>
 * @description <p>Supporting notification progress types are: {@link Modules.Tizen.Notification#property-NOTIFICATION_PROGRESS_TYPE_BYTE} - The progress is indicated in bytes.
{@link Modules.Tizen.Notification#property-NOTIFICATION_PROGRESS_TYPE_PERCENTAGE} - The progress is indicated in percentage.</p>
 */
Modules.Tizen.Notification.StatusNotification.progressType = null;

/**
 * @property progressValue
 * @type Number
 * <p>The current progress value of notification.</p>
 * @description <p>If progressValue is set, the progressbar will be displayed in notification. 
If not, the progressbar will not be shown. This attribute is only available for the
{@link Modules.Tizen.Notification#property-STATUS_NOTIFICATION_TYPE_PROGRESS} type.</p>
<p>Application should keep the progress value for its job because the saved value 
in the notification status tray would be different from exact progress value.</p>
 */
Modules.Tizen.Notification.StatusNotification.progressValue = null;

/**
 * @property soundPath
 * @type String
 * <p>The path of sound file to play when the notification is shown.</p>
 */
Modules.Tizen.Notification.StatusNotification.soundPath = null;

/**
 * @property statusType
 * @type String
 * @readonly
 * <p>The status notification type.</p>
 */
Modules.Tizen.Notification.StatusNotification.statusType = null;

/**
 * @property subIconPath
 * @type String
 * <p>The sub icon path to display in the notification.</p>
 */
Modules.Tizen.Notification.StatusNotification.subIconPath = null;

/**
 * @property thumbnails
 * @type String[]
 * <p>The image paths associated with the thumbnail status notification. By default, this attribute
is initialized with an empty array. The maximum number of thumbnail path elements in the array is 4.</p>
 */
Modules.Tizen.Notification.StatusNotification.thumbnails = null;

/**
 * @property vibration
 * @type Boolean
 * <p>Holds whether to use vibration when the notification is shown.</p>
 */
Modules.Tizen.Notification.StatusNotification.vibration = null;

/**
 * @method createNotificationDetailInfo
 * <p>Creates and returns an instance of {@link Modules.Tizen.Notification.NotificationDetailInfo}.</p>
 * @param {NotificationDetailInfoInit} Options 
 * <p>The dictionary representing information about the new notificationDetailInfo.</p>
 * @return {Modules.Tizen.Notification.NotificationDetailInfo} 
*/
Modules.Tizen.Notification.createNotificationDetailInfo = function(Options){};

/**
 * @method createStatusNotification
 * <p>Creates and returns an instance of {@link Modules.Tizen.Notification.StatusNotification}.</p>
 * @param {StatusNotificationInit} Options 
 * <p>The dictionary representing information about the new notification.</p>
 * @return {Modules.Tizen.Notification.StatusNotification} 
*/
Modules.Tizen.Notification.createStatusNotification = function(Options){};

/**
 * @method getAll
 * <p>Gets all previously posted notifications by the current application.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/notification.read</code></li>
</ul>
 * @return {Modules.Tizen.Notification.Notification[]} 
*/
Modules.Tizen.Notification.getAll = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Notification.getBubbleParent = function(){};

/**
 * @method getNotification
 * <p>Gets a previously posted notification by the current application.</p>
 * @param {String} id 
 * <p>A previously posted notification ID.</p>
 * @return {Modules.Tizen.Notification} 
*/
Modules.Tizen.Notification.getNotification = function(id){};

/**
 * @method postNotification
 * <p>Post the notification to display.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/notification</code></li>
</ul>
 * @param {Modules.Tizen.Notification} notification 
 * <p>A notification to post.</p>
 * @return void
*/
Modules.Tizen.Notification.postNotification = function(notification){};

/**
 * @method remove
 * <p>Removes a previously posted notification.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/notification</code></li>
</ul>
 * @param {String} id 
 * <p>A previously posted notification ID.</p>
 * @return void
*/
Modules.Tizen.Notification.remove = function(id){};

/**
 * @method removeAll
 * <p>Removes all previously posted notifications by the current application.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/notification</code></li>
</ul>
 * @return void
*/
Modules.Tizen.Notification.removeAll = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Notification.setBubbleParent = function(){};

/**
 * @method update
 * <p>Updates a previously posted notification.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/notification</code></li>
</ul>
 * @param {Modules.Tizen.Notification} notification 
 * <p>A notification to update.</p>
 * @return void
*/
Modules.Tizen.Notification.update = function(notification){};

/**
 * @property NOTIFICATION_PROGRESS_TYPE_BYTE
 * @type String
 * @readonly
 * <p>The progress is indicated in bytes.</p>
 */
Modules.Tizen.Notification.NOTIFICATION_PROGRESS_TYPE_BYTE = null;

/**
 * @property NOTIFICATION_PROGRESS_TYPE_PERCENTAGE
 * @type String
 * @readonly
 * <p>The progress is indicated in percentage.</p>
 */
Modules.Tizen.Notification.NOTIFICATION_PROGRESS_TYPE_PERCENTAGE = null;

/**
 * @property NOTIFICATION_TYPE_STATUS
 * @type String
 * @readonly
 * <p>A notification type.</p>
 * @description <p>The posted status notification is displayed in the notification tray. 
The status notification consists of icon, title, content and time. 
The status notification can have the application control to launch the specific application 
when selected by the user.</p>
 */
Modules.Tizen.Notification.NOTIFICATION_TYPE_STATUS = null;

/**
 * @property STATUS_NOTIFICATION_TYPE_ONGOING
 * @type String
 * @readonly
 * <p>A status notification about an ongoing event.</p>
 * @description <p>If the application needs to keep the user informed about the notification, consider using 
ongoing status notification. Please note that the ongoing status notification should be 
removed by the application that posted the notification. </p>
 */
Modules.Tizen.Notification.STATUS_NOTIFICATION_TYPE_ONGOING = null;

/**
 * @property STATUS_NOTIFICATION_TYPE_PROGRESS
 * @type String
 * @readonly
 * <p>A status notification with progress.</p>
 * @description <p>The progress status notification can display the information for the progress of a job. 
Please note that the progress status notification should be removed by the application that 
posted the notification. </p>
 */
Modules.Tizen.Notification.STATUS_NOTIFICATION_TYPE_PROGRESS = null;

/**
 * @property STATUS_NOTIFICATION_TYPE_SIMPLE
 * @type String
 * @readonly
 * <p>A simple status notification.</p>
 * @description <p>The simple status notification is basic status notification type and removed automatically 
when selected by the user. 
All simple status notifications can be removed by user interaction. </p>
 */
Modules.Tizen.Notification.STATUS_NOTIFICATION_TYPE_SIMPLE = null;

/**
 * @property STATUS_NOTIFICATION_TYPE_THUMBNAIL
 * @type String
 * @readonly
 * <p>A status notification with thumbnail.</p>
 * @description <p>The thumbnail status notification posts a thumbnail-format notification which
includes several thumbnail image paths. The thumbnail status notification is also
removed by a user selection.</p>
 */
Modules.Tizen.Notification.STATUS_NOTIFICATION_TYPE_THUMBNAIL = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Notification.bubbleParent = null;

/**
 * @class Modules.Tizen.Package
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This API provides functionalities to install or uninstall packages, and retrieve information about installed packages.</p>
 * <h3>Example</h3>
 * <h4>Getting information about the installed packages</h4>
 * <p><p>The following example shows how to obtain and show various data about the installed 
packages.</p></p><pre>var Tizen = require('tizen'), 
win = Ti.UI.createWindow({
    layout: 'vertical',
    bakgroundColor: '#ffffff'
}),
button = Ti.UI.createButton({
    top: 10,
    left: 10,
    title: 'Get packages info'
}),
headView = Ti.UI.createView({
    layout: 'horizontal',
    height: 25,
    bottom: 0,
}),
headLabel = Ti.UI.createLabel({
    text: 'Packages'
});
tabView = Ti.UI.createTableView({
    top: 10,
    headerView: headView,
    data : []
});

button.addEventListener('click', getPackagesInfo);

headView.add(headLabel);
win.add(button);
win.add(tabView);

// get info about all installed pakages
function getPackagesInfo() {
    Tizen.Package.getPackagesInfo(onListInstalledPackages);
}

// this callbeck accepts array of PackageInformation as property informationArray of response object 
function onListInstalledPackages(response) {
    if (response.success) {
        var dictionary = [],
            packages = response.informationArray,
            i = 0,
            l = packages.length;
        for (; i &lt; l; i++) {
            dictionary.push(createRow(packages[i]));
        }
        tabView.setData(dictionary);
    } else {
        alert(response.error);
    }
}

// this function creates row for table view
function createRow(package) {
    var row = Ti.UI.createTableViewRow({
        touchEnabled: true,
        height: 50
    }),
    view = Ti.UI.createView({
        layout: 'horizontal'
    }),
    label = Ti.UI.createLabel({
        text: package.name,
        left: 10
    });
    view.add(label);
    row.add(view);
    return row;
}</pre>
 */
Modules.Tizen.Package = {};

/**
 * @class Modules.Tizen.Package.PackageInformation
 * @typestr Object of Modules.Tizen.Package
 * @extends Titanium.Proxy
 * <p>This interface defines the metadata information available to an installed package.</p>
 */
Modules.Tizen.Package.PackageInformation = {};

/**
 * @method getAppIds
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-appIds appIds} property.</p>
 * @return {String[]} 
*/
Modules.Tizen.Package.PackageInformation.getAppIds = function(){};

/**
 * @method getAuthor
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-author author} property.</p>
 * @return {String} 
*/
Modules.Tizen.Package.PackageInformation.getAuthor = function(){};

/**
 * @method getDataSize
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-dataSize dataSize} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Package.PackageInformation.getDataSize = function(){};

/**
 * @method getDescription
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-description description} property.</p>
 * @return {String} 
*/
Modules.Tizen.Package.PackageInformation.getDescription = function(){};

/**
 * @method getIconPath
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-iconPath iconPath} property.</p>
 * @return {String} 
*/
Modules.Tizen.Package.PackageInformation.getIconPath = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-id id} property.</p>
 * @return {String} 
*/
Modules.Tizen.Package.PackageInformation.getId = function(){};

/**
 * @method getLastModified
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-lastModified lastModified} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Package.PackageInformation.getLastModified = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.Package.PackageInformation.getName = function(){};

/**
 * @method getTotalSize
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-totalSize totalSize} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Package.PackageInformation.getTotalSize = function(){};

/**
 * @method getVersion
 * <p>Gets the value of the {@link Modules.Tizen.Package.PackageInformation#property-version version} property.</p>
 * @return {String} 
*/
Modules.Tizen.Package.PackageInformation.getVersion = function(){};

/**
 * @property appIds
 * @type String[]
 * @readonly
 * <p>An attribute to store the application ID list of a package.</p>
 */
Modules.Tizen.Package.PackageInformation.appIds = null;

/**
 * @property author
 * @type String
 * @readonly
 * <p>An attribute to store the author of a package.</p>
 */
Modules.Tizen.Package.PackageInformation.author = null;

/**
 * @property dataSize
 * @type Number
 * @readonly
 * <p>An attribute to store the current data size of a package.</p>
 */
Modules.Tizen.Package.PackageInformation.dataSize = null;

/**
 * @property description
 * @type String
 * @readonly
 * <p>An attribute to store the package description.</p>
 */
Modules.Tizen.Package.PackageInformation.description = null;

/**
 * @property iconPath
 * @type String
 * @readonly
 * <p>An attribute to store the icon path of a package.</p>
 */
Modules.Tizen.Package.PackageInformation.iconPath = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>An attribute to store the identifier of a package.</p>
 */
Modules.Tizen.Package.PackageInformation.id = null;

/**
 * @property lastModified
 * @type Date
 * @readonly
 * <p>An attribute to store the latest installed or updated time of a package.</p>
 */
Modules.Tizen.Package.PackageInformation.lastModified = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>An attribute to store the package name.</p>
 */
Modules.Tizen.Package.PackageInformation.name = null;

/**
 * @property totalSize
 * @type Number
 * @readonly
 * <p>An attribute to store the total installed size(package + data) of a package.</p>
 */
Modules.Tizen.Package.PackageInformation.totalSize = null;

/**
 * @property version
 * @type String
 * @readonly
 * <p>An attribute to store the package version.</p>
 */
Modules.Tizen.Package.PackageInformation.version = null;




/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Package.getBubbleParent = function(){};

/**
 * @method getPackageInfo
 * <p>Gets information of an installed package.</p>
 * @description <p>To use this method, you must include the following privilege in the tiapp.xml file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/package.info</code></li>
</ul>
<p>This is a public level privilege.</p>
 * @param {String} id (optional)
 * <p>A string representing package ID.</p>
 * @return {Modules.Tizen.Package.PackageInformation} 
*/
Modules.Tizen.Package.getPackageInfo = function(id){};

/**
 * @method getPackagesInfo
 * <p>Gets information of the installed packages.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/package.info</code></li>
</ul>
<p>This is a public level privilege.</p>
 * @param {Function} callback 
 * <p>The method to call when an invocation ends successfully or an error occurs.</p>
 * @return void
*/
Modules.Tizen.Package.getPackagesInfo = function(callback){};

/**
 * @method install
 * <p>Installs a package with a specified package path on a device.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/packagemanager.install</code></li>
</ul>
<p>This is a platform level privilege.</p>
 * @param {String} path 
 * <p>The package path to install</p>
 * @param {Function} callback 
 * <p>The method to invoke when the installation is in progress or has been completed or when an error occurs.</p>
 * @return void
*/
Modules.Tizen.Package.install = function(path, callback){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Package.setBubbleParent = function(){};

/**
 * @method uninstall
 * <p>Uninstalls the package with a specified package ID.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/packagemanager.install</code></li>
</ul>
<p>This is a platform level privilege.</p>
 * @param {String} id 
 * <p>The package ID to uninstall.</p>
 * @param {Function} callback 
 * <p>The method to invoke when the uninstallation is in progress or has been completed or when an error occurs.</p>
 * @return void
*/
Modules.Tizen.Package.uninstall = function(id, callback){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Package.bubbleParent = null;

/**
 * @class Modules.Tizen.Power
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This Module provides  support for requesting power management related resource states.</p>
 * @description <p>The <code>Power</code> module is a thin wrapper on the Tizen <code>Power</code> class.</p>
<p>See also:</p>
<ul>
<li><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fpower.html">Tizen Power API</a></li>
<li><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.appprogramming%2Fhtml%2Fguide%2Fsys_guide%2Fpower.htm">Tizen  Power Guide</a></li>
</ul>
 * <h3>Example</h3>
 * <h4>Adjust brightness and turn screen off</h4>
 * <p><p>This example shows how to adjust screen brightness and turn it on or off using graphical 
user interface.</p></p><pre>var win = Titanium.UI.createWindow(),
    buttonTurnOffScreen = Ti.UI.createButton({
        title: 'Turn Off Screen',
        top: 10
    }),
    Tizen = require('tizen'),
    brightnessLabel = Titanium.UI.createLabel({
        text: 'Brightness: ' + Tizen.Power.screenBrightness,
        top: 55,
        left: 20
    }),
    slider = Titanium.UI.createSlider({
        top: 80,
        left: 10,
        right: 10,
        min: 0,
        max: 1,
        value: Tizen.Power.screenBrightness
    });

buttonTurnOffScreen.addEventListener('click', function() {
    Tizen.Power.turnScreenOff();
});

slider.addEventListener('change', function(e) {
    brightnessLabel.text = String.format('Brightness: %3.1f', e.value);
    Tizen.Power.screenBrightness = e.value;
});

win.add(buttonTurnOffScreen);
win.add(slider);
win.add(brightnessLabel);</pre>
 */
Modules.Tizen.Power = {};


/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Power.getBubbleParent = function(){};

/**
 * @method getScreenBrightness
 * <p>Gets the value of the {@link Modules.Tizen.Power#property-screenBrightness screenBrightness} property.</p>
 * @return {Number} 
*/
Modules.Tizen.Power.getScreenBrightness = function(){};

/**
 * @method isScreenOn
 * <p>Returns true if the screen is on.</p>
 * @return {Boolean} <p>true if screen is on.</p>
*/
Modules.Tizen.Power.isScreenOn = function(){};

/**
 * @method release
 * <p>Releases the power state request for the given resource.</p>
 * @param {String} resource 
 * <p>The power resource for which the request is made. The supported request types are: 
{@link Modules.Tizen.Power#property-POWER_RESOURCE_SCREEN},
{@link Modules.Tizen.Power#property-POWER_RESOURCE_CPU}.</p>
 * @return void
*/
Modules.Tizen.Power.release = function(resource){};

/**
 * @method request
 * <p>Requests the minimum-state for a power resource.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/power</code></li>
</ul>
 * @param {String} resource 
 * <p>The power resource for which the request is made. The supported request types are: 
{@link Modules.Tizen.Power#property-POWER_RESOURCE_SCREEN}, 
{@link Modules.Tizen.Power#property-POWER_RESOURCE_CPU}.</p>
 * @param {String} state 
 * <p>The minimal power state in which the power resource is desired to be. The supported 
request types are: {@link Modules.Tizen.Power#property-POWER_SCREEN_STATE_SCREEN_OFF}, 
{@link Modules.Tizen.Power#property-POWER_SCREEN_STATE_SCREEN_DIM}, 
{@link Modules.Tizen.Power#property-POWER_SCREEN_STATE_SCREEN_NORMAL}, 
{@link Modules.Tizen.Power#property-POWER_SCREEN_STATE_SCREEN_BRIGHT}, 
{@link Modules.Tizen.Power#property-POWER_CPU_STATE_CPU_AWAKE}</p>
 * @return void
*/
Modules.Tizen.Power.request = function(resource, state){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Power.setBubbleParent = function(){};

/**
 * @method setScreenBrightness
 * <p>Sets the value of the {@link Modules.Tizen.Power#property-screenBrightness screenBrightness} property.</p>
 * @param {Number} screenBrightness 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.Power.setScreenBrightness = function(screenBrightness){};

/**
 * @method turnScreenOff
 * <p>Turns off the screen.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/power</code></li>
</ul>
 * @return void
*/
Modules.Tizen.Power.turnScreenOff = function(){};

/**
 * @method turnScreenOn
 * <p>Turns on the screen.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/power</code></li>
</ul>
 * @return void
*/
Modules.Tizen.Power.turnScreenOn = function(){};

/**
 * @property POWER_CPU_STATE_CPU_AWAKE
 * @type String
 * @readonly
 * <p>The cpu state is set to be awaken and it does not go to SLEEP state automatically.</p>
 */
Modules.Tizen.Power.POWER_CPU_STATE_CPU_AWAKE = null;

/**
 * @property POWER_RESOURCE_CPU
 * @type String
 * @readonly
 * <p>CPU is aligned with {@link Modules.Tizen.SystemInfo} property value.</p>
 */
Modules.Tizen.Power.POWER_RESOURCE_CPU = null;

/**
 * @property POWER_RESOURCE_SCREEN
 * @type String
 * @readonly
 * <p>SCREEN is aligned with {@link Modules.Tizen.SystemInfo} property value.</p>
 */
Modules.Tizen.Power.POWER_RESOURCE_SCREEN = null;

/**
 * @property POWER_SCREEN_STATE_SCREEN_BRIGHT
 * @type String
 * @readonly
 * <p>The minimal screen state is set to POWER_SCREEN_STATE_SCREEN_BRIGHT and device does not 
change to the POWER_SCREEN_STATE_SCREEN_NORMAL state automatically.</p>
 * @description <p>The {@link Modules.Tizen.Power#property-POWER_SCREEN_STATE_SCREEN_BRIGHT} state refers to the maximum 
screen brightness that the device provides. </p>
<p>Note that the change in brightness does not affect the system brightness setting, i.e., 
the system brightness value is automatically restored when the resource is released or the 
process is completed.</p>
 */
Modules.Tizen.Power.POWER_SCREEN_STATE_SCREEN_BRIGHT = null;

/**
 * @property POWER_SCREEN_STATE_SCREEN_DIM
 * @type String
 * @readonly
 * <p>The minimal screen state is set to DIM and device does not change to OFF state automatically.</p>
 */
Modules.Tizen.Power.POWER_SCREEN_STATE_SCREEN_DIM = null;

/**
 * @property POWER_SCREEN_STATE_SCREEN_NORMAL
 * @type String
 * @readonly
 * <p>The minimal screen state is set to POWER_SCREEN_STATE_SCREEN_NORMAL and device does not 
change to POWER_SCREEN_STATE_SCREEN_DIM state automatically.</p>
 * @description <p>The {@link Modules.Tizen.Power#property-POWER_SCREEN_STATE_SCREEN_NORMAL} state refers to the default 
screen brightness that a user has configured for the device. </p>
 */
Modules.Tizen.Power.POWER_SCREEN_STATE_SCREEN_NORMAL = null;

/**
 * @property POWER_SCREEN_STATE_SCREEN_OFF
 * @type String
 * @readonly
 * <p>This screen state cannot be requested but can only be used in the state change callback.</p>
 */
Modules.Tizen.Power.POWER_SCREEN_STATE_SCREEN_OFF = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Power.bubbleParent = null;

/**
 * @property screenBrightness
 * @type Number
 * <p>An attribute to store the screen brightness level for an application, from 0 to 1.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of 
your Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/power</code></li>
</ul>
 */
Modules.Tizen.Power.screenBrightness = null;

/**
 * @class Modules.Tizen.Push
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This API provides methods to manage push registration and notification.</p>
 */
Modules.Tizen.Push = {};

/**
 * @class Modules.Tizen.Push.PushMessage
 * @typestr Object of Modules.Tizen.Push
 * @extends Titanium.Proxy
 * <p>This interface specifies the push message that is delivered from the push service.</p>
 */
Modules.Tizen.Push.PushMessage = {};

/**
 * @method getAlertMessage
 * <p>Gets the value of the {@link Modules.Tizen.Push.PushMessage#property-alertMessage alertMessage} property.</p>
 * @return {String} 
*/
Modules.Tizen.Push.PushMessage.getAlertMessage = function(){};

/**
 * @method getAppData
 * <p>Gets the value of the {@link Modules.Tizen.Push.PushMessage#property-appData appData} property.</p>
 * @return {String} 
*/
Modules.Tizen.Push.PushMessage.getAppData = function(){};

/**
 * @method getDate
 * <p>Gets the value of the {@link Modules.Tizen.Push.PushMessage#property-date date} property.</p>
 * @return {Date} 
*/
Modules.Tizen.Push.PushMessage.getDate = function(){};

/**
 * @method getIconPath
 * <p>Gets the value of the {@link Modules.Tizen.Push.PushMessage#property-iconPath iconPath} property.</p>
 * @return {String} 
*/
Modules.Tizen.Push.PushMessage.getIconPath = function(){};

/**
 * @property alertMessage
 * @type String
 * @readonly
 * <p>An attribute to store the push notification message that is displayed as an alert message to the user.</p>
 */
Modules.Tizen.Push.PushMessage.alertMessage = null;

/**
 * @property appData
 * @type String
 * @readonly
 * <p>An attribute to store the push notification data.</p>
 * @description <p>This data is the message that the sender wants to send and its length must be less than 1 KB.</p>
 */
Modules.Tizen.Push.PushMessage.appData = null;

/**
 * @property date
 * @type Date
 * @readonly
 * <p>An attribute to store the date/time when a push notification message is received.</p>
 */
Modules.Tizen.Push.PushMessage.date = null;

/**
 * @property iconPath
 * @type String
 * @readonly
 * <p>An attribute to store the icon path of a package.</p>
 */
Modules.Tizen.Push.PushMessage.iconPath = null;

/**
 * @method connectService
 * <p>Connects to the push service and receives push notifications.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/push</code></li>
</ul>
<p>This is a public level privilege.</p>
 * @param {Function} callback 
 * <p>The method to call when an invocation ends successfully or an error occurs.</p>
 * @return void
*/
Modules.Tizen.Push.connectService = function(callback){};

/**
 * @method disconnectService
 * <p>Disconnects to the push service and stop receiving push notifications.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/push</code></li>
</ul>
<p>This is a public level privilege.</p>
 * @return void
*/
Modules.Tizen.Push.disconnectService = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.Push.getBubbleParent = function(){};

/**
 * @method getRegistrationId
 * <p>Gets the push service registration ID for this application if the registration process was successful. 
null is returned if the application has not been registered yet. </p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/push</code></li>
</ul>
<p>This is a public level privilege.</p>
 * @return {String} 
*/
Modules.Tizen.Push.getRegistrationId = function(){};

/**
 * @method registerService
 * <p>Registers an application to the Tizen push server.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/push</code></li>
</ul>
<p>This is a public level privilege.</p>
 * @param {Modules.Tizen.Apps.ApplicationControl} appControl 
 * <p>The data to deliver via notification service when the process is not running.</p>
 * @param {Function} callback 
 * <p>The method to be called when the registration request succeeds or files.</p>
 * @return void
*/
Modules.Tizen.Push.registerService = function(appControl, callback){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.Push.setBubbleParent = function(){};

/**
 * @method unregisterService
 * <p>Unregisters an application from the Tizen push server.</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/push</code></li>
</ul>
<p>This is a public level privilege.</p>
 * @param {Function} callback (optional)
 * <p>The method to be called when the request is successfully unregistered or fails. </p>
 * @return void
*/
Modules.Tizen.Push.unregisterService = function(callback){};

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.Push.bubbleParent = null;

/**
 * @class Modules.Tizen.SimpleCoordinates
 * @typestr Object of Modules.Tizen
 * @extends Titanium.Proxy
 * <p>SimpleCoordinates represents a point (latitude and longitude) in map coordinate system.</p>
 * @description <p>Latitude and longitude are of the WGS84 datum.</p>
 */
Modules.Tizen.SimpleCoordinates = {};

/**
 * @method getLatitude
 * <p>Gets the value of the {@link Modules.Tizen.SimpleCoordinates#property-latitude latitude} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SimpleCoordinates.getLatitude = function(){};

/**
 * @method getLongitude
 * <p>Gets the value of the {@link Modules.Tizen.SimpleCoordinates#property-longitude longitude} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SimpleCoordinates.getLongitude = function(){};

/**
 * @method setLatitude
 * <p>Sets the value of the {@link Modules.Tizen.SimpleCoordinates#property-latitude latitude} property.</p>
 * @param {Number} latitude 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.SimpleCoordinates.setLatitude = function(latitude){};

/**
 * @method setLongitude
 * <p>Sets the value of the {@link Modules.Tizen.SimpleCoordinates#property-longitude longitude} property.</p>
 * @param {Number} longitude 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.SimpleCoordinates.setLongitude = function(longitude){};

/**
 * @property latitude
 * @type Number
 * <p>Latitude.</p>
 */
Modules.Tizen.SimpleCoordinates.latitude = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude.</p>
 */
Modules.Tizen.SimpleCoordinates.longitude = null;

/**
 * @class Modules.Tizen.SortMode
 * @typestr Object of Modules.Tizen
 * @extends Titanium.Proxy
 * <p>SortMode is a common interface used for sorting of queried data.</p>
 * @description <p>Note that the sorting result of list type attributes is not determined.</p>
 */
Modules.Tizen.SortMode = {};

/**
 * @method getAttributeName
 * <p>Gets the value of the {@link Modules.Tizen.SortMode#property-attributeName attributeName} property.</p>
 * @return {String} 
*/
Modules.Tizen.SortMode.getAttributeName = function(){};

/**
 * @method getOrder
 * <p>Gets the value of the {@link Modules.Tizen.SortMode#property-order order} property.</p>
 * @return {String} 
*/
Modules.Tizen.SortMode.getOrder = function(){};

/**
 * @method setAttributeName
 * <p>Sets the value of the {@link Modules.Tizen.SortMode#property-attributeName attributeName} property.</p>
 * @param {String} attributeName 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.SortMode.setAttributeName = function(attributeName){};

/**
 * @method setOrder
 * <p>Sets the value of the {@link Modules.Tizen.SortMode#property-order order} property.</p>
 * @param {String} order 
 * <p>New value for the property.</p>
 * @return void
*/
Modules.Tizen.SortMode.setOrder = function(order){};

/**
 * @property attributeName
 * @type String
 * <p>The name of the object attribute used for sorting.</p>
 */
Modules.Tizen.SortMode.attributeName = null;

/**
 * @property [order=Modules.Tizen.SORT_ORDER_MODE_ASC]
 * @type String
 * <p>The type of the sorting.</p>
 * @description <p>By default, this attribute is set to {@link Modules.Tizen#property-SORT_ORDER_MODE_ASC}.</p>
 */
Modules.Tizen.SortMode.order = null;

/**
 * @class Modules.Tizen.SystemInfo
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This Module provides interfaces and methods providing web applications with access to various 
properties of the system.</p>
 * @description <p>This API also provides interfaces and methods for users to get hardware devices status, to get 
the value of selected properties, and to set up asynchronous notifications of changes for 
selected values. The following provides an overview of the tree data structure:</p>
<ul>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_BATTERY}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_CPU}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_STORAGE}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_DISPLAY}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_DEVICE_ORIENTATION}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_BUILD}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_LOCALE}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_NETWORK}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_WIFI_NETWORK}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_CELLULAR_NETWORK}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_SIM}</li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_PERIPHERAL}</li>
</ul>
<p>The <code>SystemInfo</code> module is a thin wrapper on the Tizen <code>SystemInfo</code> class.</p>
<p>See also:</p>
<ul>
<li><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fsysteminfo.html">Tizen System Info API</a></li>
<li><a href="https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.appprogramming%2Fhtml%2Fguide%2Fsys_guide%2Fsysteminfo.htm">Tizen  System Info Guide</a></li>
</ul>
 * <h3>Example</h3>
 * <h4>Get system information</h4>
 * <p><p>Obtain several system information properties from the OS.</p></p><pre>var Tizen = require('tizen'),
    data = [
        { propertyName: Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_STORAGE, propertyCallback: onStorage },
        { propertyName: Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_CPU, propertyCallback: onCpuInfo },
        { propertyName: Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_CELLULAR_NETWORK, propertyCallback: onCell },
    ],
    dataLength = data.length;

function onCpuInfo(response) {
    if (response.success) {
        console.log('Cpu load: ' + response.data.load);
    } else {
        console.error(response.error);
    }
}

function onStorage(response) {
    if (response.success) {
        var storagesInfo = '',
            i = 0,
            storages = response.data,
            units = storages.getUnits(),
            storagesCount = units.length;

        console.log('Storage: ');
        for (; i &lt; storagesCount; i++) {
            console.log('   Type: ' + units[i].type);
            console.log('   Capacity: ' + Math.floor(units[i].capacity / 1000000) + ' MB');
            console.log('   Available capacity: ' + Math.floor(units[i].availableCapacity / 1000000) + ' MB');
            console.log('   Removable: ' + (units[i].isRemoveable ? 'Yes' : 'No');
        }
    } else {
        console.error(response.error);
    }
}

function onCell(response) {
    if (response.success) {
        var cell = response.data;
        console.log('Cellular network: ');
        console.log('   Status: ' + cell.status);
        console.log('   IP address: ' + cell.ipAddress);
    } else {
        console.error(response.error);
    }
}

for (; i &lt; dataLength; i++ ) {
    Tizen.SystemInfo.getPropertyValue(data[i].propertyName, data[i].propertyCallback);
};</pre>
 */
Modules.Tizen.SystemInfo = {};

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoBattery
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the general state of the system's battery.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoBattery = {};

/**
 * @method getIsCharging
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoBattery#property-isCharging isCharging} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoBattery.getIsCharging = function(){};

/**
 * @method getLevel
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoBattery#property-level level} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoBattery.getLevel = function(){};

/**
 * @property isCharging
 * @type Boolean
 * @readonly
 * <p>Indicates whether the battery source is currently charging.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoBattery.isCharging = null;

/**
 * @property level
 * @type Number
 * @readonly
 * <p>Specifies how much the internal battery remains, scaled from 0 to 1. </p>
 * @description <p>A value of 0 means that the battery level is the lowest before 
the system enters shutdown mode, and 1 indicates that the system's charge is maximum.
Any threshold parameter used in a watch function to monitor this property applies to this 
attribute.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoBattery.level = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoBuild
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the information of the current device.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoBuild = {};

/**
 * @method getModel
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoBuild#property-model model} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoBuild.getModel = function(){};

/**
 * @property model
 * @type String
 * @readonly
 * <p>Represents the model name of the current device.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoBuild.model = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoCellularNetwork
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the information of the Cellular network in this system.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork = {};

/**
 * @method getApn
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-apn apn} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getApn = function(){};

/**
 * @method getCellId
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-cellId cellId} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getCellId = function(){};

/**
 * @method getImei
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-imei imei} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getImei = function(){};

/**
 * @method getIpAddress
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-ipAddress ipAddress} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getIpAddress = function(){};

/**
 * @method getIpv6Address
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-ipv6Address ipv6Address} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getIpv6Address = function(){};

/**
 * @method getIsFlightMode
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-isFlightMode isFlightMode} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getIsFlightMode = function(){};

/**
 * @method getIsRoaming
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-isRoaming isRoaming} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getIsRoaming = function(){};

/**
 * @method getLac
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-lac lac} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getLac = function(){};

/**
 * @method getMcc
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-mcc mcc} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getMcc = function(){};

/**
 * @method getMnc
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-mnc mnc} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getMnc = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork#property-status status} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.getStatus = function(){};

/**
 * @property apn
 * @type String
 * @readonly
 * <p>Represents an Access Point Name of the cellular network.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.apn = null;

/**
 * @property cellId
 * @type Number
 * @readonly
 * <p>Represents Cell Id.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.cellId = null;

/**
 * @property imei
 * @type String
 * @readonly
 * <p>Represents the International Mobile Equipment Identity (IMEI).</p>
 * @description <p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/systemmanager</code></li>
</ul>
<p>This is a partner level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.imei = null;

/**
 * @property ipAddress
 * @type String
 * @readonly
 * <p>Represents the IPv4 address of cellular network.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.ipAddress = null;

/**
 * @property ipv6Address
 * @type String
 * @readonly
 * <p>Represents Mobile Country Code (MCC) of the cellular network.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.ipv6Address = null;

/**
 * @property isFlightMode
 * @type Boolean
 * @readonly
 * <p>Whether the connection is set up while the device is roaming.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.isFlightMode = null;

/**
 * @property isRoaming
 * @type Boolean
 * @readonly
 * <p>Whether the connection is set up while the device is roaming.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.isRoaming = null;

/**
 * @property lac
 * @type Number
 * @readonly
 * <p>Represents Location Area Code.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.lac = null;

/**
 * @property mcc
 * @type Number
 * @readonly
 * <p>Represents Mobile Country Code (MCC) of the cellular network.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.mcc = null;

/**
 * @property mnc
 * @type Number
 * @readonly
 * <p>Represents Mobile Network Code (MNC) of the cellular network. </p>
 * @description <p>MNC is used in combination with MCC (also known as a "MCC / MNC tuple") to uniquely identify 
a mobile phone operator/carrier 
using the GSM, CDMA, iDEN, TETRA and UMTS public land mobile networks and some satellite 
mobile networks.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.mnc = null;

/**
 * @property status
 * @type String
 * @readonly
 * <p>Represents the status (ON or OFF) of the cellular  interface.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCellularNetwork.status = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoCpu
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the state of the CPUs available to this system.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCpu = {};

/**
 * @method getLoad
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoCpu#property-load load} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoCpu.getLoad = function(){};

/**
 * @property load
 * @type Number
 * @readonly
 * <p>This attribute indicates the current CPU load</p>
 * @description <p>Number between 0.0 and 1.0, 
representing the minimum and maximum values allowed on this system. 
Any threshold parameter used in a watch function to monitor this property applies to this 
attribute.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoCpu.load = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoDeviceCapability
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>SystemInfoDeviceCapability object.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability = {};

/**
 * @method getAccelerometer
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-accelerometer accelerometer} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getAccelerometer = function(){};

/**
 * @method getAccelerometerWakeup
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-accelerometerWakeup accelerometerWakeup} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getAccelerometerWakeup = function(){};

/**
 * @method getAutoRotation
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-autoRotation autoRotation} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getAutoRotation = function(){};

/**
 * @method getBarometer
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-barometer barometer} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getBarometer = function(){};

/**
 * @method getBarometerWakeup
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-barometerWakeup barometerWakeup} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getBarometerWakeup = function(){};

/**
 * @method getBluetooth
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-bluetooth bluetooth} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getBluetooth = function(){};

/**
 * @method getCamera
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-camera camera} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getCamera = function(){};

/**
 * @method getCameraBack
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-cameraBack cameraBack} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getCameraBack = function(){};

/**
 * @method getCameraBackFlash
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-cameraBackFlash cameraBackFlash} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getCameraBackFlash = function(){};

/**
 * @method getCameraFront
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-cameraFront cameraFront} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getCameraFront = function(){};

/**
 * @method getCameraFrontFlash
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-cameraFrontFlash cameraFrontFlash} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getCameraFrontFlash = function(){};

/**
 * @method getDataEncryption
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-dataEncryption dataEncryption} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getDataEncryption = function(){};

/**
 * @method getDuid
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-duid duid} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getDuid = function(){};

/**
 * @method getFmRadio
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-fmRadio fmRadio} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getFmRadio = function(){};

/**
 * @method getGraphicsAcceleration
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-graphicsAcceleration graphicsAcceleration} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getGraphicsAcceleration = function(){};

/**
 * @method getGyroscope
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-gyroscope gyroscope} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getGyroscope = function(){};

/**
 * @method getGyroscopeWakeup
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-gyroscopeWakeup gyroscopeWakeup} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getGyroscopeWakeup = function(){};

/**
 * @method getInputKeyboard
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-inputKeyboard inputKeyboard} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getInputKeyboard = function(){};

/**
 * @method getInputKeyboardLayout
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-inputKeyboardLayout inputKeyboardLayout} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getInputKeyboardLayout = function(){};

/**
 * @method getLocation
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-location location} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getLocation = function(){};

/**
 * @method getLocationGps
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-locationGps locationGps} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getLocationGps = function(){};

/**
 * @method getLocationWps
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-locationWps locationWps} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getLocationWps = function(){};

/**
 * @method getMagnetometer
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-magnetometer magnetometer} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getMagnetometer = function(){};

/**
 * @method getMagnetometerWakeup
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-magnetometerWakeup magnetometerWakeup} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getMagnetometerWakeup = function(){};

/**
 * @method getMicrophone
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-microphone microphone} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getMicrophone = function(){};

/**
 * @method getMultiTouchCount
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-multiTouchCount multiTouchCount} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getMultiTouchCount = function(){};

/**
 * @method getNativeApiVersion
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-nativeApiVersion nativeApiVersion} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getNativeApiVersion = function(){};

/**
 * @method getNativeOspCompatible
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-nativeOspCompatible nativeOspCompatible} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getNativeOspCompatible = function(){};

/**
 * @method getNfc
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-nfc nfc} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getNfc = function(){};

/**
 * @method getNfcReservedPush
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-nfcReservedPush nfcReservedPush} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getNfcReservedPush = function(){};

/**
 * @method getOpengles
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-opengles opengles} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getOpengles = function(){};

/**
 * @method getOpenglesVersion1_1
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-openglesVersion1_1 openglesVersion1_1} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getOpenglesVersion1_1 = function(){};

/**
 * @method getOpenglesVersion2_0
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-openglesVersion2_0 openglesVersion2_0} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getOpenglesVersion2_0 = function(){};

/**
 * @method getOpenglestextureFormat
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-openglestextureFormat openglestextureFormat} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getOpenglestextureFormat = function(){};

/**
 * @method getPhotometer
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-photometer photometer} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getPhotometer = function(){};

/**
 * @method getPhotometerWakeup
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-photometerWakeup photometerWakeup} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getPhotometerWakeup = function(){};

/**
 * @method getPlatformCoreCpuArch
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-platformCoreCpuArch platformCoreCpuArch} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getPlatformCoreCpuArch = function(){};

/**
 * @method getPlatformCoreFpuArch
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-platformCoreFpuArch platformCoreFpuArch} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getPlatformCoreFpuArch = function(){};

/**
 * @method getPlatformName
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-platformName platformName} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getPlatformName = function(){};

/**
 * @method getPlatformVersion
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-platformVersion platformVersion} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getPlatformVersion = function(){};

/**
 * @method getProximity
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-proximity proximity} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getProximity = function(){};

/**
 * @method getProximityWakeup
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-proximityWakeup proximityWakeup} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getProximityWakeup = function(){};

/**
 * @method getPush
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-push push} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getPush = function(){};

/**
 * @method getScreenOutputHdmi
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-screenOutputHdmi screenOutputHdmi} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getScreenOutputHdmi = function(){};

/**
 * @method getScreenOutputRca
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-screenOutputRca screenOutputRca} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getScreenOutputRca = function(){};

/**
 * @method getScreenSize480_800
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-screenSize480_800 screenSize480_800} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getScreenSize480_800 = function(){};

/**
 * @method getScreenSize720_1280
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-screenSize720_1280 screenSize720_1280} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getScreenSize720_1280 = function(){};

/**
 * @method getScreenSizeNormal
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-screenSizeNormal screenSizeNormal} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getScreenSizeNormal = function(){};

/**
 * @method getSecureElement
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-secureElement secureElement} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getSecureElement = function(){};

/**
 * @method getShellAppWidget
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-shellAppWidget shellAppWidget} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getShellAppWidget = function(){};

/**
 * @method getSipVoip
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-sipVoip sipVoip} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getSipVoip = function(){};

/**
 * @method getSpeechRecognition
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-speechRecognition speechRecognition} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getSpeechRecognition = function(){};

/**
 * @method getSpeechSynthesis
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-speechSynthesis speechSynthesis} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getSpeechSynthesis = function(){};

/**
 * @method getTelephony
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-telephony telephony} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getTelephony = function(){};

/**
 * @method getTelephonyMms
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-telephonyMms telephonyMms} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getTelephonyMms = function(){};

/**
 * @method getTelephonySms
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-telephonySms telephonySms} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getTelephonySms = function(){};

/**
 * @method getTiltmeter
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-tiltmeter tiltmeter} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getTiltmeter = function(){};

/**
 * @method getTiltmeterWakeup
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-tiltmeterWakeup tiltmeterWakeup} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getTiltmeterWakeup = function(){};

/**
 * @method getUsbAccessory
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-usbAccessory usbAccessory} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getUsbAccessory = function(){};

/**
 * @method getUsbHost
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-usbHost usbHost} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getUsbHost = function(){};

/**
 * @method getVisionFaceRecognition
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-visionFaceRecognition visionFaceRecognition} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getVisionFaceRecognition = function(){};

/**
 * @method getVisionImageRecognition
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-visionImageRecognition visionImageRecognition} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getVisionImageRecognition = function(){};

/**
 * @method getVisionQrcodeGeneration
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-visionQrcodeGeneration visionQrcodeGeneration} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getVisionQrcodeGeneration = function(){};

/**
 * @method getVisionQrcodeRecognition
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-visionQrcodeRecognition visionQrcodeRecognition} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getVisionQrcodeRecognition = function(){};

/**
 * @method getWebApiVersion
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-webApiVersion webApiVersion} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getWebApiVersion = function(){};

/**
 * @method getWifi
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-wifi wifi} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getWifi = function(){};

/**
 * @method getWifiDirect
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability#property-wifiDirect wifiDirect} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.getWifiDirect = function(){};

/**
 * @property accelerometer
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Accelerometer sensor.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.accelerometer = null;

/**
 * @property accelerometerWakeup
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Accelerometer sensor wake-up feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.accelerometerWakeup = null;

/**
 * @property autoRotation
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports auto rotation.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.autoRotation = null;

/**
 * @property barometer
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Barometer sensor.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.barometer = null;

/**
 * @property barometerWakeup
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Barometer sensor wake-up feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.barometerWakeup = null;

/**
 * @property bluetooth
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Bluetooth.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.bluetooth = null;

/**
 * @property camera
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports camera.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.camera = null;

/**
 * @property cameraBack
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports back-side camera.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.cameraBack = null;

/**
 * @property cameraBackFlash
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports on the back-side camera.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.cameraBackFlash = null;

/**
 * @property cameraFront
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports front camera</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.cameraFront = null;

/**
 * @property cameraFrontFlash
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports flash on the front camera.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.cameraFrontFlash = null;

/**
 * @property dataEncryption
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports data encryption.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.dataEncryption = null;

/**
 * @property duid
 * @type String
 * @readonly
 * <p>The device unique ID.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.duid = null;

/**
 * @property fmRadio
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports  FM radio.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.fmRadio = null;

/**
 * @property graphicsAcceleration
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports hardware acceleration for 2D/3D graphics.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.graphicsAcceleration = null;

/**
 * @property gyroscope
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Gyroscope sensor.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.gyroscope = null;

/**
 * @property gyroscopeWakeup
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Gyroscope sensor wake-up feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.gyroscopeWakeup = null;

/**
 * @property inputKeyboard
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Keyboard.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.inputKeyboard = null;

/**
 * @property inputKeyboardLayout
 * @type String
 * @readonly
 * <p>Indicates whether the device supports the built-in keyboard layout.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.inputKeyboardLayout = null;

/**
 * @property location
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports location</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.location = null;

/**
 * @property locationGps
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports GPS based location feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.locationGps = null;

/**
 * @property locationWps
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports  WPS based location feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.locationWps = null;

/**
 * @property magnetometer
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Magnetometer sensor.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.magnetometer = null;

/**
 * @property magnetometerWakeup
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Magnetometer sensor wake-up feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.magnetometerWakeup = null;

/**
 * @property microphone
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Microphone.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.microphone = null;

/**
 * @property multiTouchCount
 * @type Number
 * @readonly
 * <p>The number of point in Multi-point touch.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.multiTouchCount = null;

/**
 * @property nativeApiVersion
 * @type String
 * @readonly
 * <p>The version of the native Tizen API in the [Major].[Minor] format.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.nativeApiVersion = null;

/**
 * @property nativeOspCompatible
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports native osp API.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.nativeOspCompatible = null;

/**
 * @property nfc
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports NFC.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.nfc = null;

/**
 * @property nfcReservedPush
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports NFC reserved push.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.nfcReservedPush = null;

/**
 * @property opengles
 * @type Boolean
 * @readonly
 * <p>ndicates whether the device supports OpenGL-ES.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.opengles = null;

/**
 * @property openglesVersion1_1
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports OpenGL-ES version 1.1.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.openglesVersion1_1 = null;

/**
 * @property openglesVersion2_0
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports OpenGL-ES version 2.0.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.openglesVersion2_0 = null;

/**
 * @property openglestextureFormat
 * @type String
 * @readonly
 * <p>The device 3DC texture format for OpenGL-ES. One example of possible output is as follows:
"<code>3dc/atc/etc/ptc/pvrtc/utc</code>"</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.openglestextureFormat = null;

/**
 * @property photometer
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Photometer sensor.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.photometer = null;

/**
 * @property photometerWakeup
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Photometer sensor wake-up feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.photometerWakeup = null;

/**
 * @property platformCoreCpuArch
 * @type String
 * @readonly
 * <p>The device CPU architecture. possible output (armv6 / armv7 / x86 / llvm)</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.platformCoreCpuArch = null;

/**
 * @property platformCoreFpuArch
 * @type String
 * @readonly
 * <p>The device FPU architecture. possible output (vfpv2 / vfpv3 / sse2 / sse3 / ssse3)</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.platformCoreFpuArch = null;

/**
 * @property platformName
 * @type String
 * @readonly
 * <p>The name of the platform.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.platformName = null;

/**
 * @property platformVersion
 * @type String
 * @readonly
 * <p>The version of the platform in the "[Major].[Minor].[Build Version]" format. </p>
 * @description <p>For example, "1.0.0" represents a platform version where the major version is 1 and the 
minor and build versions are 0.</p>
<p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.platformVersion = null;

/**
 * @property proximity
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Proximity sensor.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.proximity = null;

/**
 * @property proximityWakeup
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Proximity sensor wake-up feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.proximityWakeup = null;

/**
 * @property push
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports push service.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.push = null;

/**
 * @property screenOutputHdmi
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports HDMI output.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.screenOutputHdmi = null;

/**
 * @property screenOutputRca
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports RCA output.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.screenOutputRca = null;

/**
 * @property screenSize480_800
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports the 480 * 800 screen size.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.screenSize480_800 = null;

/**
 * @property screenSize720_1280
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports the 720 * 1280 screen size.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.screenSize720_1280 = null;

/**
 * @property screenSizeNormal
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports the screen normal size.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.screenSizeNormal = null;

/**
 * @property secureElement
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports secure element.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.secureElement = null;

/**
 * @property shellAppWidget
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports shell app widget.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.shellAppWidget = null;

/**
 * @property sipVoip
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports VOIP.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.sipVoip = null;

/**
 * @property speechRecognition
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports speech recognition.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.speechRecognition = null;

/**
 * @property speechSynthesis
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports speech synthesis.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.speechSynthesis = null;

/**
 * @property telephony
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports the telephony feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.telephony = null;

/**
 * @property telephonyMms
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports the mms feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.telephonyMms = null;

/**
 * @property telephonySms
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports the sms feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.telephonySms = null;

/**
 * @property tiltmeter
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Tiltmeter sensor.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.tiltmeter = null;

/**
 * @property tiltmeterWakeup
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Tiltmeter sensor wake-up feature.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.tiltmeterWakeup = null;

/**
 * @property usbAccessory
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports USB accessory.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.usbAccessory = null;

/**
 * @property usbHost
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports USB host.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.usbHost = null;

/**
 * @property visionFaceRecognition
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports vision face recognition.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.visionFaceRecognition = null;

/**
 * @property visionImageRecognition
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports vision image recognition.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.visionImageRecognition = null;

/**
 * @property visionQrcodeGeneration
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports vision qrcode generation.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.visionQrcodeGeneration = null;

/**
 * @property visionQrcodeRecognition
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports vision qrcode recognition.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.visionQrcodeRecognition = null;

/**
 * @property webApiVersion
 * @type String
 * @readonly
 * <p>The version of the Tizen Web API in the [Major].[Minor] format. </p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.webApiVersion = null;

/**
 * @property wifi
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Wi-Fi.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.wifi = null;

/**
 * @property wifiDirect
 * @type Boolean
 * @readonly
 * <p>Indicates whether the device supports Wi-Fi direct.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceCapability.wifiDirect = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoDeviceOrientation
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the information of the device orientation in this system.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceOrientation = {};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDeviceOrientation#property-status status} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoDeviceOrientation.getStatus = function(){};

/**
 * @property status
 * @type String
 * @readonly
 * <p>This property reflects the information of the device orientation in this system.</p>
 * @description <p>The value is one of the constants defined for this type.
The supported device orientation types are: 
{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_PORTRAIT_PRIMARY}, 
{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_PORTRAIT_SECONDARY}, 
{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_LANDSCAPE_PRIMARY}, 
{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_LANDSCAPE_SECONDARY}</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDeviceOrientation.status = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoDisplay
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the information of the Display.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay = {};

/**
 * @method getBrightness
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDisplay#property-brightness brightness} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDisplay.getBrightness = function(){};

/**
 * @method getDotsPerInchHeight
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDisplay#property-dotsPerInchHeight dotsPerInchHeight} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDisplay.getDotsPerInchHeight = function(){};

/**
 * @method getDotsPerInchWidth
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDisplay#property-dotsPerInchWidth dotsPerInchWidth} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDisplay.getDotsPerInchWidth = function(){};

/**
 * @method getPhysicalHeight
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDisplay#property-physicalHeight physicalHeight} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDisplay.getPhysicalHeight = function(){};

/**
 * @method getPhysicalWidth
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDisplay#property-physicalWidth physicalWidth} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDisplay.getPhysicalWidth = function(){};

/**
 * @method getResolutionHeight
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDisplay#property-resolutionHeight resolutionHeight} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDisplay.getResolutionHeight = function(){};

/**
 * @method getResolutionWidth
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoDisplay#property-resolutionWidth resolutionWidth} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoDisplay.getResolutionWidth = function(){};

/**
 * @property brightness
 * @type Number
 * @readonly
 * <p>The current brightness, from 0 to 1.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay.brightness = null;

/**
 * @property dotsPerInchHeight
 * @type Number
 * @readonly
 * <p>Resolution of this device, along its height, in dots per inch.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay.dotsPerInchHeight = null;

/**
 * @property dotsPerInchWidth
 * @type Number
 * @readonly
 * <p>Resolution of this device, along its width, in dots per inch.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay.dotsPerInchWidth = null;

/**
 * @property physicalHeight
 * @type Number
 * @readonly
 * <p>The display's physical height in millimeters.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay.physicalHeight = null;

/**
 * @property physicalWidth
 * @type Number
 * @readonly
 * <p>The display's physical width in millimeters.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay.physicalWidth = null;

/**
 * @property resolutionHeight
 * @type Number
 * @readonly
 * <p>The total number of addressable pixels in the vertical direction of a rectangular element 
(such as Camera, Display, Image, Video, ...) 
when held in its default orientation.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay.resolutionHeight = null;

/**
 * @property resolutionWidth
 * @type Number
 * @readonly
 * <p>The total number of addressable pixels in the horizontal direction of a rectangular entity 
(such as Camera, Display, Image, Video, ...) 
when held in its default orientation.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoDisplay.resolutionWidth = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoLocale
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the locale information of the current device.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoLocale = {};

/**
 * @method getCountry
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoLocale#property-country country} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoLocale.getCountry = function(){};

/**
 * @method getLanguage
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoLocale#property-language language} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoLocale.getLanguage = function(){};

/**
 * @property country
 * @type String
 * @readonly
 * <p>Indicates the current country setting in the (LANGUAGE)_(REGION) syntax.</p>
 * @description <p>The language setting is in the ISO 630-2 format and the region setting is in the ISO 3166-1 format. 
The country setting is case-sensitive.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoLocale.country = null;

/**
 * @property language
 * @type String
 * @readonly
 * <p>Indicates the current language setting in the (LANGUAGE)_(REGION) syntax.</p>
 * @description <p>The language setting is in the ISO 630-2 format and the region setting is in the ISO 3166-1 format. 
The language setting is case-sensitive.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoLocale.language = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoNetwork
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the information of the data network in this system.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoNetwork = {};

/**
 * @method getNetworkType
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoNetwork#property-networkType networkType} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoNetwork.getNetworkType = function(){};

/**
 * @property networkType
 * @type String
 * @readonly
 * <p>Represents the network type of the current data network.</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_NONE}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_2G}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_2_5G}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_3G}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_4G}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_WIFI}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_ETHERNET}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_NETWORK_TYPE_UNKNOWN}</li>
</ul>
 */
Modules.Tizen.SystemInfo.SystemInfoNetwork.networkType = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoPeripheral
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the peripheral information of the current device.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoPeripheral = {};

/**
 * @method getIsVideoOutputOn
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoPeripheral#property-isVideoOutputOn isVideoOutputOn} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoPeripheral.getIsVideoOutputOn = function(){};

/**
 * @property isVideoOutputOn
 * @type Boolean
 * @readonly
 * <p>Represents the video out status.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoPeripheral.isVideoOutputOn = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoProperty
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Titanium.Proxy
 * <p>Common abstract interface used by different types of system information objects.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoProperty = {};

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoSim
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the information of the SIM card information.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim = {};

/**
 * @method getIccid
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-iccid iccid} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getIccid = function(){};

/**
 * @method getMcc
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-mcc mcc} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getMcc = function(){};

/**
 * @method getMnc
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-mnc mnc} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getMnc = function(){};

/**
 * @method getMsin
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-msin msin} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getMsin = function(){};

/**
 * @method getMsisdn
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-msisdn msisdn} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getMsisdn = function(){};

/**
 * @method getOperatorName
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-operatorName operatorName} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getOperatorName = function(){};

/**
 * @method getSpn
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-spn spn} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getSpn = function(){};

/**
 * @method getState
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoSim#property-state state} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoSim.getState = function(){};

/**
 * @property iccid
 * @type String
 * @readonly
 * <p>Represents the Integrated Circuit Card ID.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.iccid = null;

/**
 * @property mcc
 * @type Number
 * @readonly
 * <p>Represents the Mobile Country Code (MCC) of SIM provider.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.mcc = null;

/**
 * @property mnc
 * @type Number
 * @readonly
 * <p>Represents the Mobile Network Code (MNC) of SIM provider.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.mnc = null;

/**
 * @property msin
 * @type String
 * @readonly
 * <p>Represents the Mobile Subscription Identification Number (MSIN) of SIM provider.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.msin = null;

/**
 * @property msisdn
 * @type String
 * @readonly
 * <p>Represents the SIM card subscriber number.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.msisdn = null;

/**
 * @property operatorName
 * @type String
 * @readonly
 * <p>Represents the Operator Name String (ONS) of Common PCN Handset Specification (CPHS) in 
SIM card.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.operatorName = null;

/**
 * @property spn
 * @type String
 * @readonly
 * <p>Represents the Service Provider Name (SPN) of SIM card.</p>
 * @description <p>To use this property, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a public level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.spn = null;

/**
 * @property state
 * @type String
 * @readonly
 * <p>Represents the SIM card state.</p>
 * @description <p>The value is one of the constants defined for this type:</p>
<ul>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_ABSENT}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_INITIALIZING}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_READY}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_PIN_REQUIRED}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_PUK_REQUIRED}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_NETWORK_LOCKED}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_SIM_LOCKED}, </li>
<li>{@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_SIM_STATE_UNKNOWN}</li>
</ul>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:</p>
<ul>
<li><code>http://tizen.org/privilege/system</code></li>
</ul>
<p>This is a bublic level privilege.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoSim.state = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoStorage
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property exposes the data storage devices connected to this system.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoStorage = {};

/**
 * @method getUnits
 * <p>This method returns the array of storage units connected to this device.</p>
 * @return {Modules.Tizen.SystemInfo.SystemInfoStorageUnit[]} 
*/
Modules.Tizen.SystemInfo.SystemInfoStorage.getUnits = function(){};

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoStorageUnit
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property exposes a single storage device connected to this system.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoStorageUnit = {};

/**
 * @method getAvailableCapacity
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoStorageUnit#property-availableCapacity availableCapacity} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.getAvailableCapacity = function(){};

/**
 * @method getCapacity
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoStorageUnit#property-capacity capacity} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.getCapacity = function(){};

/**
 * @method getIsRemovable
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoStorageUnit#property-isRemovable isRemovable} property.</p>
 * @return {Boolean} 
*/
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.getIsRemovable = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoStorageUnit#property-type type} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.getType = function(){};

/**
 * @property availableCapacity
 * @type Number
 * @readonly
 * <p>The amount of available data that this device can hold, in bytes.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.availableCapacity = null;

/**
 * @property capacity
 * @type Number
 * @readonly
 * <p>The amount of data that this device can hold, in bytes.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.capacity = null;

/**
 * @property isRemovable
 * @type Boolean
 * @readonly
 * <p>An attribute to indicate whether a device can be removed or not.
The following values are supported:</p>
<ul>
<li><code>true</code> - If this storage unit can be removed from the system (such as an sdcard unplugged)</li>
<li><code>false</code> - If this storage unit cannot be removed from the system</li>
</ul>
 */
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.isRemovable = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>The type of storage device. </p>
 * @description <p>The value is one of the constants defined for this type.
The supported storage unit types are: "UNKNOWN", "INTERNAL", "MMC", and "USB_HOST".</p>
 */
Modules.Tizen.SystemInfo.SystemInfoStorageUnit.type = null;

/**
 * @class Modules.Tizen.SystemInfo.SystemInfoWifiNetwork
 * @typestr Object of Modules.Tizen.SystemInfo
 * @extends Modules.Tizen.SystemInfo.SystemInfoProperty
 * <p>This property reflects the information of the Wi-Fi network in this system.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork = {};

/**
 * @method getIpAddress
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoWifiNetwork#property-ipAddress ipAddress} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.getIpAddress = function(){};

/**
 * @method getIpv6Address
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoWifiNetwork#property-ipv6Address ipv6Address} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.getIpv6Address = function(){};

/**
 * @method getSignalStrength
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoWifiNetwork#property-signalStrength signalStrength} property.</p>
 * @return {Number} 
*/
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.getSignalStrength = function(){};

/**
 * @method getSsid
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoWifiNetwork#property-ssid ssid} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.getSsid = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Modules.Tizen.SystemInfo.SystemInfoWifiNetwork#property-status status} property.</p>
 * @return {String} 
*/
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.getStatus = function(){};

/**
 * @property ipAddress
 * @type String
 * @readonly
 * <p>Represents the IPv4 address of Wi-Fi network.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.ipAddress = null;

/**
 * @property ipv6Address
 * @type String
 * @readonly
 * <p>Represents the IPv6 address of Wi-Fi network.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.ipv6Address = null;

/**
 * @property signalStrength
 * @type Number
 * @readonly
 * <p>This connection's signal strength, as a normalized value between 0 (no signal detected) and 
1 (the level is at its maximum value).</p>
 */
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.signalStrength = null;

/**
 * @property ssid
 * @type String
 * @readonly
 * <p>Represents the SSID of a Wi-Fi network.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.ssid = null;

/**
 * @property status
 * @type String
 * @readonly
 * <p>Represents the status (ON or OFF) of the Wi-Fi interface.</p>
 */
Modules.Tizen.SystemInfo.SystemInfoWifiNetwork.status = null;

/**
 * @method addPropertyValueChangeListener
 * <p>Allows tracking the change of one or several system properties.</p>
 * @description <p>When called, it immediately returns and then asynchronously starts a watch process defined 
as this set of steps:</p>
<ol>
<li>
<p>Acquire the system's current values for the property requested. If successful, it invokes 
the associated successCallback, 
   passing the resulting property value. The type of the passed object is indicated by the 
   property's value type in the definitions below. For example,
   if you are passing {@link Modules.Tizen.SystemInfo#property-SYSTEM_INFO_PROPERTY_ID_BATTERY} for 
   SystemInfoPropertyId, you'll get SystemInfoBattery object.</p>
</li>
<li>
<p>Register the successCallback to receive system events that the status of the requested 
properties may have changed.</p>
</li>
<li>
<p>When a system event is successfully received invoke the associated successCallback with 
an object containing the property values.</p>
</li>
<li>
<p>Repeat step 3 until removePropertyValueChangeListener function is called.</p>
</li>
</ol>
 * @param {String} property 
 * <p>Name of the property to retrieve.</p>
 * @param {Function} successCallback 
 * <p>Function called when the properties have been successfully retrieved.</p>
 * @param {Object} options (optional)
 * <p>An object containing the various options for fetching the properties requested.</p>
 * @return {Number} <p>Identifier used to clear the watch subscription.</p>
*/
Modules.Tizen.SystemInfo.addPropertyValueChangeListener = function(property, successCallback, options){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.SystemInfo.getBubbleParent = function(){};

/**
 * @method getCapabilities
 * <p>Retrieves the capabilities of the device.</p>
 * @description <p>The function must synchronously acquire the capabilities of the device.</p>
 * @return {Modules.Tizen.SystemInfo.SystemInfoDeviceCapability} 
*/
Modules.Tizen.SystemInfo.getCapabilities = function(){};

/**
 * @method getPropertyValue
 * <p>Retrieves the current state of a given system property.</p>
 * @description <p>The function asynchronously acquires the current state of the requested property. </p>
 * @param {String} property 
 * <p>Name of the property to retrieve.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.SystemInfo.getPropertyValue = function(property, callback){};

/**
 * @method removePropertyValueChangeListener
 * <p>Unsubscribes notifications for property changes set up by addPropertyValueChangeListener.</p>
 * @description <p>If a valid listenerId argument is passed that corresponds to a subscription already place, 
then the watch process MUST immediately terminate and no further callback is invoked. 
If the listenerId argument does not correspond to a valid subscription, 
the method should return without any further action.</p>
 * @param {Number} listenerId 
 * <p>Identifier of the subscription returned by the 
{@link Modules.Tizen.SystemInfo#method-addPropertyValueChangeListener addPropertyValueChangeListener}
method.</p>
 * @return void
*/
Modules.Tizen.SystemInfo.removePropertyValueChangeListener = function(listenerId){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.SystemInfo.setBubbleParent = function(){};

/**
 * @property SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_LANDSCAPE_PRIMARY
 * @type String
 * @readonly
 * <p>LANDSCAPE_PRIMARY is for homescreen background image.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_LANDSCAPE_PRIMARY = null;

/**
 * @property SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_LANDSCAPE_SECONDARY
 * @type String
 * @readonly
 * <p>LANDSCAPE_SECONDARY is for homescreen background image.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_LANDSCAPE_SECONDARY = null;

/**
 * @property SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_PORTRAIT_PRIMARY
 * @type String
 * @readonly
 * <p>PORTRAIT_PRIMARY is for homescreen background image.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_PORTRAIT_PRIMARY = null;

/**
 * @property SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_PORTRAIT_SECONDARY
 * @type String
 * @readonly
 * <p>PORTRAIT_SECONDARY is for homescreen background image.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_DEVICE_ORIENTATION_STATUS_PORTRAIT_SECONDARY = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_2G
 * @type String
 * @readonly
 * <p>2G is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_2G = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_2_5G
 * @type String
 * @readonly
 * <p>2.5G is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_2_5G = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_3G
 * @type String
 * @readonly
 * <p>3G is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_3G = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_4G
 * @type String
 * @readonly
 * <p>4G is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_4G = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_ETHERNET
 * @type String
 * @readonly
 * <p>ETHERNET is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_ETHERNET = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_NONE
 * @type String
 * @readonly
 * <p>NONE is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_NONE = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_UNKNOWN
 * @type String
 * @readonly
 * <p>UNKNOWN is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_UNKNOWN = null;

/**
 * @property SYSTEM_INFO_NETWORK_TYPE_WIFI
 * @type String
 * @readonly
 * <p>WIFI is Data Network Type.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_NETWORK_TYPE_WIFI = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_BATTERY
 * @type String
 * @readonly
 * <p>BATTERY is for homescreen background image.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_BATTERY = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_BUILD
 * @type String
 * @readonly
 * <p>BUILD is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_BUILD = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_CELLULAR_NETWORK
 * @type String
 * @readonly
 * <p>CELLULAR_NETWORK is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_CELLULAR_NETWORK = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_CPU
 * @type String
 * @readonly
 * <p>CPU is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_CPU = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_DEVICE_ORIENTATION
 * @type String
 * @readonly
 * <p>DEVICE_ORIENTATION is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_DEVICE_ORIENTATION = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_DISPLAY
 * @type String
 * @readonly
 * <p>DISPLAY is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_DISPLAY = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_LOCALE
 * @type String
 * @readonly
 * <p>LOCALE is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_LOCALE = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_NETWORK
 * @type String
 * @readonly
 * <p>NETWORK is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_NETWORK = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_PERIPHERAL
 * @type String
 * @readonly
 * <p>PERIPHERAL is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_PERIPHERAL = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_SIM
 * @type String
 * @readonly
 * <p>SIM is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_SIM = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_STORAGE
 * @type String
 * @readonly
 * <p>STORAGE is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_STORAGE = null;

/**
 * @property SYSTEM_INFO_PROPERTY_ID_WIFI_NETWORK
 * @type String
 * @readonly
 * <p>WIFI_NETWORK is the device property identifier.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_PROPERTY_ID_WIFI_NETWORK = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_ABSENT
 * @type String
 * @readonly
 * <p>ABSENT Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_ABSENT = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_INITIALIZING
 * @type String
 * @readonly
 * <p>INITIALIZING Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_INITIALIZING = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_NETWORK_LOCKED
 * @type String
 * @readonly
 * <p>NETWORK_LOCKED Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_NETWORK_LOCKED = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_PIN_REQUIRED
 * @type String
 * @readonly
 * <p>PIN_REQUIRED Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_PIN_REQUIRED = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_PUK_REQUIRED
 * @type String
 * @readonly
 * <p>PUK_REQUIRED Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_PUK_REQUIRED = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_READY
 * @type String
 * @readonly
 * <p>READY Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_READY = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_SIM_LOCKED
 * @type String
 * @readonly
 * <p>SIM_LOCKED Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_SIM_LOCKED = null;

/**
 * @property SYSTEM_INFO_SIM_STATE_UNKNOWN
 * @type String
 * @readonly
 * <p>UNKNOWN Sim State.</p>
 */
Modules.Tizen.SystemInfo.SYSTEM_INFO_SIM_STATE_UNKNOWN = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.SystemInfo.bubbleParent = null;

/**
 * @class Modules.Tizen.SystemSetting
 * @typestr Submodule of Modules.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>This Module provides interfaces and methods providing web applications with access to various 
values of the system.</p>
 * @description <p>This API provides interface and method through features such as:</p>
<ul>
<li>{@link Modules.Tizen.SystemSetting#property-SYSTEM_SETTING_TYPE_HOME_SCREEN}</li>
<li>{@link Modules.Tizen.SystemSetting#property-SYSTEM_SETTING_TYPE_LOCK_SCREEN}</li>
<li>{@link Modules.Tizen.SystemSetting#property-SYSTEM_SETTING_TYPE_INCOMING_CALL}</li>
<li>{@link Modules.Tizen.SystemSetting#property-SYSTEM_SETTING_TYPE_NOTIFICATION_EMAIL}</li>
</ul>
<p>The <code>SystemSetting</code> module is a thin wrapper on the Tizen <code>SystemSetting</code> class.</p>
 * <h3>Example</h3>
 * <h4>Configure email notification</h4>
 * <p><p>This example shows how to programmatically change the sound of the new email notification.</p></p><pre>var Tizen = require('tizen');
Tizen.SystemSetting.setProperty(
    Tizen.SystemSetting.SYSTEM_SETTING_TYPE_NOTIFICATION_EMAIL,
    'sounds/email.mp4',   // must be an actual file (resolved to a document root0
    function(response) {
        if (response.success) {
            console.log('Setting changed successfully.');
        } else {
            console.error('Error changing the setting: ' + response.error);
        }                    
    }
);</pre>
 */
Modules.Tizen.SystemSetting = {};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.SystemSetting.getBubbleParent = function(){};

/**
 * @method getProperty
 * <p>Gets the setting of the device</p>
 * @description <p>This method allows the user to retrieve a value according to a given type.    </p>
 * @param {String} type 
 * <p>The setting type.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.SystemSetting.getProperty = function(type, callback){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.SystemSetting.setBubbleParent = function(){};

/**
 * @method setProperty
 * <p>Sets the setting of the device</p>
 * @description <p>This method allows the user to set a value according to a given type.</p>
<p>To use this method, you must include the following privilege in the <code>tiapp.xml</code> file of your 
Titanium application:  </p>
<ul>
<li><code>http://tizen.org/privilege/setting</code></li>
</ul>
 * @param {String} type 
 * <p>The setting type.</p>
 * @param {String} value 
 * <p>The setting value for the type. For example, it can be a image or sound filepath.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
*/
Modules.Tizen.SystemSetting.setProperty = function(type, value, callback){};

/**
 * @property SYSTEM_SETTING_TYPE_HOME_SCREEN
 * @type String
 * @readonly
 * <p>HOME_SCREEN is for homescreen background image.</p>
 */
Modules.Tizen.SystemSetting.SYSTEM_SETTING_TYPE_HOME_SCREEN = null;

/**
 * @property SYSTEM_SETTING_TYPE_INCOMING_CALL
 * @type String
 * @readonly
 * <p>INCOMING_CALL is for incoming call ringtone.</p>
 */
Modules.Tizen.SystemSetting.SYSTEM_SETTING_TYPE_INCOMING_CALL = null;

/**
 * @property SYSTEM_SETTING_TYPE_LOCK_SCREEN
 * @type String
 * @readonly
 * <p>LOCK_SCREEN is for lockscreen background image.</p>
 */
Modules.Tizen.SystemSetting.SYSTEM_SETTING_TYPE_LOCK_SCREEN = null;

/**
 * @property SYSTEM_SETTING_TYPE_NOTIFICATION_EMAIL
 * @type String
 * @readonly
 * <p>NOTIFICATION_EMAIL is for email notification alert tone.</p>
 */
Modules.Tizen.SystemSetting.SYSTEM_SETTING_TYPE_NOTIFICATION_EMAIL = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.SystemSetting.bubbleParent = null;

/**
 * @class Modules.Tizen.WebAPIError
 * @typestr Object of Modules.Tizen
 * @extends Titanium.Proxy
 * <p>Generic error interface.</p>
 * @description <p>This interface will be used by the APIs in order to return them in the error callback of 
asynchronous methods. </p>
 */
Modules.Tizen.WebAPIError = {};

/**
 * @method getCode
 * <p>Gets the value of the {@link Modules.Tizen.WebAPIError#property-code code} property.</p>
 * @return {Number} 
*/
Modules.Tizen.WebAPIError.getCode = function(){};

/**
 * @method getMessage
 * <p>Gets the value of the {@link Modules.Tizen.WebAPIError#property-message message} property.</p>
 * @return {String} 
*/
Modules.Tizen.WebAPIError.getMessage = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Modules.Tizen.WebAPIError#property-name name} property.</p>
 * @return {String} 
*/
Modules.Tizen.WebAPIError.getName = function(){};

/**
 * @property code
 * @type Number
 * @readonly
 * <p>16-bit error code.</p>
 * @description <p>Possible values are defined in <a href="http://www.w3.org/TR/dom/#error-types">DOMException</a></p>
 */
Modules.Tizen.WebAPIError.code = null;

/**
 * @property message
 * @type String
 * @readonly
 * <p>An error message. Describes the details of the error encountered.</p>
 * @description <p>This attribute is not intended to be used directly in the user interfaces as it is mainly 
intended to be useful for developers rather than end users.</p>
 */
Modules.Tizen.WebAPIError.message = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>An error type.</p>
 * @description <p>An error type. The name attribute must return the value it was initialized to. Possible 
values are the ones defined in <a href="http://www.w3.org/TR/dom/#error-types">DOM error types</a> 
and the ones below:</p>
<ul>
<li>"UnknownError" - An unknown error has occurred.</li>
<li>"InvalidValuesError" - The content of an object does not contain valid values.</li>
<li>"IOError" - An error occurred in communication with the underlying implementation that meant the requested method could not complete.</li>
<li>"ServiceNotAvailableError" - The requested service is not available.</li>
</ul>
 */
Modules.Tizen.WebAPIError.name = null;

/**
 * @method createAttributeFilter
 * <p>Creates and returns an instance of {@link Modules.Tizen.AttributeFilter}.</p>
 * @param {Object} Options 
 * <p>Dictionary with initial arguments for AttributeFilter.</p>
 * @return {Modules.Tizen.AttributeFilter} 
*/
Modules.Tizen.createAttributeFilter = function(Options){};

/**
 * @method createAttributeRangeFilter
 * <p>Creates and returns an instance of {@link Modules.Tizen.AttributeRangeFilter}.</p>
 * @param {Object} Options 
 * <p>Dictionary with initial arguments for AttributeRangeFilter.</p>
 * @return {Modules.Tizen.AttributeRangeFilter} 
*/
Modules.Tizen.createAttributeRangeFilter = function(Options){};

/**
 * @method createCompositeFilter
 * <p>Creates and returns an instance of {@link Modules.Tizen.CompositeFilter}.</p>
 * @param {Object} Options 
 * <p>Dictionary with initial arguments for CompositeFilter.</p>
 * @return {Modules.Tizen.CompositeFilter} 
*/
Modules.Tizen.createCompositeFilter = function(Options){};

/**
 * @method createContactRef
 * <p>Creates and returns an instance of {@link Modules.Tizen.ContactRef}.</p>
 * @param {Object} Options 
 * <p>Dictionary with initial arguments for ContactRef.</p>
 * @return {Modules.Tizen.ContactRef} 
*/
Modules.Tizen.createContactRef = function(Options){};

/**
 * @method createSimpleCoordinates
 * <p>Creates and returns an instance of {@link Modules.Tizen.SimpleCoordinates}.</p>
 * @param {Object} Options 
 * <p>Dictionary with initial arguments for SimpleCoordinates.</p>
 * @return {Modules.Tizen.SimpleCoordinates} 
*/
Modules.Tizen.createSimpleCoordinates = function(Options){};

/**
 * @method createSortMode
 * <p>Creates and returns an instance of {@link Modules.Tizen.SortMode}.</p>
 * @param {Object} Options 
 * <p>Dictionary with initial arguments for SortMode.</p>
 * @return {Modules.Tizen.SortMode} 
*/
Modules.Tizen.createSortMode = function(Options){};

/**
 * @method getBubbleParent 
 * @hide
*/Modules.Tizen.getBubbleParent = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Modules.Tizen.setBubbleParent = function(){};

/**
 * @property COMPOSITE_FILTER_TYPE_INTERSECTION
 * @type String
 * @readonly
 * <p>An intersection of filters ("AND" operator).</p>
 */
Modules.Tizen.COMPOSITE_FILTER_TYPE_INTERSECTION = null;

/**
 * @property COMPOSITE_FILTER_TYPE_UNION
 * @type String
 * @readonly
 * <p>A union of filters ("OR" operator)</p>
 */
Modules.Tizen.COMPOSITE_FILTER_TYPE_UNION = null;

/**
 * @property FILTER_MATCH_FLAG_CONTAINS
 * @type String
 * @readonly
 * <p>Indicates the attribute value should contain the given string.</p>
 * @description <p>For strings, case insensitive.</p>
 */
Modules.Tizen.FILTER_MATCH_FLAG_CONTAINS = null;

/**
 * @property FILTER_MATCH_FLAG_ENDSWITH
 * @type String
 * @readonly
 * <p>Indicates the attribute value should end with the given string.</p>
 * @description <p>For strings, case insensitive.</p>
 */
Modules.Tizen.FILTER_MATCH_FLAG_ENDSWITH = null;

/**
 * @property FILTER_MATCH_FLAG_EXACTLY
 * @type String
 * @readonly
 * <p>Indicates the attribute value should match exactly the given value (default).</p>
 * @description <p>For strings, the match is case-sensitive.</p>
 */
Modules.Tizen.FILTER_MATCH_FLAG_EXACTLY = null;

/**
 * @property FILTER_MATCH_FLAG_EXISTS
 * @type String
 * @readonly
 * <p>Indicates the filter should match if the attribute exists.</p>
 */
Modules.Tizen.FILTER_MATCH_FLAG_EXISTS = null;

/**
 * @property FILTER_MATCH_FLAG_FULLSTRING
 * @type String
 * @readonly
 * <p>String-based matching. Matches the whole string (case insensitive).</p>
 */
Modules.Tizen.FILTER_MATCH_FLAG_FULLSTRING = null;

/**
 * @property FILTER_MATCH_FLAG_STARTSWITH
 * @type String
 * @readonly
 * <p>Indicates the attribute value should start with the given string.</p>
 * @description <p>For strings, case insensitive.</p>
 */
Modules.Tizen.FILTER_MATCH_FLAG_STARTSWITH = null;

/**
 * @property SORT_ORDER_MODE_ASC
 * @type String
 * @readonly
 * <p>Indicates the sorting order is ascending</p>
 */
Modules.Tizen.SORT_ORDER_MODE_ASC = null;

/**
 * @property SORT_ORDER_MODE_DESC
 * @type String
 * @readonly
 * <p>Indicates the sorting order is descending</p>
 */
Modules.Tizen.SORT_ORDER_MODE_DESC = null;

/**
 * @property bubbleParent 
 * @hide
*/Modules.Tizen.bubbleParent = null;

/**
 * @class MovieSize
 * @typestr Object
 * @pseudo
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Simple object used to describe the size of a movie.</p>
 */
MovieSize = {};

/**
 * @property height
 * @type Number
 * <p>Height of the movie.</p>
 */
MovieSize.height = null;

/**
 * @property width
 * @type Number
 * <p>Width of the movie.</p>
 */
MovieSize.width = null;

/**
 * @class MusicLibraryOptionsType
 * @typestr Object
 * @pseudo
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Simple object for specifying options to {@link Titanium.Media#method-openMusicLibrary openMusicLibrary}.</p>
 */
MusicLibraryOptionsType = {};

/**
 * @property [allowMultipleSelections=false]
 * @type Boolean
 * <p>Set to <code>true</code> to allow the user to select multiple items from the library.</p>
 */
MusicLibraryOptionsType.allowMultipleSelections = null;

/**
 * @property [animated=true]
 * @type Boolean
 * <p>Boolean if the dialog should be animated when showing and hiding.</p>
 */
MusicLibraryOptionsType.animated = null;

/**
 * @property [autohide=true]
 * @type Boolean
 * <p>Specifies that the library should be hidden automatically after media selection is completed.</p>
 */
MusicLibraryOptionsType.autohide = null;

/**
 * @property cancel
 * @type Callback<FailureResponse>
 * <p>Function to call if the user presses the cancel button.</p>
 */
MusicLibraryOptionsType.cancel = null;

/**
 * @property error
 * @type Callback<FailureResponse>
 * <p>Function to call upon receiving an error.</p>
 */
MusicLibraryOptionsType.error = null;

/**
 * @property [mediaTypes=All available types.]
 * @type Number/Number[]
 * <p>An array of media type constants defining selectable media.</p>
 * @description <p>Specify one or more of the see <code>MUSIC_MEDIA_TYPE</code> constants from {@link Titanium.Media}. To
specify multiple types, either pass an array of values, or pass a 
single value that represents the bitwise-OR of the desired media types. For example,
the following values are equivalent:</p>
<pre><code>mediaTypes: [Titanium.Media.MUSIC_MEDIA_TYPE_MUSIC, Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST]
</code></pre>
<p>Or:</p>
<pre><code>mediaTypes: Titanium.Media.MUSIC_MEDIA_TYPE_MUSIC|Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST
</code></pre>
 */
MusicLibraryOptionsType.mediaTypes = null;

/**
 * @property success
 * @type Callback<MusicLibraryResponseType>
 * <p>Function to call when the music library selection is made.</p>
 */
MusicLibraryOptionsType.success = null;

/**
 * @class MusicLibraryResponseType
 * @typestr Object
 * @pseudo
 * <p>Simple object passed to the {@link Titanium.Media#method-openMusicLibrary openMusicLibrary}
<code>success</code> callback function.</p>
 */
MusicLibraryResponseType = {};

/**
 * @property items
 * @type Titanium.Media.Item[]
 * <p>A list of all the items chosen by the user.</p>
 */
MusicLibraryResponseType.items = null;

/**
 * @property representative
 * @type Titanium.Media.Item
 * <p>A single representative of the selected items.</p>
 */
MusicLibraryResponseType.representative = null;

/**
 * @property types
 * @type Number
 * <p>Media types in this collection, represented as the bitwise OR of the media type
values for all media types represented in <code>items</code>.</p>
 */
MusicLibraryResponseType.types = null;

/**
 * @class NDEFMessageInitNDEFRecords
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.NFC#method-createNDEFMessage createNDEFMessage}.</p>
 */
NDEFMessageInitNDEFRecords = {};

/**
 * @property ndefRecords
 * @type Modules.Tizen.NFC.NDEFRecord[]
 * <p>The array of NDEFRecord objects in the {@link Modules.Tizen.NFC.NDEFMessage}.</p>
 */
NDEFMessageInitNDEFRecords.ndefRecords = null;

/**
 * @class NDEFMessageInitRawData
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.NFC#method-createNDEFMessage createNDEFMessage}.</p>
 */
NDEFMessageInitRawData = {};

/**
 * @property rawData
 * @type Number[]
 * <p>Serial byte array of the NDEF message.</p>
 */
NDEFMessageInitRawData.rawData = null;

/**
 * @class NDEFReadResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.NFC.NFCTag#method-readNDEF readNDEF} method.</p>
 */
NDEFReadResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
NDEFReadResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
NDEFReadResponse.error = null;

/**
 * @property ndefMessage
 * @type Modules.Tizen.NFC.NDEFMessage
 * <p>NDEF message that is read from the NFC tag or target.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
NDEFReadResponse.ndefMessage = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
NDEFReadResponse.success = null;

/**
 * @class NDEFRecordInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.NFC#method-createNDEFRecord createNDEFRecord}.</p>
 */
NDEFRecordInit = {};

/**
 * @property id
 * @type Number[]
 * <p>(optional) The record ID.</p>
 */
NDEFRecordInit.id = null;

/**
 * @property payload
 * @type Number[]
 * <p>The record payload.</p>
 */
NDEFRecordInit.payload = null;

/**
 * @property tnf
 * @type String
 * <p>The value of the record type (TNF value).</p>
 */
NDEFRecordInit.tnf = null;

/**
 * @property type
 * @type Number[]
 * <p>The specified type in byte array. The byte array contains zero to 255 bytes.</p>
 */
NDEFRecordInit.type = null;

/**
 * @class NDEFRecordInitRawData
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.NFC#method-createNDEFRecord createNDEFRecord}.</p>
 */
NDEFRecordInitRawData = {};

/**
 * @property rawData
 * @type Number[]
 * <p>Raw data of NDEFRecord.</p>
 */
NDEFRecordInitRawData.rawData = null;

/**
 * @class NDEFRecordMediaInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.NFC#method-createNDEFRecordMedia createNDEFRecordMedia}.</p>
 */
NDEFRecordMediaInit = {};

/**
 * @property mimeType
 * @type String
 * <p>The mime type [RFC 2046] (ex. text/plain, image/jpeg ).</p>
 */
NDEFRecordMediaInit.mimeType = null;

/**
 * @property rawData
 * @type Number[]
 * <p>Raw media data.</p>
 */
NDEFRecordMediaInit.rawData = null;

/**
 * @class NFCTagDetectCallback
 * @typestr Object
 * @pseudo
 * <p>Object containing callbacks to be invoked when a tag is attached or detached.</p>
 */
NFCTagDetectCallback = {};

/**
 * @method onattach
 * <p>The method invoked when a tag is attached.</p>
 * @param {Modules.Tizen.NFC.NFCTag} nfcTag 
 * <p>The attached NFC tag.</p>
 * @return void
*/
NFCTagDetectCallback.onattach = function(nfcTag){};

/**
 * @method ondetach
 * <p>The method invoked when the connected tag is detached.</p>
 * @return void
*/
NFCTagDetectCallback.ondetach = function(){};

/**
 * @class NdefDiscovered
 * @typestr Object
 * @pseudo
 * @platform android 1.0
 * <p>Argument passed to the callback when an NDEF message, tag, or technology is discovered.</p>
 */
NdefDiscovered = {};

/**
 * @property action
 * @type String
 * <p>Identifies the action from the intent.</p>
 * @description <p>This value will be one of the constants defined on the {@link Modules.Nfc} module object (ACTION_NDEF_DISCOVERED, ACTION_TAG_DISCOVERED, or
ACTION_TECH_DISCOVERED).</p>
 */
NdefDiscovered.action = null;

/**
 * @property messsages
 * @type Modules.Nfc.NdefMessage[]
 * <p>Array of NDEF messages parsed from the tag.</p>
 */
NdefDiscovered.messsages = null;

/**
 * @property tag
 * @type Modules.Nfc.NfcTag
 * <p>NFC tag proxy identifying the tag was was discovered.</p>
 */
NdefDiscovered.tag = null;

/**
 * @class NewsstandAddIssueProps
 * @typestr Object
 * @pseudo
 * @platform iphone 1.0
 * @platform ipad 1.0
 * <p>A dictionary of properties to pass to the method</p>
 */
NewsstandAddIssueProps = {};

/**
 * @property date
 * @type Date
 * <p>The release date of the issue.</p>
 */
NewsstandAddIssueProps.date = null;

/**
 * @property name
 * @type String
 * <p>The unique name of the issue to be added to the library.</p>
 */
NewsstandAddIssueProps.name = null;

/**
 * @class NewsstandDownloadAssetProps
 * @typestr Object
 * @pseudo
 * @platform iphone 1.0
 * @platform ipad 1.0
 * <p>A dictionary of properties to pass to the method</p>
 */
NewsstandDownloadAssetProps = {};

/**
 * @property filename
 * @type String
 * <p>The name of the file to be downloaded. If no name is specified here, the filename will be the last component of the url. (optional)</p>
 */
NewsstandDownloadAssetProps.filename = null;

/**
 * @property url
 * @type String
 * <p>Location of the asset to be downloaded</p>
 */
NewsstandDownloadAssetProps.url = null;

/**
 * @property userInfo
 * @type Dictionary
 * <p>A dictionary of properties that can be passed through with the request to the event listeners. (optional)</p>
 * @description <p><strong>Warning:</strong> Do not include anything more than simple key value pairs. Including Titanium objects in userInfo will cause errors.</p>
 */
NewsstandDownloadAssetProps.userInfo = null;

/**
 * @class NewsstandGetIssueProps
 * @typestr Object
 * @pseudo
 * @platform iphone 1.0
 * @platform ipad 1.0
 * <p>A dictionary of properties to pass to the method</p>
 */
NewsstandGetIssueProps = {};

/**
 * @property name
 * @type String
 * <p>The unique name of the issue to be added to the library.</p>
 */
NewsstandGetIssueProps.name = null;

/**
 * @class NewsstandSetBasicAuthProps
 * @typestr Object
 * @pseudo
 * @platform iphone 1.0
 * @platform ipad 1.0
 * <p>A dictionary of properties to pass to the method</p>
 */
NewsstandSetBasicAuthProps = {};

/**
 * @property password
 * @type String
 * 
 */
NewsstandSetBasicAuthProps.password = null;

/**
 * @property username
 * @type String
 * 
 */
NewsstandSetBasicAuthProps.username = null;

/**
 * @class NfcIntentFilter
 * @typestr Object
 * @pseudo
 * @platform android 1.0
 * <p>Intent filter.</p>
 */
NfcIntentFilter = {};

/**
 * @property action
 * @type String
 * <p>Identifies the action from the intent.</p>
 * @description <p>This value will be one of the constants defined on the {@link Modules.Nfc} module object (ACTION_NDEF_DISCOVERED, ACTION_TAG_DISCOVERED, or
ACTION_TECH_DISCOVERED).</p>
 */
NfcIntentFilter.action = null;

/**
 * @property host
 * @type String
 * <p>Data authority to match against.</p>
 */
NfcIntentFilter.host = null;

/**
 * @property mimeType
 * @type String
 * <p>A valid MIME type.</p>
 */
NfcIntentFilter.mimeType = null;

/**
 * @property scheme
 * @type String
 * <p>Data scheme to match against.</p>
 */
NfcIntentFilter.scheme = null;

/**
 * @class NotificationDetailInfoInit
 * @typestr Object
 * @pseudo
 * @platform tizen 3.1
 * <p>Simple object that contains parameters for {@link Modules.Tizen.Notification#method-createNotificationDetailInfo createNotificationDetailInfo}.</p>
 */
NotificationDetailInfoInit = {};

/**
 * @property mainText
 * @type String
 * <p>The main content of the detail information. This attribute is available on simple status notifications.</p>
 */
NotificationDetailInfoInit.mainText = null;

/**
 * @property subText
 * @type String
 * <p>The secondary content of the detail information.</p>
 */
NotificationDetailInfoInit.subText = null;

/**
 * @class NotificationParams
 * @typestr Object
 * @pseudo
 * @platform iphone 1.7
 * @platform ipad 1.7
 * <p>Dictionary object of parameters used to create a notification using 
{@link Titanium.App.iOS#method-scheduleLocalNotification}.</p>
 */
NotificationParams = {};

/**
 * @property alertAction
 * @type String
 * <p>Alert button text ('View', by default) or slider text ('slide to unlock...', by default) 
to display.</p>
 */
NotificationParams.alertAction = null;

/**
 * @property alertBody
 * @type String
 * <p>Alert message to display.</p>
 */
NotificationParams.alertBody = null;

/**
 * @property alertLaunchImage
 * @type String
 * <p>Image to display instead of <code>Default.png</code> when launching the application.</p>
 */
NotificationParams.alertLaunchImage = null;

/**
 * @property badge
 * @type Number
 * <p>Application badge value.</p>
 */
NotificationParams.badge = null;

/**
 * @property date
 * @type Date
 * <p>Date and time for the notification to occur.</p>
 */
NotificationParams.date = null;

/**
 * @property repeat
 * @type String
 * <p>Interval to repeat the notification. One of <code>weekly</code>, <code>daily</code>, <code>yearly,</code> <code>monthly</code>.</p>
 */
NotificationParams.repeat = null;

/**
 * @property sound
 * @type String
 * <p>Path to the sound file to play when notification occurs, relative to the <code>Resources</code> folder.</p>
 */
NotificationParams.sound = null;

/**
 * @property timezone
 * @type String
 * <p>Timezone of the date configured for the notification. If not set, the system timezone is used.</p>
 */
NotificationParams.timezone = null;

/**
 * @property userInfo
 * @type Dictionary
 * <p>Data to pass to the application with the notification event.</p>
 */
NotificationParams.userInfo = null;

/**
 * @class PackageInformationArraySuccessCallbackResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Package#method-getPackagesInfo getPackagesInfo} method.</p>
 */
PackageInformationArraySuccessCallbackResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
PackageInformationArraySuccessCallbackResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
PackageInformationArraySuccessCallbackResponse.error = null;

/**
 * @property informationArray
 * @type Modules.Tizen.Package.PackageInformation[]
 * <p>A list of installed packages information.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
PackageInformationArraySuccessCallbackResponse.informationArray = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
PackageInformationArraySuccessCallbackResponse.success = null;

/**
 * @class PackageProgressCallbackResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Package#method-install install} method.</p>
 */
PackageProgressCallbackResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
PackageProgressCallbackResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
PackageProgressCallbackResponse.error = null;

/**
 * @property id
 * @type String
 * <p>The package ID</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
PackageProgressCallbackResponse.id = null;

/**
 * @property oncomplete
 * @type Boolean
 * <p>Indicates if the request is completed.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
PackageProgressCallbackResponse.oncomplete = null;

/**
 * @property onprogress
 * @type Boolean
 * <p>Indicates if request in progress.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
PackageProgressCallbackResponse.onprogress = null;

/**
 * @property progress
 * @type Number
 * <p>The progress in percentage</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
PackageProgressCallbackResponse.progress = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
PackageProgressCallbackResponse.success = null;

/**
 * @class PhotoGalleryOptionsType
 * @typestr Object
 * @pseudo
 * <p>Simple object for specifying options to 
{@link Titanium.Media#method-openPhotoGallery openPhotoGallery}.</p>
 */
PhotoGalleryOptionsType = {};

/**
 * @property allowEditing
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies if the media should be editable after capture/selection.</p>
 */
PhotoGalleryOptionsType.allowEditing = null;

/**
 * @property [animated=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies if the dialog should be animated upon showing and hiding.</p>
 */
PhotoGalleryOptionsType.animated = null;

/**
 * @property arrowDirection
 * @type Number
 * @platform ipad 0.8
 * <p>Controls the type of arrow and position of the popover.</p>
 * @description <p>Specify one of the <code>POPOVER_ARROW_DIRECTION</code> constants from {@link Titanium.UI.iPad}.</p>
 */
PhotoGalleryOptionsType.arrowDirection = null;

/**
 * @property [autohide=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies if the photo gallery should be hidden automatically after the media selection is completed.</p>
 */
PhotoGalleryOptionsType.autohide = null;

/**
 * @property cancel
 * @type Callback<FailureResponse>
 * <p>Function to call if the user presses the cancel button.</p>
 */
PhotoGalleryOptionsType.cancel = null;

/**
 * @property error
 * @type Callback<FailureResponse>
 * <p>Function to call upon receiving an error.</p>
 */
PhotoGalleryOptionsType.error = null;

/**
 * @property [mediaTypes=Both photo and video allowed.]
 * @type String[]
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Array of media type constants to allow: <code>MEDIA_TYPE_PHOTO</code> or <code>MEDIA_TYPE_VIDEO</code>.</p>
 */
PhotoGalleryOptionsType.mediaTypes = null;

/**
 * @property popoverView
 * @type Titanium.UI.View
 * @platform ipad 0.8
 * <p>View to position the photo gallery popover on top of.</p>
 */
PhotoGalleryOptionsType.popoverView = null;

/**
 * @property success
 * @type Callback<CameraMediaItemType>
 * <p>Function to call when the photogallery is closed after a successful selection.</p>
 */
PhotoGalleryOptionsType.success = null;

/**
 * @class PlayerQueue
 * @typestr Object
 * @pseudo
 * <p>A simple object for specifying a queue of media items.</p>
 */
PlayerQueue = {};

/**
 * @property items
 * @type Titanium.Media.Item[]
 * <p>An array of media items.</p>
 */
PlayerQueue.items = null;

/**
 * @class Point
 * @typestr Object
 * @pseudo
 * @platform android 1.8
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>A pair of coordinates used to describe the location of a {@link Titanium.UI.View}.</p>
 */
Point = {};

/**
 * @property x
 * @type Number
 * <p>The x-axis coordinate of this point.</p>
 */
Point.x = null;

/**
 * @property y
 * @type Number
 * <p>The y-axis coordinate of this point.</p>
 */
Point.y = null;

/**
 * @class PreviewImageError
 * @typestr Object
 * @pseudo
 * @platform android 0.8
 * @extends FailureResponse
 * <p>The parameter passed to the <code>error</code> callback of {@link PreviewImageOptions}.</p>
 */
PreviewImageError = {};

/**
 * @property code
 * @type Number
 * <p>Error code, if applicable. See {@link Titanium.Media} constants such as {@link Titanium.Media#property-DEVICE_BUSY DEVICE_BUSY}.</p>
 * @description <p>If the error was generated by the operating system, that system's error value
is used. Otherwise, this value will be -1.</p>
 */
PreviewImageError.code = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>May be undefined.</p>
 */
PreviewImageError.error = null;

/**
 * @property message
 * @type String
 * <p>Description of the error.</p>
 * @deprecated 3.1.0
 */
PreviewImageError.message = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * <p>Indicates if the operation succeeded. Returns <code>false</code>.</p>
 * @description <p>Returns <code>false</code>.</p>
 */
PreviewImageError.success = null;

/**
 * @class PreviewImageOptions
 * @typestr Object
 * @pseudo
 * @platform android 0.8
 * <p>Options passed to {@link Titanium.Media#method-previewImage}.</p>
 */
PreviewImageOptions = {};

/**
 * @property error
 * @type Callback<PreviewImageError>
 * <p>Function called back if the preview fails. Check the <code>message</code> property of passed back parameter.</p>
 */
PreviewImageOptions.error = null;

/**
 * @property image
 * @type Titanium.Blob
 * <p>The image to preview. Must be a blob based on a file, such as from {@link Titanium.Filesystem.File#method-read}.</p>
 */
PreviewImageOptions.image = null;

/**
 * @property success
 * @type Callback<Object>
 * <p>Function to be called back if the preview succeeds. No info is passed.</p>
 */
PreviewImageOptions.success = null;

/**
 * @class PumpCallbackArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends ErrorResponse
 * <p>Argument passed to the callback each time the 
{@link Titanium.Stream#method-pump pump} operation has new data to deliver.</p>
 * @description <p>A callback with <code>bytesProcessed</code> set to -1 indicates the end of the 
pump operation, either because of an error or because the end of the
stream has been reached.</p>
 */
PumpCallbackArgs = {};

/**
 * @property buffer
 * @type Titanium.Buffer
 * <p>Buffer object holding the data currently being pumped to the handler method.</p>
 */
PumpCallbackArgs.buffer = null;

/**
 * @property bytesProcessed
 * @type Number
 * <p>Number of bytes being passed to this invocation of the handler, or 
-1 in the event of an error or end of stream.</p>
 */
PumpCallbackArgs.bytesProcessed = null;

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
PumpCallbackArgs.code = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
PumpCallbackArgs.error = null;

/**
 * @property errorDescription
 * @type String
 * <p>Text description of the error.</p>
 * @deprecated 3.1.0
 */
PumpCallbackArgs.errorDescription = null;

/**
 * @property errorState
 * @type Number
 * @platform android 1.7
 * <p>Whether an error was encountered. Set to 1 in the case of an error, 0
otherwise.</p>
 * @deprecated 3.1.0
 */
PumpCallbackArgs.errorState = null;

/**
 * @property source
 * @type Titanium.IOStream
 * <p>Stream being read from.</p>
 */
PumpCallbackArgs.source = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
PumpCallbackArgs.success = null;

/**
 * @property totalBytesProcessed
 * @type Number
 * <p>Total number of bytes read from the stream so far, 
including the data passed to this current invocation of the handler.</p>
 */
PumpCallbackArgs.totalBytesProcessed = null;

/**
 * @class PushNotificationCallbackResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Push#method-connectService connectService} method.</p>
 */
PushNotificationCallbackResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
PushNotificationCallbackResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
PushNotificationCallbackResponse.error = null;

/**
 * @property message
 * @type Modules.Tizen.Push.PushMessage
 * <p>The received push notification message.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
PushNotificationCallbackResponse.message = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
PushNotificationCallbackResponse.success = null;

/**
 * @class PushNotificationConfig
 * @typestr Object
 * @pseudo
 * <p>Simple object for specifying push notification options to
{@link Titanium.Network#method-registerForPushNotifications registerForPushNotifications}.</p>
 */
PushNotificationConfig = {};

/**
 * @property callback
 * @type Callback<PushNotificationData>
 * <p>Callback function invoked upon receiving a new push notification.</p>
 */
PushNotificationConfig.callback = null;

/**
 * @property error
 * @type Callback<PushNotificationErrorArg>
 * <p>Callback function called when an error occurs during registration.</p>
 */
PushNotificationConfig.error = null;

/**
 * @property success
 * @type Callback<PushNotificationSuccessArg>
 * <p>Callback function called when the push registration is successfully completed.</p>
 */
PushNotificationConfig.success = null;

/**
 * @property types
 * @type Number[]
 * <p>Array of <code>NOTIFICATION_TYPE</code> constants that the application would like to receive.</p>
 */
PushNotificationConfig.types = null;

/**
 * @class PushNotificationData
 * @typestr Object
 * @pseudo
 * <p>A simple object representing a push notification.</p>
 */
PushNotificationData = {};

/**
 * @property data
 * @type Dictionary
 * <p>The <code>userinfo</code> dictionary passed to the Apple Push Notification Service.</p>
 * @description <p>For more information, see the following item in the iOS Developer Library:</p>
<p><a href="http://developer.apple.com/library/ios/#DOCUMENTATION/UIKit/Reference/UIApplicationDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/intfm/UIApplicationDelegate/application:didReceiveRemoteNotification:">application:didReceiveRemoteNotification in the UIApplicationDelegate Protocol
Reference</a></p>
 */
PushNotificationData.data = null;

/**
 * @property inBackground
 * @type Boolean
 * <p>Boolean indicating if notification was received while app was in background. 
This property became available in Titanium Mobile 3.1.0 for iOS.</p>
 */
PushNotificationData.inBackground = null;

/**
 * @class PushNotificationErrorArg
 * @typestr Object
 * @pseudo
 * @extends FailureResponse
 * <p>A simple object passed to the 
{@link Titanium.Network#method-registerForPushNotifications registerForPushNotifications} error callback.</p>
 */
PushNotificationErrorArg = {};

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns a non-zero value.</p>
 * @description <p>If the error was generated by the operating system, that system's error value
is used. Otherwise, this value will be -1.</p>
 */
PushNotificationErrorArg.code = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Indicates if the operation succeeded. Returns <code>false</code>.</p>
 * @description <p>Returns <code>false</code>.</p>
 */
PushNotificationErrorArg.success = null;

/**
 * @property type
 * @type String
 * <p>The value of this string is always "remote".</p>
 */
PushNotificationErrorArg.type = null;

/**
 * @class PushNotificationSuccessArg
 * @typestr Object
 * @pseudo
 * @extends SuccessResponse
 * <p>A simple object passed to the 
{@link Titanium.Network#method-registerForPushNotifications registerForPushNotifications} success callback.</p>
 */
PushNotificationSuccessArg = {};

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns 0.</p>
 * @description <p>Error code will be 0.</p>
 */
PushNotificationSuccessArg.code = null;

/**
 * @property deviceToken
 * @type String
 * <p>The device token which this device was registered for.</p>
 */
PushNotificationSuccessArg.deviceToken = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined.</p>
 */
PushNotificationSuccessArg.error = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Indicates if the operation succeeded. Returns <code>true</code>.</p>
 * @description <p>Returns <code>true</code>.</p>
 */
PushNotificationSuccessArg.success = null;

/**
 * @property type
 * @type String
 * <p>The value of this string is always "remote".</p>
 */
PushNotificationSuccessArg.type = null;

/**
 * @class PushRegisterSuccessCallbackResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Push#method-registerService registerService} method.</p>
 */
PushRegisterSuccessCallbackResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
PushRegisterSuccessCallbackResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
PushRegisterSuccessCallbackResponse.error = null;

/**
 * @property id
 * @type String
 * <p>The registration ID.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
PushRegisterSuccessCallbackResponse.id = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
PushRegisterSuccessCallbackResponse.success = null;

/**
 * @class ReadCallbackArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends ErrorResponse
 * <p>Argument passed to the read callback when an asynchronous {@link Titanium.Stream#method-read read} operation
finishes.</p>
 */
ReadCallbackArgs = {};

/**
 * @property bytesProcessed
 * @type Number
 * <p>Number of bytes processed, or -1 in the event of an error or end of stream.</p>
 */
ReadCallbackArgs.bytesProcessed = null;

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
ReadCallbackArgs.code = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
ReadCallbackArgs.error = null;

/**
 * @property errorDescription
 * @type String
 * <p>Text description of the error.</p>
 * @deprecated 3.1.0
 */
ReadCallbackArgs.errorDescription = null;

/**
 * @property errorState
 * @type Number
 * @platform android 1.7
 * <p>Whether an error was encountered. Set to 1 in the case of an error, 0
otherwise.</p>
 * @deprecated 3.1.0
 */
ReadCallbackArgs.errorState = null;

/**
 * @property source
 * @type Titanium.IOStream
 * <p>Stream being read.</p>
 */
ReadCallbackArgs.source = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
ReadCallbackArgs.success = null;

/**
 * @class RegisterRFCOMMServiceByUUIDResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Bluetooth.BluetoothAdapter#method-registerRFCOMMServiceByUUID registerRFCOMMServiceByUUID} method.</p>
 */
RegisterRFCOMMServiceByUUIDResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
RegisterRFCOMMServiceByUUIDResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
RegisterRFCOMMServiceByUUIDResponse.error = null;

/**
 * @property handler
 * @type Modules.Tizen.Bluetooth.BluetoothServiceHandler
 * <p>Bluetooth service handler.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
RegisterRFCOMMServiceByUUIDResponse.handler = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
RegisterRFCOMMServiceByUUIDResponse.success = null;

/**
 * @class RepresentationInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for 
{@link Modules.Tizen.Calendar#method-createCalendarEvent createCalendarEvent}.</p>
 */
RepresentationInit = {};

/**
 * @property format
 * @type String
 * <p>Indicates the type of textual format of a Calendar.</p>
 * @description <p>The value is one of the constants defined for this parameter :</p>
<ul>
<li>{@link Modules.Tizen.Calendar#property-CALENDAR_TEXT_FORMAT_ICALENDAR_20},</li>
<li>{@link Modules.Tizen.Calendar#property-CALENDAR_TEXT_FORMAT_VCALENDAR_10}.</li>
</ul>
 */
RepresentationInit.format = null;

/**
 * @property stringRepresentation
 * @type String
 * <p>Data in string format 'iCalendar 1.0' or 'iCalendar 2.0'</p>
 */
RepresentationInit.stringRepresentation = null;

/**
 * @class ReverseGeocodeResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the 
{@link Titanium.Geolocation#method-reverseGeocoder reverseGeocoder} method.</p>
 */
ReverseGeocodeResponse = {};

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
ReverseGeocodeResponse.code = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
ReverseGeocodeResponse.error = null;

/**
 * @property places
 * @type GeocodedAddress[]
 * <p>An array of reverse-geocoded addresses matching the requested location.</p>
 */
ReverseGeocodeResponse.places = null;

/**
 * @class RowData
 * @typestr Object
 * @pseudo
 * <p>The dictionary represents RowData holding 1 row of SQL selection results from another 
application.</p>
 */
RowData = {};

/**
 * @property columns
 * @type String[]
 * <p>Column names.</p>
 */
RowData.columns = null;

/**
 * @property values
 * @type String[]
 * <p>The row values.</p>
 */
RowData.values = null;

/**
 * @class ScreenshotResult
 * @typestr Object
 * @pseudo
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
 * @platform tizen 3.1
 * <p>The parameter passed to the {@link Titanium.Media#method-takeScreenshot} callback.</p>
 */
ScreenshotResult = {};

/**
 * @property media
 * @type Titanium.Blob
 * <p>The screenshot image.</p>
 */
ScreenshotResult.media = null;

/**
 * @class SendMessageResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.Messaging.MessageService#method-sendMessage sendMessage} method.</p>
 */
SendMessageResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
SendMessageResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
SendMessageResponse.error = null;

/**
 * @property recipients
 * @type String[]
 * <p>Recipients of the message.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
SendMessageResponse.recipients = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
SendMessageResponse.success = null;

/**
 * @class ServiceIntentOptions
 * @typestr Object
 * @pseudo
 * <p>Options passed to {@link Titanium.Android#method-createServiceIntent}.</p>
 */
ServiceIntentOptions = {};

/**
 * @property [startMode=Titanium.Android.START_REDELIVER_INTENT]
 * @type Number
 * <p>One of the <code>START_</code> constants from {@link Titanium.Android} to specify the "stickiness" of the Service when Android shuts down the host application.</p>
 */
ServiceIntentOptions.startMode = null;

/**
 * @property url
 * @type String
 * <p>URL for the service's JavaScript.</p>
 */
ServiceIntentOptions.url = null;

/**
 * @class SimpleCoordinatesInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen#method-createSimpleCoordinates createSimpleCoordinates}.</p>
 */
SimpleCoordinatesInit = {};

/**
 * @property latitude
 * @type Number
 * <p>Latitude, of the WGS84 datum.</p>
 */
SimpleCoordinatesInit.latitude = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude, of the WGS84 datum.</p>
 */
SimpleCoordinatesInit.longitude = null;

/**
 * @class SortModeInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen#method-createSortMode createSortMode}.</p>
 */
SortModeInit = {};

/**
 * @property attributeName
 * @type String
 * <p>The name of the object attribute used for sorting.</p>
 */
SortModeInit.attributeName = null;

/**
 * @property order
 * @type String
 * <p>(optional) The type of the sorting: </p>
<ul>
<li>{@link Modules.Tizen#property-SORT_ORDER_MODE_ASC}, </li>
<li>{@link Modules.Tizen#property-SORT_ORDER_MODE_DESC}.</li>
</ul>
 */
SortModeInit.order = null;

/**
 * @class StatusNotificationInit
 * @typestr Object
 * @pseudo
 * <p>Simple object that contains parameters for {@link Modules.Tizen.Notification#method-createStatusNotification createStatusNotification}.</p>
 */
StatusNotificationInit = {};

/**
 * @property notificationInitDict
 * @type StatusNotificationInitDict
 * <p>(optional) Dictionary.</p>
 */
StatusNotificationInit.notificationInitDict = null;

/**
 * @property statusType
 * @type String
 * <p>Notification type.</p>
 * @description <p>Supported values: {@link Modules.Tizen.Notification#property-STATUS_NOTIFICATION_TYPE_SIMPLE}, 
{@link Modules.Tizen.Notification#property-STATUS_NOTIFICATION_TYPE_ONGOING}, 
{@link Modules.Tizen.Notification#property-STATUS_NOTIFICATION_TYPE_PROGRESS}.</p>
 */
StatusNotificationInit.statusType = null;

/**
 * @property title
 * @type String
 * <p>Name of notification.</p>
 */
StatusNotificationInit.title = null;

/**
 * @class StatusNotificationInitDict
 * @typestr Object
 * @pseudo
 * <p>Simple object used in {@link StatusNotificationInit}.</p>
 */
StatusNotificationInitDict = {};

/**
 * @property appControl
 * @type Modules.Tizen.Apps.ApplicationControl
 * <p>Holds the application control to launch when the notification is selected from the 
notification tray.</p>
 */
StatusNotificationInitDict.appControl = null;

/**
 * @property appId
 * @type String
 * <p>Holds the application id to launch when the notification is selected from the notification 
tray.</p>
 */
StatusNotificationInitDict.appId = null;

/**
 * @property content
 * @type String
 * <p>The content of the status notification.</p>
 */
StatusNotificationInitDict.content = null;

/**
 * @property iconPath
 * @type String
 * <p>The path to the icon to display in the notification.</p>
 */
StatusNotificationInitDict.iconPath = null;

/**
 * @property progressValue
 * @type Number
 * <p>The initial progress value of the notification.</p>
 */
StatusNotificationInitDict.progressValue = null;

/**
 * @property soundPath
 * @type String
 * <p>The path of sound file to play when the notification is shown.</p>
 */
StatusNotificationInitDict.soundPath = null;

/**
 * @property vibration
 * @type Boolean
 * <p>Holds whether to use vibration when the notification is shown.</p>
 */
StatusNotificationInitDict.vibration = null;

/**
 * @class SuccessResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Properties used in any event or callback which needs to report a success.</p>
 */
SuccessResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0.</p>
 * @description <p>Error code will be 0.</p>
 */
SuccessResponse.code = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined.</p>
 */
SuccessResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded. Returns <code>true</code>.</p>
 * @description <p>Returns <code>true</code>.</p>
 */
SuccessResponse.success = null;

/**
 * @class SyncProgress
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.DataSynchronization#method-startSync startSync} method.</p>
<p>Only one property out of <code>progress</code>,
<code>completed</code>, and <code>stopped</code>, will be defined at any given time, provided <code>success</code> is true.</p>
 */
SyncProgress = {};

/**
 * @property completed
 * @type Boolean
 * <p>True if operation successfully completed; undefined otherwise.</p>
 */
SyncProgress.completed = null;

/**
 * @property profileId
 * @type Number
 * <p>The ID of the corresponding sync operation.</p>
 */
SyncProgress.profileId = null;

/**
 * @property progress
 * @type SyncProgressDict
 * <p>Simple object describing progress information.</p>
 */
SyncProgress.progress = null;

/**
 * @property stopped
 * @type Boolean
 * <p>True if operation was stopped; undefined otherwise.</p>
 */
SyncProgress.stopped = null;

/**
 * @class SyncProgressDict
 * @typestr Object
 * @pseudo
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.DataSynchronization#method-startSync startSync} method in the
<code>progress</code> field.</p>
 */
SyncProgressDict = {};

/**
 * @property isFromServer
 * @type Boolean
 * <p>The direction of the operation. If the direction of operation is from the server to the |
client, then value is <code>true</code>.</p>
 */
SyncProgressDict.isFromServer = null;

/**
 * @property serviceType
 * @type String
 * <p>The sync service category type.</p>
 */
SyncProgressDict.serviceType = null;

/**
 * @property syncedPerService
 * @type Number
 * <p>The number of synchronized records for the current sync service type aggregating all
operations.</p>
 */
SyncProgressDict.syncedPerService = null;

/**
 * @property totalPerService
 * @type Number
 * <p>The total number of records to synchronize for the current sync service type aggregating all
operations.</p>
 */
SyncProgressDict.totalPerService = null;

/**
 * @class SystemInfoOptions
 * @typestr Object
 * @pseudo
 * <p>A simple object containing the various options for fetching the properties requested.</p>
 */
SystemInfoOptions = {};

/**
 * @property highThreshold
 * @type Number
 * <p>Indicates that the successCallback is only be triggered if the property is a number and its 
value is greater than or equal to this number.</p>
 * @description <p>On the {@link Modules.Tizen.SystemInfo#method-addPropertyValueChangeListener addPropertyValueChangeListener} 
method, this attribute indicates that the 
<code>successCallback</code> is only be triggered 
if the property is a number and its value is greater than or equal to this number.</p>
 */
SystemInfoOptions.highThreshold = null;

/**
 * @property lowThreshold
 * @type Number
 * <p>Indicates that the successCallback is only be triggered if the property is a number and its 
value is lower than or equal to this number.</p>
 * @description <p>On the {@link Modules.Tizen.SystemInfo#method-addPropertyValueChangeListener addPropertyValueChangeListener} 
method, it indicates that the 
<code>successCallback</code> is only be triggered 
if the property is a number and its value is lower than or equal to this number. If both 
<code>highThreshold</code> and <code>lowThreshold</code> parameters are specified, 
the <code>successCallback</code> is triggered if and only if the property value is either lower than the 
value of <code>lowThreshold</code> or higher than the value of <code>highThreshold</code>.</p>
 */
SystemInfoOptions.lowThreshold = null;

/**
 * @property timeout
 * @type Number
 * <p>The number of milliseconds beyond which the operation must be interrupted.</p>
 */
SystemInfoOptions.timeout = null;

/**
 * @class SystemInfoResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.SystemInfo#method-getPropertyValue getPropertyValue} method.</p>
 */
SystemInfoResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
SystemInfoResponse.code = null;

/**
 * @property data
 * @type Object
 * <p>The value of the requested property.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
<p>The contents of this field will differ based on the system info property requested. The 
following objects may be returned:</p>
<pre><code>* {@link Modules.Tizen.SystemInfo.SystemInfoBattery}
* {@link Modules.Tizen.SystemInfo.SystemInfoBuild}
* {@link Modules.Tizen.SystemInfo.SystemInfoCellularNetwork}
* {@link Modules.Tizen.SystemInfo.SystemInfoCpu}
* {@link Modules.Tizen.SystemInfo.SystemInfoDeviceCapability}
* {@link Modules.Tizen.SystemInfo.SystemInfoDeviceOrientation}
* {@link Modules.Tizen.SystemInfo.SystemInfoDisplay}
* {@link Modules.Tizen.SystemInfo.SystemInfoNetwork}
* {@link Modules.Tizen.SystemInfo.SystemInfoProperty}
* {@link Modules.Tizen.SystemInfo.SystemInfoSim}
* {@link Modules.Tizen.SystemInfo.SystemInfoStorage}
    * {@link Modules.Tizen.SystemInfo.SystemInfoStorageUnit}
* {@link Modules.Tizen.SystemInfo.SystemInfoWifiNetwork}
</code></pre>
 */
SystemInfoResponse.data = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
SystemInfoResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
SystemInfoResponse.success = null;

/**
 * @class SystemSettingResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.SystemSetting#method-getProperty getProperty} method.</p>
 */
SystemSettingResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
SystemSettingResponse.code = null;

/**
 * @property data
 * @type String
 * <p>The value of the requested property.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
SystemSettingResponse.data = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
SystemSettingResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
SystemSettingResponse.success = null;

/**
 * @class TableViewAnimationProperties
 * @typestr Object
 * @pseudo
 * <p>A simple object for specifying the animation properties to use when inserting or deleting rows, or scrolling the table.</p>
 * @description <p>These properties are only used on iOS. Not all properties apply to all methods.</p>
<p><code>animationStyle</code> does not apply to the <code>scrollToTop</code> or <code>scrollToIndex</code> methods.</p>
<p><code>positon</code> only applies to the <code>scrollToIndex</code> method.</p>
 */
TableViewAnimationProperties = {};

/**
 * @property [animated=true]
 * @type Boolean
 * <p>Whether this table change should be animated. Ignored if any <code>animationStyle</code> value is specified.</p>
 */
TableViewAnimationProperties.animated = null;

/**
 * @property [animationStyle=If <code>animated</code> is <code>true</code> but no <code>animationStyle</code> is specified, the style defaults to 
{@link Titanium.UI.iPhone.RowAnimationStyle#property-FADE FADE}.]
 * @type Number
 * <p>Type of animation to use for row insertions and deletions. One of the animation style constants defined in {@link Titanium.UI.iPhone.RowAnimationStyle}.</p>
 */
TableViewAnimationProperties.animationStyle = null;

/**
 * @property [position={@link Titanium.UI.iPhone.TableViewScrollPosition#property-NONE}]
 * @type Number
 * <p>Specifies what position to scroll the selected row to. One of the position constants from 
{@link Titanium.UI.iPhone.TableViewScrollPosition}.</p>
 */
TableViewAnimationProperties.position = null;

/**
 * @class TableViewContentInsetOption
 * @typestr Object
 * @pseudo
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Optional parameter for {@link Titanium.UI.TableView#method-setContentInsets setContentInsets} method.</p>
 * @description <p>On iOS, the optional parameters <code>animated</code> and <code>duration</code>to enable the animation and duration 
for animation while the content insets are updated. For example</p>
<pre><code>setContentInset({top:50,bottom:100}, {animated:true, duration:3000})
</code></pre>
 */
TableViewContentInsetOption = {};

/**
 * @property [animated=false]
 * @type Boolean
 * <p>Determines whether the table view's content inset change is animated.</p>
 */
TableViewContentInsetOption.animated = null;

/**
 * @property duration
 * @type Number
 * <p>The duration in <code>milleseconds</code> for animation while the content inset is  being changed.</p>
 */
TableViewContentInsetOption.duration = null;

/**
 * @class TableViewEdgeInsets
 * @typestr Object
 * @pseudo
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>The parameter for {@link Titanium.UI.TableView#method-setContentInsets setContentInsets} method.</p>
 * @description <p>On iOS, the parameter <code>edgeInsets</code> can be specified to set the distance(<code>top</code>, <code>bottom</code>,
<code>right</code>, <code>left</code>) that the content view is inset from the enclosing scroll view of the table.
For example</p>
<pre><code>setContentInset({top:50,bottom:10,right:10,left:10}, {animated:true})
</code></pre>
 */
TableViewEdgeInsets = {};

/**
 * @property bottom
 * @type Number
 * <p>Value specifying the bottom insets for the enclosing scroll view of the table.</p>
 */
TableViewEdgeInsets.bottom = null;

/**
 * @property left
 * @type Number
 * <p>Value specifying the left insets for the enclosing scroll view of the table.</p>
 */
TableViewEdgeInsets.left = null;

/**
 * @property right
 * @type Number
 * <p>Value specifying the right insets for the enclosing scroll view of the table.</p>
 */
TableViewEdgeInsets.right = null;

/**
 * @property top
 * @type Number
 * <p>Value specifying the top insets for the enclosing scroll view of the table.</p>
 */
TableViewEdgeInsets.top = null;

/**
 * @class TableViewIndexEntry
 * @typestr Object
 * @pseudo
 * <p>A simple object that represents an index entry in a <code>TableView</code>.</p>
 */
TableViewIndexEntry = {};

/**
 * @property index
 * @type Number
 * <p>Row index associated with this item.</p>
 */
TableViewIndexEntry.index = null;

/**
 * @property title
 * @type String
 * <p>Title to display in the index bar for this item.</p>
 */
TableViewIndexEntry.title = null;

/**
 * @class ThumbnailResponse
 * @typestr Object
 * @pseudo
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends ErrorResponse
 * <p>Simple object passed to the thumbnail callback in response to the
{@link Titanium.Media.VideoPlayer#method-requestThumbnailImagesAtTimes requestThumbnailImagesAtTimes}
method.</p>
 * @description <p>The callback is invoked when a movie thumbnail is available.</p>
 */
ThumbnailResponse = {};

/**
 * @property code
 * @type Number
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
ThumbnailResponse.code = null;

/**
 * @property image
 * @type Titanium.Blob
 * <p>Thumbnail image, as a <code>Blob</code>.</p>
 */
ThumbnailResponse.image = null;

/**
 * @property time
 * @type Number
 * <p>Time offset for the thumbnail, in seconds.</p>
 */
ThumbnailResponse.time = null;

/**
 * @class Titanium
 * @typestr Module
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top-level Titanium module.</p>
 * @description <p>The Titanium module provides the Titanium Mobile API, allowing developers to access native 
features of each target environment. Currently, the Android, iOS and Mobile Web (beta) 
environments are supported.</p>
<h4>Titanium Namespace</h4>
<p>The complete Titanium API is accessible from the <code>Titanium</code> namespace but, for convenience and 
brevity, the alias <code>Ti</code> is also provided. As the <code>Titanium</code> namespace is functionally-identical 
to its <code>Ti</code> alias, it is always recommended to use <code>Ti</code> in your code.</p>
<p>For example, the following pairs of Titanium calls behave exactly the same.</p>
<pre><code>Titanium.API.info('Hello Titanium!');
Ti.API.info('Hello Titanium!');

Titanium.Utils.sha256('Hello Titanium!');
Ti.Utils.sha256('Hello Titanium!');

Titanium.App.Properties.setString('hello_msg','Hello Titanium!');
Ti.App.Properties.setString('hello_msg','Hello Titanium!');

Titanium.Database.open('mydb');
Ti.Database.open('mydb');
</code></pre>
<h4>Global APIs</h4>
<p>Titanium includes a number of built-in JavaScript objects that are not part of the Titanium 
namespace, including JSON parsing, String formatting, timers, and the CommonJS <code>require</code> function. 
See {@link Global Global APIs} for details.</p>
 */
Titanium = {};

/**
 * @class Titanium.API
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top-level API module, containing methods to output messages to the system log.</p>
 */
Titanium.API = {};

/**
 * @method debug
 * <p>Logs messages with a <code>debug</code> severity-level.</p>
 * @param {String[]/String} message 
 * <p>Message to log. Accepts an array on iOS only.</p>
 * @return void
*/
Titanium.API.debug = function(message){};

/**
 * @method error
 * <p>Logs messages with an <code>error</code> severity-level.</p>
 * @param {String[]/String} message 
 * <p>Message to log. Accepts an array on iOS only.</p>
 * @return void
*/
Titanium.API.error = function(message){};

/**
 * @method info
 * <p>Logs messages with an <code>info</code> severity-level.</p>
 * @param {String[]/String} message 
 * <p>Message to log. Accepts an array on iOS only.</p>
 * @return void
*/
Titanium.API.info = function(message){};

/**
 * @method log
 * <p>Logs messages with the specified severity-level.</p>
 * @param {String} level 
 * <p>Log level. One of <code>info</code>, <code>warn</code>, <code>error</code>, <code>debug</code> and <code>trace</code>. If the value is not 
recognized, an info-level message prefixed with the value is logged.</p>
 * @param {String[]/String} message 
 * <p>Message to log. Accepts an array on iOS only.</p>
 * @return void
*/
Titanium.API.log = function(level, message){};

/**
 * @method timestamp
 * <p>Logs messages with a <code>timestamp</code> severity-level, prefixed with a timestamp float number 
representing the number of seconds since January 1st, 2001.</p>
 * @param {String[]/String} message 
 * <p>Message to log. Accepts an array on iOS only.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.API.timestamp = function(message){};

/**
 * @method trace
 * <p>Logs messages with a <code>trace</code> severity-level.</p>
 * @param {String[]/String} message 
 * <p>Message to log. Accepts an array on iOS only.</p>
 * @return void
*/
Titanium.API.trace = function(message){};

/**
 * @method warn
 * <p>Logs messages with a <code>warn</code> severity-level.</p>
 * @param {String[]/String} message 
 * <p>Message to log. Accepts an array on iOS only.</p>
 * @return void
*/
Titanium.API.warn = function(message){};

/**
 * @class Titanium.Accelerometer
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top-level Accelerometer module, used to determine the device's physical position.</p>
 * @description <p>An accelerometer is a hardware unit integrated into a mobile device, that detects when the 
device has moved, and returns its new orientation in a three-dimensional space. With its 
single <code>update</code> event, this module provides an interface to access the output positional data.</p>
<p>An accelerometer needs to be switched on in order for it to report to the operating system, 
which consumes a lot of power that will deplete the battery over time. This is why it is 
recommended that the accelerometer is switched off when not in use.</p>
<p>The accelerometer may be switched on and off by simply adding and removing the <code>update</code> 
event listener function. See the example for a demonstration.</p>
 * <h3>Example</h3>
 * <h4>Basic Accelerometer Event</h4>
 * <p><p>Adds an accelerometer update event listener, and displays the x, y and z axis in the 
window when the device is moved. On Android, the accelerometer is switched off and on when 
the application is paused and resumed.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white',
  exitOnClose:true,
  layout: 'vertical'
});

opts = {
  color:'black',
  font:{fontSize:20},
  text:'-',
  top:20, left:10,
  width:300
};
var labelTimestamp = Ti.UI.createLabel(opts);
win.add(labelTimestamp);
var labelx = Ti.UI.createLabel(opts);
win.add(labelx);
var labely = Ti.UI.createLabel(opts);
win.add(labely);
var labelz = Ti.UI.createLabel(opts);
win.add(labelz);
win.open();

var accelerometerCallback = function(e) {
  labelTimestamp.text = 'timestamp: ' + e.timestamp;
  labelx.text = 'x: ' + e.x;
  labely.text = 'y: ' + e.y;
  labelz.text = 'z: ' + e.z;
};

if (Ti.Platform.model === 'Simulator' || Ti.Platform.model.indexOf('sdk') !== -1 ){
  alert('Accelerometer does not work on a virtual device');
} else {
  Ti.Accelerometer.addEventListener('update', accelerometerCallback);
  if (Ti.Platform.name === 'android'){
    Ti.Android.currentActivity.addEventListener('pause', function(e) {
      Ti.API.info("removing accelerometer callback on pause");
      Ti.Accelerometer.removeEventListener('update', accelerometerCallback);
    });
    Ti.Android.currentActivity.addEventListener('resume', function(e) {
      Ti.API.info("adding accelerometer callback on resume");
      Ti.Accelerometer.addEventListener('update', accelerometerCallback);
    });
  }
}</pre>
 */
Titanium.Accelerometer = {};


/**
 * @class Titanium.Analytics
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>Used for transmitting developer-defined Analytics events to the Appcelerator Analytics product. </p>
 * @description <p>The analytics module can be used to supply additional context or application-specific 
information which can then be accessed during analysis using Analytics.</p>
<p>Use the {@link Titanium.Analytics#method-featureEvent featureEvent} method to generate custom
events that you can view through the Analytics product. You can specify a name for 
the feature event which is visible through Analytics.</p>
<p><strong>NOTE</strong> The analytics module lets you transmit some data that is stored, but 
not made accessible through the Analytics UI. To access this data, you must
sign up for the optional raw data export service. </p>
<p><em>The following types of data are stored but not made available through the Analytics UI:</em></p>
<ul>
<li>
<p>Navigation events.</p>
</li>
<li>
<p>Extra data added to feature events (the <code>data</code> parameter).</p>
</li>
</ul>
<p>Viewing navigation events in the Analytics UI will be supported in a future version 
of the Analytics product. There is no plan to support the other event types, and they 
should not be used.</p>
<p>See also <a href="#!/guide/Ti_Analytics">Ti
Analytics</a>
in the Titanium Mobile Guides.</p>
 * <h3>Example</h3>
 * <h4>Custom Feature Event</h4>
 * <p><p>This example shows how to send a feature event during an application session to indicate 
some feature that you would like to track was used.</p></p><pre>Titanium.Analytics.featureEvent('app.feature.blah');
</pre>
 * <p><p>In this case, the Analytics product would show statistics about how many times the
'app.feature.blah' event was generated. </p></p>
 */
Titanium.Analytics = {};

/**
 * @method addEvent
 * <p>Sends a generic event for this application session.
<strong>Not displayed in Analytics UI</strong>.</p>
 * @deprecated 2.0.0
 * @param {String} type 
 * <p>Event type.</p>
 * @param {String} name 
 * <p>Event name.</p>
 * @param {Object} [data=None] (optional)
 * <p>Extra data related to the event. Must be serializable as JSON.</p>
 * @return void
*/
Titanium.Analytics.addEvent = function(type, name, arg){};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Analytics.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Titanium.Analytics.applyProperties = function(){};

/**
 * @method featureEvent
 * <p>Sends a feature event for this application session.</p>
 * @param {String} name 
 * <p>Event name, displayed in Analytics UI.</p>
 * @param {Object} [data=None] (optional)
 * <p>Extra data related to the event, <strong>not displayed in Analytics UI</strong>. 
The object must be serializable as JSON.</p>
 * @return void
*/
Titanium.Analytics.featureEvent = function(name, arg){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Analytics.fireEvent = function(){};

/**
 * @method navEvent
 * <p>Sends a navigation event for this application session. 
<strong>Not displayed in Analytics UI</strong>.</p>
 * @param {String} from 
 * <p>String describing the location the user navigated from.</p>
 * @param {String} to 
 * <p>String describing the location the user navigated to.</p>
 * @param {String} [name=] (optional)
 * <p>Event name.</p>
 * @param {Object} [data=None] (optional)
 * <p>Extra data related to the event. The object must be serializable as JSON.</p>
 * @return void
*/
Titanium.Analytics.navEvent = function(from, to, arg, arg){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Analytics.removeEventListener = function(){};

/**
 * @method settingsEvent
 * <p>Sends a settings event for this application session.
<strong>Not displayed in Analytics UI</strong>.</p>
 * @deprecated 2.0.0
 * @param {String} name 
 * <p>Event name.</p>
 * @param {Object} [data=None] (optional)
 * <p>Extra data related to the event. Must be serializable as JSON.</p>
 * @return void
*/
Titanium.Analytics.settingsEvent = function(name, arg){};

/**
 * @method timedEvent
 * <p>Send a timed event for this application session.
<strong>Not displayed in Analytics UI</strong>.</p>
 * @deprecated 2.0.0
 * @param {String} name 
 * <p>Event name.</p>
 * @param {Date} start 
 * <p>Event start as a Date object.</p>
 * @param {Date} stop 
 * <p>Event end as a Date object.</p>
 * @param {Number} duration 
 * <p>Event duration.</p>
 * @param {Object} [data=None] (optional)
 * <p>Extra data related to the event. Must be serializable as JSON.</p>
 * @return void
*/
Titanium.Analytics.timedEvent = function(name, start, stop, duration, arg){};

/**
 * @method userEvent
 * <p>Sends a user event for this application session. <strong>Not displayed in Analytics UI</strong>.</p>
 * @deprecated 2.0.0
 * @param {String} name 
 * <p>Event name.</p>
 * @param {Object} [data=None] (optional)
 * <p>Extra data related to the event. Must be serializable as JSON.</p>
 * @return void
*/
Titanium.Analytics.userEvent = function(name, arg){};

/**
 * @class Titanium.Android
 * @typestr Submodule of Titanium
 * @platform android 1.5
 * @extends Titanium.Module
 * <p>The top level Android module.</p>
 * @description <p>The {@link Titanium.Android#property-currentActivity currentActivity} property provides a reference to the
context's current {@link Titanium.Android.Activity Activity}. Activity objects cannot be 
created directly, although a new activity can be started from an existing activity
using {@link Titanium.Android.Activity#method-startActivity Activity.startActivity} or 
{@link Titanium.Android.Activity#method-startActivityForResult Activity.startActivityForResult}.</p>
<p>Almost all of the constants defined in this module correspond directly to Android
constants, and are documented in the official Android documentation. In particular, 
the <code>ACTION_</code>, <code>EXTRA_</code> and <code>CATEGORY_</code> constants are defined in the 
<a href="http://developer.android.com/reference/android/content/Intent.html">Intent Class Reference</a>, </p>
<p>See also:</p>
<ul>
<li><a href="http://developer.android.com/guide/topics/intents/intents-filters.html">Intents and Intent Filters in the Android Developer's Guide</a></li>
</ul>
 */
Titanium.Android = {};

/**
 * @class Titanium.Android.ActionBar
 * @typestr Object of Titanium.Android
 * @platform android 3.0
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an Android Action Bar.</p>
 * @description <p>According to the Android API Reference, an action bar is a window feature that identifies
the application and user location, and provides user actions and navigation modes.  This
feature is only available in Android 3.0 (API level 11) and above.</p>
<p>To access the action bar, you must first open a heavyweight window or tab group that
uses one of the action bar themes (such as the Android Holo theme). You can then
access the action bar from the window or tab group's {@link Titanium.Android.Activity activity}. </p>
<p>You can add action items to the action bar by defining an Android menu and setting the
menu items to display as action items. See {@link Titanium.Android.Menu Menu} and
{@link Titanium.Android.MenuItem MenuItem} for details.</p>
<p>See: <a href="http://developer.android.com/guide/topics/ui/actionbar.html">Action Bar</a>
in the Android API Reference.</p>
 * <h3>Example</h3>
 * <h4>Action Bar Example</h4>
 * <p><p>The following example sets several properties on a window's action bar.</p></p><pre>var win = Ti.UI.createWindow({
    title: "Old Title",
    navBarHidden: false
});
var actionBar;

win.addEventListener("open", function() {
    if (Ti.Platform.osname === "android") {
        if (! win.activity) {
            Ti.API.error("Can't access action bar on a lightweight window.");
        } else {
            actionBar = win.activity.actionBar;
            if (actionBar) {
                actionBar.backgroundImage = "/bg.png";
                actionBar.title = "New Title";
                actionBar.onHomeIconItemSelected = function() {
                    Ti.API.info("Home icon clicked!");
                };
            }
        }
    }
});

win.open();
</pre>
 * <p><p>Nearly identical code can be used for a tab group, but in Release 3.0, the tab group's
activity must be accessed using the {@link Titanium.UI.TabGroup#method-getActivity getActivity} method.</p></p>
 */
Titanium.Android.ActionBar = {};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.Android.ActionBar#property-title title} property.</p>
 * @return {String} 
*/
Titanium.Android.ActionBar.getTitle = function(){};

/**
 * @method hide
 * <p>Hides the action bar if it is currently showing.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/app/ActionBar.html#hide()">hide</a>
in the Android API Reference.</p>
 * @return void
*/
Titanium.Android.ActionBar.hide = function(){};

/**
 * @method setBackgroundImage
 * <p>Sets the value of the {@link Titanium.Android.ActionBar#property-backgroundImage backgroundImage} property.</p>
 * @param {String} backgroundImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.ActionBar.setBackgroundImage = function(backgroundImage){};

/**
 * @method setDisplayHomeAsUp
 * <p>Sets the value of the {@link Titanium.Android.ActionBar#property-displayHomeAsUp displayHomeAsUp} property.</p>
 * @param {Boolean} displayHomeAsUp 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.ActionBar.setDisplayHomeAsUp = function(displayHomeAsUp){};

/**
 * @method setIcon
 * <p>Sets the value of the {@link Titanium.Android.ActionBar#property-icon icon} property.</p>
 * @param {String} icon 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.ActionBar.setIcon = function(icon){};

/**
 * @method setLogo
 * <p>Sets the value of the {@link Titanium.Android.ActionBar#property-logo logo} property.</p>
 * @param {String} logo 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.ActionBar.setLogo = function(logo){};

/**
 * @method setOnHomeIconItemSelected
 * <p>Sets the value of the {@link Titanium.Android.ActionBar#property-onHomeIconItemSelected onHomeIconItemSelected} property.</p>
 * @param {Function} onHomeIconItemSelected 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.ActionBar.setOnHomeIconItemSelected = function(onHomeIconItemSelected){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.Android.ActionBar#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.ActionBar.setTitle = function(title){};

/**
 * @method show
 * <p>Shows the action bar if it is currently hidden.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/app/ActionBar.html#show()">show</a>
in the Android API Reference.</p>
 * @return void
*/
Titanium.Android.ActionBar.show = function(){};

/**
 * @property backgroundImage
 * @type String
 * <p>The background image for the action bar, specified as a local file path or URL.</p>
 */
Titanium.Android.ActionBar.backgroundImage = null;

/**
 * @property displayHomeAsUp
 * @type Boolean
 * <p>Displays an "up" affordance on the "home" area of the action bar.</p>
 * @description <p>See also: <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayHomeAsUpEnabled(boolean)">setDisplayHomeAsUpEnabled</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.ActionBar.displayHomeAsUp = null;

/**
 * @property icon
 * @type String
 * <p>Sets the application icon displayed in the "home" area of the action bar, specified as a local file path or URL.</p>
 * @description <p>This method is only available on Android 4.0 (API 14) and above. See also:
<a href="http://developer.android.com/reference/android/app/ActionBar.html#setIcon(android.graphics.drawable.Drawable)">setIcon</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.ActionBar.icon = null;

/**
 * @property logo
 * @type String
 * <p>Sets the application logo displayed in the "home" area of the action bar, specified as a local file path or URL.</p>
 * @description <p>This method is only available on Android 4.0 (API 14) and above. See also:
<a href="http://developer.android.com/reference/android/app/ActionBar.html#setLogo(android.graphics.drawable.Drawable)">setLogo</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.ActionBar.logo = null;

/**
 * @property onHomeIconItemSelected
 * @type Function
 * <p>Callback function called when the home icon is clicked.</p>
 */
Titanium.Android.ActionBar.onHomeIconItemSelected = null;

/**
 * @property title
 * @type String
 * <p>Sets the title of the action bar.</p>
 */
Titanium.Android.ActionBar.title = null;

/**
 * @class Titanium.Android.Activity
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an Android Activity.</p>
 * @description <p>According to the Android API Reference, an activity is "a single, focused thing that a
user can do."</p>
<p>In almost all cases, an activity is associated with a window.  Activities are central
to the Android <strong>Back</strong> button navigation -- the <strong>Back</strong> button closes the current
activity and returns to whatever activity was open previously.</p>
<p>In Titanium, you can create either "lightweight" or a "heavyweight" windows, as
described on the {@link Titanium.UI.Window} reference page. A <em>heavyweight</em> window creates a 
new <code>Activity</code>. A <em>lightweight</em> window runs inside the same activity as the code that
created it. </p>
<p>The activity is not created until the window is opened. When a window is created,
its <code>activity</code> property refers to an empty JavaScript object.
You can use it, for example, to add an options menu by setting <code>onCreateOptionsMenu</code>.
After the window is opened, a real Activity object is created and the properties from
the JavaScript object are copied over.
The <code>activity</code> property now refers to this real Activity object,
which you can use to call the various Activity methods. For example, to use the
<code>invalidateOptionsMenu</code> method, you need to get the activity proxy after the window is opened.</p>
<p>See: <a href="http://developer.android.com/reference/android/app/Activity.html">android.app.Activity</a>
in the Android API Reference.</p>
<h4>Activity Lifecycle</h4>
<p>In Android, activities are started, stopped, paused and resumed. Titanium generates
lifecycle events for activities, but doesn't generate application-level start, stop, 
pause and resume events. To be notified when
an application is paused and resumed, you must add event listeners to its individual
activities.</p>
 * <h3>Example</h3>
 * <h4>Callback Example</h4>
 * <p><p>The following example shows how to start an activity and retrieve a result code
and optional data intent when the activity ends.</p></p><pre>activity.startActivityForResult(intent, function(e) {
    // The request code used to start this Activity
    var requestCode = e.requestCode;
    // The result code returned from the activity 
    // (http://developer.android.com/reference/android/app/Activity.html#StartingActivities)
    var resultCode = e.resultCode;
    // A Titanium.Android.Intent filled with data returned from the Activity
    var intent = e.intent;
    // The Activity the received the result
    var source = e.source;
});</pre>
 */
Titanium.Android.Activity = {};









/**
 * @method finish
 * <p>Closes this activity.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/app/Activity.html#finish()">finish</a>
in the Android API Reference.</p>
 * @return void
*/
Titanium.Android.Activity.finish = function(){};

/**
 * @method getActionBar
 * <p>Gets the value of the {@link Titanium.Android.Activity#property-actionBar actionBar} property.</p>
 * @return {Titanium.Android.ActionBar} 
*/
Titanium.Android.Activity.getActionBar = function(){};

/**
 * @method getIntent
 * <p>Gets the value of the {@link Titanium.Android.Activity#property-intent intent} property.</p>
 * @return {Titanium.Android.Intent} 
*/
Titanium.Android.Activity.getIntent = function(){};

/**
 * @method getOnCreateOptionsMenu
 * <p>Gets the value of the {@link Titanium.Android.Activity#property-onCreateOptionsMenu onCreateOptionsMenu} property.</p>
 * @return {Callback<Object>} 
*/
Titanium.Android.Activity.getOnCreateOptionsMenu = function(){};

/**
 * @method getOnPrepareOptionsMenu
 * <p>Gets the value of the {@link Titanium.Android.Activity#property-onPrepareOptionsMenu onPrepareOptionsMenu} property.</p>
 * @return {Callback<Object>} 
*/
Titanium.Android.Activity.getOnPrepareOptionsMenu = function(){};

/**
 * @method getString
 * <p>Gets an Android or Application string using the specified Resource ID and optional format arguments.</p>
 * @description <p>If the optional format arguments are supplied, these are substituted for the
corresponding format specifiers in the string. For example, given the following
string resource:</p>
<pre><code>&lt;string name="greeting"&gt;"Hello %1$s, this is %2$s."&lt;/string&gt;
</code></pre>
<p>You could call <code>getString</code> like this:</p>
<pre><code>Ti.Android.currentActivity.getString(Ti.App.Android.R.string.greeting,  "Bob", "Doug" );
</code></pre>
<p>The resulting string is:</p>
<pre><code>"Hello Bob, this is Doug."
</code></pre>
<p>See also:
<em>   <a href="http://developer.android.com/reference/android/content/Context.html#getString(int)">getString</a>
    in the Android Developer Reference
</em>   <a href="http://developer.android.com/reference/java/util/Formatter.html">Formatter</a>
    in the Android Developer Reference
*   <a href="http://developer.android.com/guide/topics/resources/string-resource.html#String">String Resources</a>
    in the Android Developer Guide</p>
 * @param {Number} resourceId 
 * <p>Resource ID from the Application or Android.</p>
 * @param {Object} format 
 * <p>Optional format arguments for the String resource. May be repeated.</p>
 * @return {String} 
*/
Titanium.Android.Activity.getString = function(resourceId, format){};

/**
 * @method invalidateOptionsMenu
 * <p>Declares that the option menu has changed and should be recreated.</p>
 * @description <p>This method needs to be used in Android 3.0 and above when changing menus at runtime.  See
<a href="http://developer.android.com/guide/topics/ui/menus.html#ChangingTheMenu">changingTheMenu</a> in 
the Android API Reference for more details. </p>
 * @return void
 * @platform android 3.0
*/
Titanium.Android.Activity.invalidateOptionsMenu = function(){};

/**
 * @method openOptionsMenu
 * <p>Programmatically opens the options menu.</p>
 * @description <p>See also: <a href="http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int,%20android.view.Menu)">onMenuOpened</a>
in the Android API Reference.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.Android.Activity.openOptionsMenu = function(){};

/**
 * @method setOnCreateOptionsMenu
 * <p>Sets the value of the {@link Titanium.Android.Activity#property-onCreateOptionsMenu onCreateOptionsMenu} property.</p>
 * @param {Function} onCreateOptionsMenu 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Activity.setOnCreateOptionsMenu = function(onCreateOptionsMenu){};

/**
 * @method setOnPrepareOptionsMenu
 * <p>Sets the value of the {@link Titanium.Android.Activity#property-onPrepareOptionsMenu onPrepareOptionsMenu} property.</p>
 * @param {Function} onPrepareOptionsMenu 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Activity.setOnPrepareOptionsMenu = function(onPrepareOptionsMenu){};

/**
 * @method setRequestedOrientation
 * <p>Sets the requested Activity orientation.</p>
 * @description <p>See also:
<a href="http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)">setRequestedOrientation</a>
in the Android API Reference.</p>
 * @param {Number} orientation 
 * <p>Can be one of {@link Titanium.Android#property-SCREEN_ORIENTATION_BEHIND},
{@link Titanium.Android#property-SCREEN_ORIENTATION_LANDSCAPE},
{@link Titanium.Android#property-SCREEN_ORIENTATION_NOSENSOR},
{@link Titanium.Android#property-SCREEN_ORIENTATION_PORTRAIT},
{@link Titanium.Android#property-SCREEN_ORIENTATION_SENSOR},
{@link Titanium.Android#property-SCREEN_ORIENTATION_UNSPECIFIED},
{@link Titanium.Android#property-SCREEN_ORIENTATION_USER}.</p>
 * @return void
*/
Titanium.Android.Activity.setRequestedOrientation = function(orientation){};

/**
 * @method setResult
 * <p>Sets the result of this activity using an <code>Intent</code>.</p>
 * @description <p>This should be used in the case when the Activity responds to
{@link Titanium.Android.Activity#method-startActivityForResult startActivityForResult}. </p>
<p>Also see Android's documentation for
<a href="http://developer.android.com/reference/android/app/Activity.html#setResult(int)">setResult</a>.</p>
 * @param {Number} resultCode 
 * <p>Result code for this activity. Can be {@link Titanium.Android#property-RESULT_OK}, 
{@link Titanium.Android#property-RESULT_CANCELED}, or {@link Titanium.Android#property-RESULT_FIRST_USER}.</p>
 * @param {Titanium.Android.Intent} intent (optional)
 * <p>An optional <code>Intent</code> with extra result data.</p>
 * @return void
*/
Titanium.Android.Activity.setResult = function(resultCode, intent){};

/**
 * @method startActivity
 * <p>Starts a new activity, using the passed in <code>Intent</code> as the description.</p>
 * @description <p>See also: <a href="http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)">startActivity</a>
    in the Android Developer Reference.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>Description of the activity to start.</p>
 * @return void
*/
Titanium.Android.Activity.startActivity = function(intent){};

/**
 * @method startActivityForResult
 * <p>The same as <code>startActivity</code>, but also accepts a callback function for handling the result of the started Activity.</p>
 * @description <p>See also: 
<a href="http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent,%20int)">startActivityForResult</a> 
in the Android Developer Reference.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>Description of the activity to start.</p>
 * @param {Function} callback 
 * <p>Callback function to be executed when the activity sets result. See
examples.</p>
 * @return void
*/
Titanium.Android.Activity.startActivityForResult = function(intent, callback){};

/**
 * @property actionBar
 * @type Titanium.Android.ActionBar
 * @readonly
 * <p>The action bar for this activity.</p>
 * @description <p>See also: <a href="http://developer.android.com/guide/topics/ui/actionbar.html">Action Bar</a> in
the Android Developer Reference.</p>
 */
Titanium.Android.Activity.actionBar = null;

/**
 * @property intent
 * @type Titanium.Android.Intent
 * @readonly
 * <p>The <code>Intent</code> that was used to start this Activity.</p>
 */
Titanium.Android.Activity.intent = null;

/**
 * @property onCreateOptionsMenu
 * @type Callback<Object>
 * <p>Callback function called to initially create an Android options menu
for this Activity when the user presses the <strong>Menu</strong> button.</p>
 * @description <p>See the menu examples in {@link Titanium.Android.Menu}.</p>
<p>See also: 
<a href="http://developer.android.com/guide/topics/ui/menus.html#options-menu">Creating an Options Menu</a> 
in the Android Developer's Guide.</p>
 */
Titanium.Android.Activity.onCreateOptionsMenu = null;

/**
 * @property onPrepareOptionsMenu
 * @type Callback<Object>
 * <p>Callback function called to prepare an options menu for display when the user presses
the <strong>Menu</strong> button. </p>
 * @description <p>See the menu examples in {@link Titanium.Android.Menu}.</p>
<p>See also: 
<a href="http://developer.android.com/guide/topics/ui/menus.html#options-menu">Creating an Options Menu</a> 
in the Android Developer's Guide.</p>
 */
Titanium.Android.Activity.onPrepareOptionsMenu = null;

/**
 * @property requestedOrientation
 * @type Number
 * <p>Specifies a specific orientation for this activity.</p>
 * @description <p>Can be one of {@link Titanium.Android#property-SCREEN_ORIENTATION_BEHIND}, 
{@link Titanium.Android#property-SCREEN_ORIENTATION_LANDSCAPE}, 
{@link Titanium.Android#property-SCREEN_ORIENTATION_NOSENSOR}, 
{@link Titanium.Android#property-SCREEN_ORIENTATION_PORTRAIT}, 
{@link Titanium.Android#property-SCREEN_ORIENTATION_SENSOR}, 
{@link Titanium.Android#property-SCREEN_ORIENTATION_UNSPECIFIED}, {@link Titanium.Android#property-SCREEN_ORIENTATION_USER}</p>
 */
Titanium.Android.Activity.requestedOrientation = null;

/**
 * @class Titanium.Android.BroadcastReceiver
 * @typestr Object of Titanium.Android
 * @platform android 3.1
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an 
<a href="http://developer.android.com/reference/android/content/BroadcastReceiver.html">Android Broadcast Receiver</a>.</p>
 * @description <p>This object is used for broadcast receivers.</p>
<p>See the official Android documentation on 
<a href="http://developer.android.com/reference/android/content/BroadcastReceiver.html">Broadcast Receivers</a>.
for an overview of how broadcast receivers are used.</p>
<p>Broadcast receivers can be created with an onReceived callback or a url property that refers to a js file
with code to handle broadcasts. If both url and onReceived properties are defined, the url property takes precedence.</p>
 * <h3>Example</h3>
 * <h4>Create and register and broadcast receiver</h4>
 * <p><p>This example creates a broadcast receiver and registers it to handle the airplane mode broadcast.</p></p><pre>var bc = Ti.Android.createBroadcastReceiver({
    onReceived: function() {
        Ti.API.info('Handling broadcast.');
    }
});

Ti.Android.registerBroadcastReceiver(bc, [Ti.Android.ACTION_AIRPLANE_MODE_CHANGED]);</pre>
 */
Titanium.Android.BroadcastReceiver = {};

/**
 * @method getOnReceived
 * <p>Gets the value of the {@link Titanium.Android.BroadcastReceiver#property-onReceived onReceived} property.</p>
 * @return {Callback<Object>} 
*/
Titanium.Android.BroadcastReceiver.getOnReceived = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.Android.BroadcastReceiver#property-url url} property.</p>
 * @return {String} 
*/
Titanium.Android.BroadcastReceiver.getUrl = function(){};

/**
 * @method setOnReceived
 * <p>Sets the value of the {@link Titanium.Android.BroadcastReceiver#property-onReceived onReceived} property.</p>
 * @param {Function} onReceived 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.BroadcastReceiver.setOnReceived = function(onReceived){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Titanium.Android.BroadcastReceiver#property-url url} property.</p>
 * @param {String} url 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.BroadcastReceiver.setUrl = function(url){};

/**
 * @property onReceived
 * @type Callback<Object>
 * <p>The function called when a broadcast is received.</p>
 */
Titanium.Android.BroadcastReceiver.onReceived = null;

/**
 * @property url
 * @type String
 * <p>The url of js file to handle the broadcast</p>
 */
Titanium.Android.BroadcastReceiver.url = null;

/**
 * @class Titanium.Android.Calendar
 * @typestr Submodule of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Module
 * <p>The Android.Calendar module provides proxies and methods for accessing the native Android 
calendar functionality.</p>
 * @description <p>This module supports retrieving information about existing events and creating new events.<br />
However, modifying or deleting existing events is not yet supported.<br />
Additionally, recurring events are not yet supported.</p>
<p>Currently, calendar permissions must be explicitly configured in <code>tiapp.xml</code> in order to access the
calendar. See "Common Requirements" in
<a href="#!/guide/tiapp.xml_and_timodule.xml_Reference">tiapp.xml and timodule.xml Reference</a>.</p>
 * <h3>Examples</h3>
 * <h4>All Calendars vs Selectable Calendars</h4>
 * <p><p>Print the names of all calendars known to Android, and the names of calendars that 
have been selected in the native Android calendar application.</p></p><pre>function showCalendars(calendars) {
    for (var i = 0; i &lt; calendars.length; i++) {
        Ti.API.info(calendars[i].name);
    }
}

Ti.API.info('ALL CALENDARS:');
showCalendars(Ti.Android.Calendar.allCalendars);
Ti.API.info('SELECTABLE CALENDARS:');
showCalendars(Ti.Android.Calendar.selectableCalendars);</pre>
 * <h4>Events in a year</h4>
 * <p><p>Create a picker to allow an existing calendar to be selected and, when a button is clicked, 
generate details of all events in that calendar for the current year .</p></p><pre>var calendars = [];
var selectedCalendarName;
var selectedCalendarId;
var pickerData = [];

var win = Ti.UI.createWindow({
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false,
  layout: 'vertical',
  title: 'Calendar Demo'
});

var scrollView = Ti.UI.createScrollView({
  backgroundColor: '#eee',
  height: 500,
  top: 20
});

var label = Ti.UI.createLabel({
  backgroundColor: 'white',
  text: 'Click on the button to display the events for the selected calendar',
  textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,
  top: 20
});
scrollView.add(label);

var selectableCalendars = Ti.Android.Calendar.selectableCalendars;
for (var i = 0, ilen = selectableCalendars.length; i &lt; ilen; i++) {
  calendars.push({ name: selectableCalendars[i].name, id: selectableCalendars[i].id });
  pickerData.push( Ti.UI.createPickerRow({ title: calendars[i].name }) );
  if(i === 0){
    selectedCalendarName = selectableCalendars[i].name;
    selectedCalendarId = selectableCalendars[i].id;
  }
}
var selectableCalendars = null;

if(!calendars.length){
  label.text = 'No calendars available. Select at least one in the native calendar before using this app';
} else {
  label.text = 'Click button to view calendar events';
  
  var picker = Ti.UI.createPicker({
    top:20
  });
  
  picker.add(pickerData);
  win.add(picker);
  
  picker.addEventListener('change', function(e){
    for (var i = 0, ilen = calendars.length; i &lt; ilen; i++) {
      if(calendars[i].name === e.row.title){
        selectedCalendarName = calendars[i].name;
        selectedCalendarId = calendars[i].id;
      }
    }
  });
  
  var button = Ti.UI.createButton({
    title: 'View events',
    top: 20
  });
  win.add(button);
  
  button.addEventListener('click', function(e){
    label.text = 'Generating...';
    
    var currentYear = new Date().getFullYear();
    
    var consoleString = '';
    
    function print(s) {
      if (consoleString.length) {
        consoleString = consoleString + '\n';
      }
      consoleString = consoleString + s;
    }
    
    var calendar = Ti.Android.Calendar.getCalendarById(selectedCalendarId);
    
    function printReminder(r) {
      var typetext = '[method unknown]';
      if (r.method == Ti.Android.Calendar.METHOD_EMAIL) {
        typetext = 'Email';
      } else if (r.method == Ti.Android.Calendar.METHOD_SMS) {
        typetext = 'SMS';
      } else if (r.method == Ti.Android.Calendar.METHOD_ALERT) {
        typetext = 'Alert';
      } else if (r.method == Ti.Android.Calendar.METHOD_DEFAULT) {
        typetext = '[default reminder method]';
      }
      print(typetext + ' reminder to be sent ' + r.minutes + ' minutes before the event');
    }
    
    function printAlert(a) {
      print('Alert id ' + a.id + ' begin ' + a.begin + '; end ' + a.end + '; alarmTime ' + a.alarmTime + '; minutes ' + a.minutes);
    }
    
    function printEvent(event) {
      if (event.allDay) {
        print('Event: ' + event.title + '; ' + event.begin.toLocaleDateString() + ' (all day)');
      } else {
        print('Event: ' + event.title + '; ' + event.begin.toLocaleDateString() + ' ' + event.begin.toLocaleTimeString()+ '-' + event.end.toLocaleTimeString());
      }
      
      var reminders = event.reminders;
      if (reminders &amp;&amp; reminders.length) {
        print('There is/are ' + reminders.length + ' reminder(s)');
        for (var i = 0; i &lt; reminders.length; i++) {
          printReminder(reminders[i]);
        }
      }
      
      print('hasAlarm? ' + event.hasAlarm);
      var alerts = event.alerts;
      if (alerts &amp;&amp; alerts.length) {
        for (var i = 0; i &lt; alerts.length; i++) {
          printAlert(alerts[i]);
        }
      }
      
      var status = event.status;
      if (status == Ti.Android.Calendar.STATUS_TENTATIVE) {
        print('This event is tentative');
      }
      if (status == Ti.Android.Calendar.STATUS_CONFIRMED) {
        print('This event is confirmed');
      }
      if (status == Ti.Android.Calendar.STATUS_CANCELED) {
        print('This event was canceled');
      }
    }
    
    var events = calendar.getEventsInYear(currentYear);
    if (events &amp;&amp; events.length) {
      print(events.length + ' event(s) in ' + currentYear);
      print('');
      for (var i = 0; i &lt; events.length; i++) {
        printEvent(events[i]);
        print('');
      }
    } else {
      print('No events');
    }
    
    label.text = consoleString;
  });
}

win.add(scrollView);

win.open();</pre>
 * <h4>Create an Event and Reminder</h4>
 * <p><p>Creates an event and adds an e-mail reminder for 10 minutes before the event.</p></p><pre>var CALENDAR_TO_USE = 3;
var calendar = Ti.Android.Calendar.getCalendarById(CALENDAR_TO_USE);

// Create the event
var eventBegins = new Date(2010, 11, 26, 12, 0, 0);
var eventEnds = new Date(2010, 11, 26, 14, 0, 0);
var details = {
    title: 'Do some stuff',
    description: "I'm going to do some stuff at this time.",
    begin: eventBegins,
    end: eventEnds
};

var event = calendar.createEvent(details);

// Now add a reminder via e-mail for 10 minutes before the event.
var reminderDetails = {
    minutes: 10,
    method: Ti.Android.Calendar.METHOD_EMAIL
};
event.createReminder(reminderDetails);</pre>
 * @deprecated 3.1.1
 */
Titanium.Android.Calendar = {};

/**
 * @class Titanium.Android.Calendar.Alert
 * @typestr Object of Titanium.Android.Calendar
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>An object that represents a single alert for an event in an Android calendar.</p>
 * @deprecated 3.1.1
 */
Titanium.Android.Calendar.Alert = {};

/**
 * @method getAlarmTime
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Alert#property-alarmTime alarmTime} property.</p>
 * @return {Date} 
*/
Titanium.Android.Calendar.Alert.getAlarmTime = function(){};

/**
 * @method getBegin
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Alert#property-begin begin} property.</p>
 * @return {Date} 
*/
Titanium.Android.Calendar.Alert.getBegin = function(){};

/**
 * @method getEnd
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Alert#property-end end} property.</p>
 * @return {Date} 
*/
Titanium.Android.Calendar.Alert.getEnd = function(){};

/**
 * @method getEventId
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Alert#property-eventId eventId} property.</p>
 * @return {Number} 
*/
Titanium.Android.Calendar.Alert.getEventId = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Alert#property-id id} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Alert.getId = function(){};

/**
 * @method getMinutes
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Alert#property-minutes minutes} property.</p>
 * @return {Number} 
*/
Titanium.Android.Calendar.Alert.getMinutes = function(){};

/**
 * @method getState
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Alert#property-state state} property.</p>
 * @return {Number} 
*/
Titanium.Android.Calendar.Alert.getState = function(){};

/**
 * @property alarmTime
 * @type Date
 * @readonly
 * <p>Date/time at which this alert alarm is set to trigger.</p>
 */
Titanium.Android.Calendar.Alert.alarmTime = null;

/**
 * @property begin
 * @type Date
 * @readonly
 * <p>Start date/time for the corresponding event.</p>
 */
Titanium.Android.Calendar.Alert.begin = null;

/**
 * @property end
 * @type Date
 * @readonly
 * <p>End date/time for the corresponding event.</p>
 */
Titanium.Android.Calendar.Alert.end = null;

/**
 * @property eventId
 * @type Number
 * @readonly
 * <p>Identifier of the event for which this alert is set.</p>
 */
Titanium.Android.Calendar.Alert.eventId = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>Identifier of this alert.</p>
 */
Titanium.Android.Calendar.Alert.id = null;

/**
 * @property minutes
 * @type Number
 * @readonly
 * <p>Reminder notice period in minutes, that determines how long prior to the event this alert 
should trigger.</p>
 */
Titanium.Android.Calendar.Alert.minutes = null;

/**
 * @property state
 * @type Number
 * @readonly
 * <p>The current state of the alert.</p>
 * @description <p>One of {@link Titanium.Android.Calendar#property-STATE_DISMISSED STATE_DISMISSED}, 
{@link Titanium.Android.Calendar#property-STATE_FIRED STATE_FIRED}, 
or {@link Titanium.Android.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Android.Calendar.Alert.state = null;

/**
 * @class Titanium.Android.Calendar.Calendar
 * @typestr Object of Titanium.Android.Calendar
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>An object that represents a single calendar on Android.</p>
 * @deprecated 3.1.1
 */
Titanium.Android.Calendar.Calendar = {};

/**
 * @method createEvent
 * <p>Creates an event in this calendar.</p>
 * @param {Object} properties 
 * <p>Properties of the event</p>
 * @return {Titanium.Android.Calendar.Event} 
*/
Titanium.Android.Calendar.Calendar.createEvent = function(properties){};

/**
 * @method getEventById
 * <p>Gets the event with the specified identifier.</p>
 * @param {Number} id 
 * <p>Identifier of the event.</p>
 * @return {Titanium.Android.Calendar.Event} 
*/
Titanium.Android.Calendar.Calendar.getEventById = function(id){};

/**
 * @method getEventsBetweenDates
 * <p>Gets events that occur between two dates.</p>
 * @param {Date} date1 
 * <p>Start date.</p>
 * @param {Date} date2 
 * <p>End date.</p>
 * @return {Titanium.Android.Calendar.Event[]} 
*/
Titanium.Android.Calendar.Calendar.getEventsBetweenDates = function(date1, date2){};

/**
 * @method getEventsInDate
 * <p>Gets events that occur on a specified date.</p>
 * @param {Number} year 
 * <p>Year of the events.</p>
 * @param {Number} month 
 * <p>Month of the events, as a zero-based integer with January at 0 and December at 11.</p>
 * @param {Number} day 
 * <p>Day of the month of the events.</p>
 * @return {Titanium.Android.Calendar.Event[]} 
*/
Titanium.Android.Calendar.Calendar.getEventsInDate = function(year, month, day){};

/**
 * @method getEventsInMonth
 * <p>Gets events that occur during a specified month.</p>
 * @param {Number} year 
 * <p>Year of the events.</p>
 * @param {Number} month 
 * <p>Month of the events, as a zero-based integer with January at 0 and December at 11.</p>
 * @return {Titanium.Android.Calendar.Event[]} 
*/
Titanium.Android.Calendar.Calendar.getEventsInMonth = function(year, month){};

/**
 * @method getEventsInYear
 * <p>Gets all events that occur during a specified year.</p>
 * @param {Number} year 
 * <p>Year of the events.</p>
 * @return {Titanium.Android.Calendar.Event[]} 
*/
Titanium.Android.Calendar.Calendar.getEventsInYear = function(year){};

/**
 * @method getHidden
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Calendar#property-hidden hidden} property.</p>
 * @return {Boolean} 
*/
Titanium.Android.Calendar.Calendar.getHidden = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Calendar#property-id id} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Calendar.getId = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Calendar#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Calendar.getName = function(){};

/**
 * @method getSelected
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Calendar#property-selected selected} property.</p>
 * @return {Boolean} 
*/
Titanium.Android.Calendar.Calendar.getSelected = function(){};

/**
 * @property hidden
 * @type Boolean
 * @readonly
 * <p>Indicates whether this calendar is hidden.</p>
 * @description <p>This property is <code>true</code> when this calendar is hidden.</p>
 */
Titanium.Android.Calendar.Calendar.hidden = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>Identifier of this calendar.</p>
 */
Titanium.Android.Calendar.Calendar.id = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>Display name of this calendar.</p>
 */
Titanium.Android.Calendar.Calendar.name = null;

/**
 * @property selected
 * @type Boolean
 * @readonly
 * <p>Indicates whether the calendar is selected.</p>
 * @description <p>Set to <code>true</code> when this calendar is selected.</p>
<p>See {@link Titanium.Android.Calendar} for examples.</p>
 */
Titanium.Android.Calendar.Calendar.selected = null;

/**
 * @class Titanium.Android.Calendar.Event
 * @typestr Object of Titanium.Android.Calendar
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>An object that represents a single event in an Android calendar.</p>
 * @description <p>The API supports retrieving information about existing events and creating new events.<br />
Be aware that modifying or deleting existing events is not yet supported. Additionally, recurring 
events are not yet supported.</p>
<p>See {@link Titanium.Android.Calendar} for examples of retrieving event information and creating events.</p>
 * @deprecated 3.1.1
 */
Titanium.Android.Calendar.Event = {};

/**
 * @method createAlert
 * <p>Creates an alert for this event.</p>
 * @param {Object} data 
 * <p>Properties for the alert.</p>
 * @return {Titanium.Android.Calendar.Alert} 
*/
Titanium.Android.Calendar.Event.createAlert = function(data){};

/**
 * @method createReminder
 * <p>Creates a reminder for this event.</p>
 * @param {Object} data 
 * <p>Properties for the reminder.</p>
 * @return {Titanium.Android.Calendar.Reminder} 
*/
Titanium.Android.Calendar.Event.createReminder = function(data){};

/**
 * @method getAlerts
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-alerts alerts} property.</p>
 * @return {Titanium.Android.Calendar.Alert[]} 
*/
Titanium.Android.Calendar.Event.getAlerts = function(){};

/**
 * @method getAllDay
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-allDay allDay} property.</p>
 * @return {Boolean} 
*/
Titanium.Android.Calendar.Event.getAllDay = function(){};

/**
 * @method getBegin
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-begin begin} property.</p>
 * @return {Date} 
*/
Titanium.Android.Calendar.Event.getBegin = function(){};

/**
 * @method getDescription
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-description description} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Event.getDescription = function(){};

/**
 * @method getEnd
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-end end} property.</p>
 * @return {Date} 
*/
Titanium.Android.Calendar.Event.getEnd = function(){};

/**
 * @method getExtendedProperties
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-extendedProperties extendedProperties} property.</p>
 * @return {Dictionary} 
*/
Titanium.Android.Calendar.Event.getExtendedProperties = function(){};

/**
 * @method getExtendedProperty
 * <p>Gets the value of the specified extended property.</p>
 * @param {String} name 
 * <p>Name of an existing extended property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Event.getExtendedProperty = function(name){};

/**
 * @method getHasAlarm
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-hasAlarm hasAlarm} property.</p>
 * @return {Boolean} 
*/
Titanium.Android.Calendar.Event.getHasAlarm = function(){};

/**
 * @method getHasExtendedProperties
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-hasExtendedProperties hasExtendedProperties} property.</p>
 * @return {Boolean} 
*/
Titanium.Android.Calendar.Event.getHasExtendedProperties = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-id id} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Event.getId = function(){};

/**
 * @method getLocation
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-location location} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Event.getLocation = function(){};

/**
 * @method getReminders
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-reminders reminders} property.</p>
 * @return {Titanium.Android.Calendar.Reminder[]} 
*/
Titanium.Android.Calendar.Event.getReminders = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-status status} property.</p>
 * @return {Number} 
*/
Titanium.Android.Calendar.Event.getStatus = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-title title} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Event.getTitle = function(){};

/**
 * @method getVisibility
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Event#property-visibility visibility} property.</p>
 * @return {Number} 
*/
Titanium.Android.Calendar.Event.getVisibility = function(){};

/**
 * @method setExtendedProperty
 * <p>Sets the value of the specified extended property.</p>
 * @param {String} name 
 * <p>Property name.</p>
 * @param {String} value 
 * <p>Property value.</p>
 * @return void
*/
Titanium.Android.Calendar.Event.setExtendedProperty = function(name, value){};

/**
 * @property alerts
 * @type Titanium.Android.Calendar.Alert[]
 * @readonly
 * <p>Existing alerts for this event.</p>
 */
Titanium.Android.Calendar.Event.alerts = null;

/**
 * @property allDay
 * @type Boolean
 * @readonly
 * <p>Indicates whether this event is all day.</p>
 */
Titanium.Android.Calendar.Event.allDay = null;

/**
 * @property begin
 * @type Date
 * @readonly
 * <p>Start date/time of this event.</p>
 */
Titanium.Android.Calendar.Event.begin = null;

/**
 * @property description
 * @type String
 * @readonly
 * <p>Description of this event.</p>
 */
Titanium.Android.Calendar.Event.description = null;

/**
 * @property end
 * @type Date
 * @readonly
 * <p>End date/time of this event.</p>
 */
Titanium.Android.Calendar.Event.end = null;

/**
 * @property extendedProperties
 * @type Dictionary
 * @readonly
 * <p>Extended properties of this event.</p>
 */
Titanium.Android.Calendar.Event.extendedProperties = null;

/**
 * @property hasAlarm
 * @type Boolean
 * @readonly
 * <p>Indicates whether an alarm is scheduled for this event.</p>
 */
Titanium.Android.Calendar.Event.hasAlarm = null;

/**
 * @property hasExtendedProperties
 * @type Boolean
 * @readonly
 * <p>Indicates whether {@link Titanium.Android.Calendar.Event#property-extendedProperties extendedProperties} 
exists for this event.</p>
 */
Titanium.Android.Calendar.Event.hasExtendedProperties = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>Identifier of this event.</p>
 */
Titanium.Android.Calendar.Event.id = null;

/**
 * @property location
 * @type String
 * @readonly
 * <p>Location of this event.</p>
 */
Titanium.Android.Calendar.Event.location = null;

/**
 * @property reminders
 * @type Titanium.Android.Calendar.Reminder[]
 * @readonly
 * <p>Existing reminders for this event.</p>
 */
Titanium.Android.Calendar.Event.reminders = null;

/**
 * @property status
 * @type Number
 * @readonly
 * <p>Status of this event.</p>
 * @description <p>One of {@link Titanium.Android.Calendar#property-STATUS_CANCELED STATUS_CANCELED}, 
{@link Titanium.Android.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED}, 
and {@link Titanium.Android.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Android.Calendar.Event.status = null;

/**
 * @property title
 * @type String
 * @readonly
 * <p>Title of this event.</p>
 */
Titanium.Android.Calendar.Event.title = null;

/**
 * @property visibility
 * @type Number
 * @readonly
 * <p>Visibility of this event.</p>
 * @description <p>One of {@link Titanium.Android.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE}, 
and {@link Titanium.Android.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Android.Calendar.Event.visibility = null;

/**
 * @class Titanium.Android.Calendar.Reminder
 * @typestr Object of Titanium.Android.Calendar
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>An object that represents a single reminder for an event in an Android calendar.</p>
 * @description <p>Reminders should be created using the {@link Titanium.Android.Calendar.Event#method-createReminder} method 
rather than directly.</p>
<p>See {@link Titanium.Android.Calendar} for examples of retrieving reminder information and creating 
reminders for events.</p>
 * @deprecated 3.1.1
 */
Titanium.Android.Calendar.Reminder = {};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Reminder#property-id id} property.</p>
 * @return {String} 
*/
Titanium.Android.Calendar.Reminder.getId = function(){};

/**
 * @method getMethod
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Reminder#property-method method} property.</p>
 * @return {Number} 
*/
Titanium.Android.Calendar.Reminder.getMethod = function(){};

/**
 * @method getMinutes
 * <p>Gets the value of the {@link Titanium.Android.Calendar.Reminder#property-minutes minutes} property.</p>
 * @return {Number} 
*/
Titanium.Android.Calendar.Reminder.getMinutes = function(){};

/**
 * @property id
 * @type String
 * @readonly
 * <p>Identifier of this reminder.</p>
 */
Titanium.Android.Calendar.Reminder.id = null;

/**
 * @property method
 * @type Number
 * @readonly
 * <p>Method by which this reminder will be delivered.</p>
 * @description <p>One of {@link Titanium.Android.Calendar#property-METHOD_ALERT METHOD_ALERT}, 
{@link Titanium.Android.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT}, 
{@link Titanium.Android.Calendar#property-METHOD_EMAIL METHOD_EMAIL}, 
or {@link Titanium.Android.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Android.Calendar.Reminder.method = null;

/**
 * @property minutes
 * @type Number
 * @readonly
 * <p>Reminder notice period in minutes, that determines how long prior to the event this reminder 
should trigger.</p>
 */
Titanium.Android.Calendar.Reminder.minutes = null;

/**
 * @method getAllAlerts
 * <p>Gets the value of the {@link Titanium.Android.Calendar#property-allAlerts allAlerts} property.</p>
 * @return {Titanium.Android.Calendar.Alert[]} 
*/
Titanium.Android.Calendar.getAllAlerts = function(){};

/**
 * @method getAllCalendars
 * <p>Gets the value of the {@link Titanium.Android.Calendar#property-allCalendars allCalendars} property.</p>
 * @return {Titanium.Android.Calendar.Calendar[]} 
*/
Titanium.Android.Calendar.getAllCalendars = function(){};

/**
 * @method getCalendarById
 * <p>Gets the calendar with the specified identifier.</p>
 * @param {Number} id 
 * <p>Integer identifier of the calendar.</p>
 * @return {Titanium.Android.Calendar.Calendar} 
*/
Titanium.Android.Calendar.getCalendarById = function(id){};

/**
 * @method getSelectableCalendars
 * <p>Gets the value of the {@link Titanium.Android.Calendar#property-selectableCalendars selectableCalendars} property.</p>
 * @return {Titanium.Android.Calendar.Calendar[]} 
*/
Titanium.Android.Calendar.getSelectableCalendars = function(){};

/**
 * @property METHOD_ALERT
 * @type Number
 * @readonly
 * <p>Reminder alert delivery method.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-METHOD_ALERT METHOD_ALERT}, 
{@link Titanium.Android.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT}, 
{@link Titanium.Android.Calendar#property-METHOD_EMAIL METHOD_EMAIL}, 
and {@link Titanium.Android.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Android.Calendar.METHOD_ALERT = null;

/**
 * @property METHOD_DEFAULT
 * @type Number
 * @readonly
 * <p>Reminder default delivery method.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-METHOD_ALERT METHOD_ALERT}, 
{@link Titanium.Android.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT}, 
{@link Titanium.Android.Calendar#property-METHOD_EMAIL METHOD_EMAIL}, 
and {@link Titanium.Android.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Android.Calendar.METHOD_DEFAULT = null;

/**
 * @property METHOD_EMAIL
 * @type Number
 * @readonly
 * <p>Reminder email delivery method.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-METHOD_ALERT METHOD_ALERT}, 
{@link Titanium.Android.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT}, 
{@link Titanium.Android.Calendar#property-METHOD_EMAIL METHOD_EMAIL}, 
and {@link Titanium.Android.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Android.Calendar.METHOD_EMAIL = null;

/**
 * @property METHOD_SMS
 * @type Number
 * @readonly
 * <p>Reminder SMS delivery method.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-METHOD_ALERT METHOD_ALERT}, 
{@link Titanium.Android.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT}, 
{@link Titanium.Android.Calendar#property-METHOD_EMAIL METHOD_EMAIL}, 
and {@link Titanium.Android.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Android.Calendar.METHOD_SMS = null;

/**
 * @property STATE_DISMISSED
 * @type Number
 * @readonly
 * <p>Alert dismissed state.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Alert}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-STATE_DISMISSED STATE_DISMISSED}, 
{@link Titanium.Android.Calendar#property-STATE_FIRED STATE_FIRED}, 
and {@link Titanium.Android.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Android.Calendar.STATE_DISMISSED = null;

/**
 * @property STATE_FIRED
 * @type Number
 * @readonly
 * <p>Alert fired state.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Alert}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-STATE_DISMISSED STATE_DISMISSED}, 
{@link Titanium.Android.Calendar#property-STATE_FIRED STATE_FIRED}, 
and {@link Titanium.Android.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Android.Calendar.STATE_FIRED = null;

/**
 * @property STATE_SCHEDULED
 * @type Number
 * @readonly
 * <p>Alert scheduled status.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Alert}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-STATE_DISMISSED STATE_DISMISSED}, 
{@link Titanium.Android.Calendar#property-STATE_FIRED STATE_FIRED}, 
and {@link Titanium.Android.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Android.Calendar.STATE_SCHEDULED = null;

/**
 * @property STATUS_CANCELED
 * @type Number
 * @readonly
 * <p>Event canceled status.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-STATUS_CANCELED STATUS_CANCELED}, 
{@link Titanium.Android.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED}, 
and {@link Titanium.Android.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Android.Calendar.STATUS_CANCELED = null;

/**
 * @property STATUS_CONFIRMED
 * @type Number
 * @readonly
 * <p>Event confirmed status.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-STATUS_CANCELED STATUS_CANCELED}, 
{@link Titanium.Android.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED}, 
and {@link Titanium.Android.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Android.Calendar.STATUS_CONFIRMED = null;

/**
 * @property STATUS_TENTATIVE
 * @type Number
 * @readonly
 * <p>Event tentative status.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-STATUS_CANCELED STATUS_CANCELED}, 
{@link Titanium.Android.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED}, 
and {@link Titanium.Android.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Android.Calendar.STATUS_TENTATIVE = null;

/**
 * @property VISIBILITY_CONFIDENTIAL
 * @type Number
 * @readonly
 * <p>Event confidential visibility.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE}, 
and {@link Titanium.Android.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Android.Calendar.VISIBILITY_CONFIDENTIAL = null;

/**
 * @property VISIBILITY_DEFAULT
 * @type Number
 * @readonly
 * <p>Event default visibility.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE}, 
and {@link Titanium.Android.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Android.Calendar.VISIBILITY_DEFAULT = null;

/**
 * @property VISIBILITY_PRIVATE
 * @type Number
 * @readonly
 * <p>Event private visibility.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE}, 
and {@link Titanium.Android.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Android.Calendar.VISIBILITY_PRIVATE = null;

/**
 * @property VISIBILITY_PUBLIC
 * @type Number
 * @readonly
 * <p>Event public visibility.</p>
 * @description <p>Used with {@link Titanium.Android.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Android.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT}, 
{@link Titanium.Android.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE}, 
and {@link Titanium.Android.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Android.Calendar.VISIBILITY_PUBLIC = null;

/**
 * @property allAlerts
 * @type Titanium.Android.Calendar.Alert[]
 * @readonly
 * <p>All alerts in selected calendars.</p>
 */
Titanium.Android.Calendar.allAlerts = null;

/**
 * @property allCalendars
 * @type Titanium.Android.Calendar.Calendar[]
 * @readonly
 * <p>All calendars known to the native calendar app.</p>
 */
Titanium.Android.Calendar.allCalendars = null;

/**
 * @property selectableCalendars
 * @type Titanium.Android.Calendar.Calendar[]
 * @readonly
 * <p>All calendars selected within the native calendar app, which may be a subset of <code>allCalendars</code>. </p>
 * @description <p>The native calendar application may know via the registered webservices, such as Gooogle or 
Facebook accounts about calendars that it has access to but have not been selected to be 
displayed in the native calendar app.</p>
 */
Titanium.Android.Calendar.selectableCalendars = null;

/**
 * @class Titanium.Android.Intent
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an Android <code>Intent</code>.</p>
 * @description <p>See also: 
<a href="http://developer.android.com/reference/android/content/Intent.html">Intent</a> in the
Android Developer Reference.</p>
 * <h3>Examples</h3>
 * <h4>Create an Intent for Launching an Activity</h4>
 * <p><p>This example creates an intent and uses it to launch a new activity.</p></p><pre>var intent = Ti.Android.createIntent({
    action: Ti.Android.ACTION_MAIN,
    url: 'activity1.js'
});
intent.addCategory(Ti.Android.CATEGORY_LAUNCHER);
Ti.Android.currentActivity.startActivity(intent);</pre>
 * <h4>Create an Intent to get a Contact URI</h4>
 * <p><p>This example creates an intent to retrieve contact information from the user's
contacts. </p></p><pre>var intent = Ti.Android.createIntent({
    action: Ti.Android.ACTION_GET_CONTENT,
    type: "vnd.android.cursor.item/phone"
});</pre>
 * <h4>Pick a Photo from the Photo Gallery</h4>
 * <pre>This example creates an intent to pick an image from the photo gallery.
    var intent = Ti.Android.createIntent({
        action: Ti.Android.ACTION_PICK,
        type: "image/*"
    });
    intent.addCategory(Ti.Android.CATEGORY_DEFAULT);</pre>
 * <h4>Create an ImageView from an Image Send Intent</h4>
 * <p><p>This example requires that an intent filter be set up in a
custom AndroidManifest.xml. The following intent filter should
be added to your app's main activity. You can trigger this 
intent filter by long pressing on an image in the Android gallery
and selecting "share".</p>
<p>AndroidManifest.xml</p></p><pre> &lt;intent-filter&gt;
     &lt;action android:name="android.intent.action.SEND" /&gt;
     &lt;category android:name="android.intent.category.DEFAULT" /&gt;
     &lt;data android:mimeType="image/*" /&gt;
 &lt;/intent-filter&gt;
</pre>
 * <p><p>Sample code</p></p><pre> var win = Ti.UI.createWindow({
     backgroundColor: '#fff',
     fullscreen: false,
     exitOnClose: true
 });
 win.addEventListener('open', function(e) {
     var intent = Ti.Android.currentActivity.getIntent();
     var iname = Ti.Android.EXTRA_STREAM;
     if (intent &amp;&amp; intent.hasExtra(iname)) {
         // Create ImageView from TiBlob
         var blob = intent.getBlobExtra(iname);
         win.add(Ti.UI.createImageView({
             image: blob,
             height: 300,
             width: 300,
             left: 0,
             top: 0
         }));
     } else {
         Ti.API.info('No extra named "' + iname + '" found in Intent');
     }
 });        
 win.open();</pre>
 */
Titanium.Android.Intent = {};

/**
 * @method addCategory
 * <p>Adds a category to this Intent. See the <code>CATEGORY</code> constants in {@link Titanium.Android}.</p>
 * @param {String} name 
 * <p>The category name. See the <code>CATEGORY</code> constants in {@link Titanium.Android}.</p>
 * @return void
*/
Titanium.Android.Intent.addCategory = function(name){};

/**
 * @method addFlags
 * <p>Adds to the existing flags on the <code>Intent</code>.</p>
 * @description <p>The specified flag are combined with the existing flags using a bitwise OR.</p>
 * @param {Number} flags 
 * <p>Bitwise OR of the flags to add to the existing set.</p>
 * @return void
*/
Titanium.Android.Intent.addFlags = function(flags){};

/**
 * @method getAction
 * <p>Gets the value of the {@link Titanium.Android.Intent#property-action action} property.</p>
 * @return {String} 
*/
Titanium.Android.Intent.getAction = function(){};

/**
 * @method getBlobExtra
 * <p>Get a {@link Titanium.Blob} property from this <code>Intent</code>.</p>
 * @param {String} name 
 * <p>The {@link Titanium.Blob} extra to get, most commonly {@link Titanium.Android#property-EXTRA_STREAM}.</p>
 * @return {Titanium.Blob} 
 * @platform android 2.1
*/
Titanium.Android.Intent.getBlobExtra = function(name){};

/**
 * @method getBooleanExtra
 * <p>Get a boolean property from this Intent.</p>
 * @param {String} name 
 * <p>Property to get.</p>
 * @return {Boolean} 
*/
Titanium.Android.Intent.getBooleanExtra = function(name){};

/**
 * @method getClassName
 * <p>Gets the value of the {@link Titanium.Android.Intent#property-className className} property.</p>
 * @return {String} 
*/
Titanium.Android.Intent.getClassName = function(){};

/**
 * @method getData
 * <p>Get the Data URI from this <code>Intent</code>.</p>
 * @return {String} 
*/
Titanium.Android.Intent.getData = function(){};

/**
 * @method getDoubleExtra
 * <p>Get a double property from this <code>Intent</code>.</p>
 * @param {String} name 
 * <p>Property to get.</p>
 * @return {Number} 
*/
Titanium.Android.Intent.getDoubleExtra = function(name){};

/**
 * @method getFlags
 * <p>Gets the value of the {@link Titanium.Android.Intent#property-flags flags} property.</p>
 * @return {Number} 
*/
Titanium.Android.Intent.getFlags = function(){};

/**
 * @method getIntExtra
 * <p>Get an int property from this <code>Intent</code>.</p>
 * @param {String} name 
 * <p>Property to get.</p>
 * @return {Number} 
*/
Titanium.Android.Intent.getIntExtra = function(name){};

/**
 * @method getLongExtra
 * <p>Get a long property from this <code>Intent</code>.</p>
 * @param {String} name 
 * <p>Property to get.</p>
 * @return {Number} 
*/
Titanium.Android.Intent.getLongExtra = function(name){};

/**
 * @method getPackageName
 * <p>Gets the value of the {@link Titanium.Android.Intent#property-packageName packageName} property.</p>
 * @return {String} 
*/
Titanium.Android.Intent.getPackageName = function(){};

/**
 * @method getStringExtra
 * <p>Get a string property from this <code>Intent</code>.</p>
 * @description <p>Can also be used to get the string representation of a property that's stored
as an Android <code>Parcel</code>, such as a URI.</p>
<p>Titanium does not support <code>getParcelableExtra</code> due to the inability to translate 
all of its possible return types to JavaScript. </p>
<p>See also:
[getParcelableExtra](http://developer.android.com/reference/android/content/Intent.html#getParcelableExtra(java.lang.String)
in the Android Developer Reference.</p>
 * @param {String} name 
 * <p>Property to get.</p>
 * @return {String} 
*/
Titanium.Android.Intent.getStringExtra = function(name){};

/**
 * @method getType
 * <p>Gets the value of the {@link Titanium.Android.Intent#property-type type} property.</p>
 * @return {String} 
*/
Titanium.Android.Intent.getType = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.Android.Intent#property-url url} property.</p>
 * @return {String} 
*/
Titanium.Android.Intent.getUrl = function(){};

/**
 * @method hasExtra
 * <p>Returns <code>true</code> if this <code>Intent</code> has the specified property.</p>
 * @param {String} name 
 * <p>Property name to check for.</p>
 * @return {Boolean} 
*/
Titanium.Android.Intent.hasExtra = function(name){};

/**
 * @method putExtra
 * <p>Puts an extra property on this <code>Intent</code>.</p>
 * @param {String} name 
 * <p>Name of the property to add.</p>
 * @param {Object} value 
 * <p>Property value to set.</p>
 * @return void
*/
Titanium.Android.Intent.putExtra = function(name, value){};

/**
 * @method putExtraUri
 * <p>Put a URI property on this <code>Intent</code> (useful for {@link Titanium.Android#property-EXTRA_STREAM}).</p>
 * @param {String} name 
 * <p>The property name.</p>
 * @param {String} value 
 * <p>The URI, as a string.</p>
 * @return void
*/
Titanium.Android.Intent.putExtraUri = function(name, value){};

/**
 * @method setFlags
 * <p>Sets the value of the {@link Titanium.Android.Intent#property-flags flags} property.</p>
 * @param {Number} flags 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Intent.setFlags = function(flags){};

/**
 * @property action
 * @type String
 * @creationOnly
 * <p>The action associated with this intent.</p>
 * @description <p>Specify one of the <code>ACTION</code> constants from {@link Titanium.Android}, or an application-specific custom action string.</p>
 */
Titanium.Android.Intent.action = null;

/**
 * @property className
 * @type String
 * @creationOnly
 * <p>The Java class name of the activity associated with this intent
({@link Titanium.Android.Intent#property-packageName packageName} must also be set).</p>
 */
Titanium.Android.Intent.className = null;

/**
 * @property data
 * @type String
 * @readonly
 * @creationOnly
 * <p>The Intent's Data URI.</p>
 * @description <p>The data URI can be set when the intent is created. It is read-only after the
intent is created.</p>
<p>For more information on data URIs, see:
<a href="http://developer.android.com/reference/android/content/Intent.html#setData(android.net.Uri)">Intent.setData in the Android API Reference</a></p>
 */
Titanium.Android.Intent.data = null;

/**
 * @property flags
 * @type Number
 * <p>Intent flags. See the <code>FLAG_</code> constants in {@link Titanium.Android}.</p>
 */
Titanium.Android.Intent.flags = null;

/**
 * @property packageName
 * @type String
 * @creationOnly
 * <p>The fully-qualified Java package name of the activity.</p>
 */
Titanium.Android.Intent.packageName = null;

/**
 * @property type
 * @type String
 * @readonly
 * @creationOnly
 * <p>The MIME type for this Intent.</p>
 * @description <p>The MIME type can be set when the intent is created. It is read-only after the
intent is created.</p>
<p>For information on MIME types and intents, see: 
<a href="http://developer.android.com/reference/android/content/Intent.html#setType(java.lang.String)">Intent.setType in the Android API Reference</a>.</p>
 */
Titanium.Android.Intent.type = null;

/**
 * @property url
 * @type String
 * @creationOnly
 * <p>The URL to a Titanium JavaScript Activity.</p>
 */
Titanium.Android.Intent.url = null;

/**
 * @class Titanium.Android.Menu
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an Android Options Menu.</p>
 * @description <p>On Android devices prior to Android 3.0 (API level 11), the menu is always presented 
as an options menu, which is displayed when the <strong>Menu</strong> button is pressed.</p>
<p>On Android 3.0 and later, menu items can be displayed as <em>action items</em> in the action
bar. To enable this, the application must be built with a theme that supports the
action bar, such as the Holo theme. (See
<a href="#!/guide/Android_Themes">Android Themes</a> in
the Titanium Guides for information on setting your application's theme.)</p>
<p>To determine how an action item is displayed, set
{@link Titanium.Android.MenuItem#property-showAsAction showAsAction} and optionally 
{@link Titanium.Android.MenuItem#property-actionView actionView} when creating a menu item.</p>
<h4>Creating Menu Items</h4>
<p>To create menu items, assign a callback function to the activity's {@link Titanium.Android.Activity#property-onCreateOptionsMenu onCreateOptionsMenu}
property. The activity's menu object is passed in to the <code>onCreateOptionsMenu</code> function when
the menu is created.</p>
<p>For menu items displayed in the menu, the <code>onCreateOptionsMenu</code> function is called
once, and the {@link Titanium.Android.Activity#property-onPrepareOptionsMenu onPrepareOptionsMenu} callback function is called each
time the menu is opened. The <code>onPrepareOptionsMenu</code> function can be used to switch menu items dynamically.</p>
<p>When the action bar is in use, the menu is considered to be always open and
<code>prepareOptionsMenu</code> is <strong>never</strong> called. To switch menu items dynamically, call
{@link Titanium.Android.Activity#method-invalidateOptionsMenu invalidateOptionsMenu}. This causes
the <code>createOptionsMenu</code> to be called again. </p>
<h4>Menus on Tab Groups</h4>
<p>Prior to Titanium 3.0, menu items could be added to the individual windows of a tab
group. </p>
<p>Starting in Titanium 3.0, menus must be added to tab groups using the tab group's
activity. These changes were required to support the Android 3.0 action bar.</p>
<p>The TabGroup activity is available using {@link Titanium.UI.TabGroup#method-getActivity TabGroup.getActivity}.
However, unlike a window's activity it is not currently possible to set properties on
the tab group's activity before the tab group is opened. To add a menu to a tab group, 
set the <code>onCreateOptionsMenu</code> property to the tab group's <code>open</code> event listener, and 
then call <code>invalidateOptionsMenu</code> to force the changes to take effect.</p>
<pre><code>tabGroup.addEventListener("open", function(e) {
    var activity = globals.tabs.getActivity();
    activity.onCreateOptionsMenu = function(e) {
        var menuItem = e.menu.add({
            title : "Add Task",
            showAsAction : Ti.Android.SHOW_AS_ACTION_ALWAYS,
            icon : "add_icon.png"
        });
        menuItem.addEventListener("click", function(e) {
            // 
        });
    }
    activity.invalidateOptionsMenu();
});
</code></pre>
<h4>Further Reading</h4>
<p>See also: </p>
<ul>
<li>
<p><a href="http://developer.android.com/guide/topics/ui/menus.html">Menus</a> in the 
    Android Developer Guides.</p>
</li>
<li>
<p><a href="http://developer.android.com/guide/topics/ui/actionbar.html">Action Bar</a> in 
    the Android Developer Guides.</p>
</li>
<li>
<p><a href="http://developer.android.com/reference/android/view/Menu.html">Menu</a>
    in the Android Developer Reference.</p>
</li>
</ul>
 * <h3>Examples</h3>
 * <h4>Creating a Simple Menu</h4>
 * <p><p>This sample creates an Android menu that displays a menu item named "Item 1", 
which logs a debug message when clicked.</p>
<p>If the action bar is in use, the menu item will be displayed as an action item if there is room in the action bar.</p></p><pre>var win = Ti.UI.createWindow({
  fullscreen: true
});

var activity = win.activity;

activity.onCreateOptionsMenu = function(e){
  var menu = e.menu;
  var menuItem = menu.add({ 
    title: "Item 1", 
    icon:  "item1.png",
    showAsAction: Ti.Android.SHOW_AS_ACTION_IF_ROOM
  });
  menuItem.addEventListener("click", function(e) {
    Ti.API.debug("I was clicked");
  });
};

win.open();</pre>
 * <h4>Creating a Dynamic Menu</h4>
 * <p><p>This sample creates an Android menu that displays a menu item named 
"Login" or "Logout", depending on the value of a <code>loggedIn</code> Boolean variable. 
Click on the item to toggle the variable's value.</p></p><pre>var win = Ti.UI.createWindow({
  fullscreen: true
});
var LOGIN = 1, LOGOUT = 2;
var loggedIn = false;

var activity = win.activity;

activity.onCreateOptionsMenu = function(e){
  var menu = e.menu;
  var login = menu.add({ title: "Login", itemId: LOGIN });
  login.setIcon("login.png");
  login.addEventListener("click", function(e) {
    loggedIn = true;
    // In Android 3.0 and above we need to call invalidateOptionsMenu() for menu changes at runtime
    win.activity.invalidateOptionsMenu();
  });
  var logout = menu.add({ title: "Logout", itemId: LOGOUT });
  logout.setIcon("logout.png");
  logout.addEventListener("click", function(e) {
    loggedIn = false;
    // In Android 3.0 and above we need to call invalidateOptionsMenu() for menu changes at runtime
    win.activity.invalidateOptionsMenu();
  });
};

activity.onPrepareOptionsMenu = function(e) {
  var menu = e.menu;
  menu.findItem(LOGIN).setVisible(!loggedIn);
  menu.findItem(LOGOUT).setVisible(loggedIn);
};
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous simple menu example as an Alloy view.</p>
<p>Due to the way menus are created in Alloy, menus created using Alloy markup are not
displayed until the options menu is invalidated. To force menus (or action items)
to be displayed, call <code>invalidateOptionsMenu</code> from the <code>open</code> event listener of the window or tab group
where the menu is defined.</p>
<p>index.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;!-- Create a heavyweight window to use the Android menu. --&gt;
    &lt;Window id="win" fullscreen="true" onOpen="doOpen"&gt;

        &lt;!-- The Menu tag adds the Android menu. --&gt;
        &lt;Menu id="menu" platform="android"&gt;

            &lt;!-- Cannot specify node text.  Use attributes only. --&gt;
            &lt;MenuItem id="menuItem" title="Item 1" icon="item1.png" onClick="doClick" showAsAction="Ti.Android.SHOW_AS_ACTION_IF_ROOM" /&gt;
        &lt;/Menu&gt;

        &lt;!-- Place additional views here --&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>index.js:</p></p><pre>function doClick(e) {
    Ti.API.info("Menu item clicked: " + e.source.title);
}

// Ensure menu is displayed
function doOpen(e) {
    $.win.invalidateOptionsMenu();
}</pre>
 */
Titanium.Android.Menu = {};

/**
 * @method add
 * <p>Creates a {@link Titanium.Android.MenuItem} from the passed creation options.</p>
 * @param {Object} options 
 * <p>Creation options. Supported options are
{@link Titanium.Android.MenuItem#property-itemId itemId},
{@link Titanium.Android.MenuItem#property-groupId groupId},
{@link Titanium.Android.MenuItem#property-title title},
{@link Titanium.Android.MenuItem#property-order order},
{@link Titanium.Android.MenuItem#property-actionView actionView},
{@link Titanium.Android.MenuItem#property-checkable checkable},
{@link Titanium.Android.MenuItem#property-checked checked},
{@link Titanium.Android.MenuItem#property-enabled enabled},
{@link Titanium.Android.MenuItem#property-icon icon},
{@link Titanium.Android.MenuItem#property-showAsAction showAsAction},
{@link Titanium.Android.MenuItem#property-titleCondensed titleCondensed}, and
{@link Titanium.Android.MenuItem#property-visible visible}.</p>
 * @return {Titanium.Android.MenuItem} 
*/
Titanium.Android.Menu.add = function(options){};

/**
 * @method clear
 * <p>Clears all items from this menu.</p>
 * @description <p>You should release all references you have retained to {@link Titanium.Android.MenuItem} previously created.</p>
 * @return void
*/
Titanium.Android.Menu.clear = function(){};

/**
 * @method close
 * <p>Closes the menu, if visible.</p>
 * @return void
*/
Titanium.Android.Menu.close = function(){};

/**
 * @method findItem
 * <p>Locates a {@link Titanium.Android.MenuItem MenuItem} in this menu, by item ID or reference.</p>
 * @description <p>Returns the identified menu item, or <code>null</code> if the menu item was not located.</p>
 * @param {Number/Titanium.Android.MenuItem} item 
 * <p>Integer {@link Titanium.Android.MenuItem#property-itemId itemId} or a reference to a <code>MenuItem</code> object.</p>
 * @return {Titanium.Android.MenuItem} 
*/
Titanium.Android.Menu.findItem = function(item){};

/**
 * @method getItem
 * <p>Returns the {@link Titanium.Android.MenuItem MenuItem} at a specific index.</p>
 * @description <p>Returns <code>null</code> if no menu item exists at the specified index.</p>
 * @param {Number} index 
 * <p>Index of the menu item to return.</p>
 * @return {Titanium.Android.MenuItem} 
*/
Titanium.Android.Menu.getItem = function(index){};

/**
 * @method getItems
 * <p>Gets the value of the {@link Titanium.Android.Menu#property-items items} property.</p>
 * @return {Titanium.Android.MenuItem[]} 
*/
Titanium.Android.Menu.getItems = function(){};

/**
 * @method hasVisibleItems
 * <p>Returns <code>true</code> if this menu has visible items.</p>
 * @return {Boolean} 
*/
Titanium.Android.Menu.hasVisibleItems = function(){};

/**
 * @method removeGroup
 * <p>Removes all menu items with the specified 
{@link Titanium.Android.MenuItem#property-groupId groupId}.</p>
 * @param {Number} groupId 
 * <p>Group ID of items to remove.</p>
 * @return void
*/
Titanium.Android.Menu.removeGroup = function(groupId){};

/**
 * @method removeItem
 * <p>Removes a specific {@link Titanium.Android.MenuItem MenuItem} identified by its
{@link Titanium.Android.MenuItem#property-itemId itemId}.</p>
 * @param {Number} itemId 
 * <p>Item ID of item to remove.</p>
 * @return void
*/
Titanium.Android.Menu.removeItem = function(itemId){};

/**
 * @method setGroupEnabled
 * <p>Enables or disables a group of menu items identified by a 
{@link Titanium.Android.MenuItem#property-groupId groupId}.</p>
 * @param {Number} groupId 
 * <p>ID of the group to enable or disable.</p>
 * @param {Boolean} enabled 
 * <p>True to enable the specified group, false to disable it.</p>
 * @return void
*/
Titanium.Android.Menu.setGroupEnabled = function(groupId, enabled){};

/**
 * @method setGroupVisible
 * <p>Shows or hides a group of menu items identified by a
{@link Titanium.Android.MenuItem#property-groupId groupId}.</p>
 * @param {Number} groupId 
 * <p>Group ID to enable or disable.</p>
 * @param {Boolean} visible 
 * <p>True to show the group, false to hide it.</p>
 * @return void
*/
Titanium.Android.Menu.setGroupVisible = function(groupId, visible){};

/**
 * @method size
 * <p>Number of items in this menu.</p>
 * @return {Number} 
*/
Titanium.Android.Menu.size = function(){};

/**
 * @property items
 * @type Titanium.Android.MenuItem[]
 * @readonly
 * <p>Array of menu items in this menu.</p>
 */
Titanium.Android.Menu.items = null;

/**
 * @class Titanium.Android.MenuItem
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an Android menu item.</p>
 * @description <p>A menu item for an Android menu. Use {@link Titanium.Android.Menu#method-add Menu.add} to create 
a new menu item. See the {@link Titanium.Android.Menu Menu} reference page for code
examples.</p>
<p>Many properties and methods are only applicable when the menu item is used as an 
action item, with the action bar feature added in Android 3.0 (API level 11). See 
{@link Titanium.Android.Menu Menu} for more information.</p>
<p>See also:
<a href="http://developer.android.com/reference/android/view/MenuItem.html">MenuItem</a> in the
Android Developer Reference.</p>
 */
Titanium.Android.MenuItem = {};




/**
 * @method collapseActionView
 * <p>Collapse the action view associated with this menu item.</p>
 * @description <p>Only works on Android 4.0 (API level 14) or later.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.Android.MenuItem.collapseActionView = function(){};

/**
 * @method expandActionView
 * <p>Expand the action view associated with this menu item.</p>
 * @description <p>Action-bar specific. Only works on Android 4.0 (API level 14) or later. </p>
 * @return void
 * @platform android 3.0
*/
Titanium.Android.MenuItem.expandActionView = function(){};

/**
 * @method getActionView
 * <p>Gets the value of the {@link Titanium.Android.MenuItem#property-actionView actionView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 3.0
*/
Titanium.Android.MenuItem.getActionView = function(){};

/**
 * @method getGroupId
 * <p>Gets the value of the {@link Titanium.Android.MenuItem#property-groupId groupId} property.</p>
 * @return {Number} 
*/
Titanium.Android.MenuItem.getGroupId = function(){};

/**
 * @method getItemId
 * <p>Gets the value of the {@link Titanium.Android.MenuItem#property-itemId itemId} property.</p>
 * @return {Number} 
*/
Titanium.Android.MenuItem.getItemId = function(){};

/**
 * @method getOrder
 * <p>Gets the value of the {@link Titanium.Android.MenuItem#property-order order} property.</p>
 * @return {Number} 
*/
Titanium.Android.MenuItem.getOrder = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.Android.MenuItem#property-title title} property.</p>
 * @return {String} 
*/
Titanium.Android.MenuItem.getTitle = function(){};

/**
 * @method getTitleCondensed
 * <p>Gets the value of the {@link Titanium.Android.MenuItem#property-titleCondensed titleCondensed} property.</p>
 * @return {String} 
*/
Titanium.Android.MenuItem.getTitleCondensed = function(){};

/**
 * @method isActionViewExpanded
 * <p>Returns the {@link Titanium.Android.MenuItem#property-actionViewExpanded actionViewExpanded} state of the menu item.</p>
 * @description <p>Action-bar specific. Only works on Android 4.0 (API level 14) or later. </p>
 * @return {Boolean} 
*/
Titanium.Android.MenuItem.isActionViewExpanded = function(){};

/**
 * @method isCheckable
 * <p>Returns the {@link Titanium.Android.MenuItem#property-checkable checkable} state of the menu item.</p>
 * @return {Boolean} 
*/
Titanium.Android.MenuItem.isCheckable = function(){};

/**
 * @method isChecked
 * <p>Returns the {@link Titanium.Android.MenuItem#property-checked checked} state of the menu item.</p>
 * @return {Boolean} 
*/
Titanium.Android.MenuItem.isChecked = function(){};

/**
 * @method isEnabled
 * <p>Returns the {@link Titanium.Android.MenuItem#property-enabled enabled} state of the menu item.</p>
 * @return {Boolean} 
*/
Titanium.Android.MenuItem.isEnabled = function(){};

/**
 * @method isVisible
 * <p>Returns the {@link Titanium.Android.MenuItem#property-visible visible} state of the menu item.</p>
 * @return {Boolean} 
*/
Titanium.Android.MenuItem.isVisible = function(){};

/**
 * @method setActionView
 * <p>Sets the value of the {@link Titanium.Android.MenuItem#property-actionView actionView} property.</p>
 * @param {Titanium.UI.View} actionView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.Android.MenuItem.setActionView = function(actionView){};

/**
 * @method setCheckable
 * <p>Sets the {@link Titanium.Android.MenuItem#property-checkable checkable} state of the menu item.</p>
 * @param {Boolean} checkable 
 * <p>True enable checking and unchecking this item, false to disable it.</p>
 * @return void
*/
Titanium.Android.MenuItem.setCheckable = function(checkable){};

/**
 * @method setChecked
 * <p>Sets the {@link Titanium.Android.MenuItem#property-checked checked} state of the menu item.</p>
 * @param {Boolean} enabled 
 * <p>True to check the item, false to uncheck it.</p>
 * @return void
*/
Titanium.Android.MenuItem.setChecked = function(enabled){};

/**
 * @method setEnabled
 * <p>Sets the {@link Titanium.Android.MenuItem#property-enabled enabled} state of the menu item.</p>
 * @param {Boolean} enabled 
 * <p>True to enable item, false to disable it.</p>
 * @return void
*/
Titanium.Android.MenuItem.setEnabled = function(enabled){};

/**
 * @method setIcon
 * <p>Sets the value of the {@link Titanium.Android.MenuItem#property-icon icon} property.</p>
 * @param {Number/String} icon 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.MenuItem.setIcon = function(icon){};

/**
 * @method setShowAsAction
 * <p>Sets the value of the {@link Titanium.Android.MenuItem#property-showAsAction showAsAction} property.</p>
 * @param {Number} showAsAction 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.Android.MenuItem.setShowAsAction = function(showAsAction){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.Android.MenuItem#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.MenuItem.setTitle = function(title){};

/**
 * @method setTitleCondensed
 * <p>Sets the value of the {@link Titanium.Android.MenuItem#property-titleCondensed titleCondensed} property.</p>
 * @param {String} titleCondensed 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.MenuItem.setTitleCondensed = function(titleCondensed){};

/**
 * @method setVisible
 * <p>Sets the {@link Titanium.Android.MenuItem#property-visible visible} state of the menu item.</p>
 * @param {Boolean} visible 
 * <p>True to show the item, false to hide it.</p>
 * @return void
*/
Titanium.Android.MenuItem.setVisible = function(visible){};

/**
 * @property actionView
 * @type Titanium.UI.View
 * @platform android 3.0
 * <p>Custom view that replaces the default menu item button.</p>
 * @description <p>Action-bar specific. Only used on Android 3.0 (API level 11) or later. </p>
 */
Titanium.Android.MenuItem.actionView = null;

/**
 * @property actionViewExpanded
 * @type Boolean
 * @readonly
 * @platform android 3.0
 * <p>True if this menu item's action view has been expanded.</p>
 * @description <p>Action-bar specific. Only used on Android 3.0 (API level 11) or later. </p>
 */
Titanium.Android.MenuItem.actionViewExpanded = null;

/**
 * @property [checkable=false]
 * @type Boolean
 * <p>Determines if the item can be checked.</p>
 * @description <p>Note that check marks are not supported in the icon menus (main
options menu shown when fewer than six options are included).
Check marks are discouraged in expanded menus (available when 
six or more options menu items are defined).</p>
 */
Titanium.Android.MenuItem.checkable = null;

/**
 * @property [checked=false]
 * @type Boolean
 * <p>Determines if the item is checked.</p>
 * @description <p>Note that check marks are not supported in the icon menus (main
options menu shown when fewer than six options are included).
Check marks are discouraged in expanded menus (available when 
six or more options menu items are defined).</p>
 */
Titanium.Android.MenuItem.checked = null;

/**
 * @property [enabled=true]
 * @type Boolean
 * <p>Determines if the item is enabled.</p>
 */
Titanium.Android.MenuItem.enabled = null;

/**
 * @property groupId
 * @type Number
 * @readonly
 * @creationOnly
 * <p>Group ID for this item.</p>
 * @description <p>Items that share a group ID may be operated on as a group using
the menu's {@link Titanium.Android.Menu#method-setGroupEnabled setGroupEnabled} and
{@link Titanium.Android.Menu#method-setGroupVisible setGroupVisible} methods.</p>
 */
Titanium.Android.MenuItem.groupId = null;

/**
 * @property icon
 * @type Number/String
 * <p>Icon to display for the this menu item.</p>
 * @description <p>Icons are not displayed in expanded menus.</p>
<p>Icons can be specified as a local image URI or an Android resource ID.</p>
 */
Titanium.Android.MenuItem.icon = null;

/**
 * @property itemId
 * @type Number
 * @readonly
 * @creationOnly
 * <p>Item ID for this item.</p>
 */
Titanium.Android.MenuItem.itemId = null;

/**
 * @property order
 * @type Number
 * @readonly
 * @creationOnly
 * <p>Integer used for controlling the category and sort order for menu items.</p>
 * @description <p>The lower bits of this value control the order of the menu item related to other
menu items within its category. A menu item with a given value will be displayed
before any items with higher values.</p>
<p>The upper bits of the value control the category. These can be set to the values
defined by the <code>CATEGORY</code> constants in the Android <code>Menu</code> class, 
These values are not exposed as constants in Titanium.</p>
<p>See also:</p>
<ul>
<li>
<p><a href="http://developer.android.com/reference/android/view/MenuItem.html#getOrder()">getOrder</a>
    in the Android Developer Reference.</p>
</li>
<li>
<p><a href="http://developer.android.com/reference/android/view/Menu.html">Menu</a> in the
    Android Developer Reference for definitions of the <code>CATEGORY</code> values.</p>
</li>
</ul>
 */
Titanium.Android.MenuItem.order = null;

/**
 * @property showAsAction
 * @type Number
 * @platform android 3.0
 * <p>A set of flags that controls how this item appears in the action bar.</p>
 * @description <p>Action-bar specific. Only used on Android 3.0 (API level 11) or later. </p>
<p>You may set one or more flags (by OR'ing them together) to control how
this menu item should be placed inside the action bar.</p>
<p>To control if your item should be displayed as an action button or
placed in the overflow menu set one of these flags:
  {@link Titanium.Android#property-SHOW_AS_ACTION_ALWAYS SHOW_AS_ACTION_ALWAYS},
  {@link Titanium.Android#property-SHOW_AS_ACTION_IF_ROOM SHOW_AS_ACTION_IF_ROOM},
  or {@link Titanium.Android#property-SHOW_AS_ACTION_NEVER SHOW_AS_ACTION_NEVER}.</p>
<p>If you only wish to display the text label even if the item
has an icon set the {@link Titanium.Android#property-SHOW_AS_ACTION_WITH_TEXT SHOW_AS_ACTION_WITH_TEXT} flag.
Note that the <code>SHOW_AS_ACTION_WITH_TEXT</code> setting is only a hint to the system --
the text may or may not be shown depending on the width of the screen. For
example, text may not be shown on phones in portrait mode. In addition if the
application can be displayed in both portrait and landscape mode, whether or not
the text is displayed depends on the device's orientation <em>when the application
launches</em>. (This is true of both Titanium applications and native Android
applications.) For this reason, using <code>SHOW_AS_ACTION_WITH_TEXT</code> is not recommended
for applications that support both orientions.</p>
<p>If you want to guarantee that text and icon are always visible, you can create a 
button with the text and image, and specify it as the item's <code>actionView</code>.</p>
<p>Starting in Android 4.0 (API level 14) you may specify if your action view
is collapsible. To enable this behavior set the {@link Titanium.Android#property-SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW}.</p>
<p>For a collapsable item, the item button (icon and/or text) is displayed when the item is
collapsed, and the action view is displayed when the item is expanded.</p>
<p>If <code>SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW</code> is <strong>not</strong> specified, any <code>actionView</code>
specified is displayed <em>instead of</em> the item's icon and/or text.</p>
 */
Titanium.Android.MenuItem.showAsAction = null;

/**
 * @property title
 * @type String
 * <p>Title of the item.</p>
 */
Titanium.Android.MenuItem.title = null;

/**
 * @property titleCondensed
 * @type String
 * <p>Shortened version of the item's title.</p>
 * @description <p>If both <code>title</code> and <code>titleCondensed</code> are specified, <code>titleCondensed</code> is used in the 
icon menus, and the <code>title</code> is used in the extended menus.</p>
 */
Titanium.Android.MenuItem.titleCondensed = null;

/**
 * @property [visible=true]
 * @type Boolean
 * <p>Determines whether the menu item is visible.</p>
 */
Titanium.Android.MenuItem.visible = null;

/**
 * @class Titanium.Android.Notification
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an 
<a href="http://developer.android.com/reference/android/app/Notification.html">Android Notification</a>.</p>
 * @description <p>This object is used for status bar notifications.</p>
<p>See the official Android documentation on 
<a href="http://developer.android.com/guide/topics/ui/notifiers/notifications.html">Status Bar Notifications</a>
for an overview of how status bar notifications are used.</p>
<p>If you pass <code>contentTitle</code> and/or <code>contentText</code> into {@link Titanium.Android#method-createNotification}, 
then <code>setLatestEventInfo</code> will automatically be called with those properties.  There's no need 
to call it separately unless you want to update the notification at a later time. You can also 
use a custom <code>layout.xml</code> wrapped in 
a {@link Titanium.Android.RemoteViews} object in the <code>contentView</code> property, which gives more 
fine grained control and customization to how the notification actually behaves.</p>
<p>Use the {@link Titanium.Android.NotificationManager NotificationManager} module to send
and cancel notifications.</p>
<p>For Android "toast" (pop-up) notifications, see {@link Titanium.UI.Notification}.</p>
 */
Titanium.Android.Notification = {};

/**
 * @method getAudioStreamType
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} property.</p>
 * @return {Number} 
*/
Titanium.Android.Notification.getAudioStreamType = function(){};

/**
 * @method getContentIntent
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-contentIntent contentIntent} property.</p>
 * @return {Titanium.Android.PendingIntent} 
*/
Titanium.Android.Notification.getContentIntent = function(){};

/**
 * @method getContentText
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-contentText contentText} property.</p>
 * @return {String} 
*/
Titanium.Android.Notification.getContentText = function(){};

/**
 * @method getContentTitle
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-contentTitle contentTitle} property.</p>
 * @return {String} 
*/
Titanium.Android.Notification.getContentTitle = function(){};

/**
 * @method getDefaults
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-defaults defaults} property.</p>
 * @return {Number} 
*/
Titanium.Android.Notification.getDefaults = function(){};

/**
 * @method getDeleteIntent
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-deleteIntent deleteIntent} property.</p>
 * @return {Titanium.Android.PendingIntent} 
*/
Titanium.Android.Notification.getDeleteIntent = function(){};

/**
 * @method getFlags
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-flags flags} property.</p>
 * @return {Number} 
*/
Titanium.Android.Notification.getFlags = function(){};

/**
 * @method getIcon
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-icon icon} property.</p>
 * @return {Number/String} 
*/
Titanium.Android.Notification.getIcon = function(){};

/**
 * @method getLedARGB
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-ledARGB ledARGB} property.</p>
 * @return {Number} 
*/
Titanium.Android.Notification.getLedARGB = function(){};

/**
 * @method getLedOffMS
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-ledOffMS ledOffMS} property.</p>
 * @return {Number} 
*/
Titanium.Android.Notification.getLedOffMS = function(){};

/**
 * @method getLedOnMS
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-ledOnMS ledOnMS} property.</p>
 * @return {Number} 
*/
Titanium.Android.Notification.getLedOnMS = function(){};

/**
 * @method getNumber
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-number number} property.</p>
 * @return {Number} 
*/
Titanium.Android.Notification.getNumber = function(){};

/**
 * @method getSound
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-sound sound} property.</p>
 * @return {String} 
*/
Titanium.Android.Notification.getSound = function(){};

/**
 * @method getTickerText
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-tickerText tickerText} property.</p>
 * @return {String} 
*/
Titanium.Android.Notification.getTickerText = function(){};

/**
 * @method getWhen
 * <p>Gets the value of the {@link Titanium.Android.Notification#property-when when} property.</p>
 * @return {Date/Number} 
*/
Titanium.Android.Notification.getWhen = function(){};

/**
 * @method setAudioStreamType
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} property.</p>
 * @param {Number} audioStreamType 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setAudioStreamType = function(audioStreamType){};

/**
 * @method setContentIntent
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-contentIntent contentIntent} property.</p>
 * @param {Titanium.Android.PendingIntent} contentIntent 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setContentIntent = function(contentIntent){};

/**
 * @method setContentText
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-contentText contentText} property.</p>
 * @param {String} contentText 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setContentText = function(contentText){};

/**
 * @method setContentTitle
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-contentTitle contentTitle} property.</p>
 * @param {String} contentTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setContentTitle = function(contentTitle){};

/**
 * @method setContentView
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-contentView contentView} property.</p>
 * @param {Titanium.Android.RemoteViews} contentView 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setContentView = function(contentView){};

/**
 * @method setDefaults
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-defaults defaults} property.</p>
 * @param {Number} defaults 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setDefaults = function(defaults){};

/**
 * @method setDeleteIntent
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-deleteIntent deleteIntent} property.</p>
 * @param {Titanium.Android.PendingIntent} deleteIntent 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setDeleteIntent = function(deleteIntent){};

/**
 * @method setFlags
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-flags flags} property.</p>
 * @param {Number} flags 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setFlags = function(flags){};

/**
 * @method setIcon
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-icon icon} property.</p>
 * @param {Number/String} icon 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setIcon = function(icon){};

/**
 * @method setLatestEventInfo
 * <p>Sets the latest event info using the built-in Notification View for this notification.</p>
 * @description <p>See the official Android documentation for 
<a href="http://developer.android.com/reference/android/app/Notification.html#setLatestEventInfo(android.content.Context,%20java.lang.CharSequence,%20java.lang.CharSequence,%20android.app.PendingIntent)">Notification.setLatestEventInfo</a>.</p>
 * @param {String} contentTitle 
 * <p>Title to display when the notification is expanded.</p>
 * @param {String} contentText 
 * <p>Text to display when the notification is expanded.</p>
 * @param {Titanium.Android.PendingIntent} contentIntent 
 * <p>Intent to launch when the user clicks on the notification.</p>
 * @return void
*/
Titanium.Android.Notification.setLatestEventInfo = function(contentTitle, contentText, contentIntent){};

/**
 * @method setLedARGB
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-ledARGB ledARGB} property.</p>
 * @param {Number} ledARGB 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setLedARGB = function(ledARGB){};

/**
 * @method setLedOffMS
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-ledOffMS ledOffMS} property.</p>
 * @param {Number} ledOffMS 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setLedOffMS = function(ledOffMS){};

/**
 * @method setLedOnMS
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-ledOnMS ledOnMS} property.</p>
 * @param {Number} ledOnMS 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setLedOnMS = function(ledOnMS){};

/**
 * @method setNumber
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-number number} property.</p>
 * @param {Number} number 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setNumber = function(number){};

/**
 * @method setSound
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-sound sound} property.</p>
 * @param {String} sound 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setSound = function(sound){};

/**
 * @method setTickerText
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-tickerText tickerText} property.</p>
 * @param {String} tickerText 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setTickerText = function(tickerText){};

/**
 * @method setWhen
 * <p>Sets the value of the {@link Titanium.Android.Notification#property-when when} property.</p>
 * @param {Date/Number} when 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Android.Notification.setWhen = function(when){};

/**
 * @property audioStreamType
 * @type Number
 * <p>The audio stream type to use when playing the sound.</p>
 * @description <p>Specify one of the <code>STREAM</code> constants from {@link Titanium.Android}.</p>
 */
Titanium.Android.Notification.audioStreamType = null;

/**
 * @property contentIntent
 * @type Titanium.Android.PendingIntent
 * <p>The <code>PendingIntent</code> to execute when the expanded status entry is clicked.</p>
 */
Titanium.Android.Notification.contentIntent = null;

/**
 * @property contentText
 * @type String
 * <p>Description text of the notification.</p>
 */
Titanium.Android.Notification.contentText = null;

/**
 * @property contentTitle
 * @type String
 * <p>Title of the notification.</p>
 */
Titanium.Android.Notification.contentTitle = null;

/**
 * @property contentView
 * @type Titanium.Android.RemoteViews
 * <p>Custom layout to display in the notification.</p>
 * @description <p>Calling {@link Titanium.Android.Notification#method-setLatestEventInfo setLatestEventInfo} or
setting the <code>contentText</code> or <code>contentTitle</code> properties causes the notification to use
the default notification layout, overriding any custom layout set through
<code>contentView</code>.</p>
<p>If you use a custom layout, you can use the
{@link Titanium.Android.RemoteViews RemoteViews} methods to update the displayed
notification.</p>
 */
Titanium.Android.Notification.contentView = null;

/**
 * @property defaults
 * @type Number
 * <p>Specifies which values should be taken from the defaults.</p>
 * @description <p>Specify the bitwise OR of the desired values: 
{@link Titanium.Android#property-DEFAULT_LIGHTS}, {@link Titanium.Android#property-DEFAULT_SOUND}, and
{@link Titanium.Android#property-DEFAULT_VIBRATE}. Use {@link Titanium.Android#property-DEFAULT_ALL} to specify
that all values should be taken from the defaults.</p>
 */
Titanium.Android.Notification.defaults = null;

/**
 * @property deleteIntent
 * @type Titanium.Android.PendingIntent
 * <p>The <code>PendingIntent</code> to execute when the status entry is deleted by the user with the "Clear All Notifications" button.</p>
 */
Titanium.Android.Notification.deleteIntent = null;

/**
 * @property [flags={@link Titanium.Android#property-FLAG_AUTO_CANCEL}.]
 * @type Number
 * <p>Set of flags for the notification.</p>
 * @description <p>Possible values: {@link Titanium.Android#property-FLAG_AUTO_CANCEL}, {@link Titanium.Android#property-FLAG_INSISTENT}, 
{@link Titanium.Android#property-FLAG_NO_CLEAR}, {@link Titanium.Android#property-FLAG_ONGOING_EVENT}, 
{@link Titanium.Android#property-FLAG_ONLY_ALERT_ONCE}, {@link Titanium.Android#property-FLAG_SHOW_LIGHTS}</p>
 */
Titanium.Android.Notification.flags = null;

/**
 * @property icon
 * @type Number/String
 * <p>Notification icon, specified as an Android resource ID, or a local URL to a density-specific image.</p>
 * @description <p>If specified as a URL, the icon must be placed in one of the density-specific
folders under <code>Resources/android/images</code>. For example, if your icon is called
<code>my_icon.png</code>, you would create high- and medium-density versions of the icons
with the following paths:</p>
<pre><code>Resources/android/images/res-hdpi/my_icon.png
Resources/android/images/res-mdpi/my_icon.png
</code></pre>
<p>To access this icon, you'd use the URL '/images/my_icon.png'.</p>
<p>To access the same icon using an Android resource ID, place the icon in:</p>
<pre><code>platform/android/res/drawable/my_icon.png
</code></pre>
<p>This icon's resource ID can be referenced through the {@link Titanium.App.Android.R}
object:</p>
<pre><code>icon: Ti.App.Android.R.drawable.my_icon,
</code></pre>
<p>See {@link Titanium.App.Android.R} for more information on accessing 
Android resources by ID.</p>
 */
Titanium.Android.Notification.icon = null;

/**
 * @property ledARGB
 * @type Number
 * <p>The color for the LED to blink.</p>
 */
Titanium.Android.Notification.ledARGB = null;

/**
 * @property ledOffMS
 * @type Number
 * <p>The number of milliseconds for the LED to be off while it's flashing.</p>
 */
Titanium.Android.Notification.ledOffMS = null;

/**
 * @property ledOnMS
 * @type Number
 * <p>The number of milliseconds for the LED to be on while it's flashing.</p>
 */
Titanium.Android.Notification.ledOnMS = null;

/**
 * @property number
 * @type Number
 * <p>The number of events that this notification represents.</p>
 */
Titanium.Android.Notification.number = null;

/**
 * @property sound
 * @type String
 * <p>A URL to the sound to play.</p>
 * @description <p>The URL cannot refer to a file in the Resources directory, but it can refer to
a file in the raw resources directory
({@link Titanium.Filesystem#property-resRawDirectory Filesystem.resRawDirectory}) or the
external storage directory
({@link Titanium.Filesystem#property-externalStorageDirectory Filesystem.externalStorageDirectory}).</p>
<p>To create a raw resource, place the audio file in the <code>platform/android/res/raw</code> 
folder and reference it as:</p>
<pre><code>notification.sound = Ti.Filesystem.getResRawDirectory() + audioFileName;
</code></pre>
<p>To play a file from the Resources directory, first copy it to external storage. For example, you
could define the following function:</p>
<pre><code>// Copy resource file to SD card, and return a native path.
// Return undefined if we can't copy the file.
function getOrCopyAudioFile(resourceFilename) {
    var outFile = Ti.Filesystem.getFile(Ti.Filesystem.externalStorageDirectory, 'sound', 'cricket.wav');
    var outPath = outFile.nativePath;

    if (! outFile.exists()) {
        var outDir = Ti.Filesystem.getFile(Ti.Filesystem.externalStorageDirectory, 'sound');
        if (! outDir.isDirectory()) {
            if (! outDir.createDirectory()) {
                Ti.API.debug("Failed to create directory.");
                outDir = null;
                return undefined;
            }
        }
        outDir = null;

        var inFile = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, 'cricket.wav');
        try {
            inFile.copy(outPath);
        } catch (ex) {
            Ti.API.debug("Failed to copy file.");
            inFile = null;
            return undefined;
        }
        inFile = null;
    }
    outFile = null;
    return outPath;
}
</code></pre>
<p>Then when creating a notification, specify the sound like this:</p>
<pre><code>var sound = getOrCopyAudioFile();
if (sound) {
    notification.sound = sound;
}
</code></pre>
 */
Titanium.Android.Notification.sound = null;

/**
 * @property tickerText
 * @type String
 * <p>Text to scroll across the screen when this item is added to the status bar.</p>
 */
Titanium.Android.Notification.tickerText = null;

/**
 * @property when
 * @type Date/Number
 * <p>The timestamp for the notification (defaults to the current time).</p>
 * @description <p>If the timestamp is set to 0, no time is displayed in the notification
window for this notification.</p>
 */
Titanium.Android.Notification.when = null;

/**
 * @class Titanium.Android.NotificationManager
 * @typestr Submodule of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Module
 * <p>Module for managing status bar notifications.</p>
 * @description <p>This module provides methods for sending and canceling status bar notifications,
which are represented by the {@link Titanium.Android.Notification} object.</p>
<p>The <code>NotificationManager</code> module is a thin wrapper on the Android <code>NotificationManager</code>
class. The constants in this module are derived from the Android <code>Notification</code> class.</p>
<p>See also:</p>
<ul>
<li>
<p><a href="#!/guide/Android_Notifications">Android Notifications in the Titanium Mobile Guides</a></p>
</li>
<li>
<p><a href="http://developer.android.com/guide/topics/ui/notifiers/notifications.html">Status Bar Notifications in the Android Developer Guide</a></p>
</li>
<li>
<p><a href="http://developer.android.com/reference/android/app/NotificationManager.html">NotificationManager in the Android API Reference</a> </p>
</li>
<li>
<p><a href="http://developer.android.com/reference/android/app/Notification.html">Notification in the Android API Reference</a> </p>
</li>
</ul>
 * <h3>Example</h3>
 * <h4>Simple Notification Example</h4>
 * <p><p>The following example shows how to create a notification that launches the
application when the user clicks on the notification.</p>
<p>The {@link Titanium.Android.Intent Intent} object associated with the notification determines 
what happens when the user clicks on the notification. In this case, we simply launch the application.
The intent in this sample uses a className to identify the activity to launch. </p>
<p>A Titanium application's main activity generally has the class name:</p>
<p><i>&lt;app_id&gt;.&lt;Appname&gt;</i><b>Activity</b> </p>
<p>where <i>&lt;app_id&gt;</i> is the application's app ID, and <i>&lt;Appname&gt;</i>
is the application's name, with the first letter capitalized and all other letters
lowercase.</p>
<p>For example, in this case the test application has the app ID
<code>com.appcelerator.notificationsample</code> and app name <code>NotificationSample</code>, so the 
activity class name is:</p></p><pre>com.appcelerator.notificationsample.NotificationsampleActivity
</pre>
 * <p><p>You can also find the activity's class name by looking in the <code>build/android</code> folder of your 
Titanium project.</p>
<p>The notification icon must be specified as an Android resource ID. In this case,
the icon, <code>my_icon.png</code> would be placed in
<code>platforms/android/res/drawable/my_icon.png</code>.
See {@link Titanium.App.Android.R} for more information.</p>
<p>This example doesn't include a custom alert sound. For information on adding a
custom alert sound, see {@link Titanium.Android.Notification#property-sound Notification.sound}.</p></p><pre>// Intent object to launch the application 
var intent = Ti.Android.createIntent({
    flags : Ti.Android.FLAG_ACTIVITY_CLEAR_TOP | Ti.Android.FLAG_ACTIVITY_NEW_TASK,
    // Substitute the correct classname for your application
    className : 'com.appcelerator.notificationsample.NotificationsampleActivity',
});
intent.addCategory(Ti.Android.CATEGORY_LAUNCHER);

// Create a PendingIntent to tie together the Activity and Intent
var pending = Titanium.Android.createPendingIntent({
    intent: intent,
    flags: Titanium.Android.FLAG_UPDATE_CURRENT
});

// Create the notification
var notification = Titanium.Android.createNotification({
// icon is passed as an Android resource ID -- see Ti.App.Android.R.
    icon: Ti.App.Android.R.drawable.my_icon,
contentTitle: 'Something Happened',
contentText : 'Click to return to the application.',
contentIntent: pending
});
// Send the notification.
Titanium.Android.NotificationManager.notify(1, notification);</pre>
 */
Titanium.Android.NotificationManager = {};

/**
 * @method cancel
 * <p>Cancels a previously displayed notification.</p>
 * @param {Number} id 
 * <p>The ID passed to {@link Titanium.Android.NotificationManager#method-notify notify}.</p>
 * @return void
*/
Titanium.Android.NotificationManager.cancel = function(id){};

/**
 * @method cancelAll
 * <p>Cancels all previously displayed notifications.</p>
 * @return void
*/
Titanium.Android.NotificationManager.cancelAll = function(){};

/**
 * @method notify
 * <p>Adds a persistent notification to the status bar.</p>
 * @description <p>The new notification <em>replaces</em> any previous notification with the same <code>id</code>.</p>
 * @param {Number} id 
 * <p>An ID that may be used to cancel a shown notification.</p>
 * @param {Titanium.Android.Notification} notification 
 * <p>Notification to display.</p>
 * @return void
*/
Titanium.Android.NotificationManager.notify = function(id, notification){};

/**
 * @property DEFAULT_ALL
 * @type Number
 * @readonly
 * <p>Use all default settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_ALL">Notification.DEFAULT_ALL in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.DEFAULT_ALL = null;

/**
 * @property DEFAULT_LIGHTS
 * @type Number
 * @readonly
 * <p>Use the default light settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_LIGHTS">Notification.DEFAULT_LIGHTS in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.DEFAULT_LIGHTS = null;

/**
 * @property DEFAULT_SOUND
 * @type Number
 * @readonly
 * <p>Use the default sound settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_SOUND">Notification.DEFAULT_SOUND in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.DEFAULT_SOUND = null;

/**
 * @property DEFAULT_VIBRATE
 * @type Number
 * @readonly
 * <p>Use the default vibration settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_VIBRATE">Notification.DEFAULT_VIBRATE in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.DEFAULT_VIBRATE = null;

/**
 * @property FLAG_AUTO_CANCEL
 * @type Number
 * @readonly
 * <p>Cancel the notification when it is clicked by the user.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_AUTO_CANCEL">Notification.FLAG_AUTO_CANCEL in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.FLAG_AUTO_CANCEL = null;

/**
 * @property FLAG_INSISTENT
 * @type Number
 * @readonly
 * <p>Repeat audio until the notification is cancelled or the notification window
is opened.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_INSISTENT">Notification.FLAG_INSISTENT in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.FLAG_INSISTENT = null;

/**
 * @property FLAG_NO_CLEAR
 * @type Number
 * @readonly
 * <p>Do not cancel the notification when the user clicks the Clear All button.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_NO_CLEAR">Notification.FLAG_NO_CLEAR in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.FLAG_NO_CLEAR = null;

/**
 * @property FLAG_ONGOING_EVENT
 * @type Number
 * @readonly
 * <p>Specifies that a notification is in reference to something that is ongoing, like a phone call.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_ONGOING_EVENT">Notification.FLAG_ONGOING_EVENT in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.FLAG_ONGOING_EVENT = null;

/**
 * @property FLAG_ONLY_ALERT_ONCE
 * @type Number
 * @readonly
 * <p>Play an alert (sound, lights, and/or vibration) once each time the notification is sent, even 
if it has not been canceled before that.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_ONLY_ALERT_ONCE">Notification.FLAG_ONLY_ALERT_ONCE in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.FLAG_ONLY_ALERT_ONCE = null;

/**
 * @property FLAG_SHOW_LIGHTS
 * @type Number
 * @readonly
 * <p>Use LED lights to alert the user to the notification.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_SHOW_LIGHTS">Notification.FLAG_SHOW_LIGHTS in the Android API Reference</a>.</p>
 */
Titanium.Android.NotificationManager.FLAG_SHOW_LIGHTS = null;

/**
 * @property STREAM_DEFAULT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to request that the default stream type for notifications be used.</p>
 */
Titanium.Android.NotificationManager.STREAM_DEFAULT = null;

/**
 * @class Titanium.Android.PendingIntent
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an Android <code>PendingIntent</code>.</p>
 * @description <p>Use the {@link Titanium.Android#method-createPendingIntent} method to create a pending intent.</p>
<p>The type of <code>Intent</code> you pass to <code>createPendingIntent</code>  determines what kind of 
<code>PendingIntent</code> is created.  Each type corresponds directly with a get method on 
Android's PendingIntent:</p>
<ul>
<li>
<p>To create a <code>PendingIntent</code> that starts an activity, pass in an activity intent, 
    created with {@link Titanium.Android#method-createIntent createIntent}. This is equivalent to
    calling the native Android <code>PendingIntent.getActivity</code> method. See
    <a href="http://developer.android.com/reference/android/app/PendingIntent.html#getActivity(android.content.Context,%20int,%20android.content.Intent,%20int)">PendingIntent.getActivity in the Android API Reference</a></p>
</li>
<li>
<p>To create a <code>PendingIntent</code> that starts a service, pass in a service intent,
    created with {@link Titanium.Android#method-createServiceIntent createServiceIntent}. This is 
     equivalent to calling the native Android <code>PendingIntent.getService</code> method. See 
     <a href="http://developer.android.com/reference/android/app/PendingIntent.html#getService(android.content.Context,%20int,%20android.content.Intent,%20int)">PendingIntent.getService in the Android API Reference</a>.</p>
</li>
</ul>
<p>The <code>PendingIntent</code> is always associated with the activity that was the current activity
when the intent was created.</p>
<p>Note that this <code>PendingIntent</code> is designed primarily to be used with the 
{@link Titanium.Android.Notification Notification} object. It does not support all features 
of the native Android <code>PendingIntent</code> -- in particular, 
broadcast pending intents are not supported.</p>
<p>See also: </p>
<ul>
<li><a href="http://developer.android.com/reference/android/app/PendingIntent.html">PendingIntent in the Android API Reference</a></li>
</ul>
 */
Titanium.Android.PendingIntent = {};

/**
 * @method getFlags
 * <p>Gets the value of the {@link Titanium.Android.PendingIntent#property-flags flags} property.</p>
 * @return {Number} 
*/
Titanium.Android.PendingIntent.getFlags = function(){};

/**
 * @method getIntent
 * <p>Gets the value of the {@link Titanium.Android.PendingIntent#property-intent intent} property.</p>
 * @return {Titanium.Android.Intent} 
*/
Titanium.Android.PendingIntent.getIntent = function(){};

/**
 * @method getUpdateCurrentIntent
 * <p>Gets the value of the {@link Titanium.Android.PendingIntent#property-updateCurrentIntent updateCurrentIntent} property.</p>
 * @return {Boolean} 
*/
Titanium.Android.PendingIntent.getUpdateCurrentIntent = function(){};

/**
 * @property flags
 * @type Number
 * @creationOnly
 * <p>Flags used for creating the Pending Intent.</p>
 * @description <p>Possible values are {@link Titanium.Android#property-FLAG_CANCEL_CURRENT}, {@link Titanium.Android#property-FLAG_NO_CREATE}, 
{@link Titanium.Android#property-FLAG_ONE_SHOT}, and {@link Titanium.Android#property-FLAG_UPDATE_CURRENT}.</p>
 */
Titanium.Android.PendingIntent.flags = null;

/**
 * @property intent
 * @type Titanium.Android.Intent
 * @creationOnly
 * <p>The intent data to pass to the {@link Titanium.Android.Activity Activity} launched by this <code>PendingIntent</code>.</p>
 */
Titanium.Android.PendingIntent.intent = null;

/**
 * @property updateCurrentIntent
 * @type Boolean
 * @creationOnly
 * <p>If this property is true, flag {@link Titanium.Android#property-FLAG_UPDATE_CURRENT} will be
appended to <code>flags</code> automatically. Default value is true.</p>
 */
Titanium.Android.PendingIntent.updateCurrentIntent = null;

/**
 * @class Titanium.Android.R
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of the Android system-wide resources class.</p>
 * @description <p>To access your application's resources, use {@link Titanium.App.Android.R}.</p>
<p>These properties and sub-properties correspond directly to the properties of the the <code>android.R</code> 
class, and should have the same syntax. For example, to retrieve the "OK" string in Android:</p>
<pre><code>Ti.Android.currentActivity.getString(Ti.Android.R.string.ok);
</code></pre>
<p>See also: <a href="http://developer.android.com/reference/android/R.html">android.R</a> in the
Android Developer Reference.</p>
 */
Titanium.Android.R = {};

/**
 * @property anim
 * @type Object
 * @readonly
 * <p>Animation resources. See 
<a href="http://developer.android.com/reference/android/R.anim.html">R.anim</a> 
in the Android Developer Reference.</p>
 */
Titanium.Android.R.anim = null;

/**
 * @property array
 * @type Object
 * @readonly
 * <p>Array resources. See <a href="http://developer.android.com/reference/android/R.array.html">R.array</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.array = null;

/**
 * @property attr
 * @type Object
 * @readonly
 * <p>Attribute resources. See 
<a href="http://developer.android.com/reference/android/R.attr.html">R.attr</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.attr = null;

/**
 * @property color
 * @type Object
 * @readonly
 * <p>Color resources. See 
<a href="http://developer.android.com/reference/android/R.color.html">R.color</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.color = null;

/**
 * @property dimen
 * @type Object
 * @readonly
 * <p>Dimension resources.  See 
<a href="http://developer.android.com/reference/android/R.dimen.html">http://developer.android.com/reference/android/R.dimen.html</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.dimen = null;

/**
 * @property drawable
 * @type Object
 * @readonly
 * <p>Drawable resources. See 
<a href="http://developer.android.com/reference/android/R.drawable.html">R.drawable</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.drawable = null;

/**
 * @property id
 * @type Object
 * @readonly
 * <p>ID resources.  See 
<a href="http://developer.android.com/reference/android/R.id.html">R.id</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.id = null;

/**
 * @property integer
 * @type Object
 * @readonly
 * <p>Integer resources. See 
<a href="http://developer.android.com/reference/android/R.integer.html">R.integer</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.integer = null;

/**
 * @property layout
 * @type Object
 * @readonly
 * <p>Layout resources. See 
<a href="http://developer.android.com/reference/android/R.layout.html">R.layout</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.layout = null;

/**
 * @property string
 * @type Object
 * @readonly
 * <p>String resources. See 
<a href="http://developer.android.com/reference/android/R.string.html">R.string</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.string = null;

/**
 * @property style
 * @type Object
 * @readonly
 * <p>Style resources. See 
<a href="http://developer.android.com/reference/android/R.style.html">R.style</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.style = null;

/**
 * @property styleable
 * @type Object
 * @readonly
 * <p>Styleable reosurces. See 
<a href="http://developer.android.com/reference/android/R.styleable.html">R.styleable</a>
in the Android Developer Reference.</p>
 */
Titanium.Android.R.styleable = null;

/**
 * @class Titanium.Android.RemoteViews
 * @typestr Object of Titanium.Android
 * @platform android 1.6
 * @extends Titanium.Proxy
 * <p>The Titanium binding of <a href="http://developer.android.com/reference/android/widget/RemoteViews.html">Android RemoteViews</a>. </p>
 * @description <p><code>RemoteViews</code> is an API for referencing and updating a remote view hierarchy that
lives in another process, for example, in a {@link Titanium.Android.Notification Notification}.</p>
<p>To create a remote view hierarchy, you must define an Android XML layout for the views
you want to display, and place the XML file in the <code>platform/android/res/layout</code> inside your
project folder. See the examples for a sample XML layout and sample code for creating a
remote view.</p>
<p>To use a remote view hierarchy in a notification, see
{@link Titanium.Android.Notification#property-contentView Notification.contentView}.</p>
<p>Because the remote view hierarchy belongs to another process, you cannot call methods on it
directly, but you can call methods on the <code>RemoteViews</code> object to update views in the
heirarchy by ID. To reference a view inside the layout, use the
{@link Titanium.App.Android.R} object to reference the view's ID. For example, if you have a 
view with the ID <code>notify_imageview</code>, you can refer to it using:</p>
<pre><code>Ti.App.Android.R.id.notify_imageview
</code></pre>
<p>See also: </p>
<ul>
<li>
<p><a href="http://developer.android.com/reference/android/widget/RemoteViews.html">RemoteViews</a>
    in the Android Developer Reference.</p>
</li>
<li>
<p><a href="http://developer.android.com/guide/topics/ui/declaring-layout.html">XML Layouts</a>
    in the Android Developer Guide.</p>
</li>
</ul>
 * <h3>Example</h3>
 * <h4>Create a Remote View</h4>
 * <p><p>The following code excerpt creates a <code>RemoteViews</code> object based on a custom layout 
called <code>custom_layout.xml</code>, and set a label's text.</p></p><pre>var AppR = Ti.App.Android.R;
var customLayout = Ti.Android.createRemoteViews({ layoutId: AppR.layout.custom_layout });
customLayout.setTextViewText(AppR.id.custom_text, "Click Me!");
</pre>
 * <p><p>This example uses a simple custom layout:</p></p><pre>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="fill_parent" 
        android:layout_height="fill_parent" 
        android:orientation="vertical" &gt;
    &lt;TextView android:id="@+id/custom_text"
            android:layout_width="fill_parent"
            android:layout_height="fill_parent"
            android:background="#ffffff"
            android:textColor="#aaff0000"
            android:textStyle="italic"
            android:gravity="center"
            android:text="Hello, I am a TextView" /&gt;
&lt;/LinearLayout&gt;
</pre>
 * <p><p>The layout file for this example must be placed in
<code>platform/android/res/layout/custom_layout.xml</code>. </p></p>
 */
Titanium.Android.RemoteViews = {};

/**
 * @method getLayoutId
 * <p>Gets the value of the {@link Titanium.Android.RemoteViews#property-layoutId layoutId} property.</p>
 * @return {Number} 
*/
Titanium.Android.RemoteViews.getLayoutId = function(){};

/**
 * @method getPackageName
 * <p>Gets the value of the {@link Titanium.Android.RemoteViews#property-packageName packageName} property.</p>
 * @return {String} 
*/
Titanium.Android.RemoteViews.getPackageName = function(){};

/**
 * @method setBoolean
 * <p>Calls a method taking a single <code>boolean</code> argument on a view in the remote view
hierarchy.  See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setBoolean(int,%20java.lang.String,%20boolean)">setBoolean</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to invoke the method on.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {String} methodName 
 * <p>Name of the method to call.</p>
 * @param {Boolean} value 
 * <p>Value to pass to the method.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setBoolean = function(viewId, methodName, value){};

/**
 * @method setChronometer
 * <p>Sets the base time, format string, and started flag for a chronometer
in the remote view hierarchy.</p>
 * @description <p>See Android's documentation for 
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setChronometer(int,%20long,%20java.lang.String,%20boolean)">setChronometer</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the Chronometer to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {Date} base 
 * <p>Time at which the timer would have read 0:00.</p>
 * @param {String} format 
 * <p>Chronometer format string, or <code>null</code> to simply display the timer value.</p>
 * @param {Boolean} started 
 * <p>True if you want the clock to be started, false if not.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setChronometer = function(viewId, base, format, started){};

/**
 * @method setDouble
 * <p>Calls a method taking a single <code>double</code> argument on a view in the remote view
hierarchy.</p>
 * @description <p>See Android's documentation for 
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setDouble(int,%20java.lang.String,%20double)">setDouble</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {String} methodName 
 * <p>Name of the method to call.</p>
 * @param {Number} value 
 * <p>Value to pass to the method.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setDouble = function(viewId, methodName, value){};

/**
 * @method setImageViewResource
 * <p>Sets the image for an image view in the remote view hierarchy using an Android drawable resource.</p>
 * @description <p>See Android's documentation for 
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setImageViewResource(int,%20int)">setImageViewResource</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the <code>ImageView</code> to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {Number} srcId 
 * <p>Resource ID of the new image.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setImageViewResource = function(viewId, srcId){};

/**
 * @method setImageViewUri
 * <p>Sets the image for an image view in the remote view hierarchy using a URI.</p>
 * @description <p>This method supports supports both Android and Titanium URLs. </p>
<p>See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setImageViewUri(int,%20android.net.Uri)">setImageViewUri</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the <code>ImageView</code> to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {String} uri 
 * <p>URI of the image (both Android and Titanium URLs are supported).</p>
 * @return void
*/
Titanium.Android.RemoteViews.setImageViewUri = function(viewId, uri){};

/**
 * @method setInt
 * <p>Calls a method taking a single <code>int</code> argument on a view in the remote view hierarchy.</p>
 * @description <p>See Android's documentation for <a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setInt(int,%20java.lang.String,%20int)">setInt</a></p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {String} methodName 
 * <p>Name of the method to call.</p>
 * @param {Number} value 
 * <p>Value to pass to the method.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setInt = function(viewId, methodName, value){};

/**
 * @method setOnClickPendingIntent
 * <p>Launches a {@link Titanium.Android.PendingIntent} when the specified view is clicked.</p>
 * @description <p>See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setOnClickPendingIntent(int,%20android.app.PendingIntent)">setOnClickPendingIntent</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to add a click listener to.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {Titanium.Android.PendingIntent} pendingIntent 
 * <p>The <code>PendingIntent</code> to execute when this view is clicked.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setOnClickPendingIntent = function(viewId, pendingIntent){};

/**
 * @method setProgressBar
 * <p>Sets the progress, max value, and indeterminate flag of a progress bar in the
remote view hierarchy.</p>
 * @description <p>See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setProgressBar(int,%20int,%20int,%20boolean)">setProgressBar</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the progress bar to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {Number} max 
 * <p>The new maximum value of the progress bar.</p>
 * @param {Number} progress 
 * <p>The new progress value of the progress bar (from 0..<code>max</code>).</p>
 * @param {Boolean} indeterminate 
 * <p>Determines whether the progress bar is indeterminate.
If <code>true</code>, the progress bar displays an infinite looping animation.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setProgressBar = function(viewId, max, progress, indeterminate){};

/**
 * @method setString
 * <p>Calls a method taking a single String argument on a view in the remote view
hierarchy.</p>
 * @description <p>See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setString(int,%20java.lang.String,%20java.lang.String)">setString</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {String} methodName 
 * <p>Name of the method to call.</p>
 * @param {String} value 
 * <p>String to pass to the method.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setString = function(viewId, methodName, value){};

/**
 * @method setTextColor
 * <p>Sets the text color of a view in the remote view hierarchy.</p>
 * @description <p>See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setTextColor(int,%20int)">setTextColor</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {Number} color 
 * <p>Color as an integer.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setTextColor = function(viewId, color){};

/**
 * @method setTextViewText
 * <p>Sets the text of a text view in the remote view hierarchy.</p>
 * @description <p>See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setTextViewText(int,%20java.lang.CharSequence)">setTextViewText</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the text view to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {String} text 
 * <p>New text for the text view.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setTextViewText = function(viewId, text){};

/**
 * @method setUri
 * <p>Calls a method taking one URI on a view in the remote view hierarchy.</p>
 * @description <p>See Android's documentation for
<a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setUri(int,%20java.lang.String,%20android.net.Uri)">setUri</a>.</p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to update.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {String} methodName 
 * <p>Name of the method to call.</p>
 * @param {String} value 
 * <p>URI (as a string) to pass to the method.</p>
 * @return void
*/
Titanium.Android.RemoteViews.setUri = function(viewId, methodName, value){};

/**
 * @method setViewVisibility
 * <p>Sets the visibility of a view in the remote view hierarchy.</p>
 * @description <p>See Android's documentation for <a href="http://developer.android.com/reference/android/widget/RemoteViews.html#setViewVisibility(int,%20int)">setViewVisibility</a></p>
 * @param {Number} viewId 
 * <p>Resource ID of the view to show or hide.
Application-specific resource IDs can be specified using {@link Titanium.App.Android.R}.</p>
 * @param {Number} visibility 
 * <p>The visibility. Either <code>0</code> (VISIBLE), <code>4</code> (INVISIBLE) or <code>8</code> (GONE).</p>
 * @return void
*/
Titanium.Android.RemoteViews.setViewVisibility = function(viewId, visibility){};

/**
 * @property layoutId
 * @type Number
 * @creationOnly
 * <p>Android layout resource ID for the view to display. Required.</p>
 * @description <p>To define a custom layout resource in your application, the XML layout file 
should be placed in <code>platform/android/res/layout</code> folder inside your project folder.</p>
<p>Use {@link Titanium.App.Android.R} to reference the ID of the layout.</p>
 */
Titanium.Android.RemoteViews.layoutId = null;

/**
 * @property packageName
 * @type String
 * @creationOnly
 * <p>Package name that the resource ID lives in. Optional.</p>
 */
Titanium.Android.RemoteViews.packageName = null;

/**
 * @class Titanium.Android.Service
 * @typestr Object of Titanium.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of an Android service.</p>
 * @description <p>This object can be used to start or stop a service directly and listen for service-specific events.  </p>
<p>From a JavaScript-based service, this can be referenced with {@link Titanium.Android#property-currentService}.  </p>
<p>Use the {@link Titanium.Android#method-createService} method to create an instance of a service.</p>
<p>See also <a href="http://developer.android.com/reference/android/app/Service.html">Service</a>
in the Android Developer Reference.</p>
 * <h3>Example</h3>
 * <h4>Hello World Service</h4>
 * <p><p>This example shows how to create a service in JavaScript.
Your service code is included in its own JavaScript file.  </p>
<p>In this example, the service reads data from the {@link Titanium.Android.Intent} which created it, 
to see what it should say besides "Hello World".</p>
<p>File: myservice.js:</p></p><pre>var service = Titanium.Android.currentService;
var intent = service.intent;
var message = intent.getStringExtra("message_to_echo");
Titanium.API.info("Hello World!  I am a Service.  I have this to say: " + message);
</pre>
 * <p><p>Register the service in tiapp.xml:</p></p><pre>&lt;android xmlns:android="http://schemas.android.com/apk/res/android"&gt;
    &lt;services&gt;
        &lt;service url="myservice.js" type="interval"/&gt;
    &lt;/services&gt;
&lt;/android&gt;
</pre>
 * <p><p>Code in "regular" Titanium file to launch the service and listen for pause/resume events.<br />
Code also stops the service after its code runs 3 times.</p></p><pre>var intent = Titanium.Android.createServiceIntent( { url: 'myservice.js' } );
// Service should run its code every 2 seconds.
intent.putExtra('interval', 2000);
// A message that the service should 'echo'
intent.putExtra('message_to_echo', 'Titanium rocks!');

var service = Titanium.Android.createService(intent);
service.addEventListener('resume', function(e) {
    Titanium.API.info('Service code resumes, iteration ' + e.iteration);
});
service.addEventListener('pause', function(e) {
    Titanium.API.info('Service code pauses, iteration ' + e.iteration);
    if (e.iteration === 3) {
        Titanium.API.info('Service code has run 3 times, will now stop it.');
        service.stop();
    }
});
service.start();
</pre>
 * <p><p>Console Output:</p></p><pre>[INFO] [29,1942] Service code resumes, iteration 1
[INFO] [70,2029] Hello World! I am a Service. I have this to say: Titanium rocks!
[INFO] [3,2070] Service code pauses, iteration 1
[INFO] [2,3915] Service code resumes, iteration 2
[INFO] [31,3961] Hello World! I am a Service. I have this to say: Titanium rocks!
[INFO] [5,3968] Service code pauses, iteration 2
[INFO] [2,5917] Service code resumes, iteration 3
[INFO] [27,5961] Hello World! I am a Service. I have this to say: Titanium rocks!
[INFO] [16,5980] Service code pauses, iteration 3
[INFO] [1,5981] Service code has run 3 times, will now stop it.</pre>
 */
Titanium.Android.Service = {};





/**
 * @method getIntent
 * <p>Gets the value of the {@link Titanium.Android.Service#property-intent intent} property.</p>
 * @return {Titanium.Android.Intent} 
*/
Titanium.Android.Service.getIntent = function(){};

/**
 * @method getServiceInstanceId
 * <p>Gets the value of the {@link Titanium.Android.Service#property-serviceInstanceId serviceInstanceId} property.</p>
 * @return {Number} 
*/
Titanium.Android.Service.getServiceInstanceId = function(){};

/**
 * @method start
 * <p>Starts the Service.</p>
 * @description <p>Effective only if this instance of {@link Titanium.Android.Service} was created 
with {@link Titanium.Android#method-createService}.</p>
 * @return void
*/
Titanium.Android.Service.start = function(){};

/**
 * @method stop
 * <p>Stops this running instance of the Service.</p>
 * @return void
*/
Titanium.Android.Service.stop = function(){};

/**
 * @property intent
 * @type Titanium.Android.Intent
 * @readonly
 * <p>The intent used to start or bind to the Service.</p>
 */
Titanium.Android.Service.intent = null;

/**
 * @property serviceInstanceId
 * @type Number
 * @readonly
 * <p>A service can be started more than once -- this number (based on an incrementing integer) 
indicates which "start number" in the sequence the current service instance is.</p>
 */
Titanium.Android.Service.serviceInstanceId = null;

/**
 * @method createBroadcastReceiver
 * <p>Creates and returns an instance of {@link Titanium.Android.BroadcastReceiver}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Android.BroadcastReceiver} except those marked not-creation or read-only.</p>
 * @return {Titanium.Android.BroadcastReceiver} 
 * @platform android 3.1
*/
Titanium.Android.createBroadcastReceiver = function(parameters){};

/**
 * @method createIntent
 * <p>Creates and returns an instance of {@link Titanium.Android.Intent}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Android.Intent} except those marked not-creation or read-only.</p>
 * @return {Titanium.Android.Intent} 
 * @platform android 1.5
*/
Titanium.Android.createIntent = function(parameters){};

/**
 * @method createIntentChooser
 * <p>Creates an activity chooser intent, used to allow the user to select a target activity
for an intent.</p>
 * @description <p>Use this method when the user wants to take an action that could use any one of a
number of applications. For example, when sending a plain text message, the user
may choose to send a text message, send an email, or post to a social network.</p>
<p>You pass in an {@link Titanium.Android.Intent Intent} representing the action being taken,
and a title for the chooser. </p>
<p>The method returns another intent, representing the chooser, which can be used to
start an activity. See the code example for details on how to display the chooser.</p>
<p>For more information, see the official Android documentation for
<a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CHOOSER">Intent.ACTION_CHOOSER</a></p>
 * <h3>Example</h3>
 * <h4>Using a Chooser</h4>
 * <p><p>The following example uses an activity chooser to send a plain text message.</p></p><pre>var intent = Ti.Android.createIntent( { 
    action: Ti.Android.ACTION_SEND,
    type: 'text/plain'
});
intent.putExtra(Ti.Android.EXTRA_SUBJECT, "This is the subject.");
intent.putExtra(Ti.Android.EXTRA_TEXT, "This is some text to send.")

var chooser = Ti.Android.createIntentChooser(intent, "Send Message");
var activity = Ti.Android.currentActivity.startActivity(chooser);</pre>
 * @param {Titanium.Android.Intent} intent 
 * <p>The intent to display a chooser for.</p>
 * @param {String} title 
 * <p>Title to display on the chooser.</p>
 * @return {Titanium.Android.Intent} 
*/
Titanium.Android.createIntentChooser = function(intent, title){};

/**
 * @method createNotification
 * <p>Creates and returns an instance of {@link Titanium.Android.Notification}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Android.Notification} except those marked not-creation or read-only.</p>
 * @return {Titanium.Android.Notification} 
 * @platform android 1.5
*/
Titanium.Android.createNotification = function(parameters){};

/**
 * @method createPendingIntent
 * <p>Creates a {@link Titanium.Android.PendingIntent PendingIntent} to be used inside a
{@link Titanium.Android.Notification Notification}.</p>
 * @description <p>If <code>FLAG_NO_CREATE</code> is specified and no matching pending intent exists, returns
<code>null</code>.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on the new object, including any defined by
{@link Titanium.Android.PendingIntent}, except those marked not-creation or read-only.</p>
 * @return {Titanium.Android.PendingIntent} 
*/
Titanium.Android.createPendingIntent = function(parameters){};

/**
 * @method createRemoteViews
 * <p>Creates and returns an instance of {@link Titanium.Android.RemoteViews}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Android.RemoteViews} except those marked not-creation or read-only.</p>
 * @return {Titanium.Android.RemoteViews} 
 * @platform android 1.6
*/
Titanium.Android.createRemoteViews = function(parameters){};

/**
 * @method createService
 * <p>Create a {@link Titanium.Android.Service} so you can start/stop it and listen for events from it.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>An <code>Intent</code> created with {@link Titanium.Android#method-createServiceIntent createServiceIntent},
which specifies the service to be instantiated.</p>
 * @return {Titanium.Android.Service} 
*/
Titanium.Android.createService = function(intent){};

/**
 * @method createServiceIntent
 * <p>Create an <code>Intent</code> to be used to start a service.</p>
 * @param {ServiceIntentOptions} options 
 * <p>Options for the Service.</p>
 * @return {Titanium.Android.Intent} 
*/
Titanium.Android.createServiceIntent = function(options){};

/**
 * @method getCurrentActivity
 * <p>Gets the value of the {@link Titanium.Android#property-currentActivity currentActivity} property.</p>
 * @return {Titanium.Android.Activity} 
*/
Titanium.Android.getCurrentActivity = function(){};

/**
 * @method getCurrentService
 * <p>Gets the value of the {@link Titanium.Android#property-currentService currentService} property.</p>
 * @return {Titanium.Android.Service} 
*/
Titanium.Android.getCurrentService = function(){};

/**
 * @method isServiceRunning
 * <p>Check on state of Service.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>An <code>Intent</code> created with {@link Titanium.Android#method-createServiceIntent createServiceIntent},
which specifies the service to check.</p>
 * @return {Boolean} 
*/
Titanium.Android.isServiceRunning = function(intent){};

/**
 * @method registerBroadcastReceiver
 * <p>Registers broadcast receiver for the given actions</p>
 * @param {Titanium.Android.BroadcastReceiver} broadcastReceiver 
 * <p>The broadcast receiver to register and handle the broadcast</p>
 * @param {String[]} actions 
 * <p>The actions that the broadcast reciever will handle</p>
 * @return void
 * @platform android 3.1
*/
Titanium.Android.registerBroadcastReceiver = function(broadcastReceiver, actions){};

/**
 * @method startService
 * <p>Starts a simple service.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>An <code>Intent</code> created with {@link Titanium.Android#method-createServiceIntent createServiceIntent},
which specifies the service to start.</p>
 * @return void
*/
Titanium.Android.startService = function(intent){};

/**
 * @method stopService
 * <p>Stop a simple service that was started with <code>startService</code>.</p>
 * @param {Titanium.Android.Intent} intent 
 * <p>An <code>Intent</code> created with {@link Titanium.Android#method-createServiceIntent createServiceIntent},
which specifies the service to stop.</p>
 * @return void
*/
Titanium.Android.stopService = function(intent){};

/**
 * @method unregisterBroadcastReceiver
 * <p>Unregisters a broadcast receiver</p>
 * @param {Titanium.Android.BroadcastReceiver} broadcastReceiver 
 * <p>The broadcast receiver to unregister.</p>
 * @return void
 * @platform android 3.1
*/
Titanium.Android.unregisterBroadcastReceiver = function(broadcastReceiver){};

/**
 * @property ACTION_AIRPLANE_MODE_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_AIRPLANE_MODE_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_AIRPLANE_MODE_CHANGED">Intent.ACTION_AIRPLANE_MODE_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_AIRPLANE_MODE_CHANGED = null;

/**
 * @property ACTION_ALL_APPS
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_ALL_APPS</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_ALL_APPS">Intent.ACTION_ALL_APPS in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_ALL_APPS = null;

/**
 * @property ACTION_ANSWER
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_ANSWER</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_ANSWER">Intent.ACTION_ANSWER in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_ANSWER = null;

/**
 * @property ACTION_ATTACH_DATA
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_ATTACH_DATA</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_ATTACH_DATA">Intent.ACTION_ATTACH_DATA in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_ATTACH_DATA = null;

/**
 * @property ACTION_BATTERY_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_BATTERY_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_CHANGED">Intent.ACTION_BATTERY_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_BATTERY_CHANGED = null;

/**
 * @property ACTION_BATTERY_LOW
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_BATTERY_LOW</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_LOW">Intent.ACTION_BATTERY_LOW in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_BATTERY_LOW = null;

/**
 * @property ACTION_BATTERY_OKAY
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_BATTERY_OKAY</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_OKAY">Intent.ACTION_BATTERY_OKAY in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_BATTERY_OKAY = null;

/**
 * @property ACTION_BOOT_COMPLETED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_BOOT_COMPLETED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_BOOT_COMPLETED">Intent.ACTION_BOOT_COMPLETED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_BOOT_COMPLETED = null;

/**
 * @property ACTION_BUG_REPORT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_BUG_REPORT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_BUG_REPORT">Intent.ACTION_BUG_REPORT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_BUG_REPORT = null;

/**
 * @property ACTION_CALL
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_CALL</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CALL">Intent.ACTION_CALL in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_CALL = null;

/**
 * @property ACTION_CALL_BUTTON
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_CALL_BUTTON</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CALL_BUTTON">Intent.ACTION_CALL_BUTTON in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_CALL_BUTTON = null;

/**
 * @property ACTION_CAMERA_BUTTON
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_CAMERA_BUTTON</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CAMERA_BUTTON">Intent.ACTION_CAMERA_BUTTON in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_CAMERA_BUTTON = null;

/**
 * @property ACTION_CHOOSER
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_CHOOSER</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CHOOSER">Intent.ACTION_CHOOSER in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_CHOOSER = null;

/**
 * @property ACTION_CLOSE_SYSTEM_DIALOGS
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_CLOSE_SYSTEM_DIALOGS</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CLOSE_SYSTEM_DIALOGS">Intent.ACTION_CLOSE_SYSTEM_DIALOGS in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_CLOSE_SYSTEM_DIALOGS = null;

/**
 * @property ACTION_CONFIGURATION_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_CONFIGURATION_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CONFIGURATION_CHANGED">Intent.ACTION_CONFIGURATION_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_CONFIGURATION_CHANGED = null;

/**
 * @property ACTION_CREATE_SHORTCUT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_CREATE_SHORTCUT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CREATE_SHORTCUT">Intent.ACTION_CREATE_SHORTCUT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_CREATE_SHORTCUT = null;

/**
 * @property ACTION_DATE_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_DATE_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_DATE_CHANGED">Intent.ACTION_DATE_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_DATE_CHANGED = null;

/**
 * @property ACTION_DEFAULT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_DEFAULT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_DEFAULT">Intent.ACTION_DEFAULT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_DEFAULT = null;

/**
 * @property ACTION_DELETE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_DELETE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_DELETE">Intent.ACTION_DELETE in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_DELETE = null;

/**
 * @property ACTION_DEVICE_STORAGE_LOW
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_DEVICE_STORAGE_LOW</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_DEVICE_STORAGE_LOW">Intent.ACTION_DEVICE_STORAGE_LOW in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_DEVICE_STORAGE_LOW = null;

/**
 * @property ACTION_DIAL
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_DIAL</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_DIAL">Intent.ACTION_DIAL in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_DIAL = null;

/**
 * @property ACTION_EDIT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_EDIT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_EDIT">Intent.ACTION_EDIT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_EDIT = null;

/**
 * @property ACTION_GET_CONTENT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_GET_CONTENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_GET_CONTENT">Intent.ACTION_GET_CONTENT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_GET_CONTENT = null;

/**
 * @property ACTION_GTALK_SERVICE_CONNECTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_GTALK_SERVICE_CONNECTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_GTALK_SERVICE_CONNECTED">Intent.ACTION_GTALK_SERVICE_CONNECTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_GTALK_SERVICE_CONNECTED = null;

/**
 * @property ACTION_GTALK_SERVICE_DISCONNECTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_GTALK_SERVICE_DISCONNECTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_GTALK_SERVICE_DISCONNECTED">Intent.ACTION_GTALK_SERVICE_DISCONNECTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_GTALK_SERVICE_DISCONNECTED = null;

/**
 * @property ACTION_HEADSET_PLUG
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_HEADSET_PLUG</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_HEADSET_PLUG">Intent.ACTION_HEADSET_PLUG in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_HEADSET_PLUG = null;

/**
 * @property ACTION_INPUT_METHOD_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_INPUT_METHOD_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_INPUT_METHOD_CHANGED">Intent.ACTION_INPUT_METHOD_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_INPUT_METHOD_CHANGED = null;

/**
 * @property ACTION_INSERT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_INSERT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_INSERT">Intent.ACTION_INSERT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_INSERT = null;

/**
 * @property ACTION_INSERT_OR_EDIT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_INSERT_OR_EDIT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_INSERT_OR_EDIT">Intent.ACTION_INSERT_OR_EDIT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_INSERT_OR_EDIT = null;

/**
 * @property ACTION_MAIN
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MAIN</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MAIN">Intent.ACTION_MAIN in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MAIN = null;

/**
 * @property ACTION_MANAGE_PACKAGE_STORAGE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MANAGE_PACKAGE_STORAGE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MANAGE_PACKAGE_STORAGE">Intent.ACTION_MANAGE_PACKAGE_STORAGE in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MANAGE_PACKAGE_STORAGE = null;

/**
 * @property ACTION_MEDIA_BAD_REMOVAL
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_BAD_REMOVAL</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_BAD_REMOVAL">Intent.ACTION_MEDIA_BAD_REMOVAL in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_BAD_REMOVAL = null;

/**
 * @property ACTION_MEDIA_BUTTON
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_BUTTON</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_BUTTON">Intent.ACTION_MEDIA_BUTTON in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_BUTTON = null;

/**
 * @property ACTION_MEDIA_CHECKING
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_CHECKING</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_CHECKING">Intent.ACTION_MEDIA_CHECKING in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_CHECKING = null;

/**
 * @property ACTION_MEDIA_EJECT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_EJECT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_EJECT">Intent.ACTION_MEDIA_EJECT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_EJECT = null;

/**
 * @property ACTION_MEDIA_MOUNTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_MOUNTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_MOUNTED">Intent.ACTION_MEDIA_MOUNTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_MOUNTED = null;

/**
 * @property ACTION_MEDIA_NOFS
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_NOFS</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_NOFS">Intent.ACTION_MEDIA_NOFS in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_NOFS = null;

/**
 * @property ACTION_MEDIA_REMOVED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_REMOVED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_REMOVED">Intent.ACTION_MEDIA_REMOVED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_REMOVED = null;

/**
 * @property ACTION_MEDIA_SCANNER_FINISHED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_SCANNER_FINISHED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_FINISHED">Intent.ACTION_MEDIA_SCANNER_FINISHED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_SCANNER_FINISHED = null;

/**
 * @property ACTION_MEDIA_SCANNER_SCAN_FILE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_SCANNER_SCAN_FILE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_SCAN_FILE">Intent.ACTION_MEDIA_SCANNER_SCAN_FILE in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_SCANNER_SCAN_FILE = null;

/**
 * @property ACTION_MEDIA_SCANNER_STARTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_SCANNER_STARTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SCANNER_STARTED">Intent.ACTION_MEDIA_SCANNER_STARTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_SCANNER_STARTED = null;

/**
 * @property ACTION_MEDIA_SHARED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_SHARED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_SHARED">Intent.ACTION_MEDIA_SHARED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_SHARED = null;

/**
 * @property ACTION_MEDIA_UNMOUNTABLE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_UNMOUNTABLE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_UNMOUNTABLE">Intent.ACTION_MEDIA_UNMOUNTABLE in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_UNMOUNTABLE = null;

/**
 * @property ACTION_MEDIA_UNMOUNTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_MEDIA_UNMOUNTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_MEDIA_UNMOUNTED">Intent.ACTION_MEDIA_UNMOUNTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_MEDIA_UNMOUNTED = null;

/**
 * @property ACTION_NEW_OUTGOING_CALL
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_NEW_OUTGOING_CALL</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_NEW_OUTGOING_CALL">Intent.ACTION_NEW_OUTGOING_CALL in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_NEW_OUTGOING_CALL = null;

/**
 * @property ACTION_PACKAGE_ADDED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PACKAGE_ADDED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_ADDED">Intent.ACTION_PACKAGE_ADDED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PACKAGE_ADDED = null;

/**
 * @property ACTION_PACKAGE_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PACKAGE_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_CHANGED">Intent.ACTION_PACKAGE_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PACKAGE_CHANGED = null;

/**
 * @property ACTION_PACKAGE_DATA_CLEARED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PACKAGE_DATA_CLEARED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_DATA_CLEARED">Intent.ACTION_PACKAGE_DATA_CLEARED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PACKAGE_DATA_CLEARED = null;

/**
 * @property ACTION_PACKAGE_INSTALL
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PACKAGE_INSTALL</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_INSTALL">Intent.ACTION_PACKAGE_INSTALL in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PACKAGE_INSTALL = null;

/**
 * @property ACTION_PACKAGE_REMOVED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PACKAGE_REMOVED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_REMOVED">Intent.ACTION_PACKAGE_REMOVED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PACKAGE_REMOVED = null;

/**
 * @property ACTION_PACKAGE_REPLACED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PACKAGE_REPLACED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_REPLACED">Intent.ACTION_PACKAGE_REPLACED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PACKAGE_REPLACED = null;

/**
 * @property ACTION_PACKAGE_RESTARTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PACKAGE_RESTARTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PACKAGE_RESTARTED">Intent.ACTION_PACKAGE_RESTARTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PACKAGE_RESTARTED = null;

/**
 * @property ACTION_PICK
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PICK</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PICK">Intent.ACTION_PICK in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PICK = null;

/**
 * @property ACTION_PICK_ACTIVITY
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PICK_ACTIVITY</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PICK_ACTIVITY">Intent.ACTION_PICK_ACTIVITY in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PICK_ACTIVITY = null;

/**
 * @property ACTION_POWER_CONNECTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_POWER_CONNECTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_CONNECTED">Intent.ACTION_POWER_CONNECTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_POWER_CONNECTED = null;

/**
 * @property ACTION_POWER_DISCONNECTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_POWER_DISCONNECTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_DISCONNECTED">Intent.ACTION_POWER_DISCONNECTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_POWER_DISCONNECTED = null;

/**
 * @property ACTION_POWER_USAGE_SUMMARY
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_POWER_USAGE_SUMMARY</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_POWER_USAGE_SUMMARY">Intent.ACTION_POWER_USAGE_SUMMARY in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_POWER_USAGE_SUMMARY = null;

/**
 * @property ACTION_PROVIDER_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_PROVIDER_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_PROVIDER_CHANGED">Intent.ACTION_PROVIDER_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_PROVIDER_CHANGED = null;

/**
 * @property ACTION_REBOOT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_REBOOT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_REBOOT">Intent.ACTION_REBOOT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_REBOOT = null;

/**
 * @property ACTION_RUN
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_RUN</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_RUN">Intent.ACTION_RUN in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_RUN = null;

/**
 * @property ACTION_SCREEN_OFF
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SCREEN_OFF</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SCREEN_OFF">Intent.ACTION_SCREEN_OFF in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SCREEN_OFF = null;

/**
 * @property ACTION_SCREEN_ON
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SCREEN_ON</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SCREEN_ON">Intent.ACTION_SCREEN_ON in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SCREEN_ON = null;

/**
 * @property ACTION_SEARCH
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SEARCH</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SEARCH">Intent.ACTION_SEARCH in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SEARCH = null;

/**
 * @property ACTION_SEARCH_LONG_PRESS
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SEARCH_LONG_PRESS</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SEARCH_LONG_PRESS">Intent.ACTION_SEARCH_LONG_PRESS in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SEARCH_LONG_PRESS = null;

/**
 * @property ACTION_SEND
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SEND</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SEND">Intent.ACTION_SEND in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SEND = null;

/**
 * @property ACTION_SENDTO
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SENDTO</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SENDTO">Intent.ACTION_SENDTO in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SENDTO = null;

/**
 * @property ACTION_SEND_MULTIPLE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SEND_MULTIPLE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SEND_MULTIPLE">Intent.ACTION_SEND_MULTIPLE in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SEND_MULTIPLE = null;

/**
 * @property ACTION_SET_WALLPAPER
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SET_WALLPAPER</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SET_WALLPAPER">Intent.ACTION_SET_WALLPAPER in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SET_WALLPAPER = null;

/**
 * @property ACTION_SHUTDOWN
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SHUTDOWN</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SHUTDOWN">Intent.ACTION_SHUTDOWN in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SHUTDOWN = null;

/**
 * @property ACTION_SYNC
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SYNC</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SYNC">Intent.ACTION_SYNC in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SYNC = null;

/**
 * @property ACTION_SYSTEM_TUTORIAL
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_SYSTEM_TUTORIAL</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SYSTEM_TUTORIAL">Intent.ACTION_SYSTEM_TUTORIAL in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_SYSTEM_TUTORIAL = null;

/**
 * @property ACTION_TIME_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_TIME_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_TIME_CHANGED">Intent.ACTION_TIME_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_TIME_CHANGED = null;

/**
 * @property ACTION_TIME_TICK
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_TIME_TICK</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_TIME_TICK">Intent.ACTION_TIME_TICK in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_TIME_TICK = null;

/**
 * @property ACTION_UID_REMOVED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_UID_REMOVED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_UID_REMOVED">Intent.ACTION_UID_REMOVED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_UID_REMOVED = null;

/**
 * @property ACTION_UMS_CONNECTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_UMS_CONNECTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_UMS_CONNECTED">Intent.ACTION_UMS_CONNECTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_UMS_CONNECTED = null;

/**
 * @property ACTION_UMS_DISCONNECTED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_UMS_DISCONNECTED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_UMS_DISCONNECTED">Intent.ACTION_UMS_DISCONNECTED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_UMS_DISCONNECTED = null;

/**
 * @property ACTION_USER_PRESENT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_USER_PRESENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_USER_PRESENT">Intent.ACTION_USER_PRESENT in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_USER_PRESENT = null;

/**
 * @property ACTION_VIEW
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_VIEW</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW">Intent.ACTION_VIEW in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_VIEW = null;

/**
 * @property ACTION_VOICE_COMMAND
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_VOICE_COMMAND</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_VOICE_COMMAND">Intent.ACTION_VOICE_COMMAND in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_VOICE_COMMAND = null;

/**
 * @property ACTION_WALLPAPER_CHANGED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_WALLPAPER_CHANGED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_WALLPAPER_CHANGED">Intent.ACTION_WALLPAPER_CHANGED in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_WALLPAPER_CHANGED = null;

/**
 * @property ACTION_WEB_SEARCH
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.ACTION_WEB_SEARCH</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_WEB_SEARCH">Intent.ACTION_WEB_SEARCH in the Android API Reference</a>.</p>
 */
Titanium.Android.ACTION_WEB_SEARCH = null;

/**
 * @property CATEGORY_ALTERNATIVE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_ALTERNATIVE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_ALTERNATIVE">Intent.CATEGORY_ALTERNATIVE in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_ALTERNATIVE = null;

/**
 * @property CATEGORY_BROWSABLE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_BROWSABLE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_BROWSABLE">Intent.CATEGORY_BROWSABLE in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_BROWSABLE = null;

/**
 * @property CATEGORY_DEFAULT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_DEFAULT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_DEFAULT">Intent.CATEGORY_DEFAULT in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_DEFAULT = null;

/**
 * @property CATEGORY_DEVELOPMENT_PREFERENCE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_DEVELOPMENT_PREFERENCE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_DEVELOPMENT_PREFERENCE">Intent.CATEGORY_DEVELOPMENT_PREFERENCE in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_DEVELOPMENT_PREFERENCE = null;

/**
 * @property CATEGORY_EMBED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_EMBED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_EMBED">Intent.CATEGORY_EMBED in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_EMBED = null;

/**
 * @property CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST">Intent.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST = null;

/**
 * @property CATEGORY_HOME
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_HOME</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_HOME">Intent.CATEGORY_HOME in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_HOME = null;

/**
 * @property CATEGORY_INFO
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_INFO</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_INFO">Intent.CATEGORY_INFO in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_INFO = null;

/**
 * @property CATEGORY_LAUNCHER
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_LAUNCHER</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_LAUNCHER">Intent.CATEGORY_LAUNCHER in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_LAUNCHER = null;

/**
 * @property CATEGORY_MONKEY
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_MONKEY</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_MONKEY">Intent.CATEGORY_MONKEY in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_MONKEY = null;

/**
 * @property CATEGORY_OPENABLE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_OPENABLE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_OPENABLE">Intent.CATEGORY_OPENABLE in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_OPENABLE = null;

/**
 * @property CATEGORY_PREFERENCE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_PREFERENCE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_PREFERENCE">Intent.CATEGORY_PREFERENCE in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_PREFERENCE = null;

/**
 * @property CATEGORY_SAMPLE_CODE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_SAMPLE_CODE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_SAMPLE_CODE">Intent.CATEGORY_SAMPLE_CODE in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_SAMPLE_CODE = null;

/**
 * @property CATEGORY_SELECTED_ALTERNATIVE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_SELECTED_ALTERNATIVE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_SELECTED_ALTERNATIVE">Intent.CATEGORY_SELECTED_ALTERNATIVE in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_SELECTED_ALTERNATIVE = null;

/**
 * @property CATEGORY_TAB
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_TAB</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_TAB">Intent.CATEGORY_TAB in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_TAB = null;

/**
 * @property CATEGORY_TEST
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_TEST</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_TEST">Intent.CATEGORY_TEST in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_TEST = null;

/**
 * @property CATEGORY_UNIT_TEST
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.CATEGORY_UNIT_TEST</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#CATEGORY_UNIT_TEST">Intent.CATEGORY_UNIT_TEST in the Android API Reference</a>.</p>
 */
Titanium.Android.CATEGORY_UNIT_TEST = null;

/**
 * @property DEFAULT_ALL
 * @type Number
 * @readonly
 * <p>Use all default settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_ALL">Notification.DEFAULT_ALL in the Android API Reference</a>.</p>
 */
Titanium.Android.DEFAULT_ALL = null;

/**
 * @property DEFAULT_LIGHTS
 * @type Number
 * @readonly
 * <p>Use the default light settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_LIGHTS">Notification.DEFAULT_LIGHTS in the Android API Reference</a>.</p>
 */
Titanium.Android.DEFAULT_LIGHTS = null;

/**
 * @property DEFAULT_SOUND
 * @type Number
 * @readonly
 * <p>Use the default sound settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_SOUND">Notification.DEFAULT_SOUND in the Android API Reference</a>.</p>
 */
Titanium.Android.DEFAULT_SOUND = null;

/**
 * @property DEFAULT_VIBRATE
 * @type Number
 * @readonly
 * <p>Use the default vibration settings for a notification; see
{@link Titanium.Android.Notification#property-defaults Notification.defaults}.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/Notification.html#DEFAULT_VIBRATE">Notification.DEFAULT_VIBRATE in the Android API Reference</a>.</p>
 */
Titanium.Android.DEFAULT_VIBRATE = null;

/**
 * @property EXTRA_ALARM_COUNT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_ALARM_COUNT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_ALARM_COUNT">Intent.EXTRA_ALARM_COUNT in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_ALARM_COUNT = null;

/**
 * @property EXTRA_BCC
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_BCC</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_BCC">Intent.EXTRA_BCC in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_BCC = null;

/**
 * @property EXTRA_CC
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_CC</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_CC">Intent.EXTRA_CC in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_CC = null;

/**
 * @property EXTRA_DATA_REMOVED
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_DATA_REMOVED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_DATA_REMOVED">Intent.EXTRA_DATA_REMOVED in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_DATA_REMOVED = null;

/**
 * @property EXTRA_DONT_KILL_APP
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_DONT_KILL_APP</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_DONT_KILL_APP">Intent.EXTRA_DONT_KILL_APP in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_DONT_KILL_APP = null;

/**
 * @property EXTRA_EMAIL
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_EMAIL</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_EMAIL">Intent.EXTRA_EMAIL in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_EMAIL = null;

/**
 * @property EXTRA_INTENT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_INTENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_INTENT">Intent.EXTRA_INTENT in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_INTENT = null;

/**
 * @property EXTRA_KEY_EVENT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_KEY_EVENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_KEY_EVENT">Intent.EXTRA_KEY_EVENT in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_KEY_EVENT = null;

/**
 * @property EXTRA_PHONE_NUMBER
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_PHONE_NUMBER</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_PHONE_NUMBER">Intent.EXTRA_PHONE_NUMBER in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_PHONE_NUMBER = null;

/**
 * @property EXTRA_REPLACING
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_REPLACING</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_REPLACING">Intent.EXTRA_REPLACING in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_REPLACING = null;

/**
 * @property EXTRA_SHORTCUT_ICON
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_SHORTCUT_ICON</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ICON">Intent.EXTRA_SHORTCUT_ICON in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_SHORTCUT_ICON = null;

/**
 * @property EXTRA_SHORTCUT_ICON_RESOURCE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_SHORTCUT_ICON_RESOURCE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_ICON_RESOURCE">Intent.EXTRA_SHORTCUT_ICON_RESOURCE in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_SHORTCUT_ICON_RESOURCE = null;

/**
 * @property EXTRA_SHORTCUT_INTENT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_SHORTCUT_INTENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_INTENT">Intent.EXTRA_SHORTCUT_INTENT in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_SHORTCUT_INTENT = null;

/**
 * @property EXTRA_SHORTCUT_NAME
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_SHORTCUT_NAME</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_SHORTCUT_NAME">Intent.EXTRA_SHORTCUT_NAME in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_SHORTCUT_NAME = null;

/**
 * @property EXTRA_STREAM
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_STREAM</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_STREAM">Intent.EXTRA_STREAM in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_STREAM = null;

/**
 * @property EXTRA_SUBJECT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_SUBJECT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_SUBJECT">Intent.EXTRA_SUBJECT in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_SUBJECT = null;

/**
 * @property EXTRA_TEMPLATE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_TEMPLATE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_TEMPLATE">Intent.EXTRA_TEMPLATE in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_TEMPLATE = null;

/**
 * @property EXTRA_TEXT
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_TEXT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_TEXT">Intent.EXTRA_TEXT in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_TEXT = null;

/**
 * @property EXTRA_TITLE
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_TITLE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_TITLE">Intent.EXTRA_TITLE in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_TITLE = null;

/**
 * @property EXTRA_UID
 * @type String
 * @readonly
 * <p>Corresponds to the Android <code>Intent.EXTRA_UID</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#EXTRA_UID">Intent.EXTRA_UID in the Android API Reference</a>.</p>
 */
Titanium.Android.EXTRA_UID = null;

/**
 * @property FILL_IN_ACTION
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FILL_IN_ACTION</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FILL_IN_ACTION">Intent.FILL_IN_ACTION in the Android API Reference</a>.</p>
 */
Titanium.Android.FILL_IN_ACTION = null;

/**
 * @property FILL_IN_CATEGORIES
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FILL_IN_CATEGORIES</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FILL_IN_CATEGORIES">Intent.FILL_IN_CATEGORIES in the Android API Reference</a>.</p>
 */
Titanium.Android.FILL_IN_CATEGORIES = null;

/**
 * @property FILL_IN_COMPONENT
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FILL_IN_COMPONENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FILL_IN_COMPONENT">Intent.FILL_IN_COMPONENT in the Android API Reference</a>.</p>
 */
Titanium.Android.FILL_IN_COMPONENT = null;

/**
 * @property FILL_IN_DATA
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FILL_IN_DATA</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FILL_IN_DATA">Intent.FILL_IN_DATA in the Android API Reference</a>.</p>
 */
Titanium.Android.FILL_IN_DATA = null;

/**
 * @property FILL_IN_PACKAGE
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FILL_IN_PACKAGE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FILL_IN_PACKAGE">Intent.FILL_IN_PACKAGE in the Android API Reference</a>.</p>
 */
Titanium.Android.FILL_IN_PACKAGE = null;

/**
 * @property FLAG_ACTIVITY_BROUGHT_TO_FRONT
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_BROUGHT_TO_FRONT">Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_BROUGHT_TO_FRONT = null;

/**
 * @property FLAG_ACTIVITY_CLEAR_TOP
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_CLEAR_TOP</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_TOP">Intent.FLAG_ACTIVITY_CLEAR_TOP in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_CLEAR_TOP = null;

/**
 * @property FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET">Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET = null;

/**
 * @property FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS">Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS = null;

/**
 * @property FLAG_ACTIVITY_FORWARD_RESULT
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_FORWARD_RESULT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_FORWARD_RESULT">Intent.FLAG_ACTIVITY_FORWARD_RESULT in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_FORWARD_RESULT = null;

/**
 * @property FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY">Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY = null;

/**
 * @property FLAG_ACTIVITY_MULTIPLE_TASK
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_MULTIPLE_TASK</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_MULTIPLE_TASK">Intent.FLAG_ACTIVITY_MULTIPLE_TASK in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_MULTIPLE_TASK = null;

/**
 * @property FLAG_ACTIVITY_NEW_TASK
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_NEW_TASK</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NEW_TASK">Intent.FLAG_ACTIVITY_NEW_TASK in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_NEW_TASK = null;

/**
 * @property FLAG_ACTIVITY_NO_ANIMATION
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_NO_ANIMATION</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_ANIMATION">Intent.FLAG_ACTIVITY_NO_ANIMATION in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_NO_ANIMATION = null;

/**
 * @property FLAG_ACTIVITY_NO_HISTORY
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_NO_HISTORY</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_HISTORY">Intent.FLAG_ACTIVITY_NO_HISTORY in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_NO_HISTORY = null;

/**
 * @property FLAG_ACTIVITY_NO_USER_ACTION
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_NO_USER_ACTION</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_NO_USER_ACTION">Intent.FLAG_ACTIVITY_NO_USER_ACTION in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_NO_USER_ACTION = null;

/**
 * @property FLAG_ACTIVITY_PREVIOUS_IS_TOP
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_PREVIOUS_IS_TOP">Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_PREVIOUS_IS_TOP = null;

/**
 * @property FLAG_ACTIVITY_REORDER_TO_FRONT
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_REORDER_TO_FRONT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_REORDER_TO_FRONT">Intent.FLAG_ACTIVITY_REORDER_TO_FRONT in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_REORDER_TO_FRONT = null;

/**
 * @property FLAG_ACTIVITY_RESET_TASK_IF_NEEDED
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_RESET_TASK_IF_NEEDED">Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED = null;

/**
 * @property FLAG_ACTIVITY_SINGLE_TOP
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_ACTIVITY_SINGLE_TOP</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_SINGLE_TOP">Intent.FLAG_ACTIVITY_SINGLE_TOP in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ACTIVITY_SINGLE_TOP = null;

/**
 * @property FLAG_AUTO_CANCEL
 * @type Number
 * @readonly
 * <p>Cancel the notification when it is clicked by the user.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_AUTO_CANCEL">Notification.FLAG_AUTO_CANCEL in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_AUTO_CANCEL = null;

/**
 * @property FLAG_CANCEL_CURRENT
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>PendingIntent.FLAG_CANCEL_CURRENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_CANCEL_CURRENT">PendingIntent.FLAG_CANCEL_CURRENT in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_CANCEL_CURRENT = null;

/**
 * @property FLAG_DEBUG_LOG_RESOLUTION
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_DEBUG_LOG_RESOLUTION</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_DEBUG_LOG_RESOLUTION">Intent.FLAG_DEBUG_LOG_RESOLUTION in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_DEBUG_LOG_RESOLUTION = null;

/**
 * @property FLAG_FROM_BACKGROUND
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_FROM_BACKGROUND</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_FROM_BACKGROUND">Intent.FLAG_FROM_BACKGROUND in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_FROM_BACKGROUND = null;

/**
 * @property FLAG_GRANT_READ_URI_PERMISSION
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_GRANT_READ_URI_PERMISSION</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_READ_URI_PERMISSION">Intent.FLAG_GRANT_READ_URI_PERMISSION in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_GRANT_READ_URI_PERMISSION = null;

/**
 * @property FLAG_GRANT_WRITE_URI_PERMISSION
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_GRANT_WRITE_URI_PERMISSION</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_GRANT_WRITE_URI_PERMISSION">Intent.FLAG_GRANT_WRITE_URI_PERMISSION in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_GRANT_WRITE_URI_PERMISSION = null;

/**
 * @property FLAG_INSISTENT
 * @type Number
 * @readonly
 * <p>Repeat audio until the notification is cancelled or the notification window
is opened.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_INSISTENT">Notification.FLAG_INSISTENT in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_INSISTENT = null;

/**
 * @property FLAG_NO_CLEAR
 * @type Number
 * @readonly
 * <p>Do not cancel the notification when the user clicks the Clear All button.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_NO_CLEAR">Notification.FLAG_NO_CLEAR in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_NO_CLEAR = null;

/**
 * @property FLAG_NO_CREATE
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>PendingIntent.FLAG_NO_CREATE</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_NO_CREATE">PendingIntent.FLAG_NO_CREATE in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_NO_CREATE = null;

/**
 * @property FLAG_ONE_SHOT
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>PendingIntent.FLAG_ONE_SHOT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_ONE_SHOT">PendingIntent.FLAG_ONE_SHOT in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ONE_SHOT = null;

/**
 * @property FLAG_ONGOING_EVENT
 * @type Number
 * @readonly
 * <p>Specifies that a notification is in reference to something that is ongoing, like a phone call.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_ONGOING_EVENT">Notification.FLAG_ONGOING_EVENT in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ONGOING_EVENT = null;

/**
 * @property FLAG_ONLY_ALERT_ONCE
 * @type Number
 * @readonly
 * <p>Play an alert (sound, lights, and/or vibration) once each time the notification is sent, even if it has not been canceled before that.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_ONLY_ALERT_ONCE">Notification.FLAG_ONLY_ALERT_ONCE in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_ONLY_ALERT_ONCE = null;

/**
 * @property FLAG_RECEIVER_REGISTERED_ONLY
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>Intent.FLAG_RECEIVER_REGISTERED_ONLY</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/content/Intent.html#FLAG_RECEIVER_REGISTERED_ONLY">Intent.FLAG_RECEIVER_REGISTERED_ONLY in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_RECEIVER_REGISTERED_ONLY = null;

/**
 * @property FLAG_SHOW_LIGHTS
 * @type Number
 * @readonly
 * <p>Use LED lights to alert the user to the notification.</p>
 * @description <p>Use with {@link Titanium.Android.Notification#property-flags Notification.flags}.</p>
<p>See also: <a href="http://developer.android.com/reference/android/app/Notification.html#FLAG_SHOW_LIGHTS">Notification.FLAG_SHOW_LIGHTS in the Android API Reference</a>.</p>
 */
Titanium.Android.FLAG_SHOW_LIGHTS = null;

/**
 * @property FLAG_UPDATE_CURRENT
 * @type Number
 * @readonly
 * <p>Corresponds to the Android <code>PendingIntent.FLAG_UPDATE_CURRENT</code> constant.</p>
 * @description <p>See <a href="http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_UPDATE_CURRENT">PendingIntent.FLAG_UPDATE_CURRENT in the Android API
Reference</a>.</p>
 */
Titanium.Android.FLAG_UPDATE_CURRENT = null;

/**
 * @property PENDING_INTENT_FOR_ACTIVITY
 * @type Number
 * @readonly
 * <p>Not used.</p>
 * @deprecated 2.0.0
 */
Titanium.Android.PENDING_INTENT_FOR_ACTIVITY = null;

/**
 * @property PENDING_INTENT_FOR_BROADCAST
 * @type Number
 * @readonly
 * <p>Not used.</p>
 * @deprecated 2.0.0
 */
Titanium.Android.PENDING_INTENT_FOR_BROADCAST = null;

/**
 * @property PENDING_INTENT_FOR_SERVICE
 * @type Number
 * @readonly
 * <p>Not used.</p>
 * @deprecated 2.0.0
 */
Titanium.Android.PENDING_INTENT_FOR_SERVICE = null;

/**
 * @property PENDING_INTENT_MAX_VALUE
 * @type Number
 * @readonly
 * <p>Not used.</p>
 * @deprecated 2.0.0
 */
Titanium.Android.PENDING_INTENT_MAX_VALUE = null;

/**
 * @property R
 * @type Titanium.Android.R
 * @readonly
 * <p>Accessor for Android system resources.</p>
 */
Titanium.Android.R = null;

/**
 * @property RESULT_CANCELED
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.Android.Activity#method-setResult setResult} to specify that
an activity was canceled.</p>
 */
Titanium.Android.RESULT_CANCELED = null;

/**
 * @property RESULT_FIRST_USER
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.Android.Activity#method-setResult setResult} to specify a 
user-defined result.</p>
 * @description <p>User-defined result constants values start at <code>RESULT_FIRST_USER</code>.</p>
 */
Titanium.Android.RESULT_FIRST_USER = null;

/**
 * @property RESULT_OK
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.Android.Activity#method-setResult setResult} to specify that
an activity succeeded.</p>
 */
Titanium.Android.RESULT_OK = null;

/**
 * @property SCREEN_ORIENTATION_BEHIND
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Activity#property-requestedOrientation requestedOrientation} to
specify the activity should run in the same orientation as the activity behind it
in the activity stack.</p>
 */
Titanium.Android.SCREEN_ORIENTATION_BEHIND = null;

/**
 * @property SCREEN_ORIENTATION_LANDSCAPE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Activity#property-requestedOrientation requestedOrientation} to
specify a landscape screen orientation.</p>
 */
Titanium.Android.SCREEN_ORIENTATION_LANDSCAPE = null;

/**
 * @property SCREEN_ORIENTATION_NOSENSOR
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Activity#property-requestedOrientation requestedOrientation} to
specify that the sensor should be ignored and the display should not rotate.</p>
 */
Titanium.Android.SCREEN_ORIENTATION_NOSENSOR = null;

/**
 * @property SCREEN_ORIENTATION_PORTRAIT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Activity#property-requestedOrientation requestedOrientation} to
specify a portrait screen orientation.</p>
 */
Titanium.Android.SCREEN_ORIENTATION_PORTRAIT = null;

/**
 * @property SCREEN_ORIENTATION_SENSOR
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Activity#property-requestedOrientation requestedOrientation} to
specify that orientation should be determined by the orientation sensor.</p>
 */
Titanium.Android.SCREEN_ORIENTATION_SENSOR = null;

/**
 * @property SCREEN_ORIENTATION_UNSPECIFIED
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Activity#property-requestedOrientation requestedOrientation} to
specify that the system should use its default rules for determining the best
orientation.</p>
 */
Titanium.Android.SCREEN_ORIENTATION_UNSPECIFIED = null;

/**
 * @property SCREEN_ORIENTATION_USER
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Activity#property-requestedOrientation requestedOrientation} to
specify that the system should use the user's preferred orientation.</p>
 */
Titanium.Android.SCREEN_ORIENTATION_USER = null;

/**
 * @property SHOW_AS_ACTION_ALWAYS
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>Always show this item as an action button in the action bar.</p>
 */
Titanium.Android.SHOW_AS_ACTION_ALWAYS = null;

/**
 * @property SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>The action view can collapse to a normal menu item.</p>
 */
Titanium.Android.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW = null;

/**
 * @property SHOW_AS_ACTION_IF_ROOM
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>Show this item as an action button if the system decides there is room for it.</p>
 */
Titanium.Android.SHOW_AS_ACTION_IF_ROOM = null;

/**
 * @property SHOW_AS_ACTION_NEVER
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>Never display this item as an action button in the action bar.</p>
 */
Titanium.Android.SHOW_AS_ACTION_NEVER = null;

/**
 * @property SHOW_AS_ACTION_WITH_TEXT
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>When this item is in the action bar, always show it with a text label.</p>
 */
Titanium.Android.SHOW_AS_ACTION_WITH_TEXT = null;

/**
 * @property START_NOT_STICKY
 * @type Number
 * @readonly
 * <p>A Service start mode indicating that if the host application is stopped by Android, the service should not be restarted automatically.</p>
 * @description <p>Use as a <code>startMode</code> value in the options object passed to 
{@link Titanium.Android#method-createServiceIntent createServiceIntent}.</p>
 */
Titanium.Android.START_NOT_STICKY = null;

/**
 * @property START_REDELIVER_INTENT
 * @type Number
 * @readonly
 * <p>A Service start mode indicating that if the host application is stopped by Android, the service should be restarted automatically and the original Intent re-sent.</p>
 * @description <p>Use as a <code>startMode</code> value in the options object passed to 
{@link Titanium.Android#method-createServiceIntent createServiceIntent}.</p>
 */
Titanium.Android.START_REDELIVER_INTENT = null;

/**
 * @property STREAM_ALARM
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to
request that the alarm stream type for notifications be used.</p>
 */
Titanium.Android.STREAM_ALARM = null;

/**
 * @property STREAM_DEFAULT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to request that the 
default stream type for notifications be used.</p>
 */
Titanium.Android.STREAM_DEFAULT = null;

/**
 * @property STREAM_MUSIC
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to
request that the music stream type for notifications be used.</p>
 */
Titanium.Android.STREAM_MUSIC = null;

/**
 * @property STREAM_NOTIFICATION
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to request that the 
notification stream type for notifications be used.</p>
 */
Titanium.Android.STREAM_NOTIFICATION = null;

/**
 * @property STREAM_RING
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to request that the 
ring stream type for notifications be used.</p>
 */
Titanium.Android.STREAM_RING = null;

/**
 * @property STREAM_SYSTEM
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to request that the 
system stream type for notifications be used.</p>
 */
Titanium.Android.STREAM_SYSTEM = null;

/**
 * @property STREAM_VOICE_CALL
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Android.Notification#property-audioStreamType audioStreamType} to request that the 
voice call stream type for notifications be used.</p>
 */
Titanium.Android.STREAM_VOICE_CALL = null;

/**
 * @property URI_INTENT_SCHEME
 * @type Number
 * @readonly
 * <p>The URI scheme used for intent URIs.</p>
 */
Titanium.Android.URI_INTENT_SCHEME = null;

/**
 * @property currentActivity
 * @type Titanium.Android.Activity
 * @readonly
 * <p>Activity of the active context.</p>
 */
Titanium.Android.currentActivity = null;

/**
 * @property currentService
 * @type Titanium.Android.Service
 * @readonly
 * <p>Service in the active context.</p>
 */
Titanium.Android.currentService = null;

/**
 * @class Titanium.App
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level App module. The App module is mainly used for accessing information about the 
application at runtime and for sending or listening for system events.</p>
 * @description <p>The <code>App</code> module exposes a number of properties set in the <code>tiapp.xml</code> file.  </p>
<p>Three of these properties, the application name, ID, and URL, must be specified when the 
application is created.  </p>
<p>While most values may be changed by editing the <code>tiapp.xml</code> file after creating the project, 
the GUID is automatically generated and should not be changed.</p>
<h4>iOS Application Life Cycle</h4>
<p>At any given moment, you applications can be in one of the following possible states:</p>
<ul>
<li>
<p>Not running: The app has not been launched or was running but was terminated by the system.</p>
</li>
<li>
<p>Inactive: The app is running in the foreground but is currently not receiving events. 
An app usually stays in this state only briefly as it transitions to a different state. 
The <code>pause</code> event is fired during this state.</p>
</li>
<li>
<p>Active: The app is running in the foreground and is receiving events. This is the normal 
mode for foreground apps. </p>
</li>
<li>
<p>Background: The app is in the background and executing code. Most apps enter this state 
briefly on their way to being suspended. </p>
</li>
<li>
<p>Suspended: The app is in the background but is not executing code. The system moves 
apps to this state automatically and does not notify them before doing so. While suspended, 
an app remains in memory but does not execute any code. The <code>paused</code> event is fired 
during this state. The system tries to keep as many apps in memory at the same time as it 
can, but when memory runs low it terminates suspended apps to reclaim that memory. Apps 
that consume large amounts of memory while in the background are the first apps to be terminated.</p>
</li>
</ul>
<p><strong>Responding To Interruptions</strong></p>
<p><strong><em>System Alerts</em></strong></p>
<p>When an <strong>alert-based</strong> interruption occurs, such as an incoming phone call, the app moves 
temporarily to the inactive state, and fires the <code>pause</code> event. The system then displays 
an alert to the user. The app remains in this state until the user dismisses the alert. 
At this point, the app either returns to the active state and fires the <code>resumed</code> event; 
or moves to the background state and fires the <code>paused</code> event. In iOS 5, notifications that 
display a banner do not deactivate your app in the way that alert-based notifications do.
However, if the user pulls down the banner to reveal the notification center, your app 
moves to the inactive state just as if an alert-based interruption had occurred.</p>
<p>Alert-based interruptions result in temporary loss of control by your app and results in <code>pause</code> 
event being fired. Your app continues to run in the foreground, but it does not recieve 
touch events from the system. (It does continue to receive notifications and other types 
of events, such as accelerometer events.) When your app is moved back to the 
active state, the <code>resumed</code> event is fired. </p>
<p>The same set of events takes place when user <strong>double taps on the home button</strong>.</p>
<p><strong><em>Sleep/Wake Button</em></strong></p>
<p>Pressing the <strong>Sleep/Wake</strong> button is another type of interruption that causes your app to 
move to an inactive state. When the app is in the foreground, if the <strong>Sleep/Wake button</strong> 
is pressed the following events take place:</p>
<ul>
<li>
<p>In iOS 4.X the system fires the <code>pause</code> event and becomes inactive and on waking up the app fires 
the <code>resumed</code> event.</p>
</li>
<li>
<p>In iOS 5.0 and greater the system fires the <code>pause</code> event followed by the <code>paused</code> event and 
becomes inactive. This is an intentionally behavioral change by Apple to conserve battery when 
the Sleep/Wake button is pressed. On waking up the app fires the <code>resume</code> event followed by the 
<code>resumed</code> event and returns the app to normal state. </p>
</li>
</ul>
<p><strong><em>Home Button</em></strong></p>
<p>Pressing the <strong>home button</strong> is another kind of interruption. The app fires <code>pause</code> and 
<code>paused</code>events before going into background. When app is reopened it fires the <code>resume</code> 
event followed by the <code>resumed</code> event, returning the app to the normal state.</p>
<table class="doc-table" summary="This table gives the order of events fired when the app is in normal state.">
<caption><b>Lifecycle events fired during different interruptions</b></caption>
<tr><th colspan="2">Type of Interruption<th colspan="2">Going into Background<th colspan="2">Coming into  Foreground</tr>
<tr><th colspan="2" align = "left">Alert-Based/Fast App Switching<td align="center">pause</td><td align="center"></td><td align="center"> </td><td align="center">resumed</td></tr>
<tr><th rowspan="2" align="left">Sleep/Wake Button</th><td> iOS 4.X</td><td align="center">pause</td><td  align="center"><td align="center"><td align="center"> resumed</tr >
<tr><td>iOS 5.0 +</td><td align="center">pause</td><td align="center">paused</td><td align="center">resume<td align="center">resumed</td></tr>
<tr><th colspan="2" align="left">Home Button (backgrounding)<td align="center">pause<td align="center">paused<td align="center"> resume<td align="center">resumed</tr></table>

<p><strong><em>Blur and Focus Events</em></strong></p>
<p>When using the iOS pause/resume feature, the <code>blur</code> and <code>focus</code> events do not fire
before the application enters the background or after it returns to the foreground,
respectively.  Instead, the application needs to monitor the <code>pause</code> and <code>resumed</code> events,
which relies on the underlying iOS events to determine the application state rather than the
UI events.</p>
<h4>Application Level Events</h4>
<p>Application-level events are custom events that are defined globally for your
application. By convention, application-level events are set on the <code>Titanium.App</code>
module, like this:</p>
<pre><code>Ti.App.addEventListener('app:myCustomEvent', myHandlerFunction);
</code></pre>
<p>Adding a prefix (like 'app:' in this example) is optional, but can help ensure that
your custom event names don't conflict with any future Titanium events.</p>
<p>Application-level event listeners can be added and fired from any context, including from inside
a web view, so they are ideal for communicating between separate parts of your
application.</p>
<p>When you add an event listener on a Titanium module (such as <code>Ti.App</code> or
{@link Titanium.Geolocation Ti.Geolocation}), the event listener function is referenced from
the global context. This means the event listener function and any objecst it references
can't be garbage collected until the event listener is removed.</p>
<p>This can lead to memory leaks if application-level event listeners are added and not
removed.</p>
<p>See also: <a href="#!/guide/Event_Handling">Event Handling</a>
in the Titanium Mobile Guides.</p>
<h4>System Level Accessibility Events</h4>
<p>System-level Accessibility events include:</p>
<ul>
<li>Events your application fires to alert the device's accessibility system of some condition
or to ask it to do something.</li>
<li>Events fired by the device's accessibility system and listened for in your application.</li>
</ul>
<p>Currently there are four system-level accessibility events. Three of them are available for
your application to fire, and one of them is for your application to listen for.</p>
<h5>Firing Accessibility Events.</h5>
<p>The following accessibility events can be fired by your application to alert the accessibility
system of a particular condition or to ask it to perform an action.</p>
<p>These events are fired using {@link Titanium.App#method-fireSystemEvent}, which is available in Titanium Mobile 3.0.0.</p>
<ul>
<li>
<p>{@link Titanium.App#property-EVENT_ACCESSIBILITY_ANNOUNCEMENT}, available in iOS and Android, asks the device's
accessibility system to make an announcement. The announcement itself is a string passed as the second
argument to {@link Titanium.App#method-fireSystemEvent}. <em>How</em> the device's accessibility actually makes that announcement
depends on what accessibility services are activated on the device. The most common are VoiceOver on
iOS and TalkBack on Android. Each of those would read the announcement aloud.</p>
<pre><code>Ti.App.fireSystemEvent(Ti.App.EVENT_ACCESSIBILITY_ANNOUNCEMENT, "Welcome to my App");
</code></pre>
</li>
<li>
<p>{@link Titanium.App.iOS#property-EVENT_ACCESSIBILITY_LAYOUT_CHANGED}, available only on iOS, can be used to alert
the accessibility system that the layout of the screen has changed, such as when an element
appears or disappears. When your application fires this event, Titanium calls <code>UIAccessibilityLayoutChangedNotification</code>
in the iOS <a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html">UIAccessibility Protocol</a>.
No second parameter is required when firing this event with {@link Titanium.App#method-fireSystemEvent}.</p>
</li>
<li>
<p>{@link Titanium.App.iOS#property-EVENT_ACCESSIBILITY_SCREEN_CHANGED}, available only on iOS, can be used to alert
the accessibility system when a new view appears that comprises a major portion of the screen.
When your application fires this event, Titanium calls <code>UIAccessibilityScreenChangedNotification</code>
in the iOS <a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html">UIAccessibility Protocol</a>.
No second parameter is required when firing this event with {@link Titanium.App#method-fireSystemEvent}.</p>
</li>
</ul>
<h5>Listening for Accessibility Events</h5>
<p>Currently there is only one system accessibility event which your application can listen for using
{@link Titanium.App#method-addEventListener}, namely {@link Titanium.App#event-accessibilitychanged}.  This event, available on iOS and on Android
(for devices running Ice Cream Sandwich or greater), is fired when the device's accessibility service is turned
on or off. The object passed as a parameter to the listener function contains an <code>enabled</code> property which is
<code>true</code> if the accessibility service is now turned on, or <code>false</code> otherwise.</p>
 */
Titanium.App = {};

/**
 * @class Titanium.App.Android
 * @typestr Submodule of Titanium.App
 * @platform android 1.5
 * @extends Titanium.Module
 * <p>A module used to access Android application resources.</p>
 * @description <p>For more information, refer to the official documentation on the Android Developer website about 
<a href="http://developer.android.com/guide/topics/resources/index.html">application resources</a>.</p>
 * <h3>Example</h3>
 * <h4>Custom String Resource</h4>
 * <p><p>Custom Android resources may be placed in <code>platform/android</code> in the project root.<br />
For example, to utilize a custom localization file, create and populate 
<code>platform/android/res/values/mystrings.xml</code> with the following data.</p></p><pre>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;resources&gt;
    &lt;string name="mystring"&gt;testing 1 2 3&lt;/string&gt;
&lt;/resources&gt;
</pre>
 * <p><p>In Javascript, this can be accessed as follows.</p></p><pre>var activity = Ti.Android.currentActivity;
var R = Ti.App.Android.R;

var mystring = activity.getString(R.string.mystring);
Ti.API.debug("mystring = " + mystring);</pre>
 */
Titanium.App.Android = {};

/**
 * @class Titanium.App.Android.R
 * @typestr Object of Titanium.App.Android
 * @platform android 1.5
 * @extends Titanium.Proxy
 * <p>The Titanium binding of the native Android <code>R</code> class, giving access to application resources.</p>
 * @description <p>The properties and sub-properties of this object relate directly to the native application 
resources <code>R</code> class, and thus have the same syntax. For more information, refer to the 
official documentation on the Android Developer website about 
<a href="http://developer.android.com/guide/topics/resources/accessing-resources.html">accessing application resources</a>.  </p>
<p>For example, if the file 
<code>platform/android/res/drawable/icon.png</code> exists in the project, it can be accessed using its 
integer id, as follows.</p>
<pre><code>var resid = Titanium.App.Android.R.drawable.icon;
</code></pre>
<p>To access system-wide resources, rather than application resources, use {@link Titanium.Android.R} 
instead.</p>
 */
Titanium.App.Android.R = {};

/**
 * @property R
 * @type Titanium.App.Android.R
 * @readonly
 * <p>The <code>R</code> namespace for application resources.</p>
 */
Titanium.App.Android.R = null;

/**
 * @class Titanium.App.Properties
 * @typestr Submodule of Titanium.App
 * @platform android 0.5
 * @platform blackberry 3.1
 * @platform iphone 0.5
 * @platform ipad 0.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The App Properties module is used for storing application-related data in property/value pairs 
that persist beyond application sessions and device power cycles.</p>
 * @description 
 * <h3>Examples</h3>
 * <h4>Store a property</h4>
 * <p><p>Store a string property.</p></p><pre>Ti.App.Properties.setString('givenName', 'Paul');
Ti.API.info('The value of the givenName property is: ' + Ti.App.Properties.getString('givenName'));
</pre>
 * <h4>Enumerate over saved properties</h4>
 * <p><p>Output all saved properties to the console.</p></p><pre>var props = Ti.App.Properties.listProperties();

for (var i=0, ilen=props.length; i&lt;ilen; i++){
    var value = Ti.App.Properties.getString(props[i]);
    Ti.API.info(props[i] + ' = ' + value);
}</pre>
 */
Titanium.App.Properties = {};


/**
 * @method getBool
 * <p>Returns the value of a property as a boolean data type.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Boolean} default (optional)
 * <p>Default value to return if property does not exist.</p>
 * @return {Boolean} 
*/
Titanium.App.Properties.getBool = function(property, default){};

/**
 * @method getDouble
 * <p>Returns the value of a property as a double (double-precision, floating point) data type.</p>
 * @description <p>This method must only be used to retrieve properties created with 
{@link Titanium.App.Properties#method-setDouble setDouble}.  </p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Number} default (optional)
 * <p>Default value to return if property does not exist.</p>
 * @return {Number} 
*/
Titanium.App.Properties.getDouble = function(property, default){};

/**
 * @method getInt
 * <p>Returns the value of a property as an integer data type.</p>
 * @description <p>This method must only be used to retrieve properties created with 
{@link Titanium.App.Properties#method-setInt setInt}.  </p>
<p>Use {@link Titanium.App.Properties#method-getDouble getDouble} and {@link Titanium.App.Properties#method-setDouble setDouble} 
to store values outside the integer data type range of <code>-2,147,483,648</code> to <code>2,147,483,647</code>.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Number} default (optional)
 * <p>Default value to return if property does not exist.</p>
 * @return {Number} 
*/
Titanium.App.Properties.getInt = function(property, default){};

/**
 * @method getList
 * <p>Returns the value of a property as an array data type.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Object[]} default (optional)
 * <p>Default value to return if property does not exist.</p>
 * @return {Object[]} 
*/
Titanium.App.Properties.getList = function(property, default){};

/**
 * @method getObject
 * <p>Returns the value of a property as an object.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Object} default (optional)
 * <p>Default value to return if property does not exist.</p>
 * @return {Object} 
*/
Titanium.App.Properties.getObject = function(property, default){};

/**
 * @method getString
 * <p>Returns the value of a property as a string data type.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {String} default (optional)
 * <p>Default value to return if property does not exist.</p>
 * @return {String} 
*/
Titanium.App.Properties.getString = function(property, default){};

/**
 * @method hasProperty
 * <p>Indicates whether a property exists.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @return {Boolean} 
*/
Titanium.App.Properties.hasProperty = function(property){};

/**
 * @method listProperties
 * <p>Returns an array of property names.</p>
 * @return {Object[]} 
*/
Titanium.App.Properties.listProperties = function(){};

/**
 * @method removeProperty
 * <p>Removes a property if it exists, or does nothing otherwise.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @return void
*/
Titanium.App.Properties.removeProperty = function(property){};

/**
 * @method setBool
 * <p>Sets the value of a property as a boolean data type. The property will be created if it 
does not exist.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Boolean} value 
 * <p>Property value.</p>
 * @return void
*/
Titanium.App.Properties.setBool = function(property, value){};

/**
 * @method setDouble
 * <p>Sets the value of a property as a double (double-precision, floating point) data type. The 
property will be created if it does not exist.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Number} value 
 * <p>Property value.</p>
 * @return void
*/
Titanium.App.Properties.setDouble = function(property, value){};

/**
 * @method setInt
 * <p>Sets the value of a property as an integer data type. The property will be created if it 
does not exist.</p>
 * @description <p>Use {@link Titanium.App.Properties#method-getDouble getDouble} and {@link Titanium.App.Properties#method-setDouble setDouble} 
to store values outside the integer data type range of <code>-2,147,483,648</code> to <code>2,147,483,647</code>.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Number} value 
 * <p>Property value, within the range <code>-2,147,483,648</code> to <code>2,147,483,647</code>.</p>
 * @return void
*/
Titanium.App.Properties.setInt = function(property, value){};

/**
 * @method setList
 * <p>Sets the value of a property as an array data type. The property will be created if it 
does not exist.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Object[]} value 
 * <p>Property value.</p>
 * @return void
*/
Titanium.App.Properties.setList = function(property, value){};

/**
 * @method setObject
 * <p>Sets the value of a property as an object data type. The property will be created if it 
does not exist.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {Object} value 
 * <p>Property value.</p>
 * @return void
*/
Titanium.App.Properties.setObject = function(property, value){};

/**
 * @method setString
 * <p>Sets the value of a property as a string data type. The property will be created if it 
does not exist.</p>
 * @param {String} property 
 * <p>Name of property.</p>
 * @param {String} value 
 * <p>Property value.</p>
 * @return void
*/
Titanium.App.Properties.setString = function(property, value){};

/**
 * @class Titanium.App.Tizen
 * @typestr Submodule of Titanium.App
 * @platform tizen 3.2
 * @extends Titanium.Module
 * <p>A module used to access Tizen application resources.</p>
 * @description <p>For more information, refer to the official documentation on the Tizen Developer website about 
<a href="https://developer.tizen.org/help/topic/org.tizen.web.appprogramming/html/guide/app_guide/app_guide.htm">application resources</a>.</p>
 */
Titanium.App.Tizen = {};

/**
 * @method exit
 * <p>Exits the current application.</p>
 * @return void
*/
Titanium.App.Tizen.exit = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.App.Tizen.getBubbleParent = function(){};

/**
 * @method getCategories
 * <p>Gets the value of the {@link Titanium.App.Tizen#property-categories categories} property.</p>
 * @return {String[]} 
*/
Titanium.App.Tizen.getCategories = function(){};

/**
 * @method getIconPath
 * <p>Gets the value of the {@link Titanium.App.Tizen#property-iconPath iconPath} property.</p>
 * @return {String} 
*/
Titanium.App.Tizen.getIconPath = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.App.Tizen#property-id id} property.</p>
 * @return {String} 
*/
Titanium.App.Tizen.getId = function(){};

/**
 * @method getInstallDate
 * <p>Gets the value of the {@link Titanium.App.Tizen#property-installDate installDate} property.</p>
 * @return {Date} 
*/
Titanium.App.Tizen.getInstallDate = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.App.Tizen#property-name name} property.</p>
 * @return {String} 
*/
Titanium.App.Tizen.getName = function(){};

/**
 * @method getShow
 * <p>Gets the value of the {@link Titanium.App.Tizen#property-show show} property.</p>
 * @return {Boolean} 
*/
Titanium.App.Tizen.getShow = function(){};

/**
 * @method getSize
 * <p>Gets the value of the {@link Titanium.App.Tizen#property-size size} property.</p>
 * @return {Number} 
*/
Titanium.App.Tizen.getSize = function(){};

/**
 * @method hide
 * <p>Hides the current application.</p>
 * @return void
*/
Titanium.App.Tizen.hide = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.App.Tizen.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Titanium.App.Tizen.bubbleParent = null;

/**
 * @property categories
 * @type String[]
 * @readonly
 * <p>The categories that the current app belongs to.</p>
 */
Titanium.App.Tizen.categories = null;

/**
 * @property iconPath
 * @type String
 * @readonly
 * <p>Returns the path where the icon for this application is stored in the file storage of the Tizen device.</p>
 */
Titanium.App.Tizen.iconPath = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>Returns the Tizen-specific identifier of the current (running) application for application management.</p>
 */
Titanium.App.Tizen.id = null;

/**
 * @property installDate
 * @type Date
 * @readonly
 * <p>The current application's install/update time.</p>
 */
Titanium.App.Tizen.installDate = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>Returns the Tizen-specific name of the current (running) application.</p>
 */
Titanium.App.Tizen.name = null;

/**
 * @property show
 * @type Boolean
 * @readonly
 * <p>Determines whether the application information of the current application should be shown (such as in the menus) or not.</p>
 */
Titanium.App.Tizen.show = null;

/**
 * @property size
 * @type Number
 * @readonly
 * <p>The current application's size (installed space).</p>
 */
Titanium.App.Tizen.size = null;










/**
 * @class Titanium.App.iOS
 * @typestr Submodule of Titanium.App
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @extends Titanium.Module
 * <p>The top-level App iOS module, available only to iOS devices, that includes the facilities to 
create and manage local notifications and background services.</p>
 * @description <p>Local notifications are a way for an application that is not running in the foreground to let 
users know that it has information for them. When invoked, an alert dialog is displayed 
containing a "Close" button to dismiss and a customizable "View" button to bring the application 
into the foreground. Also, they can be configured to set an application icon badge, to show the 
number of pending notifications, and to generate a sound.</p>
 */
Titanium.App.iOS = {};

/**
 * @class Titanium.App.iOS.BackgroundService
 * @typestr Object of Titanium.App.iOS
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @extends Titanium.Proxy
 * <p>A service that runs when the application is placed in the background.</p>
 * @description <p>A background service is created by {@link Titanium.App.iOS#method-registerBackgroundService}.  </p>
<p>At creation, a local URL to a JavaScript file must be defined. The code it contains is executed 
each time the application is no longer in the foreground, along with all other services that have 
been registered in the same way. When this happens, all background services continue to run until 
one of the following occurs:</p>
<ul>
<li>A service is stopped with the <code>stop</code> method.</li>
<li>The application resumes, at which points all background services are stopped.</li>
<li>The OS terminates the service for one of the reasons discussed in 
"Background Service Limitations", below.</li>
</ul>
<p>A background service can invoke a {@link Titanium.App.iOS.LocalNotification}, which prompts users via 
a dialog to return to the application and provides a button that brings it back into the 
foreground.</p>
<h4>Background Service Limitations</h4>
<p>A background service is subject to limitations imposed by the operating system, such as</p>
<ul>
<li>The OS limits the total amount of time a background service can run for after the application 
is paused, typically to no more than 10 minutes.</li>
<li>The OS may terminate the background service at any point to reclaim resources.</li>
</ul>
 * <h3>Example</h3>
 * <h4>Background Services Example</h4>
 * <p><p>Two background services are registered in the following application.</p>
<p>The first service logs a message every time the application is paused and then is stopped to 
release the service from memory. The service is not unregistered, and so will continue to be 
invoked.</p>
<p>The second creates an application property where it stores a run count value. For the first 4 
times the application is paused, a local notification is invoked that gives the user the 
opportunity to bring the application back to the foreground. Once the run count reaches 5, 
the service is unregistered and is not invoked again until the application is relaunched.</p>
<h4>app.js</h4>
<pre><code>var win1 = Ti.UI.createWindow({  
  title:'Background Services Example',
  backgroundColor:'#4186cd',
  modal:true
});
</code></pre></p><pre>Ti.API.info('Registering background services');
var service = Ti.App.iOS.registerBackgroundService({url:'bg-service1.js'});
var service2 = Ti.App.iOS.registerBackgroundService({url:'bg-service2.js'});
Ti.API.info('*** Press home button to pause application ***');

win1.open();
</pre>
 * <p><h4>bg-service1.js</h4></p><pre>Ti.API.info('bg-service1: service has been invoked once, and will now be stopped to release it from memory. ');
Ti.App.currentService.stop();

var listener = Ti.App.currentService.addEventListener('stop',function(){
  Ti.API.info('bg-service1: Although the service has been stopped, it is still registered and will be executed again on next pause');
  Ti.API.info('bg-service1: As all background services are automatically stopped on resume, it is not always necessary to explicitly stop a service');
});
</pre>
 * <p><h4>bg-service2.js</h4></p><pre>var count = Ti.App.Properties.getInt('bg-svc2-count', 0);

if (count &gt; 4){
  // reset count after 4 invocations
  count = 0;
}

count++;

Ti.App.Properties.setInt('bg-svc2-count', count);

Ti.API.info('bg-service2 has been run ' + count + ' times');

if (count &gt; 4){
  Ti.App.currentService.unregister();
  var finalNotif = Ti.App.iOS.scheduleLocalNotification({
    alertBody:'bg-service2: As service has been invoked more than 4 times, it has been unregistered and will NOT run again. Relaunch the app to re-register it',
    date:new Date(new Date().getTime() + 1000) // 1 second after unregister
  });
} else {
  var curNotif = Ti.App.iOS.scheduleLocalNotification({
    alertBody:'bg-service2: has been invoked ' + count + ' times. It is still registered and will run again when the app is transitioned to the background',
    date:new Date(new Date().getTime() + 1000) // 1 second after pause
  });
}</pre>
 */
Titanium.App.iOS.BackgroundService = {};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.App.iOS.BackgroundService#property-url url} property.</p>
 * @return {String} 
*/
Titanium.App.iOS.BackgroundService.getUrl = function(){};

/**
 * @method stop
 * <p>Stops the service from running during the current background session to conserve resources.</p>
 * @return void
*/
Titanium.App.iOS.BackgroundService.stop = function(){};

/**
 * @method unregister
 * <p>Unregisters the background service.</p>
 * @return void
*/
Titanium.App.iOS.BackgroundService.unregister = function(){};

/**
 * @property [url=none]
 * @type String
 * @creationOnly
 * <p>A local URL to a JavaScript file containing the code to run in the background.</p>
 */
Titanium.App.iOS.BackgroundService.url = null;

/**
 * @class Titanium.App.iOS.LocalNotification
 * @typestr Object of Titanium.App.iOS
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @extends Titanium.Proxy
 * <p>A local notification to alert the user of new or pending application information.</p>
 * @description <p>A LocalNotification is created by {@link Titanium.App.iOS#method-scheduleLocalNotification}.  </p>
<p>Local notifications are a way for an application that is not running in the foreground to let 
users know that it has information for them. When invoked, an alert dialog is displayed 
containing a "Close" button to dismiss or a customizable "View" button to bring the application 
into the foreground. Also, an application icon badge showing the number of pending notifications 
may be set and a sound may be generated.</p>
 */
Titanium.App.iOS.LocalNotification = {};

/**
 * @method cancel
 * <p>Cancels the pending notification.</p>
 * @return void
*/
Titanium.App.iOS.LocalNotification.cancel = function(){};


/**
 * @method cancelAllLocalNotifications
 * <p>Cancels all scheduled local notifications.</p>
 * @return void
*/
Titanium.App.iOS.cancelAllLocalNotifications = function(){};

/**
 * @method cancelLocalNotification
 * <p>Cancels a local notification.</p>
 * @param {Number} id 
 * <p>ID of the local notification to cancel.</p>
 * @return void
*/
Titanium.App.iOS.cancelLocalNotification = function(id){};

/**
 * @method createLocalNotification
 * <p>Creates and returns an instance of {@link Titanium.App.iOS.LocalNotification}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.App.iOS.LocalNotification} except those marked not-creation or read-only.</p>
 * @return {Titanium.App.iOS.LocalNotification} 
 * @platform iphone 1.5
 * @platform ipad 1.5
*/
Titanium.App.iOS.createLocalNotification = function(parameters){};

/**
 * @method registerBackgroundService
 * <p>Registers a service to run when the application is placed in the background.</p>
 * @param {Dictionary} params 
 * <p>Parameters used to create the service. Must include a <code>url</code> property, to specify the 
local JavaScript file to execute when the application is placed in the background.</p>
 * @return {Titanium.App.iOS.BackgroundService} 
*/
Titanium.App.iOS.registerBackgroundService = function(params){};

/**
 * @method scheduleLocalNotification
 * <p>Schedule a local notification.</p>
 * @param {Object} params 
 * <p>Parameters used to create a notification.</p>
 * @return {Titanium.App.iOS.LocalNotification} 
*/
Titanium.App.iOS.scheduleLocalNotification = function(params){};

/**
 * @property EVENT_ACCESSIBILITY_LAYOUT_CHANGED
 * @type String
 * @readonly
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Convenience constant for system event "accessibilitylayoutchanged".</p>
 */
Titanium.App.iOS.EVENT_ACCESSIBILITY_LAYOUT_CHANGED = null;

/**
 * @property EVENT_ACCESSIBILITY_SCREEN_CHANGED
 * @type String
 * @readonly
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Convenience constant for system event "accessibilityscreenchanged".</p>
 */
Titanium.App.iOS.EVENT_ACCESSIBILITY_SCREEN_CHANGED = null;

/**
 * @method fireSystemEvent
 * <p>Fire a system-level event such as {@link Titanium.App#property-EVENT_ACCESSIBILITY_ANNOUNCEMENT}.</p>
 * @param {String} eventName 
 * <p>The name of the event to fire.</p>
 * @param {Object} param (optional)
 * <p>A parameter to be passed to the system event.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.App.fireSystemEvent = function(eventName, param){};

/**
 * @method getAccessibilityEnabled
 * <p>Gets the value of the {@link Titanium.App#property-accessibilityEnabled accessibilityEnabled} property.</p>
 * @return {Boolean} 
*/
Titanium.App.getAccessibilityEnabled = function(){};

/**
 * @method getAnalytics
 * <p>Gets the value of the {@link Titanium.App#property-analytics analytics} property.</p>
 * @return {Boolean} 
*/
Titanium.App.getAnalytics = function(){};

/**
 * @method getArguments
 * <p>Returns the arguments passed to the application on startup.</p>
 * @description <p>On Android, use the {@link Titanium.Android.Activity#property-intent intent} property of the activity to
retrieve the parameters passed to launch the application activity.</p>
 * @return {launchOptions} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.App.getArguments = function(){};

/**
 * @method getCopyright
 * <p>Gets the value of the {@link Titanium.App#property-copyright copyright} property.</p>
 * @return {String} 
*/
Titanium.App.getCopyright = function(){};

/**
 * @method getDeployType
 * <p>Gets the value of the {@link Titanium.App#property-deployType deployType} property.</p>
 * @return {String} 
*/
Titanium.App.getDeployType = function(){};

/**
 * @method getDescription
 * <p>Gets the value of the {@link Titanium.App#property-description description} property.</p>
 * @return {String} 
*/
Titanium.App.getDescription = function(){};

/**
 * @method getDisableNetworkActivityIndicator
 * <p>Gets the value of the {@link Titanium.App#property-disableNetworkActivityIndicator disableNetworkActivityIndicator} property.</p>
 * @return {Boolean} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.App.getDisableNetworkActivityIndicator = function(){};

/**
 * @method getGuid
 * <p>Gets the value of the {@link Titanium.App#property-guid guid} property.</p>
 * @return {String} 
*/
Titanium.App.getGuid = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.App#property-id id} property.</p>
 * @return {String} 
*/
Titanium.App.getId = function(){};

/**
 * @method getIdleTimerDisabled
 * <p>Gets the value of the {@link Titanium.App#property-idleTimerDisabled idleTimerDisabled} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.App.getIdleTimerDisabled = function(){};

/**
 * @method getInstallId
 * <p>Gets the value of the {@link Titanium.App#property-installId installId} property.</p>
 * @return {String} 
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.App.getInstallId = function(){};

/**
 * @method getKeyboardVisible
 * <p>Gets the value of the {@link Titanium.App#property-keyboardVisible keyboardVisible} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.App.getKeyboardVisible = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.App#property-name name} property.</p>
 * @return {String} 
*/
Titanium.App.getName = function(){};

/**
 * @method getProximityDetection
 * <p>Gets the value of the {@link Titanium.App#property-proximityDetection proximityDetection} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.App.getProximityDetection = function(){};

/**
 * @method getProximityState
 * <p>Gets the value of the {@link Titanium.App#property-proximityState proximityState} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
*/
Titanium.App.getProximityState = function(){};

/**
 * @method getPublisher
 * <p>Gets the value of the {@link Titanium.App#property-publisher publisher} property.</p>
 * @return {String} 
*/
Titanium.App.getPublisher = function(){};

/**
 * @method getSessionId
 * <p>Gets the value of the {@link Titanium.App#property-sessionId sessionId} property.</p>
 * @return {String} 
*/
Titanium.App.getSessionId = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.App#property-url url} property.</p>
 * @return {String} 
*/
Titanium.App.getUrl = function(){};

/**
 * @method getVersion
 * <p>Gets the value of the {@link Titanium.App#property-version version} property.</p>
 * @return {String} 
*/
Titanium.App.getVersion = function(){};

/**
 * @method setDisableNetworkActivityIndicator
 * <p>Sets the value of the {@link Titanium.App#property-disableNetworkActivityIndicator disableNetworkActivityIndicator} property.</p>
 * @param {Boolean} disableNetworkActivityIndicator 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.App.setDisableNetworkActivityIndicator = function(disableNetworkActivityIndicator){};

/**
 * @method setIdleTimerDisabled
 * <p>Sets the value of the {@link Titanium.App#property-idleTimerDisabled idleTimerDisabled} property.</p>
 * @param {Boolean} idleTimerDisabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.App.setIdleTimerDisabled = function(idleTimerDisabled){};

/**
 * @method setProximityDetection
 * <p>Sets the value of the {@link Titanium.App#property-proximityDetection proximityDetection} property.</p>
 * @param {Boolean} proximityDetection 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.App.setProximityDetection = function(proximityDetection){};

/**
 * @property EVENT_ACCESSIBILITY_ANNOUNCEMENT
 * @type String
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Convenience constant for system event "accessibilityannouncement".</p>
 */
Titanium.App.EVENT_ACCESSIBILITY_ANNOUNCEMENT = null;

/**
 * @property EVENT_ACCESSIBILITY_CHANGED
 * @type String
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Convenience constant for system event "accessibilitychanged".</p>
 */
Titanium.App.EVENT_ACCESSIBILITY_CHANGED = null;

/**
 * @property accessibilityEnabled
 * @type Boolean
 * @readonly
 * <p>Indicates whether Accessibility is enabled by the system.</p>
 */
Titanium.App.accessibilityEnabled = null;

/**
 * @property analytics
 * @type Boolean
 * @readonly
 * <p>Indicates whether Analytics is enabled, determined by <code>tiapp.xml</code>.</p>
 */
Titanium.App.analytics = null;

/**
 * @property copyright
 * @type String
 * @readonly
 * <p>Application copyright statement, determined by <code>tiapp.xml</code>.</p>
 */
Titanium.App.copyright = null;

/**
 * @property deployType
 * @type String
 * @readonly
 * <p>Build type that reflects how the application was packaged; either <code>test</code>, <code>development</code> or 
<code>production</code>.</p>
 */
Titanium.App.deployType = null;

/**
 * @property description
 * @type String
 * @readonly
 * <p>Application description, determined by <code>tiapp.xml</code>.</p>
 */
Titanium.App.description = null;

/**
 * @property [disableNetworkActivityIndicator=false]
 * @type Boolean
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Prevents network activity indicator from being displayed.</p>
 * @description <p>Setting this property to true disables display of the network activity indicator when network activity is in progress.
If the network activity indicator is currently visible, it is hidden immediately.</p>
<p><strong>NOTE: In general, the user should always be made aware of network activity. The network activity indicator should only be disabled for very brief network activity (a few seconds).</strong> </p>
 */
Titanium.App.disableNetworkActivityIndicator = null;

/**
 * @property guid
 * @type String
 * @readonly
 * <p>Application globally-unique ID, determined by <code>tiapp.xml</code>.</p>
 * @description <p>This value is system-generated and consistent through all versions.</p>
 */
Titanium.App.guid = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>Application ID, from <code>tiapp.xml</code>.</p>
 * @description <p>The application ID is a required property that must be specified when creating a new project.</p>
 */
Titanium.App.id = null;

/**
 * @property idleTimerDisabled
 * @type Boolean
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Determines whether the screen is locked when the device is idle.</p>
 * @description <p>Set to <code>true</code> to disable the timer.</p>
 */
Titanium.App.idleTimerDisabled = null;

/**
 * @property installId
 * @type String
 * @readonly
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>The install ID for this application.</p>
 * @description <p>The application install ID is a unique identifier (UUID) for this
install of the application. It is not modified by application updates;
only when an application is initially installed, or removed and
re-installed.</p>
 */
Titanium.App.installId = null;

/**
 * @property keyboardVisible
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Indicates whether or not the soft keyboard is visible.</p>
 */
Titanium.App.keyboardVisible = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>Application name, determined by <code>tiapp.xml</code>.</p>
 */
Titanium.App.name = null;

/**
 * @property [proximityDetection=false]
 * @type Boolean
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Determines whether proximity detection is enabled.</p>
 * @description <p>Set to <code>true</code> to receive {@link Titanium.App#event-proximity} events.</p>
 */
Titanium.App.proximityDetection = null;

/**
 * @property proximityState
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * <p>Indicates the state of the device's proximity sensor, according to the 
{@link Titanium.App#event-proximity} event.</p>
 * @description <p>This property is <code>true</code> when the proximity sensor is close to the user.  </p>
<p>When {@link Titanium.App#property-proximityDetection} is disabled, the value of this property is undefined.</p>
 */
Titanium.App.proximityState = null;

/**
 * @property publisher
 * @type String
 * @readonly
 * <p>Application publisher, from <code>tiapp.xml</code>.</p>
 */
Titanium.App.publisher = null;

/**
 * @property sessionId
 * @type String
 * @readonly
 * <p>Unique session identifier for the current continuous run of the application.</p>
 */
Titanium.App.sessionId = null;

/**
 * @property url
 * @type String
 * @readonly
 * <p>Application URL, from <code>tiapp.xml</code>.</p>
 */
Titanium.App.url = null;

/**
 * @property version
 * @type String
 * @readonly
 * <p>Application version, from <code>tiapp.xml</code>.</p>
 */
Titanium.App.version = null;

/**
 * @class Titanium.Blob
 * @typestr Object of Titanium
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A container for binary data.</p>
 * @description <p>A <code>Blob</code> represents a chunk of binary information, often obtained through 
an {@link Titanium.Network.HTTPClient HTTPClient} or by reading a {@link Titanium.Filesystem.File File}. </p>
<p>Blobs are often used to store text or image data. 
The <code>Blob</code> object includes a number of properties and methods specific to image blobs.</p>
<p>Android, Mobile Web and Tizen support an {@link Titanium.Blob#method-append append} method, but
otherwise blobs are immutable. </p>
<p>The {@link Titanium.Utils} module provides several utility methods for working with 
blobs, including methods for converting between blobs and Base64-encoded strings,
and methods for generating SHA-1 and SHA-256 hashes and MD5 digests from blob data.</p>
<p>The {@link Titanium.Buffer Buffer} object can also contain binary data, and is
more easily mutable. Extracting blob data to a buffer is somewhat roundabout:</p>
<pre><code>var blobStream = Ti.Stream.createStream({ source: myBlob, mode: Ti.Stream.MODE_READ });
var newBuffer = Ti.createBuffer({ length: myBlob.length });
var bytes = blobStream.read(newBuffer);
</code></pre>
<p>Creating a blob from a buffer is much easier:</p>
<pre><code>var newBlob = myBuffer.toBlob();
</code></pre>
<p>In both cases, the conversion involves copying the data from one object to another, so 
you should be conscious of the amount of the data being copied.</p>
 */
Titanium.Blob = {};

/**
 * @method append
 * <p>Appends the data from another blob to this blob.</p>
 * @param {Titanium.Blob} blob 
 * <p>Blob to append to this blob.</p>
 * @return void
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Blob.append = function(blob){};

/**
 * @method getFile
 * <p>Gets the value of the {@link Titanium.Blob#property-file file} property.</p>
 * @return {Titanium.Filesystem.File} 
*/
Titanium.Blob.getFile = function(){};

/**
 * @method getHeight
 * <p>Gets the value of the {@link Titanium.Blob#property-height height} property.</p>
 * @return {Number} 
*/
Titanium.Blob.getHeight = function(){};

/**
 * @method getLength
 * <p>Gets the value of the {@link Titanium.Blob#property-length length} property.</p>
 * @return {Number} 
*/
Titanium.Blob.getLength = function(){};

/**
 * @method getMimeType
 * <p>Gets the value of the {@link Titanium.Blob#property-mimeType mimeType} property.</p>
 * @return {String} 
*/
Titanium.Blob.getMimeType = function(){};

/**
 * @method getNativePath
 * <p>Gets the value of the {@link Titanium.Blob#property-nativePath nativePath} property.</p>
 * @return {String} 
*/
Titanium.Blob.getNativePath = function(){};

/**
 * @method getSize
 * <p>Gets the value of the {@link Titanium.Blob#property-size size} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Blob.getSize = function(){};

/**
 * @method getText
 * <p>Gets the value of the {@link Titanium.Blob#property-text text} property.</p>
 * @return {String} 
*/
Titanium.Blob.getText = function(){};

/**
 * @method getWidth
 * <p>Gets the value of the {@link Titanium.Blob#property-width width} property.</p>
 * @return {Number} 
*/
Titanium.Blob.getWidth = function(){};

/**
 * @method imageAsCropped
 * <p>Creates a new blob by cropping the underlying image to the specified dimensions.</p>
 * @description <p>Returns the cropped image as a blob.</p>
<p>If this blob doesn't represent an image, returns <code>null</code>.</p>
 * @param {Object} options 
 * <p>Image cropping options.</p>
 * @return {Titanium.Blob} <p>Cropped image as a blob.</p>
 * @platform android 3.0
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Blob.imageAsCropped = function(options){};

/**
 * @method imageAsResized
 * <p>Creates a new blob by resizing and scaling the underlying image to the specified dimensions.</p>
 * @description <p>Returns the resized image as a blob.</p>
<p>If this blob doesn't represent an image, returns <code>null</code>.</p>
 * @param {Number} width 
 * <p>Width to resize this image to.</p>
 * @param {Number} height 
 * <p>Height to resize this image to.</p>
 * @return {Titanium.Blob} <p>Resized image as a blob.</p>
 * @platform android 3.0
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Blob.imageAsResized = function(width, height){};

/**
 * @method imageAsThumbnail
 * <p>Returns a thumbnail version of the underlying image, optionally with a border and rounded corners.</p>
 * @description <p>Returns the thumbnail image as a blob.</p>
<p>If this blob doesn't represent an image, returns <code>null</code>.</p>
 * @param {Number} size 
 * <p>Size of the thumbnail, in either width or height.</p>
 * @param {Number} [borderSize=1] (optional)
 * <p>Width of the thumbnail's border.</p>
 * @param {Number} [cornerRadius=0] (optional)
 * <p>Radius of the thumbnail's corners.</p>
 * @return {Titanium.Blob} <p>The image thumbnail in a blob.</p>
 * @platform android 3.0
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Blob.imageAsThumbnail = function(size, arg, arg){};

/**
 * @method imageWithAlpha
 * <p>Returns a copy of the underlying image with an added alpha channel.</p>
 * @description <p>Returns the new image as a blob, or <code>null</code> if this blob is not an image.</p>
 * @return {Titanium.Blob} <p>The image with an alpha channel in a blob, or <code>null</code> if this blob is not an image.</p>
 * @platform android 3.0
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Blob.imageWithAlpha = function(){};

/**
 * @method imageWithRoundedCorner
 * <p>Returns a copy of the underlying image with rounded corners added.</p>
 * @description <p>Returns the new image as a blob, or <code>null</code> if this blob is not an image.</p>
 * @param {Number} cornerSize 
 * <p>Size of the rounded corners in pixels.</p>
 * @param {Number} [borderSize=1] (optional)
 * <p>Width of the border in pixels.</p>
 * @return {Titanium.Blob} <p>Image with a rounded corner in a blob, or <code>null</code> if this blob is not an image.</p>
 * @platform android 3.0
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Blob.imageWithRoundedCorner = function(cornerSize, arg){};

/**
 * @method imageWithTransparentBorder
 * <p>Returns a copy of the underlying image with an added transparent border.</p>
 * @description <p>Returns the new image as a blob, or <code>null</code> if this blob is not an image.</p>
 * @param {Number} size 
 * <p>Width of the transparent border in pixels.</p>
 * @return {Titanium.Blob} <p>The image with a transparent border in a blob, or <code>null</code> if this blob is not an image.</p>
 * @platform android 3.0
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Blob.imageWithTransparentBorder = function(size){};

/**
 * @method toString
 * <p>Returns a string representation of this blob.</p>
 * @description <p>On Mobile Web and Tizen, if the blob is binary, <code>toString</code> returns a base64 encoded data URI.</p>
 * @return {String} 
*/
Titanium.Blob.toString = function(){};

/**
 * @property file
 * @type Titanium.Filesystem.File
 * @readonly
 * <p>File object represented by this blob, or <code>null</code> if this blob is not
associated with a file.</p>
 */
Titanium.Blob.file = null;

/**
 * @property height
 * @type Number
 * @readonly
 * <p>If this blob represents an image, this is the height of the image in pixels.</p>
 * @description <p>If this blob doesn't represent an image, <code>height</code> is 0.</p>
<p>On Mobile Web and Tizen, the <code>height</code> is not available until the image loads. It is advised 
to set a timeout to wait for the image to load before accessing the <code>height</code>.</p>
 */
Titanium.Blob.height = null;

/**
 * @property length
 * @type Number
 * @readonly
 * <p>Length of this blob in bytes.</p>
 */
Titanium.Blob.length = null;

/**
 * @property mimeType
 * @type String
 * @readonly
 * <p>Mime type of the data in this blob.</p>
 */
Titanium.Blob.mimeType = null;

/**
 * @property nativePath
 * @type String
 * @readonly
 * <p>If this blob represents a {@link Titanium.Filesystem.File File}, this is the file URL
that represents it.</p>
 * @description <p>If this blob doesn't represent a file, the value of <code>nativePath</code> is <code>null</code>. </p>
 */
Titanium.Blob.nativePath = null;

/**
 * @property size
 * @type Number
 * @readonly
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Size of the blob in pixels (for image blobs) or bytes (for all other blobs).</p>
 * @description <p>If this blob represents an image, this is the total number of pixels in the image.
Otherwise it returns the number of bytes in the binary data.</p>
<p>On Mobile Web and Tizen, always returns the number of bytes of the blob. Note that internally, 
binary data is stored base64 encoded and <code>size</code> represents the number of bytes before 
base64 encoding.</p>
 */
Titanium.Blob.size = null;

/**
 * @property text
 * @type String
 * @readonly
 * <p>UTF-8 string representation of the data in this blob.</p>
 * @description <p>If this blob represents pure binary data, the value will be <code>null</code>.</p>
 */
Titanium.Blob.text = null;

/**
 * @property width
 * @type Number
 * @readonly
 * <p>If this blob represents an image, this is the width of the image in pixels.</p>
 * @description <p>If this blob doesn't represent an image, <code>height</code> is 0.</p>
<p>On Mobile Web and Tizen, the <code>width</code> is not available until the image loads. It is advised to set a timeout 
to wait for the image to load before accessing the <code>width</code>.</p>
 */
Titanium.Blob.width = null;

/**
 * @class Titanium.BlobStream
 * @typestr Object of Titanium
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.IOStream
 * <p>Wrapper around {@link Titanium.Blob} that implements the {@link Titanium.IOStream} interface.</p>
 * @description <p>Use the {@link Titanium.Stream#method-createStream} method to create a <code>BlobStream</code> instance from a
<code>Blob</code>.</p>
 */
Titanium.BlobStream = {};

/**
 * @class Titanium.Buffer
 * @typestr Object of Titanium
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>Buffer is a mutable, resizable container for raw data.</p>
 * @description <p>A <code>Buffer</code> works like a resizable array of byte values.</p>
<p>Use the {@link Titanium#method-createBuffer} method to create a buffer.</p>
 */
Titanium.Buffer = {};

/**
 * @method append
 * <p>Appends <code>sourceBuffer</code> to the this buffer.</p>
 * @description <p>This buffer is grown dynamically to accommodate the additional data if need be.</p>
<p>If <code>sourceOffset</code> and <code>sourceLength</code> are specified, data from <code>sourceBuffer</code> is
copied starting at position <code>sourceOffset</code>, and no more than <code>sourceLength</code> bytes
are copied.</p>
 * @param {Titanium.Buffer} sourceBuffer 
 * <p>Buffer to append to this buffer.</p>
 * @param {Number} [sourceOffset=0] (optional)
 * <p>Offset to start reading buffer data from.
If specified, <code>sourceLength</code> must also be specified.</p>
 * @param {Number} [sourceLength=Length of <code>sourceBuffer</code>.] (optional)
 * <p>Number of bytes to read from <code>sourceBuffer</code>.
If specified, <code>sourceOffset</code> must also be specified.</p>
 * @return {Number} <p>The number of bytes appended.</p>
*/
Titanium.Buffer.append = function(sourceBuffer, arg, arg){};

/**
 * @method clear
 * <p>Clears this buffer's contents but does not change the size of the buffer.</p>
 * @return void
*/
Titanium.Buffer.clear = function(){};

/**
 * @method clone
 * <p>Creates a complete or partial copy of this buffer.</p>
 * @description <p>If called with no arguments, retuns a complete copy of the current buffer.</p>
<p>If <code>offset</code> and <code>length</code> are specified, creates a new buffer from the original 
buffer contents starting at <code>offset</code> and ending at <code>offset</code>+<code>length</code>-1.</p>
 * @param {Number} [offset=0] (optional)
 * <p>Offset of first byte of this buffer to clone.
If specified, <code>length</code> must be specified as well.</p>
 * @param {Number} [length=Length of this buffer.] (optional)
 * <p>Number of bytes of data to clone.</p>
 * @return {Titanium.Buffer} 
*/
Titanium.Buffer.clone = function(arg, arg){};

/**
 * @method copy
 * <p>Copies data from <code>sourceBuffer</code> into the current buffer at <code>offset</code>.</p>
 * @description <p>Does not expand this buffer if there is not enough room  to accomodate the data
from <code>sourceBuffer</code>.</p>
<p>If <code>sourceOffset</code> and <code>sourceLength</code> are specified, bytes are copied from
<code>sourceBuffer</code> starting at <code>sourceOffset</code>, and a maximum of <code>sourceLength</code> bytes
are copied.</p>
 * @param {Titanium.Buffer} sourceBuffer 
 * <p>Buffer to copy data from.</p>
 * @param {Number} offset 
 * <p>Offset in this buffer for the first byte of the copied data.</p>
 * @param {Number} [sourceOffset=0] (optional)
 * <p>Offset in <code>sourceBuffer</code> to copy data from.
If specified, <code>sourceLength</code> must be specified as well.</p>
 * @param {Number} [sourceLength=Length of source buffer.] (optional)
 * <p>Number of bytes to copy from <code>sourceBuffer</code>.
If specified, <code>sourceOffset</code> must be specified as well.</p>
 * @return {Number} <p>The number of bytes copied.</p>
*/
Titanium.Buffer.copy = function(sourceBuffer, offset, arg, arg){};

/**
 * @method fill
 * <p>Fills this buffer with the specified byte value.</p>
 * @description <p>Fills the buffer by setting byte values to <code>fillByte</code>.</p>
<p>If <code>offset</code> and <code>length</code> are specified, fills the buffer starting at 
<code>offset</code> and ending at <code>offset</code>+<code>length</code>-1.</p>
<p>If <code>offset</code> and <code>length</code> are omitted, fills the entire buffer.</p>
 * @param {Number} fillByte 
 * <p>Byte to fill buffer with.</p>
 * @param {Number} [offset=0] (optional)
 * <p>Offset of the first byte to set to <code>fillByte</code>.</p>
 * @param {Number} [length=Buffer length.] (optional)
 * <p>Number of bytes to fill.</p>
 * @return void
*/
Titanium.Buffer.fill = function(fillByte, arg, arg){};

/**
 * @method getByteOrder
 * <p>Gets the value of the {@link Titanium.Buffer#property-byteOrder byteOrder} property.</p>
 * @return {Number} 
*/
Titanium.Buffer.getByteOrder = function(){};

/**
 * @method getLength
 * <p>Gets the value of the {@link Titanium.Buffer#property-length length} property.</p>
 * @return {Number} 
*/
Titanium.Buffer.getLength = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Titanium.Buffer#property-type type} property.</p>
 * @return {String} 
*/
Titanium.Buffer.getType = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.Buffer#property-value value} property.</p>
 * @return {Number/String} 
*/
Titanium.Buffer.getValue = function(){};

/**
 * @method insert
 * <p>Inserts data from <code>sourceBuffer</code> into this buffer at <code>offset</code>.</p>
 * @description <p>Buffer is grown to accommodate the new data.</p>
<p>If <code>sourceOffset</code> and <code>sourceLength</code> are specified, <code>sourceLength</code> bytes
of data are copied from <code>sourceBuffer</code>, with the first byte at <code>sourceOffset</code>.</p>
 * @param {Titanium.Buffer} sourceBuffer 
 * <p>Buffer holding data to insert into this buffer.</p>
 * @param {Number} offset 
 * <p>Offset in this buffer to insert the first byte copied from
<code>sourceBuffer</code>.</p>
 * @param {Number} [sourceOffset=0] (optional)
 * <p>Offset in <code>sourceBuffer</code> of the first byte to insert.
If specified, <code>sourceLength</code> must be specified as well.</p>
 * @param {Number} [sourceLength=Length of source buffer.] (optional)
 * <p>Number of bytes to insert from <code>sourceBuffer</code>.
If specified, <code>sourceOffset</code> must be specified as well.</p>
 * @return {Number} <p>The number of bytes inserted.</p>
*/
Titanium.Buffer.insert = function(sourceBuffer, offset, arg, arg){};

/**
 * @method release
 * <p>Releases the space allocated to the buffer, and sets its length to 0.</p>
 * @description <p>This is effectively the same as <code>buffer.length = 0</code>.</p>
 * @return void
*/
Titanium.Buffer.release = function(){};

/**
 * @method setLength
 * <p>Sets the value of the {@link Titanium.Buffer#property-length length} property.</p>
 * @param {Number} length 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Buffer.setLength = function(length){};

/**
 * @method toBlob
 * <p>Converts this buffer to a {@link Titanium.Blob}.</p>
 * @return {Titanium.Blob} 
*/
Titanium.Buffer.toBlob = function(){};

/**
 * @method toString
 * <p>Converts this buffer to a String.</p>
 * @return {String} 
*/
Titanium.Buffer.toString = function(){};

/**
 * @property [byteOrder=OS native byte order.]
 * @type Number
 * @creationOnly
 * <p>Byte order of this buffer.</p>
 * @description <p>Specify either {@link Titanium.Codec#property-BIG_ENDIAN} or {@link Titanium.Codec#property-LITTLE_ENDIAN}.   </p>
 */
Titanium.Buffer.byteOrder = null;

/**
 * @property [length=0 unless <code>value</code> is specified, in which case the length of the encoded data is used.]
 * @type Number
 * <p>Length of the buffer in bytes.</p>
 * @description <p>When <code>length</code> is modified the buffer will be re-sized while preserving existing data where 
possible. If the new buffer length is smaller than the length of the existing data then the 
existing data will be truncated down to the size of the new buffer. </p>
<p>Resizing a buffer by setting its length should be used sparingly due to the associated overhead.</p>
 */
Titanium.Buffer.length = null;

/**
 * @property [type=For string values, defaults to {@link Titanium.Codec#property-CHARSET_UTF8 CHARSET_UTF8}.]
 * @type String
 * @creationOnly
 * <p>The type of data encoding to use with <code>value</code>.</p>
 * @description <p>Required when <code>value</code> is a Number. For numbers, specify a <code>TYPE</code> constant 
from {@link Titanium.Codec}, for example, {@link Titanium.Codec#property-TYPE_DOUBLE}.</p>
<p>When <code>value</code> is a String, specify a <code>CHARSET</code> constant from {@link Titanium.Codec}.</p>
 */
Titanium.Buffer.type = null;

/**
 * @property value
 * @type Number/String
 * @creationOnly
 * <p>Data to be encoded.</p>
 * @description <p>If <code>value</code> is a Number, <code>type</code> must also be set. (This is simply a convenient way of 
calling {@link Titanium.Codec#method-encodeString} or {@link Titanium.Codec#method-encodeNumber}.)</p>
 */
Titanium.Buffer.value = null;

/**
 * @class Titanium.BufferStream
 * @typestr Object of Titanium
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.IOStream
 * <p>Wrapper around {@link Titanium.Buffer} that implements the {@link Titanium.IOStream} interface.</p>
 * @description <p>Use the {@link Titanium.Stream#method-createStream} method to create a <code>BufferStream</code> instance from a
<code>Buffer</code>.</p>
 */
Titanium.BufferStream = {};

/**
 * @class Titanium.Calendar
 * @typestr Submodule of Titanium
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Module
 * <p>The Calendar module provides an API for accessing the native calendar functionality.</p>
 * @description <p>This module supports retrieving information about existing events and creating new events. 
Modifying or deleting existing events and creating recurring events are only supported on iOS.</p>
<p>Currently, on Android, calendar permissions must be explicitly configured in <code>tiapp.xml</code> in order to access the
calendar. See "Common Requirements" in
<a href="#!/guide/tiapp.xml_and_timodule.xml_Reference">tiapp.xml and timodule.xml Reference</a>.</p>
 * <h3>Examples</h3>
 * <h4>All Calendars vs Selectable Calendars</h4>
 * <p><p>Print the names of all calendars, and the names of calendars that 
have been selected in the native Android calendar application.</p></p><pre>function showCalendars(calendars) {
    for (var i = 0; i &lt; calendars.length; i++) {
        Ti.API.info(calendars[i].name);
    }
}

Ti.API.info('ALL CALENDARS:');
showCalendars(Ti.Calendar.allCalendars);
if (Ti.Platform.osname === 'android') {
    Ti.API.info('SELECTABLE CALENDARS:');
    showCalendars(Ti.Calendar.selectableCalendars);
}</pre>
 * <h4>Create an Event and Reminder on Android</h4>
 * <p><p>Creates an event and adds an e-mail reminder for 10 minutes before the event.</p></p><pre>var CALENDAR_TO_USE = 3;
var calendar = Ti.Calendar.getCalendarById(CALENDAR_TO_USE);

// Create the event
var eventBegins = new Date(2010, 11, 26, 12, 0, 0);
var eventEnds = new Date(2010, 11, 26, 14, 0, 0);
var details = {
    title: 'Do some stuff',
    description: "I'm going to do some stuff at this time.",
    begin: eventBegins,
    end: eventEnds
};

var event = calendar.createEvent(details);

// Now add a reminder via e-mail for 10 minutes before the event.
var reminderDetails = {
    minutes: 10,
    method: Ti.Calendar.METHOD_EMAIL
};

event.createReminder(reminderDetails);</pre>
 * <h4>Events in a year</h4>
 * <p><p>Create a picker to allow an existing calendar to be selected and, when a button is clicked, 
generate details of all events in that calendar for the current year .</p></p><pre>var calendars = [];
var selectedCalendarName;
var selectedid;
var pickerData = [];
var osname = Ti.Platform.osname;

//**read events from calendar*******
function performCalendarReadFunctions(){
    var scrollView = Ti.UI.createScrollView({
      backgroundColor: '#eee',
      height: 500,
      top: 20
    });

    var label = Ti.UI.createLabel({
      backgroundColor: 'white',
      text: 'Click on the button to display the events for the selected calendar',
      textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,
      top: 20
    });
    scrollView.add(label);

    var selectableCalendars = Ti.Calendar.allCalendars;
    for (var i = 0, ilen = selectableCalendars.length; i &lt; ilen; i++) {
      calendars.push({ name: selectableCalendars[i].name, id: selectableCalendars[i].id });
      pickerData.push( Ti.UI.createPickerRow({ title: calendars[i].name }) );
      if(i === 0){
        selectedCalendarName = selectableCalendars[i].name;
        selectedid = selectableCalendars[i].id;
      }
    }
    
    if(!calendars.length){
      label.text = 'No calendars available. Select at least one in the native calendar before using this app';
    } else {
      label.text = 'Click button to view calendar events';
      
      var picker = Ti.UI.createPicker({
        top:20
      });
      
      picker.add(pickerData);
      win.add(picker);
      
      picker.addEventListener('change', function(e){
        for (var i = 0, ilen = calendars.length; i &lt; ilen; i++) {
          if(calendars[i].name === e.row.title){
            selectedCalendarName = calendars[i].name;
            selectedid = calendars[i].id;
            Ti.API.info('Selected calendar that we are going to fetch is :: '+ selectedid + ' name:' + selectedCalendarName);
          }
        }
      });
      
      var button = Ti.UI.createButton({
        title: 'View events',
        top: 20
      });
      win.add(button);
      
      button.addEventListener('click', function(e){
        label.text = 'Generating...';
        
        var currentYear = new Date().getFullYear();
        
        var consoleString = '';
        
        function print(s) {
          if (consoleString.length) {
            consoleString = consoleString + '\n';
          }
          consoleString = consoleString + s;
        }
        
        var calendar = Ti.Calendar.getCalendarById(selectedid);
        Ti.API.info('Calendar was of type' + calendar);
        Ti.API.info('calendar that we are going to fetch is :: '+ calendar.id + ' name:' + calendar.name);
        
        function printReminder(r) {
        if (osname === 'android') {
        var typetext = '[method unknown]';
        if (r.method == Ti.Calendar.METHOD_EMAIL) {
        typetext = 'Email';
        } else if (r.method == Ti.Calendar.METHOD_SMS) {
        typetext = 'SMS';
        } else if (r.method == Ti.Calendar.METHOD_ALERT) {
        typetext = 'Alert';
        } else if (r.method == Ti.Calendar.METHOD_DEFAULT) {
        typetext = '[default reminder method]';
        }
        print(typetext + ' reminder to be sent ' + r.minutes + ' minutes before the event');
        }
    }
        
        function printAlert(a) {
        if (osname === 'android') {
          print('Alert id ' + a.id + ' begin ' + a.begin + '; end ' + a.end + '; alarmTime ' + a.alarmTime + '; minutes ' + a.minutes);
        } else if (osname === 'iphone' || osname === 'ipad') {
        print('Alert absoluteDate ' + a.absoluteDate + ' relativeOffset ' + a.relativeOffset);
        }
        }
        
        function printEvent(event) {
          if (event.allDay) {
            print('Event: ' + event.title + '; ' + event.begin + ' (all day)');
          } else {
            print('Event: ' + event.title + '; ' + event.begin + ' ' + event.begin+ '-' + event.end);
          }
          
          var reminders = event.reminders;
          if (reminders &amp;&amp; reminders.length) {
          print('There is/are ' + reminders.length + ' reminder(s)');
          for (var i = 0; i &lt; reminders.length; i++) {
          printReminder(reminders[i]);
          }
          }
          print('hasAlarm? ' + event.hasAlarm);
          var alerts = event.alerts;
          if (alerts &amp;&amp; alerts.length) {
            for (var i = 0; i &lt; alerts.length; i++) {
              printAlert(alerts[i]);
            }
          }
          
          var status = event.status;
          if (status == Ti.Calendar.STATUS_TENTATIVE) {
            print('This event is tentative');
          }
          if (status == Ti.Calendar.STATUS_CONFIRMED) {
            print('This event is confirmed');
          }
          if (status == Ti.Calendar.STATUS_CANCELED) {
            print('This event was canceled');
          }
        }
        
        var events = calendar.getEventsInYear(currentYear);
        if (events &amp;&amp; events.length) {
          print(events.length + ' event(s) in ' + currentYear);
          print('');
          for (var i = 0; i &lt; events.length; i++) {
            printEvent(events[i]);
            print('');
          }
        } else {
          print('No events');
        }
        
        label.text = consoleString;
      });
    }

    win.add(scrollView);
}


var win = Ti.UI.createWindow({
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false,
  layout: 'vertical',
  title: 'Calendar Demo'
});

if (osname === 'android') {
performCalendarReadFunctions();
} else if (osname === 'iphone' || osname === 'ipad') {
if (Ti.Calendar.eventsAuthorization == Ti.Calendar.AUTHORIZATION_AUTHORIZED) {
    performCalendarReadFunctions();
} else {
    Ti.Calendar.requestEventsAuthorization(function(e){
        if (e.success) {
            performCalendarReadFunctions();
        } else {
            alert('Access to calendar is not allowed');
        }
    });
}
}

win.open();</pre>
 * <h4>Create a Recurring Event with Alerts on iOS</h4>
 * <p><p>Create a recurring event with alerts.</p></p><pre>function printEventDetails(eventID) {
    Ti.API.info('eventID:' + eventID);
    var defCalendar = Ti.Calendar.defaultCalendar;
    var eventFromCalendar = defCalendar.getEventById(eventID);
    if (eventFromCalendar != null) {
        Ti.API.info('Printing event values ::');
        Ti.API.info('title : '+ eventFromCalendar.title);
        Ti.API.info('notes : ' + eventFromCalendar.notes);
        Ti.API.info('location:' + eventFromCalendar.location);
        Ti.API.info('allDay ? :' + eventFromCalendar.allDay);
        Ti.API.info('status : '+ eventFromCalendar.status);
        Ti.API.info('availability : '+ eventFromCalendar.availability);
        Ti.API.info('hasAlarm ? : '+ eventFromCalendar.hasAlarm);
        Ti.API.info('id : '+ eventFromCalendar.id);
        Ti.API.info('isDetached ? : '+ eventFromCalendar.isDetached);
        Ti.API.info('begin : '+ eventFromCalendar.begin);
        Ti.API.info('end : '+ eventFromCalendar.end);
        var eventRule = eventFromCalendar.recurrenceRules;
        Ti.API.info("recurrenceRules : " + eventRule);
        for (var i = 0; i &lt; eventRule.length; i++) {
            Ti.API.info("Rule # "+ i);
            Ti.API.info('frequency : ' + eventRule[i].frequency);
            Ti.API.info('interval : ' + eventRule[i].interval);
            Ti.API.info('daysofTheWeek : ' );
            var daysofTheWeek = eventRule[i].daysOfTheWeek; 
            for (var j = 0; j &lt; daysofTheWeek.length; j++) {
                Ti.API.info('{ dayOfWeek : '+ daysofTheWeek[j].dayOfWeek +'weekNumber : '+daysofTheWeek[j].week +'}, ');
            }
            Ti.API.info('firstDayOfTheWeek : ' + eventRule[i].firstDayOfTheWeek);
            Ti.API.info('daysOfTheMonth : ');
            var daysOfTheMonth = eventRule[i].daysOfTheMonth;
            for(var j=0;j&lt;daysOfTheMonth.length;j++) {
                Ti.API.info(' ' + daysOfTheMonth[j]);
            }
            Ti.API.info('daysOfTheYear : ');
            var daysOfTheYear = eventRule[i].daysOfTheYear;
            for(var j=0;i&lt;daysOfTheYear.length;j++) {
                Ti.API.info(' ' + daysOfTheYear[j]);
            }
            Ti.API.info('weeksOfTheYear : ');
            var weeksOfTheYear = eventRule[i].weeksOfTheYear;
            for(var j=0;j&lt;weeksOfTheYear.length;j++) {
                Ti.API.info(' ' + weeksOfTheYear[j]);
            }
            Ti.API.info('monthsOfTheYear : ');
            var monthsOfTheYear = eventRule[i].monthsOfTheYear;
            for(var j=0;j&lt;monthsOfTheYear.length;j++) {
                Ti.API.info(' ' + monthsOfTheYear[j]);
            }
            Ti.API.info('daysOfTheYear : ');
            var setPositions = eventRule[i].setPositions;
            for(var j=0;j&lt;setPositions.length;j++) {
                Ti.API.info(' ' + setPositions[j]);
            }
        };
        Ti.API.info('alerts : '+ eventFromCalendar.alerts);
        var newAlerts = eventFromCalendar.alerts;
        
        for(var i=0 ; i &lt; newAlerts.length ; i++) {
            Ti.API.info('*****ALert '+ i);
            Ti.API.info('absoluteDate :'+ newAlerts[i].absoluteDate);
            Ti.API.info('relativeOffset ;' + newAlerts[i].relativeOffset);
        }
   }
}
function performCalendarWriteFunctions(){
    var defCalendar = Ti.Calendar.defaultCalendar;
    var date1 = new Date(new Date().getTime() + 3000),
        date2 = new Date(new Date().getTime() + 900000);
    Ti.API.info('Date1 : '+ date1 + 'Date2 : '+ date2);
    var event1 = defCalendar.createEvent({
                        title: 'Sample Event',
                        notes: 'This is a test event which has some values assigned to it.',
                        location: 'Appcelerator Inc',
                        begin: date1,
                        end: date2,
                        availability: Ti.Calendar.AVAILABILITY_FREE,
                        allDay: false,
                });
    var alert1 = event1.createAlert({
                        absoluteDate: new Date(new Date().getTime() - (1000*60*20))
                });
    var alert2 = event1.createAlert({
        relativeOffset:-(60*15)
    })
    var allAlerts = new Array(alert1,alert2);
    event1.alerts = allAlerts;
    var newRule = event1.createRecurenceRule({
                        frequency: Ti.Calendar.RECURRENCEFREQUENCY_MONTHLY,
                        interval: 1,
                        daysOfTheWeek: [{dayOfWeek:1,week:2},{dayOfWeek:2}],
                        end: {occurrenceCount:10}
                });
    Ti.API.info('newRule : '+ newRule);
    event1.recurrenceRules = [newRule];
    Ti.API.info('Going to save event now');
    event1.save(Ti.Calendar.SPAN_THISEVENT);
    Ti.API.info('Done with saving event,\n Now trying to retreive it.');
    printEventDetails(event1.id);
}
var win = Ti.UI.createWindow({
                        backgroundColor: 'white',
                        title: 'Calendar Demo'
            });

var label = Ti.UI.createLabel({
                        text: 'Check console log',
                        height: Ti.UI.size,
                        width: Ti.UI.size
            });
win.add(label);

if(Ti.Calendar.eventsAuthorization == Ti.Calendar.AUTHORIZATION_AUTHORIZED) {
    performCalendarWriteFunctions();
} else {
    Ti.Calendar.requestEventsAuthorization(function(e){
            if (e.success) {
                performCalendarWriteFunctions();
            } else {
                alert('Access to calendar is not allowed');
            }
        });
}
win.open();</pre>
 */
Titanium.Calendar = {};

/**
 * @class Titanium.Calendar.Alert
 * @typestr Object of Titanium.Calendar
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Proxy
 * <p>An object that represents a single alert for an event in an calendar.</p>
 */
Titanium.Calendar.Alert = {};

/**
 * @method getAbsoluteDate
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-absoluteDate absoluteDate} property.</p>
 * @return {Date} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Alert.getAbsoluteDate = function(){};

/**
 * @method getAlarmTime
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-alarmTime alarmTime} property.</p>
 * @return {Date} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Alert.getAlarmTime = function(){};

/**
 * @method getBegin
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-begin begin} property.</p>
 * @return {Date} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Alert.getBegin = function(){};

/**
 * @method getEnd
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-end end} property.</p>
 * @return {Date} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Alert.getEnd = function(){};

/**
 * @method getEventId
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-eventId eventId} property.</p>
 * @return {Number} 
*/
Titanium.Calendar.Alert.getEventId = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-id id} property.</p>
 * @return {String} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Alert.getId = function(){};

/**
 * @method getMinutes
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-minutes minutes} property.</p>
 * @return {Number} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Alert.getMinutes = function(){};

/**
 * @method getRelativeOffset
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-relativeOffset relativeOffset} property.</p>
 * @return {Number} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Alert.getRelativeOffset = function(){};

/**
 * @method getState
 * <p>Gets the value of the {@link Titanium.Calendar.Alert#property-state state} property.</p>
 * @return {Number} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Alert.getState = function(){};

/**
 * @method setAbsoluteDate
 * <p>Sets the value of the {@link Titanium.Calendar.Alert#property-absoluteDate absoluteDate} property.</p>
 * @param {Date} absoluteDate 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Alert.setAbsoluteDate = function(absoluteDate){};

/**
 * @method setRelativeOffset
 * <p>Sets the value of the {@link Titanium.Calendar.Alert#property-relativeOffset relativeOffset} property.</p>
 * @param {Number} relativeOffset 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Alert.setRelativeOffset = function(relativeOffset){};

/**
 * @property absoluteDate
 * @type Date
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The absolute date for the alarm.</p>
 * @description <p>If you set this property for a relative offset alarm, it loses 
the relative offset and becomes an absolute alarm.</p>
 */
Titanium.Calendar.Alert.absoluteDate = null;

/**
 * @property alarmTime
 * @type Date
 * @readonly
 * @platform android 3.1.1
 * <p>Date/time at which this alert alarm is set to trigger.</p>
 */
Titanium.Calendar.Alert.alarmTime = null;

/**
 * @property begin
 * @type Date
 * @readonly
 * @platform android 3.1.1
 * <p>Start date/time for the corresponding event.</p>
 */
Titanium.Calendar.Alert.begin = null;

/**
 * @property end
 * @type Date
 * @readonly
 * @platform android 3.1.1
 * <p>End date/time for the corresponding event.</p>
 */
Titanium.Calendar.Alert.end = null;

/**
 * @property eventId
 * @type Number
 * @readonly
 * <p>Identifier of the event for which this alert is set.</p>
 */
Titanium.Calendar.Alert.eventId = null;

/**
 * @property id
 * @type String
 * @readonly
 * @platform android 3.1.1
 * <p>Identifier of this alert.</p>
 */
Titanium.Calendar.Alert.id = null;

/**
 * @property minutes
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Reminder notice period in minutes, that determines how long prior to the event this alert 
should trigger.</p>
 */
Titanium.Calendar.Alert.minutes = null;

/**
 * @property relativeOffset
 * @type Number
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The offset from the start of an event, at which the alarm fires.</p>
 * @description <p>If you set this value for an absolute alarm, it loses its absolute date and 
becomes a relative offset alarm.</p>
 */
Titanium.Calendar.Alert.relativeOffset = null;

/**
 * @property state
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>The current state of the alert.</p>
 * @description <p>One of {@link Titanium.Calendar#property-STATE_DISMISSED STATE_DISMISSED},
{@link Titanium.Calendar#property-STATE_FIRED STATE_FIRED},
or {@link Titanium.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Calendar.Alert.state = null;

/**
 * @class Titanium.Calendar.Calendar
 * @typestr Object of Titanium.Calendar
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Proxy
 * <p>An object that represents a single calendar.</p>
 */
Titanium.Calendar.Calendar = {};

/**
 * @method createEvent
 * <p>Creates an event in this calendar.</p>
 * @param {Object} properties 
 * <p>Properties of the event</p>
 * @return {Titanium.Calendar.Event} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.createEvent = function(properties){};

/**
 * @method getEventById
 * <p>Gets the event with the specified identifier.</p>
 * @param {Number} id 
 * <p>Identifier of the event.</p>
 * @return {Titanium.Calendar.Event} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getEventById = function(id){};

/**
 * @method getEventsBetweenDates
 * <p>Gets events that occur between two dates.</p>
 * @param {Date} date1 
 * <p>Start date.</p>
 * @param {Date} date2 
 * <p>End date.</p>
 * @return {Titanium.Calendar.Event[]} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getEventsBetweenDates = function(date1, date2){};

/**
 * @method getEventsInDate
 * <p>Gets events that occur on a specified date.</p>
 * @param {Number} year 
 * <p>Year of the events.</p>
 * @param {Number} month 
 * <p>Month of the events, as a zero-based integer with January at 0 and December at 11.</p>
 * @param {Number} day 
 * <p>Day of the month of the events.</p>
 * @return {Titanium.Calendar.Event[]} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getEventsInDate = function(year, month, day){};

/**
 * @method getEventsInMonth
 * <p>Gets events that occur during a specified month.</p>
 * @param {Number} year 
 * <p>Year of the events.</p>
 * @param {Number} month 
 * <p>Month of the events, as a zero-based integer with January at 0 and December at 11.</p>
 * @return {Titanium.Calendar.Event[]} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getEventsInMonth = function(year, month){};

/**
 * @method getEventsInYear
 * <p>Gets all events that occur during a specified year.</p>
 * @param {Number} year 
 * <p>Year of the events.</p>
 * @return {Titanium.Calendar.Event[]} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getEventsInYear = function(year){};

/**
 * @method getHidden
 * <p>Gets the value of the {@link Titanium.Calendar.Calendar#property-hidden hidden} property.</p>
 * @return {Boolean} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getHidden = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Calendar.Calendar#property-id id} property.</p>
 * @return {String} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getId = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Calendar.Calendar#property-name name} property.</p>
 * @return {String} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Calendar.getName = function(){};

/**
 * @method getSelected
 * <p>Gets the value of the {@link Titanium.Calendar.Calendar#property-selected selected} property.</p>
 * @return {Boolean} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Calendar.getSelected = function(){};

/**
 * @property hidden
 * @type Boolean
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates whether this calendar can be edited or deleted.</p>
 * @description <p>This property is <code>true</code> when this calendar is editable.</p>
 */
Titanium.Calendar.Calendar.hidden = null;

/**
 * @property id
 * @type String
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Identifier of this calendar. Available only in iOS 5.0 and above.</p>
 */
Titanium.Calendar.Calendar.id = null;

/**
 * @property name
 * @type String
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Display name of this calendar.</p>
 */
Titanium.Calendar.Calendar.name = null;

/**
 * @property selected
 * @type Boolean
 * @readonly
 * @platform android 3.1.1
 * <p>Indicates whether the calendar is selected.</p>
 * @description <p>Set to <code>true</code> when this calendar is selected.</p>
<p>See {@link Titanium.Calendar} for examples.</p>
 */
Titanium.Calendar.Calendar.selected = null;

/**
 * @class Titanium.Calendar.Event
 * @typestr Object of Titanium.Calendar
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Proxy
 * <p>An object that represents a single event in a calendar.</p>
 * @description <p>The API supports retrieving information about existing events and creating new events.<br />
Be aware that modifying or deleting existing events and creating recurring rules for events 
are only supported on iOS.</p>
<p>See {@link Titanium.Calendar} for examples of retrieving event information and creating events.</p>
 */
Titanium.Calendar.Event = {};

/**
 * @method addRecurrenceRule
 * <p>Adds a recurrence rule to the recurrence rule array.</p>
 * @param {Titanium.Calendar.RecurrenceRule} rule 
 * <p>The recurrence rule to be added.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.addRecurrenceRule = function(rule){};

/**
 * @method createAlert
 * <p>Creates an alert for this event.</p>
 * @param {Object} data 
 * <p>Properties for the alert.</p>
 * @return {Titanium.Calendar.Alert} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.createAlert = function(data){};

/**
 * @method createRecurenceRule
 * <p>Creates an recurrence pattern for a recurring event.
All of the properties for the recurrence rule must be set during creation. 
The recurrence rule properties cannot be modified.</p>
 * @param {Object} data 
 * <p>Properties for the recurrence rule.</p>
 * @return {Titanium.Calendar.RecurrenceRule} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.createRecurenceRule = function(data){};

/**
 * @method createReminder
 * <p>Creates a reminder for this event.</p>
 * @param {Object} data 
 * <p>Properties for the reminder.</p>
 * @return {Titanium.Calendar.Reminder} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Event.createReminder = function(data){};

/**
 * @method getAlerts
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-alerts alerts} property.</p>
 * @return {Titanium.Calendar.Alert[]} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getAlerts = function(){};

/**
 * @method getAllDay
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-allDay allDay} property.</p>
 * @return {Boolean} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getAllDay = function(){};

/**
 * @method getAvailability
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-availability availability} property.</p>
 * @return {Number} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getAvailability = function(){};

/**
 * @method getBegin
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-begin begin} property.</p>
 * @return {Date} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getBegin = function(){};

/**
 * @method getDescription
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-description description} property.</p>
 * @return {String} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Event.getDescription = function(){};

/**
 * @method getEnd
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-end end} property.</p>
 * @return {Date} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getEnd = function(){};

/**
 * @method getExtendedProperties
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-extendedProperties extendedProperties} property.</p>
 * @return {Dictionary} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Event.getExtendedProperties = function(){};

/**
 * @method getExtendedProperty
 * <p>Gets the value of the specified extended property.</p>
 * @param {String} name 
 * <p>Name of an existing extended property.</p>
 * @return {String} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Event.getExtendedProperty = function(name){};

/**
 * @method getHasAlarm
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-hasAlarm hasAlarm} property.</p>
 * @return {Boolean} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getHasAlarm = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-id id} property.</p>
 * @return {String} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getId = function(){};

/**
 * @method getIsDetached
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-isDetached isDetached} property.</p>
 * @return {Boolean} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getIsDetached = function(){};

/**
 * @method getLocation
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-location location} property.</p>
 * @return {String} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getLocation = function(){};

/**
 * @method getNotes
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-notes notes} property.</p>
 * @return {String} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getNotes = function(){};

/**
 * @method getRecurenceRule
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-recurenceRule recurenceRule} property.</p>
 * @return {Titanium.Calendar.RecurrenceRule} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getRecurenceRule = function(){};

/**
 * @method getRecurenceRules
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-recurenceRules recurenceRules} property.</p>
 * @return {Titanium.Calendar.RecurrenceRule[]} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getRecurenceRules = function(){};

/**
 * @method getReminders
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-reminders reminders} property.</p>
 * @return {Titanium.Calendar.Reminder[]} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Event.getReminders = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-status status} property.</p>
 * @return {Number} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getStatus = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-title title} property.</p>
 * @return {String} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.getTitle = function(){};

/**
 * @method getVisibility
 * <p>Gets the value of the {@link Titanium.Calendar.Event#property-visibility visibility} property.</p>
 * @return {Number} 
 * @platform android 3.1.1
*/
Titanium.Calendar.Event.getVisibility = function(){};

/**
 * @method refresh
 * <p>Updates the event's data with the current information in the Calendar database.</p>
 * @description <p>This method should be only used on events that your application is editing, and only 
when your application receives the {@link Titanium.Calendar#event-change change} notification. 
If this method returns NO, the event has been deleted or otherwise invalidated, 
and you should not continue to use it. </p>
 * @return {Boolean} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.refresh = function(){};

/**
 * @method remove
 * <p>Removes an event from the event store.</p>
 * @description <p>This method raises an exception if it is passed an event from another event store.</p>
 * @param {Number} [span={@link Titanium.Calendar#property-SPAN_THISEVENT}] 
 * <p>The span to use. Indicates whether to remove future instances of the event in 
the case of a recurring event.  Use 
{@link Titanium.Calendar#property-SPAN_THISEVENT SPAN_THISEVENT} or
{@link Titanium.Calendar#property-SPAN_FUTUREEVENTS SPAN_FUTUREEVENTS}.</p>
 * @return {Boolean} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.remove = function(arg){};

/**
 * @method removeRecurenceRule
 * <p>Removes a recurrence rule to the recurrence rule array.</p>
 * @param {Titanium.Calendar.RecurrenceRule} rule 
 * <p>The recurrence rule to be removed.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.removeRecurenceRule = function(rule){};

/**
 * @method save
 * <p>Saves changes to an event permanently.</p>
 * @description <p>This method raises an exception if it is passed an event from another event store. </p>
<p>When an event is saved, it is updated in the Calendar database. Any fields you did 
not modify are updated to reflect the most recent value in the database. If the 
event has been deleted from the database, it is re-created as a new event.</p>
 * @param {Number} [span={@link Titanium.Calendar#property-SPAN_THISEVENT}] 
 * <p>The span to use. Indicates whether the save affects future instances of the 
event in the case of a recurring event. Use 
{@link Titanium.Calendar#property-SPAN_THISEVENT SPAN_THISEVENT} or
{@link Titanium.Calendar#property-SPAN_FUTUREEVENTS SPAN_FUTUREEVENTS}.</p>
 * @return {Boolean} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.save = function(arg){};

/**
 * @method setAlerts
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-alerts alerts} property.</p>
 * @param {Titanium.Calendar.Alert[]} alerts 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setAlerts = function(alerts){};

/**
 * @method setAllDay
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-allDay allDay} property.</p>
 * @param {Boolean} allDay 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setAllDay = function(allDay){};

/**
 * @method setBegin
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-begin begin} property.</p>
 * @param {Date} begin 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setBegin = function(begin){};

/**
 * @method setEnd
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-end end} property.</p>
 * @param {Date} end 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setEnd = function(end){};

/**
 * @method setExtendedProperty
 * <p>Sets the value of the specified extended property.</p>
 * @param {String} name 
 * <p>Property name.</p>
 * @param {String} value 
 * <p>Property value.</p>
 * @return void
 * @platform android 3.1.1
*/
Titanium.Calendar.Event.setExtendedProperty = function(name, value){};

/**
 * @method setLocation
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-location location} property.</p>
 * @param {String} location 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setLocation = function(location){};

/**
 * @method setNotes
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-notes notes} property.</p>
 * @param {String} notes 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setNotes = function(notes){};

/**
 * @method setRecurenceRule
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-recurenceRule recurenceRule} property.</p>
 * @param {Titanium.Calendar.RecurrenceRule} recurenceRule 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setRecurenceRule = function(recurenceRule){};

/**
 * @method setRecurenceRules
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-recurenceRules recurenceRules} property.</p>
 * @param {Titanium.Calendar.RecurrenceRule[]} recurenceRules 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setRecurenceRules = function(recurenceRules){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.Calendar.Event#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.Event.setTitle = function(title){};

/**
 * @property alerts
 * @type Titanium.Calendar.Alert[]
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Alarms associated with the calendar item, as an array of {@link Titanium.Calendar.Alert} objects.</p>
 * @description <p>This property is read-only on Android.</p>
 */
Titanium.Calendar.Event.alerts = null;

/**
 * @property [allDay=false]
 * @type Boolean
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates whether this event is all day.</p>
 * @description <p>This property is read-only on Android.</p>
 */
Titanium.Calendar.Event.allDay = null;

/**
 * @property availability
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Availability of this event.</p>
 * @description <p>One of {@link Titanium.Calendar#property-AVAILABILITY_NOTSUPPORTED AVAILABILITY_NOTSUPPORTED}, 
{@link Titanium.Calendar#property-AVAILABILITY_BUSY AVAILABILITY_BUSY}, 
{@link Titanium.Calendar#property-AVAILABILITY_FREE AVAILABILITY_FREE}, 
{@link Titanium.Calendar#property-AVAILABILITY_TENTATIVE AVAILABILITY_TENTATIVE}, 
and {@link Titanium.Calendar#property-AVAILABILITY_UNAVAILABLE AVAILABILITY_UNAVAILABLE}.</p>
 */
Titanium.Calendar.Event.availability = null;

/**
 * @property begin
 * @type Date
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Start date/time of this event.</p>
 * @description <p>This property is read-only on Android.</p>
 */
Titanium.Calendar.Event.begin = null;

/**
 * @property description
 * @type String
 * @readonly
 * @platform android 3.1.1
 * <p>Description of this event.</p>
 */
Titanium.Calendar.Event.description = null;

/**
 * @property end
 * @type Date
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>End date/time of this event.</p>
 * @description <p>This property is read-only on Android.</p>
 */
Titanium.Calendar.Event.end = null;

/**
 * @property extendedProperties
 * @type Dictionary
 * @readonly
 * @platform android 3.1.1
 * <p>Extended properties of this event.</p>
 */
Titanium.Calendar.Event.extendedProperties = null;

/**
 * @property hasAlarm
 * @type Boolean
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates whether an alarm is scheduled for this event.</p>
 */
Titanium.Calendar.Event.hasAlarm = null;

/**
 * @property id
 * @type String
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Identifier of this event.</p>
 */
Titanium.Calendar.Event.id = null;

/**
 * @property isDetached
 * @type Boolean
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Boolean value that indicates whether an event is a detached instance of a 
repeating event.</p>
 * @description <p>This value is <code>YES</code> if and only if the event is part of a repeating event 
and one or more of its attributes have been modified from the repeating event's 
default attributes.</p>
 */
Titanium.Calendar.Event.isDetached = null;

/**
 * @property location
 * @type String
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Location of this event.</p>
 * @description <p>This property is read-only on Android.</p>
 */
Titanium.Calendar.Event.location = null;

/**
 * @property notes
 * @type String
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Notes for this event.</p>
 */
Titanium.Calendar.Event.notes = null;

/**
 * @property recurenceRule
 * @type Titanium.Calendar.RecurrenceRule
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Recurrence rule associated with the event. (Available in iOS 4.0 through iOS 5.1.)</p>
 */
Titanium.Calendar.Event.recurenceRule = null;

/**
 * @property recurenceRules
 * @type Titanium.Calendar.RecurrenceRule[]
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The recurrence rules for the calendar item. (Available in iOS 5.1 and above.)</p>
 */
Titanium.Calendar.Event.recurenceRules = null;

/**
 * @property reminders
 * @type Titanium.Calendar.Reminder[]
 * @readonly
 * @platform android 3.1.1
 * <p>Existing reminders for this event.</p>
 */
Titanium.Calendar.Event.reminders = null;

/**
 * @property status
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Status of this event.</p>
 * @description <p>One of {@link Titanium.Calendar#property-STATUS_NONE STATUS_NONE}, 
{@link Titanium.Calendar#property-STATUS_CANCELED STATUS_CANCELED}, 
{@link Titanium.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED}, 
and {@link Titanium.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Calendar.Event.status = null;

/**
 * @property title
 * @type String
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Title of this event.</p>
 * @description <p>This property is read-only on Android.</p>
 */
Titanium.Calendar.Event.title = null;

/**
 * @property visibility
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Visibility of this event.</p>
 * @description <p>One of {@link Titanium.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL},
{@link Titanium.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT},
{@link Titanium.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE},
and {@link Titanium.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Calendar.Event.visibility = null;

/**
 * @class Titanium.Calendar.RecurrenceRule
 * @typestr Object of Titanium.Calendar
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Proxy
 * <p>An object that is used to describe the recurrence pattern for a recurring event.</p>
 * @description 
 */
Titanium.Calendar.RecurrenceRule = {};

/**
 * @method getCalendarID
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-calendarID calendarID} property.</p>
 * @return {String} 
*/
Titanium.Calendar.RecurrenceRule.getCalendarID = function(){};

/**
 * @method getDaysOfTheMonth
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-daysOfTheMonth daysOfTheMonth} property.</p>
 * @return {Number[]} 
*/
Titanium.Calendar.RecurrenceRule.getDaysOfTheMonth = function(){};

/**
 * @method getDaysOfTheWeek
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-daysOfTheWeek daysOfTheWeek} property.</p>
 * @return {daysOfTheWeekDictionary} 
*/
Titanium.Calendar.RecurrenceRule.getDaysOfTheWeek = function(){};

/**
 * @method getDaysOfTheYear
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-daysOfTheYear daysOfTheYear} property.</p>
 * @return {Number[]} 
*/
Titanium.Calendar.RecurrenceRule.getDaysOfTheYear = function(){};

/**
 * @method getEnd
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-end end} property.</p>
 * @return {recurrenceEndDictionary} 
*/
Titanium.Calendar.RecurrenceRule.getEnd = function(){};

/**
 * @method getFrequency
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-frequency frequency} property.</p>
 * @return {Number} 
*/
Titanium.Calendar.RecurrenceRule.getFrequency = function(){};

/**
 * @method getInterval
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-interval interval} property.</p>
 * @return {Number} 
*/
Titanium.Calendar.RecurrenceRule.getInterval = function(){};

/**
 * @method getMonthsOfTheYear
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-monthsOfTheYear monthsOfTheYear} property.</p>
 * @return {Number[]} 
*/
Titanium.Calendar.RecurrenceRule.getMonthsOfTheYear = function(){};

/**
 * @method getSetPositions
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-setPositions setPositions} property.</p>
 * @return {Number[]} 
*/
Titanium.Calendar.RecurrenceRule.getSetPositions = function(){};

/**
 * @method getWeeksOfTheYear
 * <p>Gets the value of the {@link Titanium.Calendar.RecurrenceRule#property-weeksOfTheYear weeksOfTheYear} property.</p>
 * @return {Number[]} 
*/
Titanium.Calendar.RecurrenceRule.getWeeksOfTheYear = function(){};

/**
 * @property calendarID
 * @type String
 * @readonly
 * <p>Identifier for the recurrence rule's calendar.</p>
 */
Titanium.Calendar.RecurrenceRule.calendarID = null;

/**
 * @property daysOfTheMonth
 * @type Number[]
 * @readonly
 * <p>The days of the month that the event occurs, as an array of number objects. 
Values can be from 1 to 31 and from -1 to -31. This parameter is only valid for 
recurrence rules of type 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_MONTHLY RECURRENCEFREQUENCY_MONTHLY}.</p>
 */
Titanium.Calendar.RecurrenceRule.daysOfTheMonth = null;

/**
 * @property daysOfTheWeek
 * @type daysOfTheWeekDictionary
 * @readonly
 * <p>The days of the week that the event occurs, as an Dictionay of <code>daysOfWeek</code> and <code>Week</code>. </p>
 */
Titanium.Calendar.RecurrenceRule.daysOfTheWeek = null;

/**
 * @property daysOfTheYear
 * @type Number[]
 * @readonly
 * <p>The days of the year that the event occurs, as an array of number objects. 
Values can be from 1 to 366 and from -1 to -366. This parameter is only valid for 
recurrence rules of type {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RecurrenceRule.daysOfTheYear = null;

/**
 * @property end
 * @type recurrenceEndDictionary
 * @readonly
 * <p>End of a recurrence rule.</p>
 * @description <p>The recurrence end can be specified by a date (date-based) or by a maximum count 
of occurrences (count-based). An event which is set to never end <strong>should not</strong> 
have its <code>recurrenceEnd set. Either</code>endDate<code>or</code>occurrenceCount` property will be 
present.</p>
 */
Titanium.Calendar.RecurrenceRule.end = null;

/**
 * @property frequency
 * @type Number
 * @readonly
 * <p>Frequency of the recurrence rule.</p>
<p>Can be {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_DAILY RECURRENCEFREQUENCY_DAILY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_WEEKLY RECURRENCEFREQUENCY_WEEKLY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_MONTHLY RECURRENCEFREQUENCY_MONTHLY}, or 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RecurrenceRule.frequency = null;

/**
 * @property [interval=1]
 * @type Number
 * @readonly
 * <p>The interval between instances of this recurrence. For example, a weekly 
recurrence rule with an interval of 2 occurs every other week. Must be greater than 0.</p>
 */
Titanium.Calendar.RecurrenceRule.interval = null;

/**
 * @property monthsOfTheYear
 * @type Number[]
 * @readonly
 * <p>The months of the year that the event occurs, as an array of Number objects. 
Values can be from 1 to 12. This parameter is only valid for recurrence rules of 
type {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RecurrenceRule.monthsOfTheYear = null;

/**
 * @property setPositions
 * @type Number[]
 * @readonly
 * <p>An array of ordinal numbers that filters which recurrences to include in the 
recurrence rule's frequency. For example, a yearly recurrence rule that has a 
{@link Titanium.Calendar.RecurrenceRule#property-daysOfTheWeek daysOfTheWeek} value that specifies 
Monday through Friday, and a <code>setPositions</code> array containing 2 and -1, occurs only 
on the second weekday and last weekday of every year. </p>
 */
Titanium.Calendar.RecurrenceRule.setPositions = null;

/**
 * @property weeksOfTheYear
 * @type Number[]
 * @readonly
 * <p>The weeks of the year that the event occurs, as an array of number objects. 
Values can be from 1 to 53 and from -1 to -53. This parameter is only valid for 
recurrence rules of type {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RecurrenceRule.weeksOfTheYear = null;

/**
 * @class Titanium.Calendar.Reminder
 * @typestr Object of Titanium.Calendar
 * @platform android 3.1.1
 * @extends Titanium.Proxy
 * <p>An object that represents a single reminder for an event in a calendar.</p>
 * @description <p>Reminders should be created using the {@link Titanium.Calendar.Event#method-createReminder} method 
rather than directly.</p>
<p>See {@link Titanium.Calendar} for examples of retrieving reminder information and creating 
reminders for events.</p>
 */
Titanium.Calendar.Reminder = {};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Calendar.Reminder#property-id id} property.</p>
 * @return {String} 
*/
Titanium.Calendar.Reminder.getId = function(){};

/**
 * @method getMethod
 * <p>Gets the value of the {@link Titanium.Calendar.Reminder#property-method method} property.</p>
 * @return {Number} 
*/
Titanium.Calendar.Reminder.getMethod = function(){};

/**
 * @method getMinutes
 * <p>Gets the value of the {@link Titanium.Calendar.Reminder#property-minutes minutes} property.</p>
 * @return {Number} 
*/
Titanium.Calendar.Reminder.getMinutes = function(){};

/**
 * @property id
 * @type String
 * @readonly
 * <p>Identifier of this reminder.</p>
 */
Titanium.Calendar.Reminder.id = null;

/**
 * @property method
 * @type Number
 * @readonly
 * <p>Method by which this reminder will be delivered.</p>
 * @description <p>One of {@link Titanium.Calendar#property-METHOD_ALERT METHOD_ALERT},
{@link Titanium.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT},
{@link Titanium.Calendar#property-METHOD_EMAIL METHOD_EMAIL},
or {@link Titanium.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Calendar.Reminder.method = null;

/**
 * @property minutes
 * @type Number
 * @readonly
 * <p>Reminder notice period in minutes, that determines how long prior to the event this reminder 
should trigger.</p>
 */
Titanium.Calendar.Reminder.minutes = null;


/**
 * @method getAllAlerts
 * <p>Gets the value of the {@link Titanium.Calendar#property-allAlerts allAlerts} property.</p>
 * @return {Titanium.Calendar.Alert[]} 
 * @platform android 3.1.1
*/
Titanium.Calendar.getAllAlerts = function(){};

/**
 * @method getAllCalendars
 * <p>Gets the value of the {@link Titanium.Calendar#property-allCalendars allCalendars} property.</p>
 * @return {Titanium.Calendar.Calendar[]} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.getAllCalendars = function(){};

/**
 * @method getAllEditableCalendars
 * <p>Gets the value of the {@link Titanium.Calendar#property-allEditableCalendars allEditableCalendars} property.</p>
 * @return {Titanium.Calendar.Calendar[]} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.getAllEditableCalendars = function(){};

/**
 * @method getCalendarById
 * <p>Gets the calendar with the specified identifier.</p>
 * @param {Number} id 
 * <p>Integer identifier of the calendar.</p>
 * @return {Titanium.Calendar.Calendar} 
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.getCalendarById = function(id){};

/**
 * @method getDefaultCalendar
 * <p>Gets the value of the {@link Titanium.Calendar#property-defaultCalendar defaultCalendar} property.</p>
 * @return {Titanium.Calendar.Calendar} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.getDefaultCalendar = function(){};

/**
 * @method getEventsAuthorization
 * <p>Gets the value of the {@link Titanium.Calendar#property-eventsAuthorization eventsAuthorization} property.</p>
 * @return {Number} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.getEventsAuthorization = function(){};

/**
 * @method getSelectableCalendars
 * <p>Gets the value of the {@link Titanium.Calendar#property-selectableCalendars selectableCalendars} property.</p>
 * @return {Titanium.Calendar.Calendar[]} 
 * @platform android 3.1.1
*/
Titanium.Calendar.getSelectableCalendars = function(){};

/**
 * @method requestEventsAuthorization
 * <p>If authorization is unknown, will bring up a dialog requesting permission.</p>
 * @description <p>Note that the callback may be synchronous or asynchronous. That is, it may be called
during requestEventsAuthorization or much later. See the "Request access to the events"
example on how to best use this method. </p>
 * @param {Function} callback 
 * <p>Callback function to execute when when authorization is no longer unknown.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Calendar.requestEventsAuthorization = function(callback){};

/**
 * @property AUTHORIZATION_AUTHORIZED
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A {@link Titanium.Calendar#property-eventsAuthorization eventsAuthorization} value 
indicating that the application is authorized to use events in the Calendar.</p>
 * @description <p>This value is always returned if the device is running an iOS release prior to 6.0.</p>
 */
Titanium.Calendar.AUTHORIZATION_AUTHORIZED = null;

/**
 * @property AUTHORIZATION_DENIED
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A {@link Titanium.Calendar#property-eventsAuthorization eventsAuthorization} value 
indicating that the application is not authorized to use events in the Calendar.</p>
 */
Titanium.Calendar.AUTHORIZATION_DENIED = null;

/**
 * @property AUTHORIZATION_RESTRICTED
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A {@link Titanium.Calendar#property-eventsAuthorization eventsAuthorization} value 
indicating that the application is not authorized to use events in the Calendar.
the user cannot change this application's status.</p>
 */
Titanium.Calendar.AUTHORIZATION_RESTRICTED = null;

/**
 * @property AUTHORIZATION_UNKNOWN
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A {@link Titanium.Calendar#property-eventsAuthorization eventsAuthorization} value 
indicating that the authorization state is unknown.</p>
 */
Titanium.Calendar.AUTHORIZATION_UNKNOWN = null;

/**
 * @property AVAILABILITY_BUSY
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event has a busy availability setting.</p>
 * @description <p>A {@link Titanium.Calendar.Event#property-availability event availability} value.</p>
<p>One of the group of event method constants,
{@link Titanium.Calendar#property-AVAILABILITY_NOTSUPPORTED AVAILABILITY_NOTSUPPORTED},
{@link Titanium.Calendar#property-AVAILABILITY_BUSY AVAILABILITY_BUSY},
{@link Titanium.Calendar#property-AVAILABILITY_FREE AVAILABILITY_FREE},
{@link Titanium.Calendar#property-AVAILABILITY_TENTATIVE AVAILABILITY_TENTATIVE},
and {@link Titanium.Calendar#property-AVAILABILITY_UNAVAILABLE AVAILABILITY_UNAVAILABLE}.</p>
 */
Titanium.Calendar.AVAILABILITY_BUSY = null;

/**
 * @property AVAILABILITY_FREE
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event has a free availability setting.</p>
 * @description <p>A {@link Titanium.Calendar.Event#property-availability event availability} value.</p>
<p>One of the group of event method constants,
{@link Titanium.Calendar#property-AVAILABILITY_NOTSUPPORTED AVAILABILITY_NOTSUPPORTED},
{@link Titanium.Calendar#property-AVAILABILITY_BUSY AVAILABILITY_BUSY},
{@link Titanium.Calendar#property-AVAILABILITY_FREE AVAILABILITY_FREE},
{@link Titanium.Calendar#property-AVAILABILITY_TENTATIVE AVAILABILITY_TENTATIVE},
and {@link Titanium.Calendar#property-AVAILABILITY_UNAVAILABLE AVAILABILITY_UNAVAILABLE}.</p>
 */
Titanium.Calendar.AVAILABILITY_FREE = null;

/**
 * @property AVAILABILITY_NOTSUPPORTED
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Availability settings are not supported by the event's calendar.</p>
 * @description <p>A {@link Titanium.Calendar.Event#property-availability event availability} value.</p>
<p>One of the group of event method constants,
{@link Titanium.Calendar#property-AVAILABILITY_NOTSUPPORTED AVAILABILITY_NOTSUPPORTED},
{@link Titanium.Calendar#property-AVAILABILITY_BUSY AVAILABILITY_BUSY},
{@link Titanium.Calendar#property-AVAILABILITY_FREE AVAILABILITY_FREE},
{@link Titanium.Calendar#property-AVAILABILITY_TENTATIVE AVAILABILITY_TENTATIVE},
and {@link Titanium.Calendar#property-AVAILABILITY_UNAVAILABLE AVAILABILITY_UNAVAILABLE}.</p>
 */
Titanium.Calendar.AVAILABILITY_NOTSUPPORTED = null;

/**
 * @property AVAILABILITY_TENTATIVE
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event has a tentative availability setting.</p>
 * @description <p>A {@link Titanium.Calendar.Event#property-availability event availability} value.</p>
<p>One of the group of event method constants,
{@link Titanium.Calendar#property-AVAILABILITY_NOTSUPPORTED AVAILABILITY_NOTSUPPORTED},
{@link Titanium.Calendar#property-AVAILABILITY_BUSY AVAILABILITY_BUSY},
{@link Titanium.Calendar#property-AVAILABILITY_FREE AVAILABILITY_FREE},
{@link Titanium.Calendar#property-AVAILABILITY_TENTATIVE AVAILABILITY_TENTATIVE},
and {@link Titanium.Calendar#property-AVAILABILITY_UNAVAILABLE AVAILABILITY_UNAVAILABLE}.</p>
 */
Titanium.Calendar.AVAILABILITY_TENTATIVE = null;

/**
 * @property AVAILABILITY_UNAVAILABLE
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event has a tentative availability setting.</p>
 * @description <p>A {@link Titanium.Calendar.Event#property-availability event availability} value.</p>
<p>One of the group of event method constants,
{@link Titanium.Calendar#property-AVAILABILITY_NOTSUPPORTED AVAILABILITY_NOTSUPPORTED},
{@link Titanium.Calendar#property-AVAILABILITY_BUSY AVAILABILITY_BUSY},
{@link Titanium.Calendar#property-AVAILABILITY_FREE AVAILABILITY_FREE},
{@link Titanium.Calendar#property-AVAILABILITY_TENTATIVE AVAILABILITY_TENTATIVE},
and {@link Titanium.Calendar#property-AVAILABILITY_UNAVAILABLE AVAILABILITY_UNAVAILABLE}.</p>
 */
Titanium.Calendar.AVAILABILITY_UNAVAILABLE = null;

/**
 * @property METHOD_ALERT
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Reminder alert delivery method.</p>
 * @description <p>Used with {@link Titanium.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-METHOD_ALERT METHOD_ALERT},
{@link Titanium.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT},
{@link Titanium.Calendar#property-METHOD_EMAIL METHOD_EMAIL},
and {@link Titanium.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Calendar.METHOD_ALERT = null;

/**
 * @property METHOD_DEFAULT
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Reminder default delivery method.</p>
 * @description <p>Used with {@link Titanium.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-METHOD_ALERT METHOD_ALERT},
{@link Titanium.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT},
{@link Titanium.Calendar#property-METHOD_EMAIL METHOD_EMAIL},
and {@link Titanium.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Calendar.METHOD_DEFAULT = null;

/**
 * @property METHOD_EMAIL
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Reminder email delivery method.</p>
 * @description <p>Used with {@link Titanium.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-METHOD_ALERT METHOD_ALERT}, 
{@link Titanium.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT},
{@link Titanium.Calendar#property-METHOD_EMAIL METHOD_EMAIL},
and {@link Titanium.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Calendar.METHOD_EMAIL = null;

/**
 * @property METHOD_SMS
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Reminder SMS delivery method.</p>
 * @description <p>Used with {@link Titanium.Calendar.Reminder}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-METHOD_ALERT METHOD_ALERT},
{@link Titanium.Calendar#property-METHOD_DEFAULT METHOD_DEFAULT},
{@link Titanium.Calendar#property-METHOD_EMAIL METHOD_EMAIL},
and {@link Titanium.Calendar#property-METHOD_SMS METHOD_SMS}.</p>
 */
Titanium.Calendar.METHOD_SMS = null;

/**
 * @property RECURRENCEFREQUENCY_DAILY
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates a daily recurrence rule for a events reccurance frequency.</p>
 * @description <p>Used with the {@link Titanium.Calendar.RecurrenceRule#property-frequency} property.</p>
<p>One of the group of event "frequency" constants 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_DAILY RECURRENCEFREQUENCY_DAILY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_WEEKLY RECURRENCEFREQUENCY_WEEKLY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_MONTHLY RECURRENCEFREQUENCY_MONTHLY}, 
and {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RECURRENCEFREQUENCY_DAILY = null;

/**
 * @property RECURRENCEFREQUENCY_MONTHLY
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates a monthly recurrence rule for a events reccurance frequency.</p>
 * @description <p>Used with the {@link Titanium.Calendar.RecurrenceRule#property-frequency} property.</p>
<p>One of the group of event "frequency" constants 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_DAILY RECURRENCEFREQUENCY_DAILY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_WEEKLY RECURRENCEFREQUENCY_WEEKLY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_MONTHLY RECURRENCEFREQUENCY_MONTHLY}, 
and {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RECURRENCEFREQUENCY_MONTHLY = null;

/**
 * @property RECURRENCEFREQUENCY_WEEKLY
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates a weekly recurrence rule for a events reccurance frequency.</p>
 * @description <p>Used with the {@link Titanium.Calendar.RecurrenceRule#property-frequency} property.</p>
<p>One of the group of event "frequency" constants 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_DAILY RECURRENCEFREQUENCY_DAILY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_WEEKLY RECURRENCEFREQUENCY_WEEKLY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_MONTHLY RECURRENCEFREQUENCY_MONTHLY}, 
and {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RECURRENCEFREQUENCY_WEEKLY = null;

/**
 * @property RECURRENCEFREQUENCY_YEARLY
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates a yearly recurrence rule for a events reccurance frequency.</p>
 * @description <p>Used with the {@link Titanium.Calendar.RecurrenceRule#property-frequency} property.</p>
<p>One of the group of event "frequency" constants 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_DAILY RECURRENCEFREQUENCY_DAILY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_WEEKLY RECURRENCEFREQUENCY_WEEKLY}, 
{@link Titanium.Calendar#property-RECURRENCEFREQUENCY_MONTHLY RECURRENCEFREQUENCY_MONTHLY}, 
and {@link Titanium.Calendar#property-RECURRENCEFREQUENCY_YEARLY RECURRENCEFREQUENCY_YEARLY}.</p>
 */
Titanium.Calendar.RECURRENCEFREQUENCY_YEARLY = null;

/**
 * @property SPAN_FUTUREEVENTS
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A {@link Titanium.Calendar.Event#method-save save}/{@link Titanium.Calendar.Event#method-remove remove} event value, 
indicating modifications to this event instance should also affect future instances of this event.</p>
 */
Titanium.Calendar.SPAN_FUTUREEVENTS = null;

/**
 * @property SPAN_THISEVENT
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A {@link Titanium.Calendar.Event#method-save save}/{@link Titanium.Calendar.Event#method-remove remove} event value, 
indicating modifications to this event instance should affect only this instance.</p>
 */
Titanium.Calendar.SPAN_THISEVENT = null;

/**
 * @property STATE_DISMISSED
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Alert dismissed state.</p>
 * @description <p>Used with {@link Titanium.Calendar.Alert}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-STATE_DISMISSED STATE_DISMISSED},
{@link Titanium.Calendar#property-STATE_FIRED STATE_FIRED},
and {@link Titanium.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Calendar.STATE_DISMISSED = null;

/**
 * @property STATE_FIRED
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Alert fired state.</p>
 * @description <p>Used with {@link Titanium.Calendar.Alert}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-STATE_DISMISSED STATE_DISMISSED},
{@link Titanium.Calendar#property-STATE_FIRED STATE_FIRED},
and {@link Titanium.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Calendar.STATE_FIRED = null;

/**
 * @property STATE_SCHEDULED
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Alert scheduled status.</p>
 * @description <p>Used with {@link Titanium.Calendar.Alert}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-STATE_DISMISSED STATE_DISMISSED},
{@link Titanium.Calendar#property-STATE_FIRED STATE_FIRED},
and {@link Titanium.Calendar#property-STATE_SCHEDULED STATE_SCHEDULED}.</p>
 */
Titanium.Calendar.STATE_SCHEDULED = null;

/**
 * @property STATUS_CANCELED
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event canceled status.</p>
 * @description <p>A [event status]{@link Titanium.Calendar.Event#property-status} value.</p>
<p>One of the group of event "status" constants,
{@link Titanium.Calendar#property-STATUS_NONE STATUS_NONE},
{@link Titanium.Calendar#property-STATUS_CANCELED STATUS_CANCELED},
{@link Titanium.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED},
and {@link Titanium.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Calendar.STATUS_CANCELED = null;

/**
 * @property STATUS_CONFIRMED
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event confirmed status.</p>
 * @description <p>A [event status]{@link Titanium.Calendar.Event#property-status} value.</p>
<p>One of the group of event "status" constants,
{@link Titanium.Calendar#property-STATUS_NONE STATUS_NONE},
{@link Titanium.Calendar#property-STATUS_CANCELED STATUS_CANCELED},
{@link Titanium.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED},
and {@link Titanium.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Calendar.STATUS_CONFIRMED = null;

/**
 * @property STATUS_NONE
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event has no status.</p>
 * @description <p>A [event status]{@link Titanium.Calendar.Event#property-status} value.</p>
<p>One of the group of event "status" constants,
{@link Titanium.Calendar#property-STATUS_CANCELED STATUS_CANCELED},
{@link Titanium.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED},
and {@link Titanium.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Calendar.STATUS_NONE = null;

/**
 * @property STATUS_TENTATIVE
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Event tentative status.</p>
 * @description <p>A [event status]{@link Titanium.Calendar.Event#property-status} value.</p>
<p>One of the group of event "status" constants,
{@link Titanium.Calendar#property-STATUS_NONE STATUS_NONE},
{@link Titanium.Calendar#property-STATUS_CANCELED STATUS_CANCELED},
{@link Titanium.Calendar#property-STATUS_CONFIRMED STATUS_CONFIRMED},
and {@link Titanium.Calendar#property-STATUS_TENTATIVE STATUS_TENTATIVE}.</p>
 */
Titanium.Calendar.STATUS_TENTATIVE = null;

/**
 * @property VISIBILITY_CONFIDENTIAL
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Event confidential visibility.</p>
 * @description <p>Used with {@link Titanium.Calendar.Event}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL},
{@link Titanium.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT},
{@link Titanium.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE},
and {@link Titanium.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Calendar.VISIBILITY_CONFIDENTIAL = null;

/**
 * @property VISIBILITY_DEFAULT
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Event default visibility.</p>
 * @description <p>Used with {@link Titanium.Calendar.Event}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL},
{@link Titanium.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT},
{@link Titanium.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE},
and {@link Titanium.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Calendar.VISIBILITY_DEFAULT = null;

/**
 * @property VISIBILITY_PRIVATE
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Event private visibility.</p>
 * @description <p>Used with {@link Titanium.Calendar.Event}.</p>
<p>One of the group of reminder method constants,
{@link Titanium.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL},
{@link Titanium.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT},
{@link Titanium.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE},
and {@link Titanium.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Calendar.VISIBILITY_PRIVATE = null;

/**
 * @property VISIBILITY_PUBLIC
 * @type Number
 * @readonly
 * @platform android 3.1.1
 * <p>Event public visibility.</p>
 * @description <p>Used with {@link Titanium.Calendar.Event}.</p>
<p>One of the group of reminder method constants, 
{@link Titanium.Calendar#property-VISIBILITY_CONFIDENTIAL VISIBILITY_CONFIDENTIAL},
{@link Titanium.Calendar#property-VISIBILITY_DEFAULT VISIBILITY_DEFAULT},
{@link Titanium.Calendar#property-VISIBILITY_PRIVATE VISIBILITY_PRIVATE},
and {@link Titanium.Calendar#property-VISIBILITY_PUBLIC VISIBILITY_PUBLIC}.</p>
 */
Titanium.Calendar.VISIBILITY_PUBLIC = null;

/**
 * @property allAlerts
 * @type Titanium.Calendar.Alert[]
 * @readonly
 * @platform android 3.1.1
 * <p>All alerts in selected calendars.</p>
 */
Titanium.Calendar.allAlerts = null;

/**
 * @property allCalendars
 * @type Titanium.Calendar.Calendar[]
 * @readonly
 * @platform android 3.1.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>All calendars known to the native calendar app.</p>
 */
Titanium.Calendar.allCalendars = null;

/**
 * @property allEditableCalendars
 * @type Titanium.Calendar.Calendar[]
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>All calendars known to the native calendar app that can add, edit, and 
delete items in the calendar.</p>
 */
Titanium.Calendar.allEditableCalendars = null;

/**
 * @property defaultCalendar
 * @type Titanium.Calendar.Calendar
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Calendar that events are added to by default, as specified by user settings.</p>
 */
Titanium.Calendar.defaultCalendar = null;

/**
 * @property eventsAuthorization
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Returns an authorization constant indicating if the application has access to the events in the EventKit.</p>
 * @description <p>Always returns <code>AUTHORIZATION_AUTHORIZED</code> on iOS pre-6.0.</p>
 */
Titanium.Calendar.eventsAuthorization = null;

/**
 * @property selectableCalendars
 * @type Titanium.Calendar.Calendar[]
 * @readonly
 * @platform android 3.1.1
 * <p>All calendars selected within the native calendar app, which may be a subset of <code>allCalendars</code>. </p>
 * @description <p>The native calendar application may know via the registered webservices, such as Gooogle or 
Facebook accounts about calendars that it has access to but have not been selected to be 
displayed in the native calendar app.</p>
 */
Titanium.Calendar.selectableCalendars = null;

/**
 * @class Titanium.Cloud
 * @typestr Submodule of Titanium
 * @platform android 2.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @extends Titanium.Module
 * <p>The top level Cloud module.</p>
 * @description <p>Appcelerator Cloud Services (ACS) provides a wide array of automatically-scaled data storage 
and web services, such as user logins, photo uploads, checkins, status updates, and push 
notifications, without the need to learn multiple third-party SDKs or do any 
server-side programming. Remote calls to ACS are done via a single 
<a href="http://cloud.appcelerator.com/docs/docmenu_info">REST API</a>, which may be used with almost any 
web technology that has access to an HTTP client.</p>
<p>The <code>Titanium.Cloud</code> module makes accessing ACS as simple as using any of Titanium's other APIs, 
due to its familiar and intuitive API schema. </p>
<p>For a more detailed overview of ACS and how to configure an application to use it, refer to the 
<a href="#!/guide/Integrating_with_Appcelerator_Cloud_Services">Integrating with Appcelerator Cloud
Services</a> 
and <a href="http://cloud.appcelerator.com/docs/quickstart">ACS Quickstart</a> guides. </p>
<h4>Beta ACS APIs</h4>
<p>Be aware that ACS APIs that are in pre-release form (marked "Beta" in the 
<a href="http://cloud.appcelerator.com/docs/docmenu_info">ACS documentation</a>) may be subject to change. 
During this period, while they are not supported directly by the Titanium.Cloud module, 
they may be accessed using the REST API. </p>
<h4>Using the Titanium.Cloud Module</h4>
<p>This module is not included in the Titanium namespace, but it is bundled with the
Titanium SDK as an optional CommonJS module. To use it, import the module using
<code>require</code>: </p>
<pre><code>var Cloud = require('ti.cloud');
</code></pre>
<h4>Authentication</h4>
<p>Your app must prove that it is allowed to talk to ACS. This keeps your data secure by 
preventing anyone from making requests to ACS that impersonate your app. ACS provides 
several means of authentication:</p>
<ul>
<li>
<p>3-Legged OAuth. With 3-legged OAuth, the user and application are authenticated
    at the same time. User login (or signup) is done using a separate authentication
    server, which returns a time-limited access token to the application. The
    application uses the access token to authenticate all subsequent requests. </p>
</li>
<li>
<p>2-Legged OAuth. This is a process by which a key and secret are used to sign
    each request made by your app. When the ACS server receives your request,
    the secret is used along with the data sent in the request to calculate another
    signature. If sent signature and calculated signature match, the request will be processed.</p>
</li>
<li>
<p>API Key. In this method, the application passes a pre-provisioned API key with
    each request.</p>
</li>
</ul>
<p>When using 2-Legged OAuth or API key authentication, the application presents its 
own UI to prompt the user for username and password. Then the application calls 
{@link Titanium.Cloud.Users#method-login login} or {@link Titanium.Cloud.Users#method-create create} method
to authenticate the user, passing in the  username and password. 
Once logged in, the application can store the {@link Titanium.Cloud#property-sessionId sessionId} returned 
by ACS in secure storage in order to persist the session when the application restarts. </p>
<p>When using 3-Legged  OAuth, the module presents an authentication dialog to the
user when {@link Titanium.Cloud.Users#method-secureLogin secureLogin} or
{@link Titanium.Cloud.Users#method-secureCreate secureCreate} method is called. The user's
login and password are not available to the application. The application can store the
{@link Titanium.Cloud#property-accessToken accessToken} returned by the authentication server in
secure storage so that it does not need to present the login dialog each time the application
restarts. Unlike session IDs, however, access tokens expire after a period of time.
The application owner can configure the expiration time through the ACS website.</p>
<p>The Ti.Cloud module does not provide a mechanism for securely storing a <code>sessionId</code> or
<code>accessToken</code>; the application must provide storage that matches its security
requirements.</p>
<p>3-Legged OAuth, using {@link Titanium.Cloud.Users#method-secureLogin secureLogin} and
{@link Titanium.Cloud.Users#method-secureCreate secureCreate} is the preferred authentication
method in most cases. However, if your application is using 3-Legged OAuth, all of its
clients must use 3-Legged OAuth, so there may be cases where another authentication
strategy is required.</p>
<h4>tiapp.xml Properties</h4>
<p>Titanium Studio will create a pair of keys (Development and Production) for each Titanium 
application depending on the user preference specified during new project creation. This pair 
of keys will be stored in <code>tiapp.xml</code> and one of the keys will be used during application build 
depending on the build type (development or production). </p>
<p>The supported properties in <code>tiapp.xml</code> are: </p>
<pre><code>&lt;property name="acs-api-key-development" type="string"&gt;YOUR DEVELOPMENT API KEY HERE&lt;/property&gt;
&lt;property name="acs-oauth-key-development" type="string"&gt;YOUR DEVELOPMENT OAUTH KEY HERE&lt;/property&gt;
&lt;property name="acs-oauth-secret-development" type="string"&gt;YOUR DEVELOPMENT OAUTH SECRET HERE&lt;/property&gt;

&lt;property name="acs-api-key-production" type="string"&gt;YOUR PRODUCTION API KEY HERE&lt;/property&gt;
&lt;property name="acs-oauth-key-production" type="string"&gt;YOUR PRODUCTION OAUTH KEY HERE&lt;/property&gt;
&lt;property name="acs-oauth-secret-production" type="string"&gt;YOUR PRODUCTION OAUTH SECRET HERE&lt;/property&gt;

&lt;property name="acs-api-key" type="string"&gt;YOUR API KEY HERE&lt;/property&gt;
&lt;property name="acs-oauth-key" type="string"&gt;YOUR OAUTH KEY HERE&lt;/property&gt;
&lt;property name="acs-oauth-secret" type="string"&gt;YOUR OAUTH SECRET HERE&lt;/property&gt;
</code></pre>
<p>The value for each setting that will be used is based on the following rules: </p>
<ul>
<li>apiKey is preferred over OAuth. If apiKey is provided then 
  apiKey will be used; otherwise, OAuth will be used.</li>
<li>If a deployment-specific setting is provided (production or development) then that value will 
  be used for the current deployment environment.</li>
</ul>
<p>There is also an optional setting to allow you to change the base URL for ACS requests. You 
will most likely never need to specify this. It can be specified deployment-specific, or 
generic: </p>
<pre><code>&lt;property name="acs-base-url-development" type="string"&gt;DEVELOPMENT API URL HERE&lt;/property&gt;
&lt;property name="acs-base-url-production" type="string"&gt;PRODUCTION API URL HERE&lt;/property&gt;
&lt;property name="acs-base-url" type="string"&gt;API URL HERE&lt;/property&gt;

&lt;property name="acs-authbase-url-development" type="string"&gt;AUTHENTICATION URL HERE&lt;/property&gt;
&lt;property name="acs-authbase-url-production" type="string"&gt;AUTHENTICATION URL HERE&lt;/property&gt;
&lt;property name="acs-authbase-url" type="string"&gt;AUTHENTICATION URL HERE&lt;/property&gt;
</code></pre>
<p>By default, Ti.Cloud always uses SSL for communicating with the ACS servers. This behavior can be overridden 
by setting the URLs with their non-SSL counterpart.</p>
<pre><code>&lt;property name="acs-base-url" type="string"&gt;http://api.cloud.appcelerator.com&lt;/property&gt;
&lt;property name="acs-authbase-url" type="string"&gt;http://secure-identity.cloud.appcelerator.com&lt;/property&gt;
</code></pre>
<h4>Pre 3.1.1 Release behavior</h4>
<p>Before Release 3.1.1 specify URLs without the protocol:</p>
<pre><code>&lt;property name="acs-base-url" type="string"&gt;api.cloud.appcelerator.com&lt;/property&gt;
&lt;property name="acs-authbase-url" type="string"&gt;secure-identity.cloud.appcelerator.com&lt;/property&gt;
</code></pre>
<p>To disable SSL, add this line to the application code:</p>
<pre><code>Cloud.useSecure = false;
</code></pre>
 */
Titanium.Cloud = {};

/**
 * @class Titanium.Cloud.ACLs
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS access control lists (ACLs).</p>
 * <h3>Examples</h3>
 * <h4>Create an ACL</h4>
 * <p><p>This example creates an ACL object and checks the response.</p></p><pre>Cloud.ACLs.create({
    name: 'testACL',
    reader_ids: readers.ids.join(','),
    writer_ids: writers.ids.join(','),
    public_read: false,
    public_write: false
}, function (e) {
    if (e.success) {
        alert('Created!');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update an ACL</h4>
 * <p><p>This example updates an ACL object and checks the response.</p></p><pre>Cloud.ACLs.update({
    name: 'testACL',
    reader_ids: '',
    writer_ids: '',
    public_read: true,
    public_write: true
}, function (e) {
    if (e.success) {
        alert('Updated!');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show an ACL</h4>
 * <p><p>This example requests an ACL object and checks the response.</p></p><pre>Cloud.ACLs.show({
    name: 'testACL'
}, function (e) {
    if (e.success) {
        alert('Shown!');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove an ACL</h4>
 * <p><p>This example deletes an ACL object and checks the response.</p></p><pre>Cloud.ACLs.remove({
    name: 'testACL'
}, function (e) {
    if (e.success) {
        alert('Removed!');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Add user to an ACL</h4>
 * <p><p>This example adds a user to an ACL object and checks the response.</p></p><pre>Cloud.ACLs.addUser({
    name: 'testACL',
    reader_ids: readers.ids.join(','),
    writer_ids: writers.ids.join(',')
}, function (e) {
    if (e.success) {
        alert('Added!');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove user from an ACL</h4>
 * <p><p>This example removes a user from an ACL object and checks the response.</p></p><pre>Cloud.ACLs.removeUser({
    name: 'testACL',
    reader_ids: readers.ids.join(','),
    writer_ids: writers.ids.join(',')
}, function (e) {
    if (e.success) {
        alert('Removed!');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Check user permissions</h4>
 * <p><p>This example checks a user's permissions in an ACL and checks the response.</p></p><pre>Cloud.ACLs.checkUser({
    name: 'testACL',
    user_id: userID
}, function (e) {
    if (e.success) {
        alert('Read Permission: ' + e.permission['read permission'] +
              '\nWrite Permission: ' + e.permission['write permission']);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.ACLs = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.ACLs.addEventListener = function(){};

/**
 * @method addUser
 * <p>Adds one or more users to an ACL object.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/acls/add">Access Control List (ACL): Add user(s) to an ACL</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.ACLs.addUser = function(parameters, callback){};

/**
 * @method checkUser
 * <p>Checks a user's permission in an ACL object.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/acls/check">Access Control List (ACL): Check a user's permission in an ACL</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.ACLs.checkUser = function(parameters, callback){};

/**
 * @method create
 * <p>Creates an ACL object.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/acls/create">Access Control List (ACL): Create an access control list</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>acls</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.ACLs.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.ACLs.fireEvent = function(){};

/**
 * @method remove
 * <p>Deletes an ACL object.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/acls/delete">Access Control List (ACL): Delete an ACL</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.ACLs.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.ACLs.removeEventListener = function(){};

/**
 * @method removeUser
 * <p>Removes one or more users from an ACL object.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/acls/remove">Access Control List (ACL): Remove user(s) from an ACL</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.ACLs.removeUser = function(parameters, callback){};

/**
 * @method show
 * <p>Shows an ACL object.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/acls/show">Access Control List (ACL): Show an ACL</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>acls</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.ACLs.show = function(parameters, callback){};

/**
 * @method update
 * <p>Updates an ACL object.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/acls/update">Access Control List (ACL): Update an ACL</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>acls</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.ACLs.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Chats
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS chat messages.</p>
 * <h3>Examples</h3>
 * <h4>Create Chat Message</h4>
 * <p><p>This example sends a chat message to a list of users and checks the response.</p></p><pre>Cloud.Chats.create({
    to_ids: ids.join(','),
    message: 'Good morning'
}, function (e) {
    if (e.success) {
        for (var i = 0; i &lt; e.chats.length; i++) {
            var chat = e.chats[i];
            alert('Success:\n' +
                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\n' +
                'Updated: ' + chat.updated_at + '\n' +
                'Message: ' + chat.message);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Chat Message</h4>
 * <p><p>This example requests a list of chat messages and checks the response.</p></p><pre>Cloud.Chats.query({
    participate_ids: ids.join(','),
    where: {
        updated_at: { '$gt': last_update_time }
    }
}, function (e) {
    if (e.success) {
        for (var i = 0; i &lt; e.chats.length; i++) {
            var chat = e.chats[i];
            alert('Success:\n' +
                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\n' +
                'Updated: ' + chat.updated_at + '\n' +
                'Message: ' + chat.message);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Get Chat Groups</h4>
 * <p><p>This example requests a lists of chat groups that the current user belongs to and checks 
the response.</p></p><pre>Cloud.Chats.getChatGroups(function (e) {
    if (e.success) {
        for (var i = 0; i &lt; e.chats.length; i++) {
            var group = e.chat_groups[i];
            alert('Success:\n' +
                'id: ' + group.id + '\n' +
                'created_at: ' + group.created_at + '\n' +
                'number of users: ' + group.participate_users.length);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Chats = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Chats.addEventListener = function(){};

/**
 * @method create
 * <p>Send a chat message to another user or a group of users.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/chats/create">Chats: Create a Chat Message</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>chats</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Chats.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Chats.fireEvent = function(){};

/**
 * @method getChatGroups
 * <p>Retrieve a list of chat groups the current user belongs to.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/chats/chatgroup">Chats: List Chat Groups</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>chat_groups</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Chats.getChatGroups = function(parameters, callback){};

/**
 * @method query
 * <p>Retrieve a list of chat messages with sorting and pagination.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/chats/query">Chats: Custom Query Chat Messages</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>chats</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Chats.query = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Chats.removeEventListener = function(){};

/**
 * @class Titanium.Cloud.Checkins
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS checkins.</p>
 * <h3>Examples</h3>
 * <h4>Create a Checkin</h4>
 * <p><p>This example creates a checkin and checks the response.</p></p><pre>Cloud.Checkins.create({
    place_id: myPlaceId,
    message: 'What a great view!',
    photo: Titanium.Filesystem.getFile('photo.jpg')
}, function (e) {
    if (e.success) {
        var checkin = e.checkins[0];
        alert('Success:\n' +
            'id: ' + checkin.id + '\n' +
            'place: ' + checkin.place.name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Checkins</h4>
 * <p><p>This example requests information about checkins and checks the response.</p></p><pre>Cloud.Checkins.query({
    page: 1,
    per_page: 20,
    order: '-updated_at'
}, function (e) {
    if (e.success) {
        for (var i = 0; i &lt; e.checkins.length; i++) {
            var checkin = e.checkins[i];
            alert('Success:\n' +
               'id: ' + checkin.id + '\n' +
               'place: ' + checkin.place.name + '\n' +
               'updated_at: ' + checkin.updated_at + '\n' +
               'user: ' + checkin.user.first_name + ' ' + checkin.user.last_name);
         }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Checkin</h4>
 * <p><p>This example requests information about a checkin and checks the response.</p></p><pre>Cloud.Checkins.show({
    checkin_id: myCheckinId
}, function (e) {
    if (e.success) {
        var checkin = e.checkins[0];
        alert('Success:\n' +
            'id: ' + checkin.id + '\n' +
            'place: ' + checkin.place.name + '\n' +
            'updated_at: ' + checkin.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove Checkin</h4>
 * <p><p>This example deletes a checkin and checks the response.</p></p><pre>Cloud.Checkins.remove({
    checkin_id: myCheckinId
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Checkins = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Checkins.addEventListener = function(){};

/**
 * @method create
 * <p>Check in to a place or event.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/checkins/create">Checkins: Checkin to a Place or Event</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>checkins</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Checkins.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Checkins.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of checkins with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/checkins/query">Checkins: Custom Query Checkins</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>checkins</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Checkins.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a checkin.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/checkins/delete">Checkins: Delete a checkin</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Checkins.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Checkins.removeEventListener = function(){};

/**
 * @method show
 * <p>Retrieve a checkin.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/checkins/show">Checkins: Show a Checkin</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>checkins</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Checkins.show = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Clients
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS clients.</p>
 * <h3>Example</h3>
 * <h4>Geolocate a Client</h4>
 * <p><p>This example locates a client and checks the response.</p></p><pre>Cloud.Clients.geolocate({
    ip_address: clientIPAddress
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'ip_address: ' + e.ip_address + '\n' +
            'latitude: ' + e.location.latitude + '\n' +
            'longitude: ' + e.location.longitude);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Clients = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Clients.addEventListener = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Clients.fireEvent = function(){};

/**
 * @method geolocate
 * <p>Locate a mobile device based on the IP address of the device.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/clients/geolocate">Clients: Geolocate a Client</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the properties of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Clients.geolocate = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Clients.removeEventListener = function(){};

/**
 * @class Titanium.Cloud.Emails
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS Email service.</p>
 * <h3>Example</h3>
 * <h4>Send Email</h4>
 * <p><p>This example sends an Email and checks the response.</p></p><pre>Cloud.Emails.send({
    template: 'welcome',
    recipients: 'joe@company.com'
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Emails = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Emails.addEventListener = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Emails.fireEvent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Emails.removeEventListener = function(){};

/**
 * @method send
 * <p>Send an email to a list of email adresses.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/emails/send">Emails: Send Emails</a>
for the request parameters supported by this method.</p>
<p>If you haven't configured your SMTP setting yet, go to your App Settings and configure and 
test your SMTP setting. You also need to create at least one email template.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Emails.send = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Events
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS events.</p>
 * <h3>Examples</h3>
 * <h4>Create Event</h4>
 * <p><p>This example creates a new event and checks the response.</p></p><pre>Cloud.Events.create({
    name: 'Celebration',
    start_time: starttime,
    duration: 3600,
    recurring: 'monthly',
    recurring_count: 5
}, function (e) {
    if (e.success) {
        var event = e.events[0];
        alert('Success:\n' +
            'id: ' + event.id + '\n' +
            'name: ' + event.name + '\n' +
            'updated_at: ' + event.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show an Event</h4>
 * <p><p>This example retrieves information about a event and checks the response.</p></p><pre>Cloud.Events.show({
    event_id: savedEventId
}, function (e) {
    if (e.success) {
        var event = e.events[0];
        alert('Success:\n' +
            'id: ' + event.id + '\n' +
            'name: ' + event.name + '\n' +
            'updated_at: ' + event.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Occurrences for an Event</h4>
 * <p><p>This example retrieves information about an event's occurrences and checks the response.</p></p><pre>Cloud.Events.showOccurrences({
    event_id: savedEventId
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.event_occurrences.length);
        for (var i = 0; i &lt; e.event_occurrences.length; i++) {
            var event = e.event_occurrences[i].event;
            alert('id: ' + event.id + '\n' +
                  'name: ' + event.name + '\n' +
                  'start time: ' + event.start_time + '\n' +
                  'updated_at: ' + place.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query Events</h4>
 * <p><p>This example requests a list of events and checks the response.</p></p><pre>Cloud.Events.query(function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.events.length);
        for (var i = 0; i &lt; e.events.length; i++) {
            var event = e.events[i];
            alert('id: ' + event.id + '\n' +
                  'name: ' + event.name + '\n' +
                  'start time: ' + event.start_time + '\n' +
                  'updated_at: ' + place.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query Event Occurrences</h4>
 * <p><p>This example retrieves a list of event occurrences and checks the response.</p></p><pre>Cloud.Events.queryOccurrences(function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.event_occurrences.length);
        for (var i = 0; i &lt; e.event_occurrences.length; i++) {
            var event = e.event_occurrences[i].event;
            alert('id: ' + event.id + '\n' +
                  'name: ' + event.name + '\n' +
                  'start time: ' + event.start_time + '\n' +
                  'updated_at: ' + place.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search Events</h4>
 * <p><p>This example requests a list of events and checks the response.</p></p><pre>Cloud.Events.search({
    place_id: savedPlaceId,
    start_time: startTime,
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.events.length);
        for (var i = 0; i &lt; e.events.length; i++) {
            var event = e.events[i];
            alert('id: ' + event.id + '\n' +
                  'name: ' + event.name + '\n' +
                  'start time: ' + event.start_time + '\n' +
                  'updated_at: ' + place.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search Event Occurrences</h4>
 * <p><p>This example retrieves a list of event occurrences and checks the response.</p></p><pre>Cloud.Events.searchOccurrences({
    place_id: savedPlaceId,
    start_time: startTime
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.event_occurrences.length);
        for (var i = 0; i &lt; e.event_occurrences.length; i++) {
            var event = e.event_occurrences[i].event;
            alert('id: ' + event.id + '\n' +
                  'name: ' + event.name + '\n' +
                  'start time: ' + event.start_time + '\n' +
                  'updated_at: ' + place.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search for events</h4>
 * <p><p>This example searches for events and checks the response.</p></p><pre>Cloud.Events.search({
    latitude: lat,
    longitude: lon
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.events.length);
        for (var i = 0; i &lt; e.events.length; i++) {
            var event = e.events[i];
            alert('id: ' + event.id + '\n' +
                  'name: ' + event.name + '\n' +
                  'longitude: ' + event.longitude + '\n' +
                  'latitude: ' + event.latitude + '\n' +
                  'updated_at: ' + event.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update an Event</h4>
 * <p><p>This example updates a event and checks the response.</p></p><pre>Cloud.Events.update({
    event_id: savedEventId,
    name: 'Annual Celebration',
    start_time: starttime,
    duration: 3600,
    recurring: 'monthly',
    recurring_count: 5
}, function (e) {
    if (e.success) {
        var event = e.events[0];
        alert('Success:\n' +
            'id: ' + event.id + '\n' +
            'name: ' + event.name + '\n' +
            'updated_at: ' + event.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove an Event</h4>
 * <p><p>This example deletes a event and checks the response.</p></p><pre>Cloud.Events.remove({
    event_id: savedEventId
}, function (e) {
    if (e.success) {
        alert('Removed');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Events = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Events.addEventListener = function(){};

/**
 * @method create
 * <p>Create a new event.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/create">Events: Create Event</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>events</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Events.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of events with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/query">Events: Custom Query Events</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>events</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.query = function(parameters, callback){};

/**
 * @method queryOccurrences
 * <p>Retrieve a list of event occurrences with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/query_occurrences">Events: Custom Query Event Occurrences</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>event_occurrences</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.queryOccurrences = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a event.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/delete">Events: Delete an Event</a>
for the request parameters supported by this method.</p>
<p>Only the user who created the event can delete it.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Events.removeEventListener = function(){};

/**
 * @method search
 * <p>Retrieve a list of events with full text search.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/search">Events: Search for Events</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>events</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.search = function(parameters, callback){};

/**
 * @method searchOccurrences
 * <p>Retrieve a list of event occurrences with full text search.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/search_occurrences">Events: Search for Event Occurrences</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>event_occurrences</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.searchOccurrences = function(parameters, callback){};

/**
 * @method show
 * <p>Retrieve a list of events.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/show">Events: Show Event</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>events</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.show = function(parameters, callback){};

/**
 * @method showOccurrences
 * <p>Retrieve a list of event occurrences for a given event.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/show_occurrences">Events: Show Event Occurrences</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>event_occurrences</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.showOccurrences = function(parameters, callback){};

/**
 * @method update
 * <p>Update information about a event.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/events/update">Events: Update an Event</a>
for the request parameters supported by this method.</p>
<p>Only the user who created the place can update it.</p>
<p>Data is returned in the <code>events</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Events.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Files
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS files.</p>
 * <h3>Examples</h3>
 * <h4>Create File</h4>
 * <p><p>This example creates a new file and checks the response.</p></p><pre>Cloud.Files.create({
    name: 'test.dat',
    file: Titanium.Filesystem.getFile('test.dat')
}, function (e) {
    if (e.success) {
        var file = e.files[0];
        alert('Success:\n' +
            'id: ' + file.id + '\n' +
            'name: ' + file.name + '\n' +
            'updated_at: ' + file.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show a File</h4>
 * <p><p>This example retrieves information about a file and checks the response.</p></p><pre>Cloud.Files.show({
    file_id: savedFileId
}, function (e) {
    if (e.success) {
        var file = e.files[0];
        alert('Success:\n' +
            'id: ' + file.id + '\n' +
            'name: ' + file.name + '\n' +
            'updated_at: ' + file.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Files</h4>
 * <p><p>This example requests a list of files and checks the response.</p></p><pre>Cloud.Files.query({
    page: 1,
    per_page: 20
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.files.length);
        for (var i = 0; i &lt; e.files.length; i++) {
            var file = e.files[i];
            alert('id: ' + file.id + '\n' +
                'name: ' + file.name + '\n' +
                'updated_at: ' + file.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update a File</h4>
 * <p><p>This example updates a file and checks the response.</p></p><pre>Cloud.Files.update({
    file_id: savedFileId,
    name: 'Notice'
}, function (e) {
    if (e.success) {
        var file = e.files[0];
        alert('Success:\n' +
            'id: ' + file.id + '\n' +
            'name: ' + file.name + '\n' +
            'updated_at: ' + file.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove a File</h4>
 * <p><p>This example deletes a file and checks the response.</p></p><pre>Cloud.Files.remove({
    file_id: savedFileId
}, function (e) {
    if (e.success) {
        alert('Removed');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Files = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Files.addEventListener = function(){};

/**
 * @method create
 * <p>Create a file.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/files/create">Files: Create a File</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>files</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Files.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Files.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of files with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/files/query">Files: Custom Query Files</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>files</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Files.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a file.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/files/delete">Files: Delete a File</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Files.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Files.removeEventListener = function(){};

/**
 * @method show
 * <p>Retrieve information about a file.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/files/show">Files: Show File Info</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>files</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Files.show = function(parameters, callback){};

/**
 * @method update
 * <p>Update the information for a file.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/files/update">Files: Update a File</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>files</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Files.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Friends
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS friends.</p>
 * <h3>Examples</h3>
 * <h4>Add a friend</h4>
 * <p><p>This example adds a friend and checks the response.</p></p><pre>Cloud.Friends.add({
    user_ids: checked.join(",")
}, function (e) {
    if (e.success) {
        alert('Friend(s) added');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show friend requests</h4>
 * <p><p>This example shows pending friend requests and checks the response.</p></p><pre>Cloud.Friends.requests(function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.friend_requests.length);
        for (var i = 0; i &lt; e.friend_requests.length; i++) {
            var user = e.friend_requests[i].user;
            alert('id: ' + user.id + '\n' +
                'first name: ' + user.first_name + '\n' +
                'last name: ' + user.last_name);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Approve friend requests</h4>
 * <p><p>This example approves pending friend requests and checks the response.</p></p><pre>Cloud.Friends.approve({
    user_ids: checked.join(",")
}, function (e) {
    if (e.success) {
        alert('Friend(s) approved');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove friends</h4>
 * <p><p>This example removes friends and checks the response.</p></p><pre>Cloud.Friends.remove({
    user_ids: checked.join(",")
}, function (e) {
    if (e.success) {
        alert('Friend(s) removed');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search for friends</h4>
 * <p><p>This example requests information about particular friends and checks the response.</p></p><pre>Cloud.Friends.search({
    user_id: searchID
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.users.length);
        for (var i = 0; i &lt; e.users.length; i++) {
            var user = e.users[i];
            alert('id: ' + user.id + '\n' +
                'first name: ' + user.first_name + '\n' +
                'last name: ' + user.last_name);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Friends = {};

/**
 * @method add
 * <p>Add friends to the current user.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/friends/add">Friends: Add Friends</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Friends.add = function(parameters, callback){};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Friends.addEventListener = function(){};

/**
 * @method approve
 * <p>Approve existing friend requests.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/friends/approve">Friends: Approve Friend Requests</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Friends.approve = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Friends.fireEvent = function(){};

/**
 * @method remove
 * <p>Removes one or more friends from the current user.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/friends/remove">Friends: Remove Friends</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Friends.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Friends.removeEventListener = function(){};

/**
 * @method requests
 * <p>View pending friend requests.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/friends/requests">Friends: Show Friend Requests</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>friend_requests</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Friends.requests = function(parameters, callback){};

/**
 * @method search
 * <p>Retrieve a list of friends.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/friends/search">Friends: Search Friends</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Friends.search = function(parameters, callback){};

/**
 * @class Titanium.Cloud.KeyValues
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS Key-Values storage.</p>
 * <h3>Examples</h3>
 * <h4>Set a Key-Value</h4>
 * <p><p>This example sets a key-value and checks the response.</p></p><pre>Cloud.KeyValues.set({
    name: 'welcome_message',
    value: 'Welcome to Appcelerator Cloud Services'
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Get a Key-Value</h4>
 * <p><p>This example gets a key-value and checks the response.</p></p><pre>Cloud.KeyValues.get({
    name: 'welcome_message'
}, function (e) {
    if (e.success) {
        var keyvalue = e.keyvalues[0];
        alert('Success:\n' +
            'name: ' + keyvalue.name + '\n' +
            'value: ' + keyvalue.value);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Append a Key-Value</h4>
 * <p><p>This example appends a value to a key-value and checks the response.</p></p><pre>Cloud.KeyValues.append({
    name: 'welcome_message',
    value: ', take a look around'
}, function (e) {
     if (e.success) {
         var keyvalue = e.keyvalues[0];
         alert('Success:\n' +
             'name: ' + keyvalue.name + '\n' +
             'value: ' + keyvalue.value);
     } else {
         alert('Error:\n' +
             ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
     }

});</pre>
 * <h4>Increment a Key-Value</h4>
 * <p><p>This example increments a key-value and checks the response.</p></p><pre>Cloud.KeyValues.increment({
    name: 'score',
    value: 1
}, function (e) {
     if (e.success) {
         var keyvalue = e.keyvalues[0];
         alert('Success:\n' +
             'name: ' + keyvalue.name + '\n' +
             'value: ' + keyvalue.value);
     } else {
         alert('Error:\n' +
             ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
     }

});</pre>
 * <h4>Remove a Key-Value</h4>
 * <p><p>This example deletes a key-value and checks the response.</p></p><pre>Cloud.KeyValues.remove({
    name: 'welcome_message'
}, function (e) {
     if (e.success) {
         alert('Success');
     } else {
         alert('Error:\n' +
             ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
     }

});</pre>
 */
Titanium.Cloud.KeyValues = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.KeyValues.addEventListener = function(){};

/**
 * @method append
 * <p>Add the given value to the end of an existing value.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/keyvalues/append">Key-Values: Append to a Key-Value</a>
for the request parameters supported by this method.</p>
<p>Not allowed on keyvalues with binary data.</p>
<p>Data is returned in the <code>keyvalues</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.KeyValues.append = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.KeyValues.fireEvent = function(){};

/**
 * @method get
 * <p>Retrieve a string or binary value.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/keyvalues/get">Key-Value Store: Get a Value</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>keyvalues</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.KeyValues.get = function(parameters, callback){};

/**
 * @method increment
 * <p>Increment the value by the given value.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/keyvalues/incrby">Key-Values: Increment a Key-Value</a>
for the request parameters supported by this method.</p>
<p>Not allowed on keyvalues with binary data.</p>
<p>Data is returned in the <code>keyvalues</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.KeyValues.increment = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a value.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/keyvalues/delete">Key-Values: Delete a Key-Value</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.KeyValues.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.KeyValues.removeEventListener = function(){};

/**
 * @method set
 * <p>Sets a string or binary value referenced by the key name.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/keyvalues/set">Key-Value Storage: Set a string or binary value</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.KeyValues.set = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Messages
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS messages.</p>
 * <h3>Examples</h3>
 * <h4>Create Message</h4>
 * <p><p>This example creates a new message and checks the response.</p></p><pre>Cloud.Messages.create({
    to_ids: toSet.ids.join(','),
    body: 'Hello World',
    subject: 'Test Message'
}, function (e) {
    if (e.success) {
        var message = e.messages[0];
        alert('Success:\n' +
            'id: ' + message.id + '\n' +
            'subject: ' + message.subject + '\n' +
            'body: ' + message.body + '\n' +
            'updated_at: ' + message.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Reply to a Message</h4>
 * <p><p>This example replies to a message and checks the response.</p></p><pre>Cloud.Messages.reply({
    message_id: savedMessageId,
    body: 'Welcome'
}, function (e) {
    if (e.success) {
        var message = e.messages[0];
        alert('Success:\n' +
            'id: ' + message.id + '\n' +
            'subject: ' + message.subject + '\n' +
            'body: ' + message.body + '\n' +
            'updated_at: ' + message.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show a Message</h4>
 * <p><p>This example retrieves information about a message and checks the response.</p></p><pre>Cloud.Messages.show({
    message_id: savedMessageId
}, function (e) {
    if (e.success) {
        var message = e.messages[0];
        alert('Success:\n' +
            'id: ' + message.id + '\n' +
            'subject: ' + message.subject + '\n' +
            'body: ' + message.body + '\n' +
            'updated_at: ' + message.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Inbox Messages</h4>
 * <p><p>This example requests a list of messages in the inbox and checks the response.</p></p><pre>Cloud.Messages.showInbox(function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.messages.length);
        for (var i = 0; i &lt; e.messages.length; i++) {
            var message = e.messages[i];
            alert('Success:\n' +
                'id: ' + message.id + '\n' +
                'subject: ' + message.subject + '\n' +
                'body: ' + message.body + '\n' +
                'updated_at: ' + message.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Sent Messages</h4>
 * <p><p>This example requests a list of messages that have been sent and checks the response.</p></p><pre>Cloud.Messages.showSent(function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.messages.length);
        for (var i = 0; i &lt; e.messages.length; i++) {
            var message = e.messages[i];
            alert('Success:\n' +
                'id: ' + message.id + '\n' +
                'subject: ' + message.subject + '\n' +
                'body: ' + message.body + '\n' +
                'updated_at: ' + message.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Message Threads</h4>
 * <p><p>This example requests a list of message threads and checks the response.</p></p><pre>Cloud.Messages.showThreads(function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.messages.length);
        for (var i = 0; i &lt; e.messages.length; i++) {
            var message = e.messages[i];
            alert('Success:\n' +
                'id: ' + message.id + '\n' +
                'thread id: ' + message.thread_id + '\n' +
                'subject: ' + message.subject + '\n' +
                'body: ' + message.body + '\n' +
                'updated_at: ' + message.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Thread Messages</h4>
 * <p><p>This example requests a list of messages in a thread and checks the response.</p></p><pre>Cloud.Messages.showThread({
    thread_id: savedThreadId
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.messages.length);
        for (var i = 0; i &lt; e.messages.length; i++) {
            var message = e.messages[i];
            alert('Success:\n' +
                'id: ' + message.id + '\n' +
                'thread id: ' + message.thread_id + '\n' +
                'subject: ' + message.subject + '\n' +
                'body: ' + message.body + '\n' +
                'updated_at: ' + message.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove a Message</h4>
 * <p><p>This example deletes a message and checks the response.</p></p><pre>Cloud.Messages.remove({
    message_id: savedMessageId
}, function (e) {
    if (e.success) {
        alert('Removed');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove Thread Messages</h4>
 * <p><p>This example deletes all messages in a thread and checks the response.</p></p><pre>Cloud.Messages.removeThread({
    thread_id: savedThreadId
}, function (e) {
    if (e.success) {
        alert('Removed');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Messages = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Messages.addEventListener = function(){};

/**
 * @method create
 * <p>Create a message.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/create">Messages: Send a Message</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>messages</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Messages.fireEvent = function(){};

/**
 * @method remove
 * <p>Delete a message.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/delete">Messages: Delete a Message</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Messages.removeEventListener = function(){};

/**
 * @method removeThread
 * <p>Delete all messages in a thread.</p>
 * @description <p>Requires user login.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/delete_thread">Messages: Delete All Messages in a Thread</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.removeThread = function(parameters, callback){};

/**
 * @method reply
 * <p>Reply to all recipients of a message.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/reply">Messages: Reply to a Message</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>messages</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.reply = function(parameters, callback){};

/**
 * @method show
 * <p>Retrieve information about a message.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/show">Messages: Show a Message</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>messages</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.show = function(parameters, callback){};

/**
 * @method showInbox
 * <p>Retrieve a list of messages in the current user's inbox.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/inbox">Messages: Show User's Inbox Messages</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>messages</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.showInbox = function(parameters, callback){};

/**
 * @method showSent
 * <p>Retrieve a list of messages in the current user's inbox.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/sent">Messages: Show User's Sent Messages</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>messages</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.showSent = function(parameters, callback){};

/**
 * @method showThread
 * <p>Retrieve a list of messages in a thread from the current user's inbox.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/thread">Messages: Show Messages in a Thread</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>messages</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.showThread = function(parameters, callback){};

/**
 * @method showThreads
 * <p>Retrieve a list of message threads in the current users' inbox.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/messages/threads">Messages: Show User's Message Threads</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>messages</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Messages.showThreads = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Objects
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS custom objects.</p>
 * <h3>Examples</h3>
 * <h4>Create Custom Object</h4>
 * <p><p>This example creates a new custom object and checks the response.</p></p><pre>Cloud.Objects.create({
    classname: 'cars',
    fields: {
        make: 'nissan',
        color: 'blue',
        year: 2005
    }
}, function (e) {
    if (e.success) {
        var car = e.cars[0];
        alert('Success:\n' +
            'id: ' + car.id + '\n' +
            'make: ' + car.make + '\n' +
            'color: ' + car.color + '\n' +
            'year: ' + car.year + '\n' +
            'created_at: ' + car.created_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Custom Objects</h4>
 * <p><p>This example requests information about custom objects and checks the response.</p></p><pre>Cloud.Objects.show({
    classname: 'cars',
    ids: [ savedCar1.id, savedCar2.id ]
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.cars.length);
        for (var i = 0; i &lt; e.cars.length; i++) {
            var car = e.cars[i];
            alert('id: ' + cars.id + '\n' +
                'make: ' + car.make + '\n' +
                'color: ' + car.color + '\n' +
                'year: ' + car.year + '\n' +
                'created_at: ' + car.created_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update Custom Object</h4>
 * <p><p>This example updates a custom object and checks the response.</p></p><pre>Cloud.Objects.update({
    classname: 'cars',
    id: savedCar1.id,
    fields: {
        color: 'purple',
        mileage: 10000
    }
}, function (e) {
    if (e.success) {
        var car = e.cars[0];
        alert('Success:\n' +
            'id: ' + car.id + '\n' +
            'make: ' + car.make + '\n' +
            'color: ' + car.color + '\n' +
            'year: ' + car.year + '\n' +
            'mileage: ' + car.mileage + '\n' +
            'updated_at: ' + car.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove Custom Object</h4>
 * <p><p>This example deletes a custom object and checks the response.</p></p><pre>Cloud.Objects.remove({
    classname: 'cars',
    id: savedCar1.id
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Custom Objects</h4>
 * <p><p>This example requests information about custom objects and checks the response.</p></p><pre>Cloud.Objects.query({
    classname: 'cars',
    page: 1,
    per_page: 10,
    where: {
        color: 'blue'
    }
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.cars.length);
        for (var i = 0; i &lt; e.cars.length; i++) {
            var car = e.cars[i];
            alert('id: ' + cars.id + '\n' +
                'make: ' + car.make + '\n' +
                'color: ' + car.color + '\n' +
                'year: ' + car.year + '\n' +
                'created_at: ' + car.created_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Objects = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Objects.addEventListener = function(){};

/**
 * @method create
 * <p>Create a custom object of type <code>classname</code>.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/custom_objects/create">Custom Objects: Create Custom Object</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>classname</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request. A <code>classname</code> property is required.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Objects.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Objects.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of custom objects of type <code>classname</code>.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/custom_objects/query">Custom Objects: Query Custom Objects</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>classname</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request. A <code>classname</code> property is required.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Objects.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a custom object of type <code>classname</code>.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/custom_objects/delete">Custom Objects: Delete Custom Object</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request. A <code>classname</code> property is required.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Objects.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Objects.removeEventListener = function(){};

/**
 * @method show
 * <p>Retrieve a list of custom objects of type <code>classname</code>.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/custom_objects/show">Custom Objects: Show Custom Object(s)</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>classname</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request. A <code>classname</code> property is required.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Objects.show = function(parameters, callback){};

/**
 * @method update
 * <p>Update the fields of a custom object of type <code>classname</code>.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/custom_objects/update">Custom Objects: Update Custom Object</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>classname</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request. A <code>classname</code> property is required.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Objects.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.PhotoCollections
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for ACS photo collections.</p>
 * <h3>Examples</h3>
 * <h4>Create Photo Collection</h4>
 * <p><p>This example creates a new photo collection and checks the response.</p></p><pre>Cloud.PhotoCollections.create({
    name: 'Party Pictures'
}, function (e) {
    if (e.success) {
        var collection = e.collections[0];
        alert('Success:\n' +
            'id: ' + collection.id + '\n' +
            'name: ' + collection.name + '\n' +
            'count: ' + collection.counts.total_photos + '\n'
            'updated_at: ' + collection.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show a Photo Collection</h4>
 * <p><p>This example retrieves information about a photo collection and checks the response.</p></p><pre>Cloud.PhotoCollections.show({
    collection_id: savedPhotoCollectionId
}, function (e) {
    if (e.success) {
        var collection = e.collections[0];
        alert('Success:\n' +
            'id: ' + collection.id + '\n' +
            'name: ' + collection.name + '\n' +
            'count: ' + collection.counts.total_photos + '\n'
            'updated_at: ' + collection.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search for Photo Collections</h4>
 * <p><p>This example searches for collections and checks the response.</p></p><pre>Cloud.PhotoCollections.search({
    user_id: savedUserId
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.collections.length);
        for (var i = 0; i &lt; e.collections.length; i++) {
            var collection = e.collections[i];
            alert('Success:\n' +
                'id: ' + collection.id + '\n' +
                'name: ' + collection.name + '\n' +
                'count: ' + collection.counts.total_photos + '\n'
                'updated_at: ' + collection.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Photo Subcollections</h4>
 * <p><p>This example requests a list of photo subcollections and checks the response.</p></p><pre>Cloud.PhotoCollections.showSubcollections({
    page: 1,
    per_page: 20,
    collection_id: savedCollectionId
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.collections.length);
        for (var i = 0; i &lt; e.collections.length; i++) {
            var collection = e.collections[i];
            alert('Success:\n' +
                'id: ' + collection.id + '\n' +
                'name: ' + collection.name + '\n' +
                'count: ' + collection.counts.total_photos + '\n'
                'updated_at: ' + collection.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Photo Collection Photos</h4>
 * <p><p>This example requests a list of photos in a photo collections and checks the response.</p></p><pre>Cloud.PhotoCollections.showPhotos({
    page: 1,
    per_page: 20,
    collection_id: savedCollectionId
}, function (e) {
    if (e.success) {
        if (!e.photos) {
            alert('Success: No photos');
        } else {
            alert('Success:\n' +
                'Count: ' + e.collections.length);
            for (var i = 0; i &lt; e.collections.length; i++) {
                var collection = e.collections[i];
                alert('Success:\n' +
                    'id: ' + collection.id + '\n' +
                    'name: ' + collection.name + '\n' +
                    'count: ' + collection.counts.total_photos + '\n'
                    'updated_at: ' + collection.updated_at);
            }
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update a Photo Collection</h4>
 * <p><p>This example updates a photo collection and checks the response.</p></p><pre>Cloud.PhotoCollections.update({
    collection_id: savedPhotoCollectionId,
    cover_photo_id: savedPhotoId
}, function (e) {
    if (e.success) {
        var collection = e.collections[0];
        alert('Success:\n' +
            'id: ' + collection.id + '\n' +
            'name: ' + collection.name + '\n' +
            'count: ' + collection.counts.total_photos + '\n'
            'updated_at: ' + collection.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove a Photo Collection</h4>
 * <p><p>This example deletes a photo collection and checks the response.</p></p><pre>Cloud.PhotoCollections.remove({
    collection_id: savedPhotoCollectionId
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.PhotoCollections = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.PhotoCollections.addEventListener = function(){};

/**
 * @method create
 * <p>Creates a photo collection.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/collections/create">Photo Collections: Create a Photo Collection</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>collections</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PhotoCollections.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.PhotoCollections.fireEvent = function(){};

/**
 * @method remove
 * <p>Deletes an empty collection.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/collections/delete">Photo Collections: Delete a Photo Collection</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PhotoCollections.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.PhotoCollections.removeEventListener = function(){};

/**
 * @method search
 * <p>Retrieves a list of top-level collections owned by a user.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/collections/search">Photo Collections: Search Photo Collections</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>collections</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PhotoCollections.search = function(parameters, callback){};

/**
 * @method show
 * <p>Retrieves details about a photo collection.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/collections/show">Photo Collections: Show a Photo Collection</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>collections</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PhotoCollections.show = function(parameters, callback){};

/**
 * @method showPhotos
 * <p>Retrieves photos in a collection.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/collections/photos">PhotoCollections: Show Photos</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>photos</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PhotoCollections.showPhotos = function(parameters, callback){};

/**
 * @method showSubCollections
 * <p>Retrieves a list of subcollections of a collection.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/collections/subcollections">Collections: Show Subcollections</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>collections</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PhotoCollections.showSubCollections = function(parameters, callback){};

/**
 * @method update
 * <p>Updates a photo collection.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/collections/update">Photo Collections: Update a Photo Collection</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>collections</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PhotoCollections.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Photos
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS photos.</p>
 * <h3>Examples</h3>
 * <h4>Create Photo</h4>
 * <p><p>This example creates a new photo and checks the response.</p></p><pre>Cloud.Photos.create({
    photo: Titanium.Filesystem.getFile('photo.jpg')
}, function (e) {
    if (e.success) {
        var photo = e.photos[0];
        alert('Success:\n' +
            'id: ' + photo.id + '\n' +
            'filename: ' + photo.filename + '\n' +
            'size: ' + photo.size,
            'updated_at: ' + photo.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show a Photo</h4>
 * <p><p>This example retrieves information about a photo and checks the response.</p></p><pre>Cloud.Photos.show({
    photo_id: savedPhotoId
}, function (e) {
    if (e.success) {
        var photo = e.photos[0];
        alert('Success:\n' +
            'id: ' + photo.id + '\n' +
            'filename: ' + photo.filename + '\n' +
            'updated_at: ' + photo.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search for Photos</h4>
 * <p><p>This example searches for photos and checks the response.</p></p><pre>Cloud.Photos.search({
    user_id: savedUserId
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.photos.length);
        for (var i = 0; i &lt; e.photos.length; i++) {
            var photo = e.photos[i];
            alert('id: ' + photo.id + '\n' +
                  'name: ' + photo.name + '\n' +
                  'filename: ' + photo.filename + '\n' +
                  'updated_at: ' + photo.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Photos</h4>
 * <p><p>This example requests a list of photos and checks the response.</p></p><pre>Cloud.Photos.query({
    page: 1,
    per_page: 20,
    where: {
        coordinates: {
            '$nearSphere': [-122.23,37.12],
            '$maxDistance': 0.00126
        }
    }
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.photos.length);
        for (var i = 0; i &lt; e.photos.length; i++) {
            var photo = e.photos[i];
            alert('id: ' + photo.id + '\n' +
                  'name: ' + photo.name + '\n' +
                  'filename: ' + photo.filename + '\n' +
                  'updated_at: ' + photo.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update a Photo</h4>
 * <p><p>This example updates a photo and checks the response.</p></p><pre>Cloud.Photos.update({
    photo_id: savedPhotoId,
    photo: Titanium.Filesystem.getFile('newphoto.jpg'),
    tags: 'mountains'
}, function (e) {
    if (e.success) {
        var photo = e.photos[0];
        alert('Success:\n' +
            'id: ' + photo.id + '\n' +
            'filename: ' + photo.filename + '\n' +
            'updated_at: ' + photo.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove a Photo</h4>
 * <p><p>This example deletes a photo and checks the response.</p></p><pre>Cloud.Photos.remove({
    photo_id: savedPhotoId
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Photos = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Photos.addEventListener = function(){};

/**
 * @method create
 * <p>Create or upload a new photo.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/photos/create">Photos: Create (Upload) a Photo</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>photos</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Photos.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Photos.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of photos with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/photos/query">Photos: Custom Query Photos</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>photos</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Photos.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a photo.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/photos/delete">Photos: Delete a Photo</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Photos.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Photos.removeEventListener = function(){};

/**
 * @method search
 * <p>Retrieve a list of photos.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/photos/search">Photos: Search for Photos</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>photos</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Photos.search = function(parameters, callback){};

/**
 * @method show
 * <p>Retrieve information about a photo.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/photos/show">Photos: Show Photo Info</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>photos</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Photos.show = function(parameters, callback){};

/**
 * @method update
 * <p>Update a photo.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/photos/update">Photos: Update a Photo</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>photos</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Photos.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Places
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS places.</p>
 * <h3>Examples</h3>
 * <h4>Create Place</h4>
 * <p><p>This example creates a new place and checks the response.</p></p><pre>Cloud.Places.create({
    name: 'Appcelerator HQ',
    state: 'California',
    website: 'http://www.appcelerator.com'
}, function (e) {
    if (e.success) {
        var place = e.places[0];
        alert('Success:\n' +
            'id: ' + place.id + '\n' +
            'name: ' + place.name + '\n' +
            'updated_at: ' + place.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show a Place</h4>
 * <p><p>This example retrieves information about a place and checks the response.</p></p><pre>Cloud.Places.show({
    place_id: savedPlaceId
}, function (e) {
    if (e.success) {
        var place = e.places[0];
        alert('Success:\n' +
            'id: ' + place.id + '\n' +
            'name: ' + place.name + '\n' +
            'updated_at: ' + place.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search for Places</h4>
 * <p><p>This example searches for places and checks the response.</p></p><pre>Cloud.Places.search({
    latitude: lat,
    longitude: lon
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.places.length);
        for (var i = 0; i &lt; e.places.length; i++) {
            var place = e.places[i];
            alert('id: ' + place.id + '\n' +
                  'name: ' + place.name + '\n' +
                  'longitude: ' + place.longitude + '\n' +
                  'latitude: ' + place.latitude + '\n' +
                  'updated_at: ' + place.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Places</h4>
 * <p><p>This example requests a list of places and checks the response.</p></p><pre>Cloud.Places.query({
    page: 1,
    per_page: 20,
    where: {
        lnglat: {
            '$nearSphere': [-122.23,37.12],
            '$maxDistance': 0.00126
        }
    }
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.places.length);
        for (var i = 0; i &lt; e.places.length; i++) {
            var place = e.places[i];
            alert('id: ' + place.id + '\n' +
                  'name: ' + place.name + '\n' +
                  'longitude: ' + place.longitude + '\n' +
                  'latitude: ' + place.latitude + '\n' +
                  'updated_at: ' + place.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update a Place</h4>
 * <p><p>This example updates a place and checks the response.</p></p><pre>Cloud.Places.update({
    place_id: savedPlaceId,
    city: 'Mountain View'
}, function (e) {
    if (e.success) {
        var place = e.places[0];
        alert('Success:\n' +
            'id: ' + place.id + '\n' +
            'name: ' + place.name + '\n' +
            'updated_at: ' + place.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove a Place</h4>
 * <p><p>This example deletes a place and checks the response.</p></p><pre>Cloud.Places.remove({
    place_id: savedPlaceId
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Places = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Places.addEventListener = function(){};

/**
 * @method create
 * <p>Create a new place.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/places/create">Places: Create a Place</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>places</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Places.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Places.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of places with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/places/query">Places: Custom Query Places</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>places</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Places.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a place.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/places/delete">Places: Delete a Place</a>
for the request parameters supported by this method.</p>
<p>Only the user who created the place can delete it.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Places.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Places.removeEventListener = function(){};

/**
 * @method search
 * <p>Retrieve a list of places.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/places/search">Places: Search Places</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>places</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Places.search = function(parameters, callback){};

/**
 * @method show
 * <p>Retrieve information about a place.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/places/show">Places: Show a Place</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>places</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Places.show = function(parameters, callback){};

/**
 * @method update
 * <p>Update information about a place.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/places/update">Places: Update a Place</a>
for the request parameters supported by this method.</p>
<p>Only the user who created the place can update it.</p>
<p>Data is returned in the <code>places</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Places.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Posts
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS posts.</p>
 * <h3>Examples</h3>
 * <h4>Create Post</h4>
 * <p><p>This example creates a new post and checks the response.</p></p><pre>Cloud.Posts.create({
    content: 'Man Walks On Moon',
    title: 'News of the day',
    photo: Titanium.Filesystem.getFile('photo.jpg')
}, function (e) {
    if (e.success) {
        var post = e.posts[0];
        alert('Success:\n' +
            'id: ' + post.id + '\n' +
            'title: ' + post.title + '\n' +
            'content: ' + post.content + '\n' +
            'updated_at: ' + post.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show a Post</h4>
 * <p><p>This example retrieves information about a post and checks the response.</p></p><pre>Cloud.Posts.show({
    post_id: savedPostId
}, function (e) {
    if (e.success) {
        var post = e.posts[0];
        alert('Success:\n' +
            'id: ' + post.id + '\n' +
            'title: ' + post.title + '\n' +
            'content: ' + post.content + '\n' +
            'updated_at: ' + post.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Posts</h4>
 * <p><p>This example requests a list of posts and checks the response.</p></p><pre>Cloud.Posts.query({
    page: 1,
    per_page: 20,
    where: {
        reviews_count: { '$gt': 1.0 }
    }
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.posts.length);
        for (var i = 0; i &lt; e.posts.length; i++) {
            var post = e.posts[i];
            alert('id: ' + post.id + '\n' +
                'id: ' + post.id + '\n' +
                'title: ' + post.title + '\n' +
                'content: ' + post.content + '\n' +
                'updated_at: ' + post.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update a Post</h4>
 * <p><p>This example updates a post and checks the response.</p></p><pre>Cloud.Posts.update({
    post_id: savedPostId,
    title: 'Lunar Eclipse'
}, function (e) {
    if (e.success) {
        var post = e.posts[0];
        alert('Success:\n' +
            'id: ' + post.id + '\n' +
            'title: ' + post.title + '\n' +
            'content: ' + post.content + '\n' +
            'updated_at: ' + post.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove a Post</h4>
 * <p><p>This example deletes a post and checks the response.</p></p><pre>Cloud.Posts.remove({
    post_id: savedPostId
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Posts = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Posts.addEventListener = function(){};

/**
 * @method create
 * <p>Create a post.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/posts/create">Posts: Create Post</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>posts</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Posts.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Posts.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of posts with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/posts/query">Posts: Custom Query Posts</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>posts</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Posts.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a post.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/posts/delete">Posts: Delete a Post</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Posts.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Posts.removeEventListener = function(){};

/**
 * @method show
 * <p>Retrieve information about a post.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/posts/show">Posts: Show a Post</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>posts</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Posts.show = function(parameters, callback){};

/**
 * @method update
 * <p>Update the information for a post.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/posts/update">Posts: Update a Post</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>posts</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Posts.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.PushNotifications
 * @typestr Submodule of Titanium.Cloud
 * @platform android 2.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS push notification channels.</p>
 * @description <p>Please refer to <a href="http://cloud.appcelerator.com/docs/ios#pushn">configure push notifications for iOS</a>
and <a href="http://cloud.appcelerator.com/docs/android#pushn">configure push notifications for Android</a> 
to set up your app for push notifications. To receive push notifications on Android, please 
refer to the {@link Titanium.CloudPush} module.</p>
<p>The methods in this module are used to subscribe and unsubscribe from ACS push notification 
channels, and to generate ACS push notifications. Push notifications are received using 
platform-specific mechanisms:</p>
<ul>
<li>On iOS, push notifications are received through the standard iOS push notification
    mechanism. When you register for push notifications, incoming push notifications
    are passed to the <code>callback</code> callback. See
    {@link Titanium.Network#method-registerForPushNotifications Network.registerForPushNotifications}
    for details.</li>
<li>On Android, push notifications are received through the {@link Titanium.CloudPush} module.
    Add a listener for the {@link Titanium.CloudPush#event-callback callback} event to receive push notifications.</li>
</ul>
<p>To register for push notifications, you need to obtain an application-specific <em>device
token</em>. To obtain a device token:</p>
<ul>
<li>On iOS, when you successfully register for push notifications, the device token is 
    passed to the <code>success</code> callback.</li>
<li>On Android, use
    {@link Titanium.CloudPush#method-retrieveDeviceToken CloudPush.retrieveDeviceToken} to request
    a device token. The device token is passed to the <code>success</code> callback.</li>
</ul>
 * <h3>Examples</h3>
 * <h4>Subscribe to Channel</h4>
 * <p><p>This example subscribes to a push notification channel and checks the response.</p></p><pre>Cloud.PushNotifications.subscribe({
    channel: 'friend_request',
    device_token: myPushDeviceToken
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Unsubscribe to Channel</h4>
 * <p><p>This example unsubscribes from a push notification channel and checks the response.</p></p><pre>Cloud.PushNotifications.unsubscribe({
    channel: 'friend_request',
    device_token: myPushDeviceToken
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Notify Channel</h4>
 * <p><p>This example sends a push notification to a channel and checks the response.</p></p><pre>Cloud.PushNotifications.notify({
    channel: 'friend_request',
    payload: 'Welcome to push notifications'
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.PushNotifications = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.PushNotifications.addEventListener = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.PushNotifications.fireEvent = function(){};

/**
 * @method notify
 * <p>Send a push notification to a channel.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/push_notifications/notify">Push Notifications: Notify</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PushNotifications.notify = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.PushNotifications.removeEventListener = function(){};

/**
 * @method subscribe
 * <p>Subscribe a mobile device to a push notification channel.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/push_notifications/subscribe">Push Notifications: Subscribe</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PushNotifications.subscribe = function(parameters, callback){};

/**
 * @method unsubscribe
 * <p>Unsubscribe a mobile device from a push notification channel.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/push_notifications/unsubscribe">Push Notifications: Unsubscribe</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.PushNotifications.unsubscribe = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Reviews
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS reviews.</p>
 * <h3>Examples</h3>
 * <h4>Create Review</h4>
 * <p><p>This example creates a new review and checks the response.</p></p><pre>Cloud.Reviews.create({
    post_id: savedPostId,
    rating: 1,
    content: 'Good'
}, function (e) {
    if (e.success) {
        var review = e.reviews[0];
        alert('Success:\n' +
            'id: ' + review.id + '\n' +
            'rating: ' + review.rating + '\n' +
            'content: ' + review.content + '\n' +
            'updated_at: ' + review.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show a Review</h4>
 * <p><p>This example retrieves information about a review and checks the response.</p></p><pre>Cloud.Reviews.show({
    post_id: savedPostId,
    review_id: savedReviewId
}, function (e) {
    if (e.success) {
        var review = e.reviews[0];
        alert('Success:\n' +
            'id: ' + review.id + '\n' +
            'rating: ' + review.rating + '\n' +
            'content: ' + review.content + '\n' +
            'updated_at: ' + review.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Reviews</h4>
 * <p><p>This example requests a list of reviews and checks the response.</p></p><pre>Cloud.Reviews.query({
    page: 1,
    per_page: 20,
    where: {
        rating: { '$gt': 5.0 }
    }
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.reviews.length);
        for (var i = 0; i &lt; e.reviews.length; i++) {
            var review = e.reviews[i];
            alert('id: ' + review.id + '\n' +
                'id: ' + review.id + '\n' +
                'rating: ' + review.rating + '\n' +
                'content: ' + review.content + '\n' +
                'updated_at: ' + review.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update a Review</h4>
 * <p><p>This example updates a review and checks the response.</p></p><pre>Cloud.Reviews.update({
    post_id: savedPostId,
    review_id: savedReviewId,
    rating: 100,
    content: 'Very good!'
}, function (e) {
    if (e.success) {
        var review = e.reviews[0];
        alert('Success:\n' +
            'id: ' + review.id + '\n' +
            'rating: ' + review.rating + '\n' +
            'content: ' + review.content + '\n' +
            'updated_at: ' + review.updated_at);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove a Review</h4>
 * <p><p>This example deletes a review and checks the response.</p></p><pre>Cloud.Reviews.remove({
    post_id: savedPostId,
    review_id: savedReviewId
}, function (e) {
    if (e.success) {
        alert('Success');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Reviews = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Reviews.addEventListener = function(){};

/**
 * @method create
 * <p>Add a review, comment, rating, or like.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/reviews/create">Reviews: Create Review/Comment/Rating/Like</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>reviews</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Reviews.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Reviews.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of reviews with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/reviews/query">Reviews: Custom Query Reviews/Comments/Ratings/Likes</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>reviews</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Reviews.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete a review.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/reviews/delete">Reviews: Delete a Review/Comment/Rating/Like</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Reviews.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Reviews.removeEventListener = function(){};

/**
 * @method show
 * <p>Retrieve details of a review.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/reviews/show">Reviews: Show a review</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>reviews</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Reviews.show = function(parameters, callback){};

/**
 * @method update
 * <p>Update a review.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/reviews/update">Reviews: Update a Review/Comment/Rating/Like</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>reviews</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Reviews.update = function(parameters, callback){};

/**
 * @class Titanium.Cloud.SocialIntegrations
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for access ACS social integrations.</p>
 * <h3>Examples</h3>
 * <h4>Log in External Account</h4>
 * <p><p>This example logs a user in using an external account and checks the response</p></p><pre>Cloud.SocialIntegrations.externalAccountLogin({
    type: 'facebook',
    token: Ti.Facebook.accessToken
}, function (e) {
    if (e.success) {
        var user = e.users[0];
        alert('Success:\n' +
            'id: ' + user.id + '\n' +
            'first name: ' + user.first_name + '\n' +
            'last name: ' + user.last_name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Link in External Account</h4>
 * <p><p>This example links an external account and checks the response</p></p><pre>Cloud.SocialIntegrations.externalAccountLink({
    type: 'facebook',
    token: Ti.Facebook.accessToken
}, function (e) {
    if (e.success) {
        var user = e.users[0];
        alert('Success:\n' +
            'id: ' + user.id + '\n' +
            'first name: ' + user.first_name + '\n' +
            'last name: ' + user.last_name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search for Facebook Friends</h4>
 * <p><p>This example retrieves a list of Facebook Friends and checks the response</p></p><pre>Cloud.SocialIntegrations.searchFacebookFriends(function (e){
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.users.length);
        for (var i = 0; i &lt; e.users.length; i++) {
            var user = e.users[i];
            alert('id: ' + user.id + '\n' +
                'first name: ' + user.first_name + '\n' +
                'last name: ' + user.last_name);
         }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.SocialIntegrations = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.SocialIntegrations.addEventListener = function(){};

/**
 * @method externalAccountLink
 * <p>Associate an external account with an existing ACS user account.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/social/linkexternal">Social Integration: Link an external account</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.SocialIntegrations.externalAccountLink = function(parameters, callback){};

/**
 * @method externalAccountLogin
 * <p>Login to ACS using an external account such as Facebook, Twitter,LinkedIn, etc.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/social/loginexternal">Social Integration: Login with external account</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.SocialIntegrations.externalAccountLogin = function(parameters, callback){};

/**
 * @method externalAccountUnlink
 * <p>Disassociate an external account from a ACS user account.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/social/unlinkexternal">Social Integration: Unlink an external account</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.SocialIntegrations.externalAccountUnlink = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.SocialIntegrations.fireEvent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.SocialIntegrations.removeEventListener = function(){};

/**
 * @method searchFacebookFriends
 * <p>Returns a list of the current user's Facebook friends who are also using this application.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/social/facebook_friends">Social Integration: Find Facebook Friends</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.SocialIntegrations.searchFacebookFriends = function(callback){};

/**
 * @class Titanium.Cloud.Statuses
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS Statuses.</p>
 * <h3>Examples</h3>
 * <h4>Create a Status</h4>
 * <p><p>This example creates a status and checks the response.</p></p><pre>Cloud.Statuses.create({
    place_id: myPlaceId,
    message: 'What a great view!',
    photo: Titanium.Filesystem.getFile('photo.jpg')
}, function (e) {
    if (e.success) {
        var status = e.statuses[0];
        alert('Success:\n' +
            'id: ' + status.id + '\n' +
            'place: ' + status.place.name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search Status</h4>
 * <p><p>This example requests information about a user's status and checks the response.</p></p><pre>Cloud.Statuses.search({
    user_id: someUserId
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.statuses.length);
        for (var i = 0; i &lt; e.statuses.length; i++) {
            var status = e.statuses[i];
            alert('id: ' + status.id + '\n' +
                  'message: ' + status.message + '\n' +
                  'updated_at: ' + status.updated_at);
        }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query Status</h4>
 * <p><p>This example requests information about statuses and checks the response.</p></p><pre>Cloud.Statuses.query({
    page: 1,
    per_page: 20,
    order: '-updated_at'
}, function (e) {
    if (e.success) {
        for (var i = 0; i &lt; e.statuses.length; i++) {
            var status = e.statuses[i];
            alert('Success:\n' +
               'id: ' + status.id + '\n' +
               'message: ' + status.message + '\n' +
               'updated_at: ' + status.updated_at);
         }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Statuses = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Statuses.addEventListener = function(){};

/**
 * @method create
 * <p>Creates a status for the currently logged in user.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/statuses/create">Users: Create a Status</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>statuses</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Statuses.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Statuses.fireEvent = function(){};

/**
 * @method query
 * <p>Retrieve a list of statuses with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/statuses/query">Statuses: Custom Query Status</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>statuses</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Statuses.query = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Statuses.removeEventListener = function(){};

/**
 * @method search
 * <p>Retrieve the statuses for a user.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/statuses/show">Users: Show Statuses for a User</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>statuses</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Statuses.search = function(parameters, callback){};

/**
 * @class Titanium.Cloud.Users
 * @typestr Submodule of Titanium.Cloud
 * @extends Titanium.Module
 * <p>Provides methods for accessing ACS user objects.</p>
 * <h3>Examples</h3>
 * <h4>Create User</h4>
 * <p><p>This example creates a new user and checks the response.</p></p><pre>Cloud.Users.create({
    email: 'test@mycompany.com',
    first_name: 'test_firstname',
    last_name: 'test_lastname',
    password: 'test_password',
    password_confirmation: 'test_password'
}, function (e) {
    if (e.success) {
        var user = e.users[0];
        alert('Success:\n' +
            'id: ' + user.id + '\n' +
            'sessionId: ' + Cloud.sessionId + '\n' +
            'first name: ' + user.first_name + '\n' +
            'last name: ' + user.last_name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Log in User</h4>
 * <p><p>This example logs a user in and checks the response.</p></p><pre>Cloud.Users.login({
    login: 'test@mycompany.com',
    password: 'test_password'
}, function (e) {
    if (e.success) {
        var user = e.users[0];
        alert('Success:\n' +
            'id: ' + user.id + '\n' +
            'sessionId: ' + Cloud.sessionId + '\n' +
            'first name: ' + user.first_name + '\n' +
            'last name: ' + user.last_name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show User</h4>
 * <p><p>This example requests information about a user and checks the response.</p></p><pre>Cloud.Users.show({
    user_id: savedUserInfo.id
}, function (e) {
    if (e.success) {
        var user = e.users[0];
        alert('Success:\n' +
            'id: ' + user.id + '\n' +
            'first name: ' + user.first_name + '\n' +
            'last name: ' + user.last_name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Show Current User</h4>
 * <p><p>This example requests information about the currently logged in user and checks the response.</p></p><pre>Cloud.Users.showMe(function (e) {
    if (e.success) {
        var user = e.users[0];
        alert('Success:\n' +
            'id: ' + user.id + '\n' +
            'first name: ' + user.first_name + '\n' +
            'last name: ' + user.last_name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Search for Users</h4>
 * <p><p>This example requests information about particular users and checks the response.</p></p><pre>Cloud.Users.search({
    q: 'test'
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.users.length);
        for (var i = 0; i &lt; e.users.length; i++) {
            var user = e.users[i];
            alert('id: ' + user.id + '\n' +
                'first name: ' + user.first_name + '\n' +
                'last name: ' + user.last_name);
         }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Query for Users</h4>
 * <p><p>This example requests information about specific users and checks the response.</p></p><pre>Cloud.Users.query({
    page: 1,
    per_page: 10,
    where: {
        age: { '$gt': 28 },
        favorite_color: 'blue',
        first_name: 'joe'
    }
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'Count: ' + e.users.length);
        for (var i = 0; i &lt; e.users.length; i++) {
            var user = e.users[i];
            alert('id: ' + user.id + '\n' +
                'first name: ' + user.first_name + '\n' +
                'last name: ' + user.last_name);
         }
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Update User</h4>
 * <p><p>This example updates information about the currently logged in user and checks the response.</p></p><pre>Cloud.Users.update({
    email: 'joeuser@mycompany.com',
    first_name: 'joe',
    last_name: 'user',
    custom_fields: {
        favorite_color: 'blue',
        age: 25
    }
}, function (e) {
    if (e.success) {
        var user = e.users[0];
        alert('Success:\n' +
            'id: ' + user.id + '\n' +
            'first name: ' + user.first_name + '\n' +
            'last name: ' + user.last_name);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Logout User</h4>
 * <p><p>This example logs out the current user and checks the response.</p></p><pre>Cloud.Users.logout(function (e) {
    if (e.success) {
        alert('Success: Logged out');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Remove User</h4>
 * <p><p>This example deletes the current user and checks the response.</p></p><pre>Cloud.Users.remove(function (e) {
    if (e.success) {
        alert('Success: Removed');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Request Reset Password User</h4>
 * <p><p>This example requests a password reset for a user and checks the response.</p></p><pre>Cloud.Users.requestResetPassword({
    email: 'joeuser@mycompany.com'
}, function (e) {
    if (e.success) {
        alert('Success: Reset Request Sent');
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Create User Using 3-Legged OAuth</h4>
 * <p><p>This example creates a new user using 3-Legged OAuth and checks the response.</p></p><pre>Cloud.Users.secureCreate({
    title: 'Sign Up Here'
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'accessToken: ' + Cloud.accessToken + '\n' +
            'expiresIn: ' + Cloud.expiresIn);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 * <h4>Log in User Using 3-Legged OAuth</h4>
 * <p><p>This example logs a user in using 3-Legged OAuth and checks the response.</p></p><pre>Cloud.Users.secureLogin({
    title: 'Log In Here'
}, function (e) {
    if (e.success) {
        alert('Success:\n' +
            'accessToken: ' + Cloud.accessToken + '\n' +
            'expiresIn: ' + Cloud.expiresIn);
    } else {
        alert('Error:\n' +
            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));
    }
});</pre>
 */
Titanium.Cloud.Users = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.Users.addEventListener = function(){};

/**
 * @method create
 * <p>Create a new user.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/create">Users: Create User</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.create = function(parameters, callback){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.Users.fireEvent = function(){};

/**
 * @method login
 * <p>Log in a user.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/login">Users: Login User</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.login = function(parameters, callback){};

/**
 * @method logout
 * <p>Log out the current user.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/logout">Users: Logout User</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.logout = function(callback){};

/**
 * @method query
 * <p>Retrieve a list of users with sorting and pagination.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/query">Users: Custom Query of Users</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.query = function(parameters, callback){};

/**
 * @method remove
 * <p>Delete the current user.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/delete">Users: Delete User</a>
for the request parameters supported by this method.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.remove = function(parameters, callback){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.Users.removeEventListener = function(){};

/**
 * @method requestResetPassword
 * <p>Send an email to user to recover lost password.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/reset_password">Users: Send a reset password email to User</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.requestResetPassword = function(parameters, callback){};

/**
 * @method search
 * <p>Retrieve a list of users based on the specified search criteria.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/search">Users: Search Users</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters (optional)
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.search = function(parameters, callback){};

/**
 * @method secureCreate
 * <p>Create a new user using 3-Legged OAuth.</p>
 * @description <p>Invokes a modal dialog that allows the authentication server to display a
web page for creating a new user.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/authentication">Authentication</a>
for instructions on enabling 3-Legged OAuth for your application.</p>
<p>Authentication data is returned in the parameter passed to the callback.</p>
 * @param {Object} parameters (optional)
 * <p>A dictionary of properties for the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.Users.secureCreate = function(parameters, callback){};

/**
 * @method secureLogin
 * <p>Log in a user using 3-Legged OAuth.</p>
 * @description <p>Invokes a modal dialog that allows the authentication server to display a
web page for authenticating a user.</p>
<p>See <a href="http://cloud.appcelerator.com/docs/authentication">Authentication</a>
for instructions on enabling 3-Legged OAuth for your application.</p>
<p>Authentication data is returned in the parameter passed to the callback.</p>
 * @param {Object} parameters (optional)
 * <p>A dictionary of properties for the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.Users.secureLogin = function(parameters, callback){};

/**
 * @method secureStatus
 * <p>Checks if the user is authenticated with 3-Legged OAuth.</p>
 * @description <p>True is returned after successfully calling {@link Titanium.Cloud.Users#method-secureCreate} or
{@link Titanium.Cloud.Users#method-secureLogin}, and false after successfully calling
{@link Titanium.Cloud.Users#method-logout}.</p>
 * @return {Boolean} 
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.Users.secureStatus = function(){};

/**
 * @method show
 * <p>Show public user information.</p>
 * @description <p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/show">Users: Show User Profile</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.show = function(parameters, callback){};

/**
 * @method showMe
 * <p>Show both public and private information about the user currently logged in.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/showme">Users: Show Current User Profile</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.showMe = function(callback){};

/**
 * @method update
 * <p>Update the current user.</p>
 * @description <p>Requires user login. </p>
<p>See <a href="http://cloud.appcelerator.com/docs/api/v1/users/update">Users: Update Current User</a>
for the request parameters supported by this method.</p>
<p>Data is returned in the <code>users</code> property of the parameter passed to the callback.</p>
 * @param {Dictionary} parameters 
 * <p>Parameters to send in the request.</p>
 * @param {Function} callback 
 * <p>Callback function to execute when the method completes.</p>
 * @return void
*/
Titanium.Cloud.Users.update = function(parameters, callback){};

/**
 * @method addEventListener 
 * @hide
*/Titanium.Cloud.addEventListener = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.Cloud.fireEvent = function(){};

/**
 * @method getAccessToken
 * <p>Gets the value of the {@link Titanium.Cloud#property-accessToken accessToken} property.</p>
 * @return {String} 
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.getAccessToken = function(){};

/**
 * @method getDebug
 * <p>Gets the value of the {@link Titanium.Cloud#property-debug debug} property.</p>
 * @return {Boolean} 
*/
Titanium.Cloud.getDebug = function(){};

/**
 * @method getExpiresIn
 * <p>Gets the value of the {@link Titanium.Cloud#property-expiresIn expiresIn} property.</p>
 * @return {Number} 
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.getExpiresIn = function(){};

/**
 * @method getOndatastream
 * <p>Gets the value of the {@link Titanium.Cloud#property-ondatastream ondatastream} property.</p>
 * @return {Callback<CloudStreamProgress>} 
*/
Titanium.Cloud.getOndatastream = function(){};

/**
 * @method getOnsendstream
 * <p>Gets the value of the {@link Titanium.Cloud#property-onsendstream onsendstream} property.</p>
 * @return {Callback<CloudStreamProgress>} 
*/
Titanium.Cloud.getOnsendstream = function(){};

/**
 * @method getSessionId
 * <p>Gets the value of the {@link Titanium.Cloud#property-sessionId sessionId} property.</p>
 * @return {String} 
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.getSessionId = function(){};

/**
 * @method getUseSecure
 * <p>Gets the value of the {@link Titanium.Cloud#property-useSecure useSecure} property.</p>
 * @removed  3.1.1
 * @return {Boolean} 
*/
Titanium.Cloud.getUseSecure = function(){};

/**
 * @method hasStoredSession
 * <p>Checks if there is a stored user session.</p>
 * @description <p>True is returned after successfully calling {@link Titanium.Cloud.Users#method-create} or 
{@link Titanium.Cloud.Users#method-login}, and false after successfully calling 
{@link Titanium.Cloud.Users#method-logout}.</p>
 * @deprecated 2.1.2 <p>See {@link Titanium.Cloud#property-accessToken accessToken} and {@link Titanium.Cloud#property-sessionId sessionId} for details on persisting session data.</p>
 * @return {Boolean} 
*/
Titanium.Cloud.hasStoredSession = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.Cloud.removeEventListener = function(){};

/**
 * @method retrieveStoredSession
 * <p>Returns the stored user session identifier.</p>
 * @description <p>A value is returned after successfully calling {@link Titanium.Cloud.Users#method-create} or 
{@link Titanium.Cloud.Users#method-login}, and null after successfully calling 
{@link Titanium.Cloud.Users#method-logout}. </p>
<p>All calls made using the Cloud module automatically use this value and, thus, it only needs 
to be used when manually making calls to the ACS servers using {@link Titanium.Network.HTTPClient}. </p>
 * @deprecated 2.1.2 <p>See {@link Titanium.Cloud#property-accessToken accessToken} and {@link Titanium.Cloud#property-sessionId sessionId} for details on persisting session data.</p>
 * @return {String} 
*/
Titanium.Cloud.retrieveStoredSession = function(){};

/**
 * @method setAccessToken
 * <p>Sets the value of the {@link Titanium.Cloud#property-accessToken accessToken} property.</p>
 * @param {String} accessToken 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.setAccessToken = function(accessToken){};

/**
 * @method setDebug
 * <p>Sets the value of the {@link Titanium.Cloud#property-debug debug} property.</p>
 * @param {Boolean} debug 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Cloud.setDebug = function(debug){};

/**
 * @method setOndatastream
 * <p>Sets the value of the {@link Titanium.Cloud#property-ondatastream ondatastream} property.</p>
 * @param {Function} ondatastream 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Cloud.setOndatastream = function(ondatastream){};

/**
 * @method setOnsendstream
 * <p>Sets the value of the {@link Titanium.Cloud#property-onsendstream onsendstream} property.</p>
 * @param {Function} onsendstream 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Cloud.setOnsendstream = function(onsendstream){};

/**
 * @method setSessionId
 * <p>Sets the value of the {@link Titanium.Cloud#property-sessionId sessionId} property.</p>
 * @param {String} sessionId 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Cloud.setSessionId = function(sessionId){};

/**
 * @method setUseSecure
 * <p>Sets the value of the {@link Titanium.Cloud#property-useSecure useSecure} property.</p>
 * @removed  3.1.1
 * @param {Boolean} useSecure 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Cloud.setUseSecure = function(useSecure){};

/**
 * @property accessToken
 * @type String
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
 * <p>Identifies the current access token when using 3-Legged OAuth</p>
 * @description <p>Contains the access token after successfully calling {@link Titanium.Cloud.Users#method-secureCreate} or
{@link Titanium.Cloud.Users#method-secureLogin}, and null after successfully calling {@link Titanium.Cloud.Users#method-logout}.</p>
<p>All calls made using the Cloud module automatically use this value and, thus, it only needs
to be used when manually making calls to the ACS servers using {@link Titanium.Network.HTTPClient}.</p>
<p>The <code>accessToken</code> is not persisted across application sessions by the module. An application
can persist the accessToken by saving the value in secure storage and restoring the value
of this property in the next application session.</p>
<p>The <code>accessToken</code> is not used with 2-legged OAuth or API key 
authentication; use {@link Titanium.Cloud#property-sessionId sessionId} instead.</p>
 */
Titanium.Cloud.accessToken = null;

/**
 * @property [debug=false]
 * @type Boolean
 * <p>Indicates whether internal debug logging should be output to the console.</p>
 */
Titanium.Cloud.debug = null;

/**
 * @property expiresIn
 * @type Number
 * @readonly
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
 * <p>Indicates the number of seconds before the access token expires</p>
 * @description <p>Contains the number of seconds until the access token expires after successfully calling
{@link Titanium.Cloud.Users#method-secureCreate} or {@link Titanium.Cloud.Users#method-secureLogin}, and null after successfully
calling {@link Titanium.Cloud.Users#method-logout}.</p>
 */
Titanium.Cloud.expiresIn = null;

/**
 * @property ondatastream
 * @type Callback<CloudStreamProgress>
 * <p>Function to be called at regular intervals as the request data is being received.</p>
 * @description <p>Set this property before calling any ACS method for which you want to track the transmission.</p>
<p>When you are done tracking the transmission, set this to null.</p>
 */
Titanium.Cloud.ondatastream = null;

/**
 * @property onsendstream
 * @type Callback<CloudStreamProgress>
 * <p>Function to be called at regular intervals as the request data is being transmitted.</p>
 * @description <p>Set this property before calling any ACS method for which you want to track the transmission.</p>
<p>When you are done tracking the transmission, set this to null.</p>
 */
Titanium.Cloud.onsendstream = null;

/**
 * @property sessionId
 * @type String
 * @platform android 2.1.2
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
 * <p>Identifies the current session</p>
 * @description <p>Contains the session identifier after successfully calling {@link Titanium.Cloud.Users#method-create} or
{@link Titanium.Cloud.Users#method-login}, and null after successfully calling {@link Titanium.Cloud.Users#method-logout}.</p>
<p>All calls made using the Cloud module automatically use this value and, thus, it only needs
to be used when manually making calls to the ACS servers using {@link Titanium.Network.HTTPClient}.</p>
<p>The session identifier is not persisted across application sessions by the module. An application
can persist the session identifier by saving the value in secure storage and restoring the value
of this property in the next application session.</p>
<p>The <code>sessionId</code> is not used with 3-legged OAuth authentication; use 
{@link Titanium.Cloud#property-accessToken accessToken} instead.</p>
 */
Titanium.Cloud.sessionId = null;

/**
 * @property [useSecure=true]
 * @type Boolean
 * <p>Indicates whether to use SSL when sending requests to ACS.</p>
 * @removed  3.1.1 <p>To disable SSL, set the <code>acs-base-url</code> and <code>acs-authbase-url</code> properties in the <code>tiapp.xml</code> using the HTTP URL.
 * To enable SSL, use the HTTPS URL.</p>
 * <pre><code>&lt;property name="acs-base-url" type="string"&gt;http://api.cloud.appcelerator.com&lt;/property&gt;
 * </code></pre>
 */
Titanium.Cloud.useSecure = null;

/**
 * @class Titanium.CloudPush
 * @typestr Submodule of Titanium
 * @platform android 2.0
 * @extends Titanium.Module
 * <p>Provides methods for accessing Android push notifications from ACS using the MQTT protocol.</p>
 * @description <p>The MQTT protocol is a very lightweight, long lived connection to a server. It is perfect for keeping mobile devices
in connection with a server, while not significantly degrading their battery life.</p>
<p>In addition to communicating with an MQTT server, this module can also present tray notifications to the user.
Please refer to the {@link Titanium.CloudPush#property-showTrayNotification showTrayNotification} property to see more information
about this.</p>
<p>Note that this module is not included in the Titanium namespace, but it is bundled with the Titanium SDK as of
version 2.0.0. To use it, you must require it, like this:</p>
<pre><code>var CloudPush = require('ti.cloudpush');
</code></pre>
<p>This module must also be added to the modules section in your tiapp.xml. This can be done using the Modules list in
the Titanium Studio TiApp Editor, or by editing the XML directly and adding the following line to the modules
element:</p>
<pre><code>&lt;module platform="android"&gt;ti.cloudpush&lt;/module&gt;
</code></pre>
<p>Your app must prove that it is allowed to talk to ACS. This keeps your data secure by preventing anyone from
making requests to ACS that impersonate your app.</p>
<p>Titanium Studio will create a pair of keys (Development and Production) for each Titanium application depending on the
user preference specified during new project creation. This pair of keys will be stored in <code>tiapp.xml</code> and one of the
keys will be used during application build depending on the build type (development or production).</p>
<p>The supported properties in <code>tiapp.xml</code> are:</p>
<pre><code>&lt;property name="acs-api-key-development" type="string"&gt;YOUR DEVELOPMENT API KEY HERE&lt;/property&gt;

&lt;property name="acs-api-key-production" type="string"&gt;YOUR PRODUCTION API KEY HERE&lt;/property&gt;

&lt;property name="acs-api-key" type="string"&gt;YOUR API KEY HERE&lt;/property&gt;
</code></pre>
<p>The value for each setting that will be used is based on the following rules:</p>
<ul>
<li>If a deployment-specific setting is provided (production or development) then that value will be used for the current deployment environment.</li>
</ul>
<p><em>WARNING</em>: The default properties of this module are used until you set a property for the first time. Because the
properties are persisted to the device settings (via {@link Titanium.App.Properties}), the most recent value you set will
always be used.</p>
 * <h3>Example</h3>
 * <h4>Listening for Push Notifications</h4>
 * <pre>This example lets the user choose if push notifications should be enabled, and listens for several events.
    var CloudPush = require('ti.cloudpush');
    CloudPush.retrieveDeviceToken({
        success: function deviceTokenSuccess(e) {
            Ti.API.info('Device Token: ' + e.deviceToken);
        },
        error: function deviceTokenError(e) {
            alert('Failed to register for push! ' + e.error);
        }
    });
    var win = Ti.UI.createWindow({
        layout: 'vertical',
        backgroundColor: 'white'
    });
    var enablePush = Ti.UI.createButton({
        title: 'Enable Push Notifications'
    });
    enablePush.addEventListener('click', function () {
        CloudPush.enabled = true;
    });
    win.add(enablePush);
    CloudPush.addEventListener('callback', function (evt) {
        alert(evt.payload);
    });
    CloudPush.addEventListener('trayClickLaunchedApp', function (evt) {
        Ti.API.info('Tray Click Launched App (app was not running)');
    });
    CloudPush.addEventListener('trayClickFocusedApp', function (evt) {
        Ti.API.info('Tray Click Focused App (app was already running)');
    });
    win.open();</pre>
 */
Titanium.CloudPush = {};




/**
 * @method getEnabled
 * <p>Gets the value of the {@link Titanium.CloudPush#property-enabled enabled} property.</p>
 * @return {Boolean} 
*/
Titanium.CloudPush.getEnabled = function(){};

/**
 * @method getFocusAppOnPush
 * <p>Gets the value of the {@link Titanium.CloudPush#property-focusAppOnPush focusAppOnPush} property.</p>
 * @return {Boolean} 
*/
Titanium.CloudPush.getFocusAppOnPush = function(){};

/**
 * @method getShowAppOnTrayClick
 * <p>Gets the value of the {@link Titanium.CloudPush#property-showAppOnTrayClick showAppOnTrayClick} property.</p>
 * @return {Boolean} 
*/
Titanium.CloudPush.getShowAppOnTrayClick = function(){};

/**
 * @method getShowTrayNotification
 * <p>Gets the value of the {@link Titanium.CloudPush#property-showTrayNotification showTrayNotification} property.</p>
 * @return {Boolean} 
*/
Titanium.CloudPush.getShowTrayNotification = function(){};

/**
 * @method getShowTrayNotificationsWhenFocused
 * <p>Gets the value of the {@link Titanium.CloudPush#property-showTrayNotificationsWhenFocused showTrayNotificationsWhenFocused} property.</p>
 * @return {Boolean} 
*/
Titanium.CloudPush.getShowTrayNotificationsWhenFocused = function(){};

/**
 * @method getSingleCallback
 * <p>Gets the value of the {@link Titanium.CloudPush#property-singleCallback singleCallback} property.</p>
 * @return {Boolean} 
*/
Titanium.CloudPush.getSingleCallback = function(){};

/**
 * @method retrieveDeviceToken
 * <p>Asynchronously retrieves the application specific device token.</p>
 * @description <p>This token is used in calls to the Appcelerator Cloud Service's subscribe or unsubscribe to push notification
channels. This token is unique to each application and device.</p>
 * @param {CloudPushNotificationConfig} config 
 * <p>Dictionary specifying token retrieval related options.</p>
 * @return void
*/
Titanium.CloudPush.retrieveDeviceToken = function(config){};

/**
 * @method setEnabled
 * <p>Sets the value of the {@link Titanium.CloudPush#property-enabled enabled} property.</p>
 * @param {Boolean} enabled 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.CloudPush.setEnabled = function(enabled){};

/**
 * @method setFocusAppOnPush
 * <p>Sets the value of the {@link Titanium.CloudPush#property-focusAppOnPush focusAppOnPush} property.</p>
 * @param {Boolean} focusAppOnPush 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.CloudPush.setFocusAppOnPush = function(focusAppOnPush){};

/**
 * @method setShowAppOnTrayClick
 * <p>Sets the value of the {@link Titanium.CloudPush#property-showAppOnTrayClick showAppOnTrayClick} property.</p>
 * @param {Boolean} showAppOnTrayClick 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.CloudPush.setShowAppOnTrayClick = function(showAppOnTrayClick){};

/**
 * @method setShowTrayNotification
 * <p>Sets the value of the {@link Titanium.CloudPush#property-showTrayNotification showTrayNotification} property.</p>
 * @param {Boolean} showTrayNotification 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.CloudPush.setShowTrayNotification = function(showTrayNotification){};

/**
 * @method setShowTrayNotificationsWhenFocused
 * <p>Sets the value of the {@link Titanium.CloudPush#property-showTrayNotificationsWhenFocused showTrayNotificationsWhenFocused} property.</p>
 * @param {Boolean} showTrayNotificationsWhenFocused 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.CloudPush.setShowTrayNotificationsWhenFocused = function(showTrayNotificationsWhenFocused){};

/**
 * @method setSingleCallback
 * <p>Sets the value of the {@link Titanium.CloudPush#property-singleCallback singleCallback} property.</p>
 * @param {Boolean} singleCallback 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.CloudPush.setSingleCallback = function(singleCallback){};

/**
 * @property [enabled=false]
 * @type Boolean
 * <p>Whether or not this device will receive push notifications.</p>
 * @description <p>You must ask your users before enabling this. Note that once enabled, the application will be able to receive
notifications at any time, even after the device reboots, regardless of if your application has been run
recently or not. But if the user intentionally kills your application and its services in their task manager,
push notifications will be disabled and this property will automatically be set to false.</p>
<p>Also be aware that whenever your application is updated (through the market or through ADB installing a new
APK), the push service will be stopped until the app is launched for the first time.</p>
<p>Listen for this module's {@link Titanium.CloudPush#event-callback callback} event to receive push notifications once this
property is set to true.</p>
 */
Titanium.CloudPush.enabled = null;

/**
 * @property [focusAppOnPush=false]
 * @type Boolean
 * <p>Whether or not your application is brought to the foreground whenever a new push is received.</p>
 * @description <p>Note that this behavior is rather disruptive to users, and is strongly discouraged.</p>
 */
Titanium.CloudPush.focusAppOnPush = null;

/**
 * @property [showAppOnTrayClick=true]
 * @type Boolean
 * <p>Whether or not clicking the tray notification will bring your application to the foreground.</p>
 * @description <p>This is only applicable if you have set {@link Titanium.CloudPush#property-showTrayNotification showTrayNotification} to true.</p>
 */
Titanium.CloudPush.showAppOnTrayClick = null;

/**
 * @property [showTrayNotification=true]
 * @type Boolean
 * <p>Whether or not to show a tray notification when a new push is received.</p>
 * @description <p>If your payload is only a string, it will be used as the contentText and tickerText, and your application's name
will be used as the contentTitle with a system icon.</p>
<p>Note that in your payload, you can customize this tray notification using any of the properties of a
{@link Titanium.Android.Notification}, except for contentIntent and deleteIntent (those are automatically set).</p>
 */
Titanium.CloudPush.showTrayNotification = null;

/**
 * @property [showTrayNotificationsWhenFocused=false]
 * @type Boolean
 * <p>Whether or not to show tray notifications when your application is in the foreground.</p>
 * @description <p>Instead of showing a notification, the {@link Titanium.CloudPush#event-callback callback} event will be immediately fired
instead.</p>
<p>This is only applicable if you have set {@link Titanium.CloudPush#property-showTrayNotification showTrayNotification} to true.</p>
 */
Titanium.CloudPush.showTrayNotificationsWhenFocused = null;

/**
 * @property [singleCallback=false]
 * @type Boolean
 * <p>Set to true to trigger a single callback for the selected push notification when multiple push notifications are displayed in the tray.</p>
 * @description <p>In previous versions of the module, clicking on one of the application's push notifications triggered the callbacks for all of the application's push notifications.
The new module retains the same behavior by default.</p>
<p>Set this property to true to receive a single callback for the push notification selected by the user, regardless of how many push notifications are displayed in the tray.</p>
 */
Titanium.CloudPush.singleCallback = null;

/**
 * @class Titanium.Codec
 * @typestr Submodule of Titanium
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>A module for translating between primitive types and raw byte streams.</p>
 * @description <p>The <code>Codec</code> module can be used for encoding strings and numbers into {@link Titanium.Buffer Buffer} 
objects, and decoding primitive types from buffers. </p>
<h4>Byte Order</h4>
<p>Multi-byte data can be stored in two different byte orders: big-endian or
little-endian. In big-endian byte order, the most significant or highest-value
byte is stored first. For example, the 4-byte integer 0xFEDCBA98 is made up of the
bytes 0xFE, 0xDC, 0xBA and 0x98, from most-significant to least-significant.  </p>
<p>If we represent a buffer as an array of byte values, a big-endian encoding of
0xFEDCBA98 would look like this:</p>
<pre><code>[ 0xFE, 0xDC, 0xBA, 0x98 ]
</code></pre>
<p>In little-endian order, the bytes would be stored in this order:</p>
<pre><code>[ 0x98, 0xBA, 0xDC, 0xFE ]
</code></pre>
<p>For 8-bit character encodings, including ASCII, Latin-1 and UTF-8, byte order is not
significant: the text is a sequence of individual bytes.</p>
<p>For UTF-16, text is represented as a sequence of 16-bit values. For example,
a capital T in UTF-16 is 0x0054, and lowercase i is 0x0069. If we encode the string
"Ti" with UTF-16 in big-endian byte order, we get:</p>
<pre><code>[ 0x00, 0x54, 0x00, 0x69 ]
</code></pre>
<p>In UTF-16 with little-endian byte order, "Ti" is encoded as:</p>
<pre><code>[ 0x54, 0x00, 0x69, 0x00 ]
</code></pre>
<p>Note that the bytes for each character are stored least-significant byte first, but
the order of the characters is unchanged.</p>
 */
Titanium.Codec = {};

/**
 * @method decodeNumber
 * <p>Decodes a number from the <code>source</code> buffer using the specified data type.</p>
 * @description <p>Takes a set of named parameters in the <code>options</code> argument.</p>
<p>Bytes are read from  the <code>source</code> buffer and decoded as the specified data type, <code>type</code>.</p>
<p>Two optional parameters can also be specified in <code>options</code>:</p>
<ul>
<li>
<p>If <code>position</code> is included in the <code>options</code> dictionary, reads data from the 
    buffer starting at <code>position</code>.</p>
</li>
<li>
<p>If <code>byteOrder</code> is included in the <code>options</code> dictionary, the specified byte order
    is used -- otherwise, the native byte order is assumed.</p>
</li>
</ul>
<p>Throws an exception if <code>source</code> is null, or <code>position</code> is greater than <code>source.length</code></p>
<p>On Mobile Web, <code>position</code> and <code>byteOrder</code> are not supported.</p>
 * <h3>Examples</h3>
 * <h4>Decode a Double-Precision Floating Point Number</h4>
 * <p><p>This sample decodes an 8-byte double-precision floating point number using the
OS byte order.</p></p><pre>var buffer = // a buffer containing (at least) one 8-byte floating-point number
var value = Ti.Codec.decodeNumber({
    source: buffer,
    type: Ti.Codec.TYPE_DOUBLE
});</pre>
 * <h4>Decode an Integer Specifying Start Position and Byte Order</h4>
 * <p><p>This sample decodes a 4-byte integer starting at index position 10 in the
buffer, using big endian encoding.</p></p><pre>var buffer = // a buffer containing a 4-byte integer at position 10.
var value = Ti.Codec.decodeNumber({
      source: buffer,
      position: 10,
      type: Ti.Codec.TYPE_INT,
      byteOrder: Ti.Codec.BIG_ENDIAN
});</pre>
 * @param {DecodeNumberDict} options 
 * <p>Named parameters.</p>
 * @return {Number} <p>Number decoded from <code>source</code>.</p>
*/
Titanium.Codec.decodeNumber = function(options){};

/**
 * @method decodeString
 * <p>Decodes the source buffer into a String using the supplied character set.</p>
 * @description <p>Takes a set of named parameters in the <code>options</code> argument.</p>
<p>Bytes are read from the <code>source</code> buffer and decoded as a string.</p>
<p>Several optional parameters can also be specified in <code>options</code>:</p>
<ul>
<li>
<p>If <code>position</code> is specified, bytes are read from <code>source</code> starting at <code>position</code>.</p>
</li>
<li>
<p>If <code>length</code> is specified, no more than <code>length</code> bytes are read.</p>
</li>
<li>
<p>If <code>charset</code> is specified, it determines the character encoding used to decode the
    string. Otherwise, UTF-8 is assumed.</p>
</li>
</ul>
<p>Throws an exception if <code>charset</code> is not a valid character set, <code>source</code> is null, 
or either <code>position</code>, <code>length</code>, or <code>position</code>+<code>length</code> is greater than <code>source.length</code>.</p>
<p>On Mobile Web, <code>charset</code> is not supported. All strings are treated as UTF-8.</p>
 * <h3>Examples</h3>
 * <h4>Decode a String</h4>
 * <p><p>This sample decodes a string using the default character encoding.</p></p><pre>var buffer = // a buffer containing an encoded string
var string = Ti.Codec.decodeString({ source: buffer });</pre>
 * <h4>Decode a String with a Specified Character Encoding</h4>
 * <p><p>This sample decodes a string using the UTF-16 character encoding.</p></p><pre>var buffer = // a buffer containing a UTF-16 encoded string
var string = Ti.Codec.decodeString({
  source: buffer,
  charset: Ti.Codec.CHARSET_UTF16
});</pre>
 * @param {DecodeStringDict} options 
 * <p>Named parameters.</p>
 * @return {String} <p>The decoded string</p>
*/
Titanium.Codec.decodeString = function(options){};

/**
 * @method encodeNumber
 * <p>Encodes a number and writes it to a buffer.</p>
 * @description <p>Takes a set of named parameters passed in the <code>options</code> argument.</p>
<p>Encodes the number <code>source</code> into <code>dest</code> using the passed in data <code>type</code>.</p>
<p>Two optional parameters can also be specified in <code>options</code>:</p>
<ul>
<li>
<p>If <code>position</code> is included in the <code>options</code> dictionary, writes the encoded number
    to the buffer starting at <code>position</code>.</p>
</li>
<li>
<p>If <code>byteOrder</code> is included in the <code>options</code> dictionary, the specified byte order
    is used -- otherwise, the native byte order is assumed.</p>
</li>
</ul>
<p>On Mobile Web, <code>position</code> is not supported.</p>
 * <h3>Examples</h3>
 * <h4>Encode a Double-Precision Floating Point Value</h4>
 * <p><p>This example encodes a double-precision floating point value in 8 bytes using the OS byte
order.</p></p><pre>var buffer = Ti.createBuffer({ length: 8 });
Ti.Codec.encodeNumber({
  source: 1.23456789,
  dest: buffer,
  type: Ti.Codec.TYPE_DOUBLE
});</pre>
 * <h4>Encode an Integer Specifying Start Position and Byte Order</h4>
 * <p><p>This example encodes a 4-byte integer using big endian encoding, and 
writes it to the supplied buffer starting at index position 10.</p></p><pre>var buffer = Ti.createBuffer({ length: 100 });
Ti.Codec.encodeNumber({
    source: 0x3456789a,
    dest: buffer,
    position: 10,
    type: Ti.Codec.TYPE_INT,
    byteOrder: Ti.Codec.BIG_ENDIAN
});</pre>
 * @param {EncodeNumberDict} options 
 * <p>Named parameters.</p>
 * @return {Number} <p>Position <em>after</em> the encoded number in <code>dest</code>.</p>
*/
Titanium.Codec.encodeNumber = function(options){};

/**
 * @method encodeString
 * <p>Encodes a string into a series of bytes in a buffer using the specified character set.</p>
 * @description <p>Takes a set of named parameters in the <code>options</code> argument.</p>
<p>The string is read from <code>source</code> and written to the buffer <code>dest</code>.</p>
<p>Several optional parameters can also be specified in <code>options</code>:</p>
<ul>
<li>
<p>If <code>charset</code> is included, the string is encoded using the specified character
    encoding.</p>
</li>
<li>
<p>If <code>destPosition</code> is included, data is written into the buffer starting at 
    the specified position. </p>
</li>
<li>
<p>If <code>sourcePosition</code> is included, a substring of the source string starting at the 
    specified position is encoded.</p>
</li>
<li>
<p>If <code>sourceLength</code> is included, at most the specified numer of characters 
    are encoded.</p>
</li>
</ul>
<p>Throws an exception if <code>charset</code> is not a valid character set,
<code>source</code> is null, or either <code>sourcePosition</code>, <code>sourceLength</code>, or
<code>sourcePosition</code>+<code>sourceLength</code> is greater than <code>source.length</code>.</p>
<p>On Mobile Web, the <code>charset</code> option is not supported. All strings are treated as UTF-8.</p>
 * <h3>Examples</h3>
 * <h4>Encode String with Default Character Encoding</h4>
 * <p><p>This sample encodes a string using the default character encoding (UTF-8), then trims the 
buffer to the length of the encoded string.</p></p><pre>var buffer = Ti.createBuffer({ length: 1024 });
var length = Ti.Codec.encodeString({
    source: "hello world",
    dest: buffer
});
buffer.length = length;</pre>
 * <h4>Encode Substring with Specified Character Encoding</h4>
 * <p><p>This sample encodes the first 10 characters of a string using UTF-16 character encoding. </p></p><pre>// (10 * 2) + BOM = 22
var buffer = Ti.createBuffer({ length: 22 });
Ti.Codec.encodeString({
    source: "jack jumped over the candle stick",
    sourceLength: 10,
    dest: buffer,
    charset: Ti.Codec.CHARSET_UTF16
});</pre>
 * @param {Object} options 
 * <p>Named parameters.</p>
 * @return {Number} <p>An index indicating the first byte in the destination buffer <em>after</em> the
encoded string.</p>
*/
Titanium.Codec.encodeString = function(options){};

/**
 * @method getNativeByteOrder
 * <p>Get the OS native byte order (either {@link Titanium.Codec#property-BIG_ENDIAN} or
{@link Titanium.Codec#property-LITTLE_ENDIAN}).</p>
 * @description <p>See "Byte Order" in the main discussion of {@link Titanium.Codec} for more information.</p>
<p>On Mobile Web, this property always returns {@link Titanium.Codec#property-LITTLE_ENDIAN}.</p>
 * @return {Number} <p>OS native byte order.</p>
*/
Titanium.Codec.getNativeByteOrder = function(){};

/**
 * @property BIG_ENDIAN
 * @type Number
 * @readonly
 * <p>Big endian (network) byte order -- that is, the most significant byte first.</p>
 * @description <p>See "Byte Order" in the main discussion of {@link Titanium.Codec} for more information.</p>
 */
Titanium.Codec.BIG_ENDIAN = null;

/**
 * @property CHARSET_ASCII
 * @type String
 * @readonly
 * <p>ASCII character encoding..</p>
 * @description <p>See also: <a href="http://en.wikipedia.org/wiki/ASCII">ASCII</a> on Wikipedia.</p>
 */
Titanium.Codec.CHARSET_ASCII = null;

/**
 * @property CHARSET_ISO_LATIN_1
 * @type String
 * @readonly
 * <p>ISO 8859-1 (Latin-1) character encoding.</p>
 * @description <p>See also: <a href="http://en.wikipedia.org/wiki/ISO/IEC_8859-1">ISO/IEC 8859-1</a> on Wikipedia.</p>
 */
Titanium.Codec.CHARSET_ISO_LATIN_1 = null;

/**
 * @property CHARSET_UTF16
 * @type String
 * @readonly
 * <p>UTF-16 character encoding with default byte order.</p>
 * @description <p>See also: <a href="http://en.wikipedia.org/wiki/UTF-16/UCS-2">UTF-16/UCS2</a> on Wikipedia.</p>
 */
Titanium.Codec.CHARSET_UTF16 = null;

/**
 * @property CHARSET_UTF16BE
 * @type String
 * @readonly
 * <p>UTF-16 character encoding with big endian byte order.</p>
 * @description <p>See also: <a href="http://en.wikipedia.org/wiki/UTF-16/UCS-2">UTF-16/UCS2</a> on Wikipedia.</p>
 */
Titanium.Codec.CHARSET_UTF16BE = null;

/**
 * @property CHARSET_UTF16LE
 * @type String
 * @readonly
 * <p>UTF-16 character encoding with little endian byte order.</p>
 * @description <p>See also: <a href="http://en.wikipedia.org/wiki/UTF-16/UCS-2">UTF-16/UCS2</a> on Wikipedia.</p>
 */
Titanium.Codec.CHARSET_UTF16LE = null;

/**
 * @property CHARSET_UTF8
 * @type String
 * @readonly
 * <p>UTF-8 character encoding.</p>
 * @description <p>See also: <a href="http://en.wikipedia.org/wiki/UTF-8">UTF-8</a> on Wikipedia.</p>
 */
Titanium.Codec.CHARSET_UTF8 = null;

/**
 * @property LITTLE_ENDIAN
 * @type Number
 * @readonly
 * <p>Little endian byte order -- that is, the least significant byte first.</p>
 * @description <p>See "Byte Order" in the main discussion of {@link Titanium.Codec} for more information.</p>
 */
Titanium.Codec.LITTLE_ENDIAN = null;

/**
 * @property TYPE_BYTE
 * @type String
 * @readonly
 * <p>8-bit integer encoding type.</p>
 */
Titanium.Codec.TYPE_BYTE = null;

/**
 * @property TYPE_DOUBLE
 * @type String
 * @readonly
 * <p>64-bit double precision floating-point type.</p>
 */
Titanium.Codec.TYPE_DOUBLE = null;

/**
 * @property TYPE_FLOAT
 * @type String
 * @readonly
 * <p>32-bit single precision floating-point type.</p>
 */
Titanium.Codec.TYPE_FLOAT = null;

/**
 * @property TYPE_INT
 * @type String
 * @readonly
 * <p>32-bit integer encoding type.</p>
 */
Titanium.Codec.TYPE_INT = null;

/**
 * @property TYPE_LONG
 * @type String
 * @readonly
 * <p>64-bit integer encoding type.</p>
 */
Titanium.Codec.TYPE_LONG = null;

/**
 * @property TYPE_SHORT
 * @type String
 * @readonly
 * <p>16-bit integer encoding type.</p>
 */
Titanium.Codec.TYPE_SHORT = null;

/**
 * @class Titanium.Contacts
 * @typestr Submodule of Titanium
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top-level Contacts module, used for accessing and modifying the system contacts address book.</p>
 * @description <p>See examples for more information.</p>
<h4>iOS Platform Notes</h4>
<p>On iOS, the contacts database may be modified by an external application, causing any <code>Person</code> or
<code>Group</code> objects you've retrieved to be out of sync with the database. The IDs of these objects are
not guaranteed to remain the same, so updating an object when it is out of sync may have
unpredictable results.</p>
<p>To avoid this, listen for the {@link Titanium.Contacts#event-reload reload} event. When you receive a
<code>reload</code> event, you should assume that any existing <code>Person</code> or <code>Group</code> objects are invalid and
reload them from the <code>Contacts</code> module before modifying them.</p>
<p>See the examples for sample use of the <code>reload</code> event.</p>
 * <h3>Examples</h3>
 * <h4>Request access to the address book</h4>
 * <p><p>To safely access the address book given iOS 6's new security model:</p></p><pre>var performAddressBookFunction = function(){...};
var addressBookDisallowed = function(){...};
if (Ti.Contacts.contactsAuthorization == Ti.Contacts.AUTHORIZATION_AUTHORIZED){
    performAddressBookFunction();
} else if (Ti.Contacts.contactsAuthorization == Ti.Contacts.AUTHORIZATION_UNKNOWN){
    Ti.Contacts.requestAuthorization(function(e){
        if (e.success) {
            performAddressBookFunction();
        } else {
            addressBookDisallowed();
        }
    });
} else {
    addressBookDisallowed();
}</pre>
 * <h4>Query Existing System Address Book Records</h4>
 * <p><p>Output to the console all properties of all people.</p></p><pre>var singleValue = [
  'recordId', 'firstName', 'middleName', 'lastName', 'fullName', 'prefix', 'suffix', 
  'nickname', 'firstPhonetic', 'middlePhonetic', 'lastPhonetic', 'organization', 
  'jobTitle', 'department', 'note', 'birthday', 'created', 'modified', 'kind'
];
var multiValue = [
  'email', 'address', 'phone', 'instantMessage', 'relatedNames', 'date', 'url'
];
var people = Ti.Contacts.getAllPeople();
Ti.API.info('Total contacts: ' + people.length);
for (var i=0, ilen=people.length; i&lt;ilen; i++){
  Ti.API.info('---------------------');
  var person = people[i];
  for (var j=0, jlen=singleValue.length; j&lt;jlen; j++){
    Ti.API.info(singleValue[j] + ': ' + person[singleValue[j]]);
  }
  for (var j=0, jlen=multiValue.length; j&lt;jlen; j++){
    Ti.API.info(multiValue[j] + ': ' + JSON.stringify(person[multiValue[j]]));
  }
}</pre>
 * <h4>Add New System Address Book Records</h4>
 * <p><p>Create two new records in the system address book. Note that the {@link Titanium.Contacts.Person} 
object is queried in the same way that it is created (as shown in previous example.)</p></p><pre>Ti.API.info('Saving contact...');
Ti.Contacts.createPerson({
  firstName: 'Paul',
  lastName: 'Dowsett',
  address:{
    work:[
      {
        CountryCode: 'gb', // determines how the address is displayed
        Street: '200 Brook Drive\nGreen Park',
        City: 'Reading',
        County: 'Berkshire',
        Country: 'England',
        ZIP: 'RG2 6UB'
      },
      {
        CountryCode: 'gb', // determines how the address is displayed
        Street: '1 St Pauls Road\nClerkenwell',
        City: 'City of London',
        State: 'London',
        Country: 'England',
        ZIP: 'EC1 1AA'
      }
    ],
    home:[
      {
        CountryCode: 'gb', // determines how the address is displayed
        Street: '2 Boleyn Court',
        City: 'London',
        State: 'Greenwich',
        Country: 'England',
        ZIP: 'SE10'
      }
    ]
  },
  birthday: '2012-01-01T12:00:00.000+0000',
  instantMessage:{
    home:[
      {
        service: 'AIM',
        username: 'leisureAIM'
      },
      {
        service: 'MSN',
        username: 'no_paul_here@msn.com'
      }
    ],
    work:[
      {
        service: 'AIM',
        username: 'seriousAIM'
      }
    ]
  },
  organization: 'Appcelerator',
  phone:{
    mobile: ['07900 000001', '07900 000002'],
    work: ['+44 (0)118 925 6128', '+44 (0)118 000 0000']
  },
  url:{
    homepage: ['www.google.com'],
    work: ['www.appcelerator.com', 'www.example.com']
  }
});
Ti.API.info('Contact saved');

Ti.API.info('Saving contact...');
var workAddress1 = {
  'CountryCode': 'us',
  'Street':  '440 N. Bernardo Avenue',
  'City': 'Mountain View',
  'State': 'California',
  'Country': 'United States',
  'ZIP': '94043'
};

Ti.Contacts.createPerson({
  firstName:'Arthur',
  lastName:'Evans',
  address:{
    'work':[workAddress1]
  }
});
Ti.API.info('Contact saved');</pre>
 * <h4>Repopulate contact data if it was modified externally</h4>
 * <p><p>Listen for the <code>reload</code> event to repopulate the contact data
if it was modified externally, for example, in the iOS Contacts app.</p></p><pre>var win = Ti.UI.createWindow();
var table = Ti.UI.createTableView();

// Repopulate contact data
function reloadContacts() {
    var contacts = Ti.Contacts.getAllPeople();
    var data = [];
    for (var i = 0; i &lt; contacts.length; i++) {
        var title = contacts[i].fullName;
        if (!title || title.length === 0) {
            title = "(no name)";
        }
        var row = Ti.UI.createTableViewRow({
            title: title
        });
        data.push(row);
    }
    table.data = data;
}

Ti.Contacts.addEventListener('reload', function(e){
    alert('Reloading contacts. Your contacts were changed externally!');
    reloadContacts();
});

// initial call to populate contact data
reloadContacts();

win.add(table);
win.open();</pre>
 */
Titanium.Contacts = {};

/**
 * @class Titanium.Contacts.Group
 * @typestr Object of Titanium.Contacts
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An object which represents a group in the system contacts address book.</p>
 * @description <p>See examples in {@link Titanium.Contacts} for more information.</p>
 */
Titanium.Contacts.Group = {};

/**
 * @method add
 * <p>Adds a person to this group.</p>
 * @param {Titanium.Contacts.Person} person 
 * <p>Person to add.</p>
 * @return void
*/
Titanium.Contacts.Group.add = function(person){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Contacts.Group#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Contacts.Group.getName = function(){};

/**
 * @method getRecordId
 * <p>Gets the value of the {@link Titanium.Contacts.Group#property-recordId recordId} property.</p>
 * @return {Number} 
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @platform tizen 3.1
*/
Titanium.Contacts.Group.getRecordId = function(){};

/**
 * @method members
 * <p>Gets people that are members of this group.</p>
 * @return {Titanium.Contacts.Person[]} 
 * @platform android 1.4
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.Contacts.Group.members = function(){};

/**
 * @method remove
 * <p>Removes a person from this group.</p>
 * @param {Titanium.Contacts.Person} person 
 * <p>Person to remove.</p>
 * @return void
*/
Titanium.Contacts.Group.remove = function(person){};

/**
 * @method setName
 * <p>Sets the value of the {@link Titanium.Contacts.Group#property-name name} property.</p>
 * @param {String} name 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Contacts.Group.setName = function(name){};

/**
 * @method setRecordId
 * <p>Sets the value of the {@link Titanium.Contacts.Group#property-recordId recordId} property.</p>
 * @param {Number} recordId 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @platform tizen 3.1
*/
Titanium.Contacts.Group.setRecordId = function(recordId){};

/**
 * @method sortedMembers
 * <p>Gets people that are members of this group, sorted in the specified order.</p>
 * @param {Number} sortBy 
 * <p>Method for sorting. One of 
{@link Titanium.Contacts#property-CONTACTS_SORT_FIRST_NAME CONTACTS_SORT_FIRST_NAME}, 
or {@link Titanium.Contacts#property-CONTACTS_SORT_LAST_NAME CONTACTS_SORT_LAST_NAME}.</p>
 * @return {Titanium.Contacts.Person[]} 
 * @platform android 1.4
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.Contacts.Group.sortedMembers = function(sortBy){};

/**
 * @property name
 * @type String
 * <p>Name of this group.</p>
 */
Titanium.Contacts.Group.name = null;

/**
 * @property recordId
 * @type Number
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @platform tizen 3.1
 * <p>Record identifier of the group. Single value.</p>
 */
Titanium.Contacts.Group.recordId = null;

/**
 * @class Titanium.Contacts.Person
 * @typestr Object of Titanium.Contacts
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An object that represents a contact record for a person or organization in the system contacts 
address book.</p>
 * @description <p>A person object is created using {@link Titanium.Contacts#method-createPerson}.</p>
<p>The following two kinds of properties exist for this object:</p>
<ul>
<li>single value - contains either a <code>string</code> or <code>number</code> type value, an array of <code>string</code> type 
values, or <code>null</code> if unset.</li>
<li>multi-value - contains a dictionary with typical keys of <code>home</code>, <code>work</code> and/or <code>other</code>. Each 
key contains either a <code>string</code> type value, an array of <code>string</code> type values, or a dictionary 
containing key/value pairs with <code>string</code> type values.</li>
</ul>
<h4>Adding and Modifying Properties</h4>
<p>Support for adding and modifying properties is currently supported on iOS and Android.</p>
<h4>Keys as Address Book UI Labels</h4>
<p>Keys act as labels in the address book user interface.</p>
<p>Although there is limited support for custom, arbitrarily-named, keys when used with multi-value 
properties, there is no support them with single value properties.</p>
<p>On iOS, creating custom keys is not recommended, and will lead to undefined results.</p>
<p>If a label has been created by the user of the device and used with a multi-value property, it 
will exist as a key with the same name.</p>
<p>See examples in {@link Titanium.Contacts} for more information.</p>
 */
Titanium.Contacts.Person = {};

/**
 * @method getAddress
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-address address} property.</p>
 * @return {Dictionary} 
*/
Titanium.Contacts.Person.getAddress = function(){};

/**
 * @method getBirthday
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-birthday birthday} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getBirthday = function(){};

/**
 * @method getCreated
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-created created} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getCreated = function(){};

/**
 * @method getDate
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-date date} property.</p>
 * @return {Dictionary} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getDate = function(){};

/**
 * @method getDepartment
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-department department} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getDepartment = function(){};

/**
 * @method getEmail
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-email email} property.</p>
 * @return {Dictionary} 
*/
Titanium.Contacts.Person.getEmail = function(){};

/**
 * @method getFirstName
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-firstName firstName} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getFirstName = function(){};

/**
 * @method getFirstPhonetic
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-firstPhonetic firstPhonetic} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getFirstPhonetic = function(){};

/**
 * @method getFullName
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-fullName fullName} property.</p>
 * @return {String} 
*/
Titanium.Contacts.Person.getFullName = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-id id} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getId = function(){};

/**
 * @method getImage
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-image image} property.</p>
 * @return {Titanium.Blob} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getImage = function(){};

/**
 * @method getInstantMessage
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-instantMessage instantMessage} property.</p>
 * @return {Dictionary} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getInstantMessage = function(){};

/**
 * @method getJobTitle
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-jobTitle jobTitle} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getJobTitle = function(){};

/**
 * @method getKind
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-kind kind} property.</p>
 * @return {Number} 
*/
Titanium.Contacts.Person.getKind = function(){};

/**
 * @method getLastName
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-lastName lastName} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getLastName = function(){};

/**
 * @method getLastPhonetic
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-lastPhonetic lastPhonetic} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getLastPhonetic = function(){};

/**
 * @method getMiddleName
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-middleName middleName} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getMiddleName = function(){};

/**
 * @method getMiddlePhonetic
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-middlePhonetic middlePhonetic} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getMiddlePhonetic = function(){};

/**
 * @method getModified
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-modified modified} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getModified = function(){};

/**
 * @method getNickname
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-nickname nickname} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getNickname = function(){};

/**
 * @method getNote
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-note note} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getNote = function(){};

/**
 * @method getOrganization
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-organization organization} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getOrganization = function(){};

/**
 * @method getPhone
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-phone phone} property.</p>
 * @return {Dictionary} 
*/
Titanium.Contacts.Person.getPhone = function(){};

/**
 * @method getPrefix
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-prefix prefix} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getPrefix = function(){};

/**
 * @method getRecordId
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-recordId recordId} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getRecordId = function(){};

/**
 * @method getRelatedNames
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-relatedNames relatedNames} property.</p>
 * @return {Dictionary} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getRelatedNames = function(){};

/**
 * @method getSuffix
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-suffix suffix} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.getSuffix = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.Contacts.Person#property-url url} property.</p>
 * @return {Dictionary} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.getUrl = function(){};

/**
 * @method setAddress
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-address address} property.</p>
 * @param {Dictionary} address 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Contacts.Person.setAddress = function(address){};

/**
 * @method setBirthday
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-birthday birthday} property.</p>
 * @param {String} birthday 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setBirthday = function(birthday){};

/**
 * @method setDate
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-date date} property.</p>
 * @param {Dictionary} date 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setDate = function(date){};

/**
 * @method setDepartment
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-department department} property.</p>
 * @param {String} department 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setDepartment = function(department){};

/**
 * @method setEmail
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-email email} property.</p>
 * @param {Dictionary} email 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Contacts.Person.setEmail = function(email){};

/**
 * @method setFirstName
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-firstName firstName} property.</p>
 * @param {String} firstName 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setFirstName = function(firstName){};

/**
 * @method setFirstPhonetic
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-firstPhonetic firstPhonetic} property.</p>
 * @param {String} firstPhonetic 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setFirstPhonetic = function(firstPhonetic){};

/**
 * @method setImage
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-image image} property.</p>
 * @param {Titanium.Blob} image 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.setImage = function(image){};

/**
 * @method setInstantMessage
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-instantMessage instantMessage} property.</p>
 * @param {Dictionary} instantMessage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.setInstantMessage = function(instantMessage){};

/**
 * @method setJobTitle
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-jobTitle jobTitle} property.</p>
 * @param {String} jobTitle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setJobTitle = function(jobTitle){};

/**
 * @method setKind
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-kind kind} property.</p>
 * @param {Number} kind 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Contacts.Person.setKind = function(kind){};

/**
 * @method setLastName
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-lastName lastName} property.</p>
 * @param {String} lastName 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setLastName = function(lastName){};

/**
 * @method setLastPhonetic
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-lastPhonetic lastPhonetic} property.</p>
 * @param {String} lastPhonetic 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setLastPhonetic = function(lastPhonetic){};

/**
 * @method setMiddleName
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-middleName middleName} property.</p>
 * @param {String} middleName 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setMiddleName = function(middleName){};

/**
 * @method setMiddlePhonetic
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-middlePhonetic middlePhonetic} property.</p>
 * @param {String} middlePhonetic 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.setMiddlePhonetic = function(middlePhonetic){};

/**
 * @method setNickname
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-nickname nickname} property.</p>
 * @param {String} nickname 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setNickname = function(nickname){};

/**
 * @method setNote
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-note note} property.</p>
 * @param {String} note 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.setNote = function(note){};

/**
 * @method setOrganization
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-organization organization} property.</p>
 * @param {String} organization 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setOrganization = function(organization){};

/**
 * @method setPhone
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-phone phone} property.</p>
 * @param {Dictionary} phone 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Contacts.Person.setPhone = function(phone){};

/**
 * @method setRecordId
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-recordId recordId} property.</p>
 * @param {Number} recordId 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.setRecordId = function(recordId){};

/**
 * @method setRelatedNames
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-relatedNames relatedNames} property.</p>
 * @param {Dictionary} relatedNames 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.Person.setRelatedNames = function(relatedNames){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Titanium.Contacts.Person#property-url url} property.</p>
 * @param {Dictionary} url 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.Person.setUrl = function(url){};

/**
 * @property address
 * @type Dictionary
 * <p>Addresses for the person. Multi-value. Read-only on Android.</p>
 * @description <p>The format of the dictionary accepted by this property is as follows:</p>
<ul>
<li>Keys: any of <code>home</code>, <code>work</code>, and/or <code>other</code>.</li>
<li>Values: arrays of dictionary types with seven keys, <code>CountryCode</code>, <code>Street</code>, <code>City</code>, 
<code>County</code>, <code>State</code>, <code>Country</code> and <code>ZIP</code>, each with a <code>string</code> type value.</li>
</ul>
<p>On Android:</p>
<p>'CountryCode' and 'County' are currently not supported.</p>
<p>On iOS:</p>
<p>The <code>CountryCode</code> key value may be one of the recognized two-character ISO 3166-1 country 
codes, and determines the format in which the contact is presented by the address book 
user interface. See the wikipedia section 
<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> 
for a comprehensive list of codes.</p>
<p>On Tizen:</p>
<p>The <code>other</code> contact type is not supported, and <code>County</code> and <code>CountryCode</code> values are not supported.</p>
<p>Every new line in the <code>Street</code> value may be created using a backslash followed by a letter <code>n</code>, for example, <code>\n</code>.</p>
 */
Titanium.Contacts.Person.address = null;

/**
 * @property birthday
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Date of birth of the person. Single value.</p>
 * @description <p>Date format is "<em>yyyy</em>-<em>MM</em>-<em>dd</em><strong>T</strong><em>HH</em><strong>:</strong><em>mm</em><strong>:</strong><em>ss</em><strong>.</strong><em>SSS</em><strong>+0000</strong>"</p>
 */
Titanium.Contacts.Person.birthday = null;

/**
 * @property created
 * @type String
 * @readonly
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Date and time that the person record was created. Single value.</p>
 * @description <p>Date format is "<em>yyyy</em>-<em>MM</em>-<em>dd</em><strong>T</strong><em>HH</em><strong>:</strong><em>mm</em><strong>:</strong><em>ss</em><strong>.</strong><em>SSS</em><strong>+0000</strong>"</p>
 */
Titanium.Contacts.Person.created = null;

/**
 * @property date
 * @type Dictionary
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Dates associated with the person. Multi-value.</p>
 * @description <p>Adding or modifying this property is not currently supported.</p>
<p>The format of the dictionary accepted by this property is as follows:</p>
<ul>
<li>Keys: any of <code>anniversary</code> and/or <code>other</code>.</li>
<li>Values: array of <code>string</code> type.</li>
</ul>
<p>Date format is "<em>yyyy</em>-<em>MM</em>-<em>dd</em><strong>T</strong><em>HH</em><strong>:</strong><em>mm</em><strong>:</strong><em>ss</em><strong>.</strong><em>SSS</em><strong>+0000</strong>"</p>
 */
Titanium.Contacts.Person.date = null;

/**
 * @property department
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Department of the person. Single value.</p>
 */
Titanium.Contacts.Person.department = null;

/**
 * @property email
 * @type Dictionary
 * <p>Email addresses for the person. Multi-value. Read-only on Android.</p>
 * @description <p>The format of the dictionary accepted by this property is as follows:</p>
<ul>
<li>Keys: any of <code>home</code>, <code>work</code>, and/or <code>other</code>.</li>
<li>Values: array of <code>string</code> type.</li>
</ul>
<p>Key <code>other</code> is not supported on Tizen.</p>
 */
Titanium.Contacts.Person.email = null;

/**
 * @property firstName
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>First name of the person. Single value.</p>
 */
Titanium.Contacts.Person.firstName = null;

/**
 * @property firstPhonetic
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Phonetic first name of the person.  Single value.</p>
 */
Titanium.Contacts.Person.firstPhonetic = null;

/**
 * @property fullName
 * @type String
 * @readonly
 * <p>Localized full name of the person. Single value. Read-only on Android.</p>
 */
Titanium.Contacts.Person.fullName = null;

/**
 * @property id
 * @type Number
 * @readonly
 * @platform android 0.8
 * @platform tizen 3.1
 * <p>Record identifier of the person. Single value.</p>
 */
Titanium.Contacts.Person.id = null;

/**
 * @property image
 * @type Titanium.Blob
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image for the person. Single value.</p>
 * @description <p>Set to <code>null</code> to remove the image.</p>
 */
Titanium.Contacts.Person.image = null;

/**
 * @property instantMessage
 * @type Dictionary
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Instant messenger names of the person. Multi-value.</p>
 * @description <p>The format of the dictionary accepted by this property is as follows:</p>
<ul>
<li>Keys: any of <code>home</code>, <code>work</code> and/or <code>other</code>.</li>
<li>Values: arrays of dictionary types with two keys, <code>service</code> and <code>username</code>, each with a 
<code>string</code> type value.</li>
</ul>
<p>The <code>service</code> key value may be one of <code>AIM</code>, <code>Facebook</code>, <code>GaduGadu</code>, <code>GoogleTalk</code>, <code>ICQ</code>, 
<code>MSN</code>, <code>QQ</code>, <code>Skype</code>, or <code>Yahoo</code>.</p>
 */
Titanium.Contacts.Person.instantMessage = null;

/**
 * @property jobTitle
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Job title of the person. Single value.</p>
 */
Titanium.Contacts.Person.jobTitle = null;

/**
 * @property kind
 * @type Number
 * <p>Determines the type of information the person record contains; either person or organization. 
Read-only on Android.</p>
 * @description <p>One of {@link Titanium.Contacts#property-CONTACTS_KIND_PERSON} or 
{@link Titanium.Contacts#property-CONTACTS_KIND_ORGANIZATION}.</p>
<p>Tizen supports only {@link Titanium.Contacts#property-CONTACTS_KIND_PERSON}.</p>
 */
Titanium.Contacts.Person.kind = null;

/**
 * @property lastName
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Last name of the person. Single value.</p>
 */
Titanium.Contacts.Person.lastName = null;

/**
 * @property lastPhonetic
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Phonetic last name of the person. Single value.</p>
 */
Titanium.Contacts.Person.lastPhonetic = null;

/**
 * @property middleName
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Middle name of the person. Single value.</p>
 */
Titanium.Contacts.Person.middleName = null;

/**
 * @property middlePhonetic
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Phonetic middle name of the person. Single value.</p>
 */
Titanium.Contacts.Person.middlePhonetic = null;

/**
 * @property modified
 * @type String
 * @readonly
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Date and time that the person record was last modified. Single value.</p>
 * @description <p>Date format is "<em>yyyy</em>-<em>MM</em>-<em>dd</em><strong>T</strong><em>HH</em><strong>:</strong><em>mm</em><strong>:</strong><em>ss</em><strong>.</strong><em>SSS</em><strong>+0000</strong>"</p>
 */
Titanium.Contacts.Person.modified = null;

/**
 * @property nickname
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Nickname of the person. Single value.</p>
 */
Titanium.Contacts.Person.nickname = null;

/**
 * @property note
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Notes for the person. Single value.</p>
 */
Titanium.Contacts.Person.note = null;

/**
 * @property organization
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Organization to which the person belongs. Single value.</p>
 */
Titanium.Contacts.Person.organization = null;

/**
 * @property phone
 * @type Dictionary
 * <p>Phone numbers for the person. Multi-value. Read-only on Android.</p>
 * @description <p>The format of the dictionary accepted by this property is as follows:</p>
<ul>
<li>Keys: any of <code>home</code>, <code>work</code>, <code>other</code>, <code>mobile</code>, <code>pager</code>, <code>workFax</code>, <code>homeFax</code>, <code>main</code>, 
and/or <code>iPhone</code>.</li>
<li>Values: array of <code>string</code> type.</li>
</ul>
<p>Tizen supports only the following keys: <code>work</code>, <code>home</code>, <code>mobile</code>, <code>pager</code>, and <code>workFax</code>.</p>
 */
Titanium.Contacts.Person.phone = null;

/**
 * @property prefix
 * @type String
 * @readonly
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Prefix for the person. Single value.</p>
 */
Titanium.Contacts.Person.prefix = null;

/**
 * @property recordId
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Record identifier of the person. Single value.</p>
 */
Titanium.Contacts.Person.recordId = null;

/**
 * @property relatedNames
 * @type Dictionary
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Names of people to which the person is related. Multi-value.</p>
 * @description <p>The format of the dictionary accepted by this property is as follows:</p>
<ul>
<li>Keys: any of <code>mother</code>, <code>father</code>, <code>parent</code>, <code>brother</code>, <code>sister</code>, <code>child</code>, <code>friend</code>, <code>spouse</code>, 
<code>partner</code>, <code>assistant</code>, <code>manager</code>, and/or <code>other</code>.</li>
<li>Values: array of <code>string</code> type.</li>
</ul>
 */
Titanium.Contacts.Person.relatedNames = null;

/**
 * @property suffix
 * @type String
 * @readonly
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Suffix for the person. Single value.</p>
 */
Titanium.Contacts.Person.suffix = null;

/**
 * @property url
 * @type Dictionary
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>URLs of webpages associated with the person. Multi-value.</p>
 * @description <p>The format of the dictionary accepted by this property is as follows:</p>
<ul>
<li>Keys: any of <code>homepage</code>, <code>home</code>, <code>work</code>, and/or <code>other</code>.</li>
<li>Values: array of <code>string</code> type.</li>
</ul>
<p>Tizen supports only <code>homepage</code>.</p>
 */
Titanium.Contacts.Person.url = null;

/**
 * @class Titanium.Contacts.Tizen
 * @typestr Submodule of Titanium.Contacts
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The module containing Tizen-specific methods and properties pertaining to contacts.</p>
 * @description <p>Methods defined here provide their results via callbacks, rather than returning them synchronously.</p>
 */
Titanium.Contacts.Tizen = {};

/**
 * @class Titanium.Contacts.Tizen.Group
 * @typestr Submodule of Titanium.Contacts.Tizen
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>Provides APIs for working with groups in the system contacts address book on Tizen platform.</p>
 */
Titanium.Contacts.Tizen.Group = {};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.Contacts.Tizen.Group.getBubbleParent = function(){};

/**
 * @method members
 * <p>Gets people that are members of this group.</p>
 * @param {Titanium.Contacts.Group} group 
 * <p>The group for which to obtain members.</p>
 * @param {Function} successCallback 
 * <p>The success callback</p>
 * @param {Function} errorCallback 
 * <p>The error callback.</p>
 * @return void
*/
Titanium.Contacts.Tizen.Group.members = function(group, successCallback, errorCallback){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.Contacts.Tizen.Group.setBubbleParent = function(){};

/**
 * @method sortedMembers
 * <p>Gets people that are members of this group, sorted in the specified order.</p>
 * @param {Number} sortBy 
 * <p>Method for sorting. One of 
{@link Titanium.Contacts#property-CONTACTS_SORT_FIRST_NAME CONTACTS_SORT_FIRST_NAME}, 
or {@link Titanium.Contacts#property-CONTACTS_SORT_LAST_NAME CONTACTS_SORT_LAST_NAME}.</p>
 * @param {Titanium.Contacts.Group} group 
 * <p>The group for which to obtain members.</p>
 * @param {Function} successCallback 
 * <p>The success callback</p>
 * @param {Function} errorCallback 
 * <p>The error callback.</p>
 * @return void
*/
Titanium.Contacts.Tizen.Group.sortedMembers = function(sortBy, group, successCallback, errorCallback){};

/**
 * @property bubbleParent 
 * @hide
*/Titanium.Contacts.Tizen.Group.bubbleParent = null;

/**
 * @method getAllPeople
 * <p>Gets all people from the contact list.</p>
 * @param {Function} successCallback 
 * <p>Callback function that will be called when the operation is successful with the desired contact list as a parameter.</p>
 * @param {Function} errorCallback 
 * <p>Callback function that will be called when the operation is not successful.</p>
 * @return void
*/
Titanium.Contacts.Tizen.getAllPeople = function(successCallback, errorCallback){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.Contacts.Tizen.getBubbleParent = function(){};

/**
 * @method getPeopleWithName
 * <p>Gets all people from the contact list with the specified name.</p>
 * @param {String} name 
 * <p>The name to search for.</p>
 * @param {Function} successCallback 
 * <p>Callback function that will be called when the operation is successful with the desired contact list as a parameter.</p>
 * @param {Function} errorCallback 
 * <p>Callback function that will be called when the operation is not successful.</p>
 * @return void
*/
Titanium.Contacts.Tizen.getPeopleWithName = function(name, successCallback, errorCallback){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.Contacts.Tizen.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Titanium.Contacts.Tizen.bubbleParent = null;


/**
 * @method createGroup
 * <p>Creates and returns an instance of {@link Titanium.Contacts.Group}.</p>
 * @description <p>This method must be followed by {@link Titanium.Contacts#method-save} to commit its changes.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any in {@link Titanium.Contacts.Group} except 
those marked as non-creation or read-only.</p>
 * @return {Titanium.Contacts.Group} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.createGroup = function(parameters){};

/**
 * @method createPerson
 * <p>Creates and returns an instance of {@link Titanium.Contacts.Person}, and commits all pending 
changes to the underlying contacts database.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any in {@link Titanium.Contacts.Person} except 
those marked as non-creation or read-only.</p>
 * @return {Titanium.Contacts.Person} 
 * @platform android 2.1
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.createPerson = function(parameters){};

/**
 * @method getAllGroups
 * <p>Gets all groups.</p>
 * @return {Titanium.Contacts.Group[]} 
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.getAllGroups = function(){};

/**
 * @method getAllPeople
 * <p>Gets all people, unless a limit is specified. On Tizen, use {@link Titanium.Contacts.Tizen#method-getAllPeople Titanium.Contacts.Tizen.getAllPeople}.</p>
 * @param {Number} limit 
 * <p>Maximum number of people. Android only.</p>
 * @return {Titanium.Contacts.Person[]} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.getAllPeople = function(limit){};

/**
 * @method getContactsAuthorization
 * <p>Gets the value of the {@link Titanium.Contacts#property-contactsAuthorization contactsAuthorization} property.</p>
 * @return {Number} 
 * @platform iphone 2.1.3
 * @platform ipad 2.1.3
 * @platform android 2.1.3
 * @platform tizen 3.1
*/
Titanium.Contacts.getContactsAuthorization = function(){};

/**
 * @method getGroupByID
 * <p>Gets the group with the specified identifier.</p>
 * @param {Number} id 
 * <p>Group identifier.</p>
 * @return {Titanium.Contacts.Group} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.getGroupByID = function(id){};

/**
 * @method getPeopleWithName
 * <p>Gets people with a <code>firstName</code>, <code>middleName</code> or <code>lastName</code> field, or a combination 
of these fields, that match the specified name.</p>
<p>On Tizen, use {@link Titanium.Contacts.Tizen#method-getPeopleWithName Titanium.Contacts.Tizen.getPeopleWithName}.</p>
 * @param {String} name 
 * <p>Name to match.</p>
 * @return {Titanium.Contacts.Person[]} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.getPeopleWithName = function(name){};

/**
 * @method getPersonByID
 * <p>Gets the person with the specified identifier.</p>
 * @param {Number} id 
 * <p>Contact identifier.</p>
 * @return {Titanium.Contacts.Person} 
*/
Titanium.Contacts.getPersonByID = function(id){};

/**
 * @method removeGroup
 * <p>Removes a group from the address book.</p>
 * @description <p>This method must be followed by {@link Titanium.Contacts#method-save} to commit its changes.</p>
 * @param {Titanium.Contacts.Group} group 
 * <p>Contact group.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.removeGroup = function(group){};

/**
 * @method removePerson
 * <p>Removes a contact from the address book.</p>
 * @description <p>On iOS:</p>
<p>This method must be followed by a save action to commit the data to the underlying database, 
which can be done explicitly using {@link Titanium.Contacts#method-save} or implicitly using 
{@link Titanium.Contacts#method-createPerson}. Although the {@link Titanium.Contacts.Person} object will still 
exist once committed, it will no longer be valid. Continuing to use it will result in 
unpredictable behavior, including crashes.</p>
<p>On Android and Tizen:</p>
<p>This method will remove the person from the Contacts book automatically. </p>
 * @param {Titanium.Contacts.Person} person 
 * <p>Contact.</p>
 * @return void
 * @platform android 2.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.removePerson = function(person){};

/**
 * @method requestAuthorization
 * <p>If authorization is unknown, will bring up a dialog requesting permission.</p>
 * @description <p>Note that the callback may be synchronous or asynchronous. That is, it may be called
during requestAuthorization or much later. See the "Request access to the address book"
example on how to best use this method. </p>
 * @param {Function} callback 
 * <p>Callback function to execute when when authorization is no longer unknown.</p>
 * @return void
 * @platform android 2.1.3
 * @platform iphone 2.1.3
 * @platform ipad 2.1.3
*/
Titanium.Contacts.requestAuthorization = function(callback){};

/**
 * @method revert
 * <p>Reverts all changes made by the previous save to the address book.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Contacts.revert = function(){};

/**
 * @method save
 * <p>Commits all pending changes to the underlying contacts database.</p>
 * @description <p>On Android:</p>
<p>Takes an array of {@link Titanium.Contacts.Person} objects and saves changes for
the specified contacts only.</p>
 * @param {Titanium.Contacts.Person[]} contacts 
 * <p>List of contacts to save. Used on Android only.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Contacts.save = function(contacts){};

/**
 * @method showContacts
 * <p>Displays a picker that allows a person to be selected.</p>
 * @param {showContactsParams} params 
 * <p>Argument containing parameters for this method. Optional on Android.</p>
 * @return void
*/
Titanium.Contacts.showContacts = function(params){};

/**
 * @property AUTHORIZATION_AUTHORIZED
 * @type Number
 * @readonly
 * @platform iphone 2.1.3
 * @platform ipad 2.1.3
 * @platform android 2.1.3
 * @platform tizen 3.1
 * <p>A {@link Titanium.Contacts#property-contactsAuthorization contactsAuthorization} value 
indicating that the application is authorized to use the address book.</p>
 * @description <p>This value is always returned on Android and Tizen devices, as well as on iOS versions earlier than 6.0.</p>
 */
Titanium.Contacts.AUTHORIZATION_AUTHORIZED = null;

/**
 * @property AUTHORIZATION_DENIED
 * @type Number
 * @readonly
 * @platform iphone 2.1.3
 * @platform ipad 2.1.3
 * @platform android 2.1.3
 * @platform tizen 3.1
 * <p>A {@link Titanium.Contacts#property-contactsAuthorization contactsAuthorization} value 
indicating that the application is not authorized to use the address book.</p>
 */
Titanium.Contacts.AUTHORIZATION_DENIED = null;

/**
 * @property AUTHORIZATION_RESTRICTED
 * @type Number
 * @readonly
 * @platform iphone 2.1.3
 * @platform ipad 2.1.3
 * @platform android 2.1.3
 * @platform tizen 3.1
 * <p>A {@link Titanium.Contacts#property-contactsAuthorization contactsAuthorization} value 
indicating that the application is not authorized to use the address book <em>and</em>
the user cannot change this application's status.</p>
 */
Titanium.Contacts.AUTHORIZATION_RESTRICTED = null;

/**
 * @property AUTHORIZATION_UNKNOWN
 * @type Number
 * @readonly
 * @platform iphone 2.1.3
 * @platform ipad 2.1.3
 * @platform android 2.1.3
 * @platform tizen 3.1
 * <p>A {@link Titanium.Contacts#property-contactsAuthorization contactsAuthorization} value 
indicating that the authorization state is unknown.</p>
 */
Titanium.Contacts.AUTHORIZATION_UNKNOWN = null;

/**
 * @property CONTACTS_KIND_ORGANIZATION
 * @type Number
 * @readonly
 * <p>Specifies that a contact is an organization.</p>
 * @description <p>Used with the {@link Titanium.Contacts.Person#property-kind} property.</p>
<p>One of the group of contact "kind" constants 
{@link Titanium.Contacts#property-CONTACTS_KIND_ORGANIZATION CONTACTS_KIND_ORGANIZATION}, 
and {@link Titanium.Contacts#property-CONTACTS_KIND_PERSON CONTACTS_KIND_PERSON}.</p>
 */
Titanium.Contacts.CONTACTS_KIND_ORGANIZATION = null;

/**
 * @property CONTACTS_KIND_PERSON
 * @type Number
 * @readonly
 * <p>Specifies that a contact is a person.</p>
 * @description <p>Used with the {@link Titanium.Contacts.Person#property-kind} property.
One of the group of contact "kind" constants {@link Titanium.Contacts#property-CONTACTS_KIND_ORGANIZATION CONTACTS_KIND_ORGANIZATION}, and {@link Titanium.Contacts#property-CONTACTS_KIND_PERSON CONTACTS_KIND_PERSON}.</p>
 */
Titanium.Contacts.CONTACTS_KIND_PERSON = null;

/**
 * @property CONTACTS_SORT_FIRST_NAME
 * @type Number
 * @readonly
 * <p>Specifies that group members will be sorted by first name.</p>
 * @description <p>Used with the {@link Titanium.Contacts.Group#method-sortedMembers} method.
One of the group of contact group "sort" constants {@link Titanium.Contacts#property-CONTACTS_SORT_FIRST_NAME CONTACTS_SORT_FIRST_NAME}, and {@link Titanium.Contacts#property-CONTACTS_SORT_LAST_NAME CONTACTS_SORT_LAST_NAME}.</p>
 */
Titanium.Contacts.CONTACTS_SORT_FIRST_NAME = null;

/**
 * @property CONTACTS_SORT_LAST_NAME
 * @type Number
 * @readonly
 * <p>Specifies that group members will be sorted by last name.</p>
 * @description <p>Used with the {@link Titanium.Contacts.Group#method-sortedMembers} method.
One of the group of contact group "sort" constants {@link Titanium.Contacts#property-CONTACTS_SORT_FIRST_NAME CONTACTS_SORT_FIRST_NAME}, and {@link Titanium.Contacts#property-CONTACTS_SORT_LAST_NAME CONTACTS_SORT_LAST_NAME}.</p>
 */
Titanium.Contacts.CONTACTS_SORT_LAST_NAME = null;

/**
 * @property contactsAuthorization
 * @type Number
 * @readonly
 * @platform iphone 2.1.3
 * @platform ipad 2.1.3
 * @platform android 2.1.3
 * @platform tizen 3.1
 * <p>Returns an authorization constant indicating if the application has access to the address book.</p>
 * @description <p>Always returns <code>AUTHORIZATION_AUTHORIZED</code> on iOS pre-6.0, Android and Tizen devices.</p>
<p>If <code>contactsAuthorization</code> is <code>AUTHORIZATION_RESTRICTED</code>, you should not
attempt to re-authorize: this will lead to issues.</p>
 */
Titanium.Contacts.contactsAuthorization = null;

/**
 * @class Titanium.Database
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @extends Titanium.Module
 * <p>The top-level <code>Database</code> module, used for creating and accessing the
in-application SQLite database.</p>
 */
Titanium.Database = {};

/**
 * @class Titanium.Database.DB
 * @typestr Object of Titanium.Database
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @extends Titanium.Proxy
 * <p>The <code>Database</code> instance returned by {@link Titanium.Database#method-open} or {@link Titanium.Database#method-install}.</p>
 */
Titanium.Database.DB = {};

/**
 * @method close
 * <p>Closes the database and releases resources from memory. Once closed, this instance is no 
longer valid and should not be used. On iOS, also closes all {@link Titanium.Database.ResultSet} 
instances that exist.</p>
 * @return void
*/
Titanium.Database.DB.close = function(){};

/**
 * @method execute
 * <p>Executes an SQL statement against the database and returns a <code>ResultSet</code>.</p>
 * <h3>Example</h3>
 * <h4>Executing a Query</h4>
 * <p><p>The following code will install a database using 
{@link Titanium.Database#method-install Titanium.Database.install} and execute SQL statements that will 
create a table, insert data and query the table.</p></p><pre>var db = Ti.Database.install('mydb1', 'mydb1Installed');
db.execute('DELETE FROM people');
db.execute('CREATE TABLE IF NOT EXISTS people (name TEXT, phone_number TEXT, city TEXT)');

var thisName = 'Arthur';
var thisPhoneNo = '1-617-000-0000';
var thisCity = 'Mountain View';
db.execute('INSERT INTO people (name, phone_number, city) VALUES (?, ?, ?)', thisName, thisPhoneNo, thisCity);

var personArray = ['Paul','020 7000 0000', 'London'];
db.execute('INSERT INTO people (name, phone_number, city) VALUES (?, ?, ?)', personArray);

var rows = db.execute('SELECT rowid,name,phone_number,city FROM people');
db.close();

while (rows.isValidRow())
{
  Ti.API.info('Person ---&gt; ROWID: ' + rows.fieldByName('rowid') + ', name:' + rows.field(1) + ', phone_number: ' + rows.fieldByName('phone_number') + ', city: ' + rows.field(3));
  rows.next();
}
rows.close();
</pre>
 * <p><p>Note that the above <code>SELECT</code> query contains the <a href="http://www.sqlite.org/lang_createtable.html#rowid">rowid</a>
column, which is a SQLite-specific column that stores the unique identifier for each row.</p></p>
 * @param {String} sql 
 * <p>SQL to execute. May include placeholders for parameter substitution.</p>
 * @param {String/String[]/Object/Object[]} vararg (optional)
 * <p>Either a variable ordered list of zero or more values, or an array of values,
to be substituted with the respective <code>?</code> placeholder of the query.</p>
 * @return {Titanium.Database.ResultSet} 
*/
Titanium.Database.DB.execute = function(sql, vararg){};

/**
 * @method getFile
 * <p>Gets the value of the {@link Titanium.Database.DB#property-file file} property.</p>
 * @return {Titanium.Filesystem.File} 
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.Database.DB.getFile = function(){};

/**
 * @method getLastInsertRowId
 * <p>Gets the value of the {@link Titanium.Database.DB#property-lastInsertRowId lastInsertRowId} property.</p>
 * @return {Number} 
*/
Titanium.Database.DB.getLastInsertRowId = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Database.DB#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Database.DB.getName = function(){};

/**
 * @method getRowsAffected
 * <p>Gets the value of the {@link Titanium.Database.DB#property-rowsAffected rowsAffected} property.</p>
 * @return {Number} 
*/
Titanium.Database.DB.getRowsAffected = function(){};

/**
 * @method remove
 * <p>Removes the database files for this instance from disk. WARNING: this is a destructive 
operation and cannot be reversed. All data in the database will be lost; use with caution.</p>
 * @return void
 * @platform android 0.1
*/
Titanium.Database.DB.remove = function(){};

/**
 * @method setLastInsertRowId
 * <p>Sets the value of the {@link Titanium.Database.DB#property-lastInsertRowId lastInsertRowId} property.</p>
 * @param {Number} lastInsertRowId 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Database.DB.setLastInsertRowId = function(lastInsertRowId){};

/**
 * @method setName
 * <p>Sets the value of the {@link Titanium.Database.DB#property-name name} property.</p>
 * @param {String} name 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Database.DB.setName = function(name){};

/**
 * @method setRowsAffected
 * <p>Sets the value of the {@link Titanium.Database.DB#property-rowsAffected rowsAffected} property.</p>
 * @param {Number} rowsAffected 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Database.DB.setRowsAffected = function(rowsAffected){};

/**
 * @property file
 * @type Titanium.Filesystem.File
 * @readonly
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>A <code>File</code> object representing the file where this database is stored. Must only be used for 
setting file properties.</p>
 */
Titanium.Database.DB.file = null;

/**
 * @property lastInsertRowId
 * @type Number
 * <p>The identifier of the last populated row.</p>
 */
Titanium.Database.DB.lastInsertRowId = null;

/**
 * @property name
 * @type String
 * <p>The name of the database.</p>
 */
Titanium.Database.DB.name = null;

/**
 * @property rowsAffected
 * @type Number
 * <p>The number of rows affected by the last query.</p>
 */
Titanium.Database.DB.rowsAffected = null;

/**
 * @class Titanium.Database.ResultSet
 * @typestr Object of Titanium.Database
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @extends Titanium.Proxy
 * <p>The ResultSet instance returned by {@link Titanium.Database.DB#method-execute}.</p>
 * @description <p>A result set represents the results returned by a database query.</p>
<p>The {@link Titanium.Database.ResultSet#property-rowCount rowCount} property identifies the number of
rows in the result set. The <code>ResultSet</code> object maintains an internal record of the 
current row. As shown in the example, you can use the 
{@link Titanium.Database.ResultSet#method-next next} method to iterate through the rows in the set.</p>
<p>Use the {@link Titanium.Database.ResultSet#method-field field} or
{@link Titanium.Database.ResultSet#method-fieldByName fieldByName} methods to query the fields for
the current row.</p>
<h4>Platform Implementation Notes</h4>
<p>Note that <code>fieldCount</code> is exposed as a <em>method</em> on iOS, but as a <em>property</em> on
Android. This is a known parity issue
(<a href="https://jira.appcelerator.org/browse/TIMOB-2945">TIMOB-2945</a>).</p>
<p>On the iOS platform, closing the database also closes the result set, that is,
you can only access the result set if the database is currently open.</p>
 * <h3>Example</h3>
 * <h4>Using ResultSet</h4>
 * <p><p>The following code will create a database and execute SQL statements that will create a 
table, insert data into it, query the table and iterate through the returned
<code>ResultSet</code>.</p></p><pre>var db = Ti.Database.open('mydb1Installed');
db.execute('CREATE TABLE IF NOT EXISTS people (name TEXT, phone_number TEXT, city TEXT)');
db.execute('DELETE FROM people');

var thisName = 'Arthur';
var thisPhoneNo = '1-617-000-0000';
var thisCity = 'Mountain View';
db.execute('INSERT INTO people (name, phone_number, city) VALUES (?, ?, ?)', thisName, thisPhoneNo, thisCity);

var personArray = ['Paul','020 7000 0000', 'London'];
db.execute('INSERT INTO people (name, phone_number, city) VALUES (?, ?, ?)', personArray);

var rows = db.execute('SELECT rowid,name,phone_number,city FROM people');

Ti.API.info('Row count: ' + rows.rowCount);
var fieldCount;
// fieldCount is a property on Android.
if (Ti.Platform.name === 'android') {
    fieldCount = rows.fieldCount;
} else {
    fieldCount = rows.fieldCount();
}
Ti.API.info('Field count: ' + fieldCount);

while (rows.isValidRow()){
  Ti.API.info('Person ---&gt; ROWID: ' + rows.fieldByName('rowid') + ', name:' + rows.field(1) + ', phone_number: ' + rows.fieldByName('phone_number') + ', city: ' + rows.field(3));
  rows.next();
}
rows.close();
db.close();
</pre>
 * <p><p>Note that the above <code>SELECT</code> query contains the <a href="http://www.sqlite.org/lang_createtable.html#rowid">rowid</a>
field, which contains an SQLite-specific unique identifier for each row.</p></p>
 */
Titanium.Database.ResultSet = {};

/**
 * @method close
 * <p>Closes this result set and release resources. Once closed, the result set must no longer 
be used.</p>
 * @return void
*/
Titanium.Database.ResultSet.close = function(){};

/**
 * @method field
 * <p>Retrieves the value for the specified field in the current row, 
and casts it to the specified type (String, Integer, Float or Double.)</p>
 * @description <p>All of the numeric types (Integer, Float or Double) are returned as JavaScript Number objects.  </p>
<p>If no <code>type</code> parameter is specified, the returned data type depends on the data in the column.  </p>
<ul>
<li>If the data in the column is TEXT, the data is returned as a String.</li>
<li>If the data in the column is any kind of number, the data is returned as a Number.</li>
<li>If the data in the column is a BLOB, the data is returned as a {@link Titanium.Blob} object.  </li>
</ul>
<p>When a <code>type</code> is specified and the data cannot be converted to the specified type, an 
exception is thrown.  </p>
<p>Returns null if the value in the table is NULL.</p>
 * @param {Number} index 
 * <p>A zero-based column index.</p>
 * @param {Number} type (optional)
 * <p>One of ({@link Titanium.Database#property-FIELD_TYPE_STRING} | {@link Titanium.Database#property-FIELD_TYPE_INT} | 
{@link Titanium.Database#property-FIELD_TYPE_FLOAT} | {@link Titanium.Database#property-FIELD_TYPE_DOUBLE})</p>
 * @return {String/Number/Titanium.Blob} 
*/
Titanium.Database.ResultSet.field = function(index, type){};

/**
 * @method fieldByName
 * <p>Retrieves the value for the specified field in the current row, 
and casts it to the specified type (String, Integer, Float or Double.)</p>
 * @description <p>All of the numeric types (Integer, Float or Double) are returned as JavaScript Number objects.  </p>
<p>If no <code>type</code> parameter is specified, the returned data type depends on the data in the column.  </p>
<ul>
<li>If the data in the column is TEXT, the data is returned as a String.</li>
<li>If the data in the column is any kind of number, the data is returned as a Number.</li>
<li>If the data in the column is a BLOB, the data is returned as a {@link Titanium.Blob} object.  </li>
</ul>
<p>When a <code>type</code> is specified and the data cannot be converted to the specified type, an 
exception is thrown.  </p>
<p>Returns null if the value in the table is NULL.        </p>
 * @param {String} name 
 * <p>A column name or alias used in the SQL query.</p>
 * @param {Number} type (optional)
 * <p>One of ({@link Titanium.Database#property-FIELD_TYPE_STRING} | {@link Titanium.Database#property-FIELD_TYPE_INT} | 
{@link Titanium.Database#property-FIELD_TYPE_FLOAT} | {@link Titanium.Database#property-FIELD_TYPE_DOUBLE})</p>
 * @return {String/Number/Titanium.Blob} 
*/
Titanium.Database.ResultSet.fieldByName = function(name, type){};

/**
 * @method fieldCount
 * <p>Returns the number of columns in this result set.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Database.ResultSet.fieldCount = function(){};

/**
 * @method fieldName
 * <p>Returns the field name for the specified field index.</p>
 * @param {Number} index 
 * <p>A zero-based column index for the field.</p>
 * @return {String} 
*/
Titanium.Database.ResultSet.fieldName = function(index){};

/**
 * @method getFieldCount
 * <p>Gets the value of the {@link Titanium.Database.ResultSet#method-fieldCount fieldCount} property.</p>
 * @return {Number} 
 * @platform android 0.1
*/
Titanium.Database.ResultSet.getFieldCount = function(){};

/**
 * @method getFieldName
 * <p>Returns the field name for the specified field index.</p>
 * @param {Number} index 
 * <p>A zero-based column index for the field.</p>
 * @return {String} 
 * @platform android 0.1
*/
Titanium.Database.ResultSet.getFieldName = function(index){};

/**
 * @method getRowCount
 * <p>Gets the value of the {@link Titanium.Database.ResultSet#property-rowCount rowCount} property.</p>
 * @return {Number} 
*/
Titanium.Database.ResultSet.getRowCount = function(){};

/**
 * @method getValidRow
 * <p>Gets the value of the {@link Titanium.Database.ResultSet#property-validRow validRow} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Database.ResultSet.getValidRow = function(){};

/**
 * @method isValidRow
 * <p>Returns whether the current row is valid.</p>
 * @return {Boolean} 
*/
Titanium.Database.ResultSet.isValidRow = function(){};

/**
 * @method next
 * <p>Advances to the next row in the result set and returns <code>true</code> if one exists, 
or <code>false</code> otherwise.</p>
 * @return {Boolean} 
*/
Titanium.Database.ResultSet.next = function(){};

/**
 * @property fieldCount
 * @type Number
 * @readonly
 * @platform android 0.1
 * <p>The number of columns in this result set.</p>
 */
Titanium.Database.ResultSet.fieldCount = null;

/**
 * @property rowCount
 * @type Number
 * @readonly
 * <p>The number of rows in this result set.</p>
 */
Titanium.Database.ResultSet.rowCount = null;

/**
 * @property validRow
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Indicates whether the current row is valid.</p>
 */
Titanium.Database.ResultSet.validRow = null;

/**
 * @method install
 * <p>Installs an SQLite database to device's internal storage.</p>
 * @description <p>Copies an SQLite database file to the device's internal storage (only) and
creates a persistent name that is available for the lifetime of the app. 
On Android, if the source file does not exist, an empty database is created.</p>
<p>Returns a reference to the opened database. If the destination file already
exists, behaves as {@link Titanium.Database#method-open}.</p>
<p>This method is primarily used for iOS.</p>
<p>With Android, as there is often minimal internal storage available, <code>install</code>
may only be appropriate for small databases or for prototyping. When database
files are to be stored on external storage (for example, SD Card), a combination of
{@link Titanium.Filesystem} and {@link Titanium.Database#method-open} is required.</p>
<p>With Titanium 1.8.0.1 on iOS, the default database location changed in accordance
with Apple's guidelines. If a database file already exists in the old
location, <code>install</code> will automatically move it to the new location
rather than copying the file from the path provided in the first
argument.</p>
<p>Files stored in the <code>Private Documents</code> directory on iOS5 will be
automatically backed up to iCloud and removed from the device in low
storage situations. See <a href="https://developer.apple.com/library/ios/#qa/qa1719/_index.html">How do I prevent files from being backed up to iCloud and iTunes?</a> 
for details. To prevent this for database files, use the {@link Titanium.Database.DB#property-file} 
object with the {@link Titanium.Filesystem.File#method-setRemoteBackup} method. </p>
<p>Always {@link Titanium.Database.DB#method-close close} the database after use.</p>
 * <h3>Examples</h3>
 * <h4>Install a Database (iOS)</h4>
 * <p><p>A database, with a filename of <code>mydb1</code> and located in the same directory as the
the running script, is installed.</p></p><pre>var db1 = Ti.Database.install('mydb1', 'mydb1Installed');
</pre>
 * <p><p>The file is copied to the default database location with a file
extension of <code>sql</code>.</p>
<p><strong>On simulator</strong></p>
<ul>
<li><code>/Users/user_name/Library/Application Support/iPhone Simulator/ios_version/Applications/apple_app_id/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>
<li><code>/Users/user_name/Library/Application Support/iPhone Simulator/ios_version/Applications/apple_app_id/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>
</ul>
<p><strong>On device</strong></p>
<ul>
<li><code>/Applications/apple_app_id/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>
<li><code>/Applications/apple_app_id/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>
</ul>
<p>To prevent the database file being automatically backed up to iCloud, use <code>setRemoteBackup</code>.</p></p><pre>db1.file.setRemoteBackup(false);</pre>
 * <h4>Install a Database to Internal Storage (Android)</h4>
 * <p><p>A database, with a filename of <code>mydb1</code> and located in the same directory as the
the running script, is installed.</p></p><pre>var db1 = Ti.Database.install('mydb1', 'mydb1Installed');
</pre>
 * <p><p>Unlike on iOS, no file extension is added. The file is opened in the
following default database location, on both emulator and device.</p>
<ul>
<li><code>file:///data/data/appID/databases/mydb1Installed</code></li>
</ul></p>
 * <h4>Install a Database to External Storage (Android)</h4>
 * <p><p>The device is checked for the presence of external storage and a
database, with a filename of <code>mydb2</code> and located in the same directory as the
the running script, is installed.</p></p><pre>if (Ti.Platform.name === 'android' &amp;&amp; Ti.Filesystem.isExternalStoragePresent()) {
  var db2 = Ti.Database.install('mydb2', Ti.Filesystem.externalStorageDirectory + 'path' + Ti.Filesystem.separator + 'to' + Ti.Filesystem.separator + 'mydb2Installed');
}
</pre>
 * <p><p>Unlike on iOS, no file extension is added. The file is copied to the
absolute path provided.</p>
<ul>
<li><code>file:///sdcard/path/to/mydb2Installed</code></li>
</ul></p>
 * @param {String} path 
 * <p>Path and filename of the database file to copy to internal storage.
File location is relative to the script's context unless an absolute
path, such as one constructed with a {@link Titanium.Filesystem} 
constant, is used.</p>
 * @param {String} dbName 
 * <p>Destination filename, which will subsequently be passed to
{@link Titanium.Database#method-open}.</p>
 * @return {Titanium.Database.DB} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Database.install = function(path, dbName){};

/**
 * @method open
 * <p>Opens an SQLite database.</p>
 * @description <p>Opens an SQLite database and returns a reference to it. If the database does
not exist, creates an empty database file and returns a reference to this
opened database.</p>
<p>With Titanium 1.8.0.1 on iOS, the default database location changed in accordance
with Apple's guidelines. If a database file already exists in the old
location, <code>open</code> will automatically move it to the new location.</p>
<p>Always {@link Titanium.Database.DB#method-close close} the database after use.</p>
 * <h3>Examples</h3>
 * <h4>Open a Database from Internal Storage (iOS)</h4>
 * <p><p>A database, with a persistant name of <code>mydb1Installed</code> and located in the
default database location on internal storage, is opened.</p></p><pre>var db = Ti.Database.open('mydb1Installed');
</pre>
 * <p><p>A file extension of <code>sql</code> is added, and the file is opened from the
following location.</p>
<p>On simulator</p>
<ul>
<li><code>/Users/&lt;user name&gt;/Library/Application Support/iPhone Simulator/&lt;iOS version&gt;/Applications/&lt;apple app id&gt;/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>
<li><code>/Users/&lt;user name&gt;/Library/Application Support/iPhone Simulator/&lt;iOS version&gt;/Applications/&lt;apple app id&gt;/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>
</ul>
<p>On device</p>
<ul>
<li><code>/Applications/&lt;apple app id&gt;/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>
<li><code>/Applications/&lt;apple app id&gt;/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>
</ul></p>
 * <h4>Open a Database on Internal Storage (Android)</h4>
 * <pre>A database, with a persistant name of `mydb1Installed` and located in the
default database location on internal storage, is opened.

  var db1 = Ti.Database.open('mydb1Installed');

Unlike on iOS, no file extension is added. The file is opened in
the following location.

* `file:///data/data/appID/databases/mydb1Installed`</pre>
 * <h4>Open a Database on External Storage (Android)</h4>
 * <p><p>A database, with a filename of <code>mydb2Installed</code> and located at the
absolute path provided, is opened.</p></p><pre>if (Ti.Platform.name === 'android' &amp;&amp; Ti.Filesystem.isExternalStoragePresent()) {
  var db2 = Ti.Database.open(Ti.Filesystem.externalStorageDirectory + 'path' + Ti.Filesystem.separator + 'to' + Ti.Filesystem.separator + 'mydb2Installed');
}
</pre>
 * <p><p>Unlike on iOS, no file extension is added. The file is copied to the
absolute path, as follows.</p>
<ul>
<li><code>file:///sdcard/path/to/mydb2Installed</code></li>
</ul></p>
 * @param {String} dbName 
 * <p>The dbname previously passed to {@link Titanium.Database#method-install}. On Android, 
an absolute path to the file, including one that is constructed with a 
{@link Titanium.Filesystem} constant, may be used.</p>
 * @return {Titanium.Database.DB} 
*/
Titanium.Database.open = function(dbName){};

/**
 * @property FIELD_TYPE_DOUBLE
 * @type Number
 * @readonly
 * <p>Constant for requesting a column's value returned in double form.</p>
 */
Titanium.Database.FIELD_TYPE_DOUBLE = null;

/**
 * @property FIELD_TYPE_FLOAT
 * @type Number
 * @readonly
 * <p>Constant for requesting a column's value returned in float form.</p>
 */
Titanium.Database.FIELD_TYPE_FLOAT = null;

/**
 * @property FIELD_TYPE_INT
 * @type Number
 * @readonly
 * <p>Constant for requesting a column's value returned in integer form.</p>
 */
Titanium.Database.FIELD_TYPE_INT = null;

/**
 * @property FIELD_TYPE_STRING
 * @type Number
 * @readonly
 * <p>Constant for requesting a column's value returned in string form.</p>
 */
Titanium.Database.FIELD_TYPE_STRING = null;

/**
 * @class Titanium.Event
 * @typestr Object of Titanium
 * @pseudo
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>The base type for all Titanium events.</p>
 */
Titanium.Event = {};

/**
 * @property bubbles
 * @type Boolean
 * @readonly
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform android 3.0
 * <p>True if the event will try to bubble up if possible.</p>
 */
Titanium.Event.bubbles = null;

/**
 * @property [cancelBubble=false]
 * @type Boolean
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform android 3.0
 * <p>Set to true to stop the event from bubbling.</p>
 */
Titanium.Event.cancelBubble = null;

/**
 * @property source
 * @type Object
 * @readonly
 * <p>Source object that fired the event.</p>
 */
Titanium.Event.source = null;

/**
 * @property type
 * @type String
 * @readonly
 * <p>Name of the event fired.</p>
 */
Titanium.Event.type = null;

/**
 * @class Titanium.Facebook
 * @typestr Submodule of Titanium
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 2.0
 * @extends Titanium.Module
 * <p>The top level Facebook module.  </p>
 * @description <p><strong>Note:</strong> In Titanium 3.1, the <code>Titianium.Facebook</code> module on Android and iOS is replaced by the
{@link Modules.Facebook} add-on module that uses more recent versions of the native Facebook SDKs for
Android and iOS. For Mobile Web, continue to use <code>Titanium.Facebook</code>.</p>
<p>The Facebook module is used for connecting your application with 
Facebook. This module supports the following features:</p>
<ul>
<li>
<p>Logging in to Facebook and authorizing your application.</p>
</li>
<li>
<p>Making requests through the Facebook Graph API using
  {@link Titanium.Facebook#method-requestWithGraphPath requestWithGraphPath}.</p>
</li>
<li>
<p>Making requests through the legacy Facebook REST API using
  {@link Titanium.Facebook#method-request request}. </p>
</li>
<li>
<p>Posting Facebook dialogs.</p>
</li>
</ul>
<h4>Facebook Login and Authorization</h4>
<p>To use Facebook, a user must log in to Facebook and explicitly authorize the
application to perform certain actions, such as accessing profile information or 
posting status messages. </p>
<p>There are two ways to initiate the login process:</p>
<ul>
<li>
<p>Call {@link Titanium.Facebook#method-authorize authorize} prompt the user to login and authorize
  the application.</p>
</li>
<li>
<p>Create a Facebook {@link Titanium.Facebook.LoginButton LoginButton} to allow the user to 
  log in if desired.</p>
</li>
</ul>
<p>Which approach you take depends on your UI and how central Facebook is to your
application.</p>
<p>Before calling <code>authorize</code> or creating a login button, you must set the
{@link Titanium.Facebook#property-appid appid} and {@link Titanium.Facebook#property-permissions permissions}
properties. </p>
<p>To create a Facebook App ID, go to the Facebook Developer App:</p>
<p><a href="https://developers.facebook.com/apps">developers.facebook.com/apps</a></p>
<p>For a complete list of permissions, see the 
<a href="http://developers.facebook.com/docs/reference/api/permissions/">official Facebook Permissions Reference</a></p>
<h4>Facebook Graph API</h4>
<p>The Facebook Graph API is the preferred method for getting information about a user's friends, 
news feed, and so on. Each object in the Facebook social graph is represented by a
graph API <em>object</em>, such as a user, photo, or status message. </p>
<p>The Graph API allows you to make requests on behalf of the user, such as posting a
picture or status message. </p>
<p>Use the {@link Titanium.Facebook#method-requestWithGraphPath requestWithGraphPath} method to make a 
request to the Graph API.</p>
<p>For details on each of the Graph API objects and the supported operations, see the 
<a href="http://developers.facebook.com/docs/reference/api/">official Facebook Graph API documentation</a>.</p>
<h4>Facebook REST API</h4>
<p>The Facebook REST API is in the process of being deprecated, and should not be used 
unless your application relies on an API that doesn't exist in the Graph API.</p>
<p>Use the {@link Titanium.Facebook#method-request request} method to make a request to the REST API.</p>
<p>For details on the REST API, see the 
<a href="http://developers.facebook.com/docs/reference/rest/">official Facebook REST API documentation</a>.</p>
<h4>Facebook Dialogs</h4>
<p>Facebook dialogs are standard user-interface components for used to prompt users to
interact with Facebook in a specific way, such as:</p>
<ul>
<li>
<p>Sending an application request</p>
</li>
<li>
<p>Sending a status update</p>
</li>
<li>
<p>Adding a friend</p>
</li>
</ul>
<p>Because dialogs require user interaction, they do not require Facebook permissions.</p>
<p>For details on different dialogs see the 
<a href="http://developers.facebook.com/docs/reference/dialogs/">official Facebook Dialogs documentation</a>.  </p>
<h4>iOS Platform Implementation Notes</h4>
<p>Due to how the facebook login process works on iOS, your app will need to have the following 
in your tiapp.xml if you target those platforms:</p>
<pre><code>&lt;property name="ti.facebook.appid"&gt;your_facebook_app_id_here&lt;/property &gt;
</code></pre>
<p>You must still set Ti.Facebook.appid within your app itself to use the facebook module.<br />
This property is used only for configuring your app to interface with the facebook 
login process.</p>
<h4>Previous Versions</h4>
<p>Titanium Mobile SDK 1.6.0 marked a significant change for this module.  Older versions of 
the module were not compatible with the new Graph API.  Applications written for the 
pre-1.6.0 version of this module will <strong>not</strong> work with the 1.6.0 and higher versions.<br />
Nor is the code shown in the examples here backwards-compatible with pre-1.6.0 Titanium 
Mobile SDK.</p>
 * <h3>Examples</h3>
 * <h4>Authorize</h4>
 * <p><p>Shows official Facebook dialog for logging in the user and prompting the user to approve your 
requested permissions.  Listen for the module's {@link Titanium.Facebook#event-login login} event to 
determine whether the request succeeded.</p></p><pre>Ti.Facebook.appid = '[YOUR APPID]';
Ti.Facebook.permissions = ['publish_stream']; // Permissions your app needs
Ti.Facebook.addEventListener('login', function(e) {
if (e.success) {
alert('Logged In');
} else if (e.error) {
alert(e.error);
} else if (e.cancelled) {
alert("Canceled");
}
});
Ti.Facebook.authorize();</pre>
 * <h4>Logout</h4>
 * <p><p>Logout the user and forget the authorization token.  The 
{@link Titanium.Facebook#event-logout logout} event is fired after the user is logged out.</p></p><pre>Ti.Facebook.addEventListener('logout', function(e) {
alert('Logged out');
});
Ti.Facebook.logout();</pre>
 * <h4>Authorize/Logout Using the Facebook LoginButton</h4>
 * <p><p>You can use the the Facebook-themed {@link Titanium.Facebook.LoginButton LoginButton}
to allow the user to log in as required. The button updates its state automatically depending 
on whether the user is logged in or not.  When the user is logged in, then the button 
will show "Logout", and vice-versa.</p>
<p>Note that you don't need to set a click listener or anything else on the button. 
It "just works".  To be notified when the user logs in or out, add event listeners for the 
{@link Titanium.Facebook#event-login login} and {@link Titanium.Facebook#event-logout logout} events
provided by the Titanium Facebook module, as in the example below.</p></p><pre>// Don't forget to set your appid and requested permissions, else the login button
// won't be effective.
Ti.Facebook.appid = '[your appid]';
Ti.Facebook.permissions = ['publish_stream'];
Ti.Facebook.addEventListener('login', function(e) {
if (e.success) {
alert('Logged in');
}
});
Ti.Facebook.addEventListener('logout', function(e) {
alert('Logged out');
});
    
// Add the button.  Note that it doesn't need a click event listener.
win2.add(Ti.Facebook.createLoginButton({
    top : 50,
    style : Ti.Facebook.BUTTON_STYLE_WIDE
}));
</pre>
 * <p><p>The specified button style ('wide' or <code>BUTTON_STYLE_WIDE</code>) shows a wide version of the 
button that displays "Connect with Facebook" instead of just "Connect".</p></p>
 * <h4>Simple Graph API Call</h4>
 * <p><p>This example makes a call to the "me" graph path, which represents the current
user. The JSON results are simply displayed in an alert.  This example assumes 
the user is already logged in (you can check this with {@link Titanium.Facebook#property-loggedIn}).</p></p><pre>Ti.Facebook.requestWithGraphPath('me', {}, 'GET', function(e) {
if (e.success) {
alert(e.result);
} else if (e.error) {
alert(e.error);
} else {
alert('Unknown response');
}
});</pre>
 * <h4>Create an Event Using the Graph API</h4>
 * <p><p>This example uses the Graph API to create an event<br />
in the logged-on user's Facebook account. This requires the "create_event" permission.</p></p><pre>// First make sure this permission exists
Ti.Facebook.permissions = ['create_event'];
Ti.Facebook.authorize();

// ...
// ...

// Now create the event after you've confirmed authorize() was successful.
var starttime = new Date(2012, 4, 31, 17, 0);
var endtime = new Date(2012, 4, 31, 19, 0);
var title = "Barry's Birthday Celebration";
var description = "Barry will have a great party";
var data = {
start_time: JSON.stringify(starttime), // API expects a JSON stringified date
end_time: JSON.stringify(endtime),
summary: description,
name: title
};
Ti.Facebook.requestWithGraphPath('me/events', data, 'POST', function(e) {
if (e.success) {
alert("Success! Returned from FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unknown result");
}
}
});
</pre>
 * <p><p>For more information on the Event object, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/api/event/">Event in the Facebook Graph API Reference</a>.</li>
</ul></p>
 * <h4>Set a User's Facebook Status Using the Graph API</h4>
 * <p><p>This example uses the Graph API to set the user's Facebook status, which requires the 
"publish_stream" permission.</p></p><pre>// First make sure this permission exists
Ti.Facebook.permissions = ['publish_stream'];
Ti.Facebook.authorize();

// ...
// ...

// Now create the status message after you've confirmed that authorize() succeeded
Ti.Facebook.requestWithGraphPath('me/feed', {message: "Trying out FB Graph API and it's fun!"}, 
         "POST", function(e) {
if (e.success) {
alert("Success!  From FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unkown result");
}
}
});
</pre>
 * <p><p>For more information on the Staus object, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/api/status/">Status in the Facebook Graph API Reference</a>.  </li>
</ul></p>
 * <h4>Post a Photo Using the Graph API</h4>
 * <p><p>This example posts a photo to the user's account using the Graph API.
Another example below shows how to do this with the REST API, if desired. 
This requires the "publish_stream" permission.</p></p><pre>// First make sure this permission exists
Ti.Facebook.permissions = ['publish_stream'];
Ti.Facebook.authorize();

// ...
// ...

// Now post the photo after you've confirmed that authorize() succeeded
var f = Ti.Filesystem.getFile('pumpkin.jpg');
var blob = f.read();
var data = {
message: 'This is a pumpkin',
picture: blob
};
Ti.Facebook.requestWithGraphPath('me/photos', data, 'POST', function(e){
if (e.success) {
alert("Success!  From FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unkown result");
}
}
});
</pre>
 * <p><p>For more information on posting photos, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/api/photo/">Photo in the Facebook Graph API Reference</a> </li>
</ul></p>
 * <h4>Post a photo using the REST API</h4>
 * <p><p>This example posts a photo to the user's account using the REST API. Another example above shows 
how to do this with the Graph API.  This requires the "publish_stream" permission.</p></p><pre>// First make sure this permission exists
Ti.Facebook.permissions = ['publish_stream'];
Ti.Facebook.authorize();

// ...
// ...

// Now post the photo after you've confirmed that authorize() succeeded
var f = Ti.Filesystem.getFile('pumpkin.jpg');
var blob = f.read();
var data = {
caption: 'This is a pumpkin',
picture: blob
};
Ti.Facebook.request('photos.upload', data, function(e){
if (e.success) {
alert("Success!  From FB: " + e.result);
} else {
if (e.error) {
alert(e.error);
} else {
alert("Unkown result");
}
}
});
</pre>
 * <p><p>For more information on posting photos using the REST API, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/rest/photos.upload/">photos.upload in the Facebook REST API Reference</a> </li>
</ul></p>
 * <h4>Show the Facebook Feed Dialog</h4>
 * <p><p>This example shows how to display the offical Facebook Feed Dialog, for adding a
post to the user's wall. In this example, we'll prefill some of the feed fields by 
passing a data dictionary to the {@link Titanium.Facebook#method-dialog dialog} method; this is not required.</p></p><pre>var data = {
    link : "http://www.appcelerator.com",
    name : "Appcelerator Titanium Mobile",
    message : "Checkout this cool open source project for creating mobile apps",
    caption : "Appcelerator Titanium Mobile",
    picture : "http://developer.appcelerator.com/assets/img/DEV_titmobile_image.png",
    description : "You've got the ideas, now you've got the power. Titanium translates " +
                  "your hard won web skills into native applications..."
};
Titanium.Facebook.dialog("feed", data, function(e) {
    if(e.success &amp;&amp; e.result) {
        alert("Success! New Post ID: " + e.result);
    } else {
        if(e.error) {
            alert(e.error);
        } else {
            alert("User canceled dialog.");
        }
    }
});
</pre>
 * <p><p>For more information on Facebook Dialogs, see:</p>
<ul>
<li><a href="http://developers.facebook.com/docs/reference/dialogs/">Facebook Dialog Reference</a> </li>
</ul></p>
 * @deprecated 3.1.0 <p>On Mobile Web, continue to use this module.</p>
 * <p>On Android and iOS, use {@link Modules.Facebook} instead.</p>
 */
Titanium.Facebook = {};

/**
 * @class Titanium.Facebook.LoginButton
 * @typestr Object of Titanium.Facebook
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 2.0
 * @extends Titanium.UI.View
 * <p>A Facebook login button.</p>
 * @description <p>The Login Button created by {@link Titanium.Facebook#method-createLoginButton}.  This is a 
Facebook-themed button that does not require a click event handler or any listeners.<br />
Click events on the button are automatically handled by the Facebook module.</p>
<p>The button changes its label to reflect the current state of the Facebook 
session.  For example, if the user is already logged in, this button will show "Logout".</p>
<p>See the examples in the {@link Titanium.Facebook} documentation.</p>
 * <h3>Example</h3>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Example of using the Facebook Login Button in Alloy.</p>
<p>facebook.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="socialWin"&gt;
        &lt;LoginButton ns="Ti.Facebook" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>facebook.js:</p></p><pre>Ti.Facebook.appid = APP_ID;
Ti.Facebook.permissions = [APP_PERMISSIONS];
$.socialWin.open();</pre>
 * @deprecated 3.1.0 <p>On Mobile Web, continue to use this module.</p>
 * <p>On Android and iOS, use {@link Modules.Facebook.LoginButton} instead.</p>
 */
Titanium.Facebook.LoginButton = {};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.Facebook.LoginButton#property-style style} property.</p>
 * @return {String} 
*/
Titanium.Facebook.LoginButton.getStyle = function(){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.Facebook.LoginButton#property-style style} property.</p>
 * @param {String} style 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.LoginButton.setStyle = function(style){};

/**
 * @property style
 * @type String
 * <p>Sets the login button style.</p>
 * @description <p>All versions of the button include the Facebook logo.</p>
<p>Use {@link Titanium.Facebook#property-BUTTON_STYLE_WIDE BUTTON_STYLE_WIDE} to show a wider version of the button 
that includes the text, "Login with Facebook" or "Connect with Facebook".</p>
<p>Use {@link Titanium.Facebook#property-BUTTON_STYLE_NORMAL BUTTON_STYLE_NORMAL} to show a
narrower button that simply says, "Login" or "Connect".</p>
 */
Titanium.Facebook.LoginButton.style = null;



/**
 * @method authorize
 * <p>Prompts the user to log in (if not already logged in) and authorize your application.  </p>
 * @description <p>Be sure to set your {@link Titanium.Facebook#property-appid appid} and your required 
{@link Titanium.Facebook#property-permissions permissions} before calling <code>authorize</code>.</p>
<p>A {@link Titanium.Facebook#event-login login} event is generated to indicate successful or
unsuccessful login attempt.</p>
 * @return void
*/
Titanium.Facebook.authorize = function(){};

/**
 * @method createLoginButton
 * <p>Creates and returns an instance of {@link Titanium.Facebook.LoginButton}.</p>
 * @deprecated 3.1.0 <p>On Mobile Web, continue to use this module.</p>
 * <p>On Android and iOS, use {@link Modules.Facebook.LoginButton} instead.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Facebook.LoginButton} except those marked not-creation or read-only.</p>
 * @return {Titanium.Facebook.LoginButton} 
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 2.0
*/
Titanium.Facebook.createLoginButton = function(parameters){};

/**
 * @method dialog
 * <p>Opens a supported Facebook dialog.</p>
 * @description <p>For a list of dialogs, parameters, and response formats, see the 
<a href="http://developers.facebook.com/docs/reference/dialogs/">official documentation for Facebook Dialogs</a>.  </p>
<p>The callback is invoked when the dialog is closed, either because the user
approved the action, or canceled the dialog.</p>
 * @param {String} action 
 * <p>Specifies which dialog to show, such as "feed".</p>
 * @param {Object} params 
 * <p>A dictionary object for pre-filling some of the dialog's fields.<br />
See {@link Titanium.Facebook#examples Code Examples}.</p>
 * @param {Function} callback 
 * <p>Callback to invoke  when the user completes or cancels the dialog.</p>
 * @return void
*/
Titanium.Facebook.dialog = function(action, params, callback){};

/**
 * @method getAccessToken
 * <p>Gets the value of the {@link Titanium.Facebook#property-accessToken accessToken} property.</p>
 * @return {String} 
*/
Titanium.Facebook.getAccessToken = function(){};

/**
 * @method getAppid
 * <p>Gets the value of the {@link Titanium.Facebook#property-appid appid} property.</p>
 * @return {String} 
*/
Titanium.Facebook.getAppid = function(){};

/**
 * @method getExpirationDate
 * <p>Gets the value of the {@link Titanium.Facebook#property-expirationDate expirationDate} property.</p>
 * @return {Date} 
*/
Titanium.Facebook.getExpirationDate = function(){};

/**
 * @method getForceDialogAuth
 * <p>Gets the value of the {@link Titanium.Facebook#property-forceDialogAuth forceDialogAuth} property.</p>
 * @return {Boolean} 
*/
Titanium.Facebook.getForceDialogAuth = function(){};

/**
 * @method getLoggedIn
 * <p>Gets the value of the {@link Titanium.Facebook#property-loggedIn loggedIn} property.</p>
 * @return {Boolean} 
*/
Titanium.Facebook.getLoggedIn = function(){};

/**
 * @method getPermissions
 * <p>Gets the value of the {@link Titanium.Facebook#property-permissions permissions} property.</p>
 * @return {String[]} 
*/
Titanium.Facebook.getPermissions = function(){};

/**
 * @method getUid
 * <p>Gets the value of the {@link Titanium.Facebook#property-uid uid} property.</p>
 * @return {String} 
*/
Titanium.Facebook.getUid = function(){};

/**
 * @method logout
 * <p>Clears the OAuth <code>accessToken</code> and logs out the user.</p>
 * @return void
*/
Titanium.Facebook.logout = function(){};

/**
 * @method request
 * <p>Makes a request to the legacy Facebook REST API.</p>
 * @description <p>For details on API calls and responses, see the 
<a href="http://developers.facebook.com/docs/reference/rest/">offical Facebook REST API documentation</a>.</p>
 * @param {String} method 
 * <p>The REST API method to call.</p>
 * @param {Object} params 
 * <p>A dictionary object for setting parameters required by the call, if any.
See {@link Titanium.Facebook#examples Code Examples}.</p>
 * @param {Function} callback 
 * <p>Callback to invoke  when the request completes.</p>
 * @return void
*/
Titanium.Facebook.request = function(method, params, callback){};

/**
 * @method requestWithGraphPath
 * <p>Makes a Facebook Graph API request.</p>
 * @description <p>If the request requires user authorization, the user must be logged in, and your app
must be authorized to make the request. You can check the
{@link Titanium.Facebook#property-loggedIn loggedIn} property to determine if the user is logged in.</p>
<p>Every Facebook object has an associated path. For example, "me" requests information about 
the current user.</p>
<p>For a complete list of Graph API methods, parameters and return types, see the 
<a href="http://developers.facebook.com/docs/reference/api/">official Facebook Graph API documentation</a>.</p>
 * @param {String} path 
 * <p>Graph API path to request.</p>
 * @param {Dictionary} params 
 * <p>A dictionary object for setting parameters required by the call, if any.<br />
See {@link Titanium.Facebook#examples Code Examples}.</p>
 * @param {String} httpMethod 
 * <p>The HTTP method (GET/POST/DELETE) to use for the call.</p>
 * @param {Function} callback 
 * <p>Callback to invoke  when the request completes.</p>
 * @return void
*/
Titanium.Facebook.requestWithGraphPath = function(path, params, httpMethod, callback){};

/**
 * @method setAccessToken
 * <p>Sets the value of the {@link Titanium.Facebook#property-accessToken accessToken} property.</p>
 * @param {String} accessToken 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.setAccessToken = function(accessToken){};

/**
 * @method setAppid
 * <p>Sets the value of the {@link Titanium.Facebook#property-appid appid} property.</p>
 * @param {String} appid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.setAppid = function(appid){};

/**
 * @method setExpirationDate
 * <p>Sets the value of the {@link Titanium.Facebook#property-expirationDate expirationDate} property.</p>
 * @param {Date} expirationDate 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.setExpirationDate = function(expirationDate){};

/**
 * @method setForceDialogAuth
 * <p>Sets the value of the {@link Titanium.Facebook#property-forceDialogAuth forceDialogAuth} property.</p>
 * @param {Boolean} forceDialogAuth 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.setForceDialogAuth = function(forceDialogAuth){};

/**
 * @method setLoggedIn
 * <p>Sets the value of the {@link Titanium.Facebook#property-loggedIn loggedIn} property.</p>
 * @param {Boolean} loggedIn 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.setLoggedIn = function(loggedIn){};

/**
 * @method setPermissions
 * <p>Sets the value of the {@link Titanium.Facebook#property-permissions permissions} property.</p>
 * @param {String[]} permissions 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.setPermissions = function(permissions){};

/**
 * @method setUid
 * <p>Sets the value of the {@link Titanium.Facebook#property-uid uid} property.</p>
 * @param {String} uid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Facebook.setUid = function(uid){};

/**
 * @property BUTTON_STYLE_NORMAL
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Facebook.LoginButton#property-style LoginButton.style} to specify
the default login button reading "Connect" or "Login".</p>
 */
Titanium.Facebook.BUTTON_STYLE_NORMAL = null;

/**
 * @property BUTTON_STYLE_WIDE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Facebook.LoginButton#property-style LoginButton.style} to specify
a wide login button reading "Connect with Facebook" or "Login with Facebook".</p>
 */
Titanium.Facebook.BUTTON_STYLE_WIDE = null;

/**
 * @property accessToken
 * @type String
 * <p>OAuth token set after a successful <code>authorize</code>.</p>
 */
Titanium.Facebook.accessToken = null;

/**
 * @property appid
 * @type String
 * <p>Your Facebook application id. You need to set this for anything to work.</p>
 */
Titanium.Facebook.appid = null;

/**
 * @property expirationDate
 * @type Date
 * <p>Time at which the <code>accessToken</code> expires.</p>
 */
Titanium.Facebook.expirationDate = null;

/**
 * @property [forceDialogAuth=true]
 * @type Boolean
 * <p>Indicates whether the login should use the traditional dialog-based
authentication.</p>
 * @description <p>Set to <code>false</code> to enable Single-Sign-On (SSO) in cases where the official Facebook app is on the 
device.  Default is <code>true</code>, meaning the traditional, dialog-based
authentication is used rather than SSO. See  the
<a href="http://developers.facebook.com/docs/guides/mobile">Facebook Mobile Guide</a> for 
details of their Single-Sign-On scheme.</p>
<p>This property is read-only on Mobile Web.</p>
 */
Titanium.Facebook.forceDialogAuth = null;

/**
 * @property loggedIn
 * @type Boolean
 * <p>Indicates if the user is logged in.</p>
 */
Titanium.Facebook.loggedIn = null;

/**
 * @property permissions
 * @type String[]
 * <p>Array of permissions to request for your app.</p>
 * @description <p>Be sure the permissions you want are set before calling
{@link Titanium.Facebook#method-authorize authorize}..</p>
 */
Titanium.Facebook.permissions = null;

/**
 * @property uid
 * @type String
 * <p>Unique user ID returned from Facebook.</p>
 */
Titanium.Facebook.uid = null;

/**
 * @class Titanium.Filesystem
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level filesystem module, used to access files and directories on the device.</p>
 */
Titanium.Filesystem = {};

/**
 * @class Titanium.Filesystem.File
 * @typestr Object of Titanium.Filesystem
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>Object representing a path to a file or directory in the device's persistent storage.</p>
 * @description <p>Use the {@link Titanium.Filesystem#method-getFile} method to get a handle to a <code>File</code> object,
which represents a given path.  There does not need to be an existing file or directory 
does not need to exist before <code>getFile</code> is called. If the file doesn't exist, and 
the file path identifies a file in a writable directory, writing to the file 
creates the file implicitly. </p>
<p>See {@link Titanium.Filesystem} for constants identifying commonly-used device directories.</p>
<p>Use the {@link Titanium.Filesystem.File#method-exists exists} method to test whether the file exists.</p>
<p>A file object can point to an ordinary file, a directory or a symbolic link.
Use {@link Titanium.Filesystem.File#method-createDirectory createDirectory} to create a directory.
Use the {@link Titanium.Filesystem.File#method-getDirectoryListing getDirectoryListing} method to
retrieve a list of the directory's contents.</p>
<p>The <code>File</code> object doesn't provide methods for random access into the file.
The <code>read</code> method reads the file's entire contents into a <code>Blob</code> object.
The <code>write</code> method can either overwrite the entire file or append to an
existing file. </p>
<p>For random access to a file, such as accessing a small portion of a larger file, 
you can open a file as a {@link Titanium.Filesystem.FileStream FileStream} object. Use the 
{@link Titanium.Filesystem.File#method-open open} method to get a <code>FileStream</code> for an 
existing <code>File</code> object, or use the {@link Titanium.Filesystem#method-openStream} method 
to get a <code>FileStream</code> directly without calling <code>getFile</code> first.</p>
<p>The {@link Titanium.Filesystem} module defines a number of properties and methods related to 
filesystem access, including properties that specify paths for application-specific 
directories, and methods for creating temporary files and directories.</p>
<p>On Android, files may be stored on external storage (that is, removable media such as 
SD Cards).</p>
<p>Note that once created with <code>getFile</code>, the path associated with a file object is
immutable. If you move the underlying file using {@link Titanium.Filesystem.File#method-move move} 
or {@link Titanium.Filesystem.File#method-rename rename}, you can no longer access it with the 
original <code>File</code> object. You must use <code>getFile</code> to get a handle to the new path.</p>
<h4>Resource Files</h4>
<p>The <code>Resources</code> directory and all the files in it are read-only. On Android, resource
files are stored in the resource bundle and do not have all of the properties of
normal files. In particular, they do not have creation or modification timestamps.</p>
 * <h3>Examples</h3>
 * <h4>Reading a File</h4>
 * <p><p>Data files shipped with the application are stored in the resources directory.</p>
<p>This example reads string data from a text file.</p></p><pre>// resourcesDirectory is actually the default location, so the first 
// argument could be omitted here.
file = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, "textfile.txt");
var blob = file.read();
var readText = blob.text;
// dispose of file handle &amp; blob.
file = null;
blob = null;</pre>
 * <h4>Creating a Subdirectory</h4>
 * <p><p>Files that the application writes to need to be stored outside of the 
resources directory, since that directory is read-only.</p>
<p>This example creates a subdirectory to store downloaded images.
The example assumes that two variables are defined elsewhere in the code:
myImageID, a string containing some kind of ID for the downloaded image, 
and myImageData, a <code>Blob</code> containing JPEG image data.</p></p><pre>var imageDir = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory,            
    'downloaded_images');
if (! imageDir.exists()) {
    imageDir.createDirectory();
}

// .resolve() provides the resolved native path for the directory.
var imageFile  = Ti.Filesystem.getFile(imageDir.resolve(), myImageID + '.jpg');
Ti.API.info("ImageFile path is: " + imageFile.resolve());
if (imageFile.write(myImageData)===false) {
    // handle write error
}
// dispose of file handles
imageFile = null;
imageDir = null;</pre>
 */
Titanium.Filesystem.File = {};

/**
 * @method append
 * <p>Appends data to the file identified by this file object.</p>
 * @description <p>Data to append can be specified as a String, <code>Blob</code>, or <code>File</code>.</p>
<p>If the <code>data</code> argument is a <code>File</code> object, the file's contents
are appended to this file.</p>
<p>Returns <code>true</code> if the operation succeeds.</p>
 * @param {String/Titanium.Blob/Titanium.Filesystem.File} data 
 * <p>Data to append.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.append = function(data){};

/**
 * @method copy
 * <p>Copies the file identified by this file object to a new path.</p>
 * @description <p>Returns <code>true</code> if the copy succeeds.</p>
 * @param {String} destinationPath 
 * <p>Destination path to copy to.</p>
 * @return {Boolean} 
 * @platform android 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.copy = function(destinationPath){};

/**
 * @method createDirectory
 * <p>Creates a directory at the path identified by this file object.</p>
 * @description <p>Returns <code>true</code> if the directory was created successfully.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.createDirectory = function(){};

/**
 * @method createFile
 * <p>Creates a file at the path identified by this file object.</p>
 * @description <p>Note that if you write to a file that doesn't exist, the file is created automatically,
so it is not necessary to call this method unless you want to explicitly create the file
(for example, to create an empty file).</p>
<p>Returns <code>true</code> if the file was created successfully. Returns <code>false</code> if the 
file already exists, or if the file couldn't be created for some other reason.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.createFile = function(){};

/**
 * @method createTimestamp
 * <p>Returns the creation timestamp for the file identified by this file object.</p>
 * @description <p>On Android, returns 0 for resource files.</p>
 * @return {Number} 
*/
Titanium.Filesystem.File.createTimestamp = function(){};

/**
 * @method deleteDirectory
 * <p>Deletes the directory identified by this file object.</p>
 * @description <p>Returns <code>true</code> if the operation was successful. Does nothing if the file
object does not identify a directory.</p>
 * @param {Boolean} [recursive=False] (optional)
 * <p>Pass <code>true</code> to recursively delete any directory contents.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.deleteDirectory = function(arg){};

/**
 * @method deleteFile
 * <p>Deletes the file identified by this file object.</p>
 * @description <p>Returns <code>true</code> if the operation was successful.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.deleteFile = function(){};

/**
 * @method exists
 * <p>Returns <code>true</code> if the file or directory identified by this file object exists on the device.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.exists = function(){};

/**
 * @method extension
 * <p>Returns the extension for the file identified by this file object.</p>
 * @return {String} 
*/
Titanium.Filesystem.File.extension = function(){};

/**
 * @method getDirectoryListing
 * <p>Returns a listing of the directory identified by this file object, or <code>null</code>
if this object doesn't identify a directory.</p>
 * @return {String[]} 
*/
Titanium.Filesystem.File.getDirectoryListing = function(){};

/**
 * @method getExecutable
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-executable executable} property.</p>
 * @return {Boolean} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.getExecutable = function(){};

/**
 * @method getHidden
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-hidden hidden} property.</p>
 * @return {Boolean} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.getHidden = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.File.getName = function(){};

/**
 * @method getNativePath
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-nativePath nativePath} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.File.getNativePath = function(){};

/**
 * @method getParent
 * <p>Returns the path of the parent directory holding the file identified by this file object, as a String <strong>or</strong> as a <code>File</code> object.</p>
 * @description <p>On iOS, this method returns the path of the parent directory as a String.</p>
<p>Android supports a {@link Titanium.Filesystem.File#property-parent parent} property, which 
is a <code>File</code> object representing the parent directory path. The <code>getParent</code> method
on Android is a getter for the <code>parent</code> property, so it returns a <code>File</code> object
rather than a String.</p>
 * @return {String/Titanium.Filesystem.File} 
*/
Titanium.Filesystem.File.getParent = function(){};

/**
 * @method getReadonly
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-readonly readonly} property.</p>
 * @return {Boolean} 
 * @platform android 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.getReadonly = function(){};

/**
 * @method getRemoteBackup
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-remoteBackup remoteBackup} property.</p>
 * @return {Boolean} 
 * @platform iphone 1.8
 * @platform ipad 1.8
*/
Titanium.Filesystem.File.getRemoteBackup = function(){};

/**
 * @method getSize
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-size size} property.</p>
 * @return {Number} 
 * @platform android 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.getSize = function(){};

/**
 * @method getSymbolicLink
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-symbolicLink symbolicLink} property.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.getSymbolicLink = function(){};

/**
 * @method getWritable
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-writable writable} property.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.getWritable = function(){};

/**
 * @method getWriteable
 * <p>Gets the value of the {@link Titanium.Filesystem.File#property-writeable writeable} property.</p>
 * @deprecated 1.8.1
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Filesystem.File.getWriteable = function(){};

/**
 * @method isDirectory
 * <p>Returns <code>true</code> if this file object represents a directory.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.isDirectory = function(){};

/**
 * @method isFile
 * <p>Returns <code>true</code> if this file object represents an ordinary file.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.isFile = function(){};

/**
 * @method modificationTimestamp
 * <p>Returns the last modification time for this file.</p>
 * @description <p>On Android, returns 0 for resource files.</p>
 * @return {Number} 
*/
Titanium.Filesystem.File.modificationTimestamp = function(){};

/**
 * @method move
 * <p>Moves the file identified by this file object to another path.</p>
 * @description <p>Note that this method moves the stored file, but doesn't update this 
file object to point to the new path. To access the file after moving it,
you must call {@link Titanium.Filesystem#method-getFile getFile} using the destination
path to obtain a new file handle.</p>
 * @param {String} newpath 
 * <p>New location for the file.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.move = function(newpath){};

/**
 * @method open
 * <p>Opens the file identified by this file object for random access.</p>
 * @description <p>You can open the file for reading, writing, or appending by specifying one of the 
<code>MODE</code> constants from {@link Titanium.Filesystem}:
{@link Titanium.Filesystem#property-MODE_READ MODE_READ}, {@link Titanium.Filesystem#property-MODE_WRITE MODE_WRITE}, 
or {@link Titanium.Filesystem#property-MODE_APPEND MODE_APPEND}.</p>
<p>The <code>FileStream</code> object returned by this call can be used to read from, write to, or 
append to the file, depending on what mode the file is opened in.</p>
 * @param {Number} mode 
 * <p>Mode to open the file in: <code>MODE_READ</code>, <code>MODE_WRITE</code>, or <code>MODE_APPEND</code>.</p>
 * @return {Titanium.Filesystem.FileStream} 
*/
Titanium.Filesystem.File.open = function(mode){};

/**
 * @method read
 * <p>Returns the contents of the file identified by this file object as a <code>Blob</code>.</p>
 * @return {Titanium.Blob} 
*/
Titanium.Filesystem.File.read = function(){};

/**
 * @method rename
 * <p>Renames the file identified by this file object.</p>
 * @description <p>Returns <code>true</code> if the file was successfully renamed.</p>
<p>Fails if the destination is in a different directory than the current file.
Use {@link Titanium.Filesystem.File#method-move move} to move a file to a different directory.</p>
<p>Note that this method renames the stored file, but doesn't update this 
file object to point to the new path. To access the file after renaming it,
you must call {@link Titanium.Filesystem#method-getFile getFile} using the destination
path to obtain a new file handle.</p>
 * @param {String} newname 
 * <p>New name for the file.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.rename = function(newname){};

/**
 * @method resolve
 * <p>Returns the fully-resolved native path associated with this file object.</p>
 * @description <p>On iOS, the path returned by this method is a plain file path, not a URL. It is suitable
for use in native modules that need to access the file using native APIs.</p>
<p>On Android, the return value of <code>resolve</code> is a <code>file://</code> URL, identical to the
{@link Titanium.Filesystem.File#property-nativePath nativePath} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.File.resolve = function(){};

/**
 * @method setHidden
 * <p>Sets the value of the {@link Titanium.Filesystem.File#property-hidden hidden} property.</p>
 * @param {Boolean} hidden 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Filesystem.File.setHidden = function(hidden){};

/**
 * @method setRemoteBackup
 * <p>Sets the value of the {@link Titanium.Filesystem.File#property-remoteBackup remoteBackup} property.</p>
 * @param {Boolean} remoteBackup 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 1.8
 * @platform ipad 1.8
*/
Titanium.Filesystem.File.setRemoteBackup = function(remoteBackup){};

/**
 * @method spaceAvailable
 * <p>Returns the amount of free space available on the device where the file identified by this file object is stored.</p>
 * @description <p>Free space is returned in bytes.</p>
 * @return {Number} 
*/
Titanium.Filesystem.File.spaceAvailable = function(){};

/**
 * @method write
 * <p>Writes the specified data to the file identified by this file object.</p>
 * @description <p>If the <code>append</code> parameter is <code>false</code> or not specified, any existing data in 
the file is overwritten. </p>
<p>If <code>append</code> is <code>true</code>, the specified data is appended to the end of the file.</p>
 * @param {String/Titanium.Filesystem.File/Titanium.Blob} data 
 * <p>Data to write, as a String, <code>Blob</code> or <code>File</code> object.</p>
 * @param {Boolean} [append=False] (optional)
 * <p>If <code>true</code>, append the data to the end of the file.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.File.write = function(data, arg){};

/**
 * @property executable
 * @type Boolean
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p><code>true</code> if the file is executable.</p>
 * @description <p>On iOS, Mobile Web and Tizen, this property exists but is always <code>false</code>.</p>
 */
Titanium.Filesystem.File.executable = null;

/**
 * @property hidden
 * @type Boolean
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Set to <code>true</code> if the file is hidden.</p>
 * @description <p>On iOS, Mobile Web and Tizen, this property exists but is always <code>false</code>.</p>
 */
Titanium.Filesystem.File.hidden = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>Name of the file.</p>
 */
Titanium.Filesystem.File.name = null;

/**
 * @property nativePath
 * @type String
 * @readonly
 * <p>Native path associated with this file object, as a file URL.</p>
 * @description <p>On iOS, use the {@link Titanium.Filesystem.File#method-resolve resolve} 
method to obtain a plain file path for use with native modules.</p>
 */
Titanium.Filesystem.File.nativePath = null;

/**
 * @property parent
 * @type Titanium.Filesystem.File
 * @readonly
 * @platform android 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>A <code>File</code> object representing the parent directory of the file identified by this object.</p>
 */
Titanium.Filesystem.File.parent = null;

/**
 * @property readonly
 * @type Boolean
 * @readonly
 * @platform android 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p><code>true</code> if the file identified by this object is read-only.</p>
 * @description <p>On Mobile Web and Tizen, this property exists but is always <code>true</code> for files in the resources directory
and <code>false</code> for application data and temporary files.</p>
 */
Titanium.Filesystem.File.readonly = null;

/**
 * @property [remoteBackup=true]
 * @type Boolean
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>Value indicating whether or not to back up to a cloud service.</p>
 * @description <p>Some apps may be rejected by Apple for backing up specific files; if this
is the case, ensure that this value is set to <code>false</code> for them. This
value should only need to be set once by your app, but setting it
multiple times will not cause problems. For files distributed with your
app, this will need to be set on boot. This flag will only affect iOS
versions 5.0.1 and later, but is safe to set on earlier versions.</p>
<p>Note that setting this property to <code>false</code> will also prevent the
file identified by this object from being backed up to iTunes.</p>
 */
Titanium.Filesystem.File.remoteBackup = null;

/**
 * @property size
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Size, in bytes, of the file identified by this object.</p>
 */
Titanium.Filesystem.File.size = null;

/**
 * @property symbolicLink
 * @type Boolean
 * @readonly
 * <p><code>true</code> if the file identified by this object is a symbolic link.</p>
 * @description <p>On Mobile Web and Tizen, this property exists but is always <code>false</code>.</p>
 */
Titanium.Filesystem.File.symbolicLink = null;

/**
 * @property writable
 * @type Boolean
 * @readonly
 * <p><code>true</code> if the file identified by this object is writable.</p>
 */
Titanium.Filesystem.File.writable = null;

/**
 * @property writeable
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p><code>true</code> if the file identified by this object is writable.</p>
 * @deprecated 1.8.1 <p>Use {@link Titanium.Filesystem.File#property-writable writable} instead.</p>
 */
Titanium.Filesystem.File.writeable = null;

/**
 * @class Titanium.Filesystem.FileStream
 * @typestr Object of Titanium.Filesystem
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.IOStream
 * <p>Wrapper around <code>Titanium.Filesystem.File</code> that implements the <code>Titanium.IOStream</code> interface</p>
 */
Titanium.Filesystem.FileStream = {};

/**
 * @method close
 * <p>closes file stream, exception is thrown on error</p>
 * @description <p>Throws an exception on error.</p>
 * @return void
*/
Titanium.Filesystem.FileStream.close = function(){};

/**
 * @method createTempDirectory
 * <p>Creates a temporary directory and returns a {@link Titanium.Filesystem.File File} object representing the new directory.</p>
 * @return {Titanium.Filesystem.File} 
*/
Titanium.Filesystem.createTempDirectory = function(){};

/**
 * @method createTempFile
 * <p>Creates a temporary file and returns a {@link Titanium.Filesystem.File File} object representing the new file.</p>
 * @return {Titanium.Filesystem.File} 
*/
Titanium.Filesystem.createTempFile = function(){};

/**
 * @method getApplicationCacheDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-applicationCacheDirectory applicationCacheDirectory} property.</p>
 * @return {String} 
 * @platform android 1.8.3
 * @platform iphone 1.8.3
 * @platform ipad 1.8.3
*/
Titanium.Filesystem.getApplicationCacheDirectory = function(){};

/**
 * @method getApplicationDataDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-applicationDataDirectory applicationDataDirectory} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.getApplicationDataDirectory = function(){};

/**
 * @method getApplicationDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-applicationDirectory applicationDirectory} property.</p>
 * @return {String} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Filesystem.getApplicationDirectory = function(){};

/**
 * @method getApplicationSupportDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-applicationSupportDirectory applicationSupportDirectory} property.</p>
 * @return {String} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Filesystem.getApplicationSupportDirectory = function(){};

/**
 * @method getExternalStorageDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-externalStorageDirectory externalStorageDirectory} property.</p>
 * @return {String} 
 * @platform android 0.1
*/
Titanium.Filesystem.getExternalStorageDirectory = function(){};

/**
 * @method getFile
 * <p>Returns a <code>File</code> object representing the file identified by the path arguments.</p>
 * @description <p>Note that <code>getFile</code> does not create a file if one does not exist at the specified
path. It returns a new <code>File</code> object referring to the specified file path. The 
application can create a file at that path by calling 
{@link Titanium.Filesystem.File#method-write write} or create a directory by calling
{@link Titanium.Filesystem.File#method-createDirectory createDirectory} on the <code>File</code> object.</p>
<p>This method takes a variable number of arguments, where each argument is treated
as a path component. All of the arguments are joined together using the
platform-specific path separator to make the final path.</p>
<p>If a relative path is passed, the full path should be interpreted relative
to the current file. For example, if the file <code>Resources/login/login.js</code> 
contains the following code:</p>
<pre><code>var icon = Titanium.Filesystem.getFile('icon.png');
</code></pre>
<p>The path is interpreted as <code>Resources/login/icon.png</code>. </p>
<p>On iOS, all relative paths are currently interpreted as relative to the
<code>Resources</code> directory, <strong>not</strong> to the current context. This is a known issue
that will be addressed in a future release.</p>
 * @param {String} path 
 * <p>One or more path components. Path arguments are joined together using the platform specific path separator to form the full path.</p>
 * @return {Titanium.Filesystem.File} 
*/
Titanium.Filesystem.getFile = function(path){};

/**
 * @method getLineEnding
 * <p>Gets the value of the {@link Titanium.Filesystem#property-lineEnding lineEnding} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.getLineEnding = function(){};

/**
 * @method getResRawDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-resRawDirectory resRawDirectory} property.</p>
 * @return {String} 
 * @platform android 3.0.2
*/
Titanium.Filesystem.getResRawDirectory = function(){};

/**
 * @method getResourcesDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-resourcesDirectory resourcesDirectory} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.getResourcesDirectory = function(){};

/**
 * @method getSeparator
 * <p>Gets the value of the {@link Titanium.Filesystem#property-separator separator} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.getSeparator = function(){};

/**
 * @method getTempDirectory
 * <p>Gets the value of the {@link Titanium.Filesystem#property-tempDirectory tempDirectory} property.</p>
 * @return {String} 
*/
Titanium.Filesystem.getTempDirectory = function(){};

/**
 * @method isExternalStoragePresent
 * <p>Returns <code>true</code> if the device supports external storage <em>and</em> the external storage device is mounted.</p>
 * @description <p>Returns <code>true</code> on Android if an external storage device, such as an SD card, is
available for reading and writing.</p>
<p>Returns <code>false</code> on iOS, Mobile Web and Tizen.</p>
 * @return {Boolean} 
*/
Titanium.Filesystem.isExternalStoragePresent = function(){};

/**
 * @method openStream
 * <p>Opens file using the {@link Titanium.IOStream} interface.</p>
 * @param {Number} mode 
 * <p>Access mode. Either {@link Titanium.Filesystem#property-MODE_READ}, {@link Titanium.Filesystem#property-MODE_WRITE}, or 
{@link Titanium.Filesystem#property-MODE_APPEND}.</p>
 * @param {String} path 
 * <p>One or more path components. Path arguments are joined together using the 
platform-specific path separator to form the full path. </p>
 * @return {Titanium.Filesystem.FileStream} 
*/
Titanium.Filesystem.openStream = function(mode, path){};

/**
 * @property MODE_APPEND
 * @type Number
 * @readonly
 * <p>Constant for append mode for file operations.</p>
 */
Titanium.Filesystem.MODE_APPEND = null;

/**
 * @property MODE_READ
 * @type Number
 * @readonly
 * <p>Constant for read mode for file operations.</p>
 */
Titanium.Filesystem.MODE_READ = null;

/**
 * @property MODE_WRITE
 * @type Number
 * @readonly
 * <p>Constant for write mode for file operations.</p>
 */
Titanium.Filesystem.MODE_WRITE = null;

/**
 * @property applicationCacheDirectory
 * @type String
 * @readonly
 * @platform android 1.8.3
 * @platform iphone 1.8.3
 * @platform ipad 1.8.3
 * <p>Path to the application's internal cache directory.</p>
 */
Titanium.Filesystem.applicationCacheDirectory = null;

/**
 * @property applicationDataDirectory
 * @type String
 * @readonly
 * <p>Path to the application's data directory.</p>
 * @description <p>This is a writable directory that can be used to store applications-specific files. </p>
<p>On iOS, this directory is specifically designated for user documents, and a
separate directory,
{@link Titanium.Filesystem#property-applicationSupportDirectory applicationSupportDirectory} is
used for other application data.</p>
<p>On iOS, files in this directory are backed up unless the
{@link Titanium.Filesystem.File#property-remoteBackup remoteBackup} flag is set to false.</p>
<p>On Android, files in this directory cannot be accessed by other applications, so 
it should not be used for files that must be used by another application 
(for example, a video file that will be passed to the system's video player application).
These files should be stored in the
{@link Titanium.Filesystem#property-externalStorageDirectory externalStorageDirectory}.</p>
 */
Titanium.Filesystem.applicationDataDirectory = null;

/**
 * @property applicationDirectory
 * @type String
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Path to the iOS application directory.</p>
 */
Titanium.Filesystem.applicationDirectory = null;

/**
 * @property applicationSupportDirectory
 * @type String
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Path to the application support directory.</p>
 * @description <p>This is a writable directory used on iOS for application files that are <em>not</em> 
user documents--including settings files, caches, and so on.</p>
<p>On iOS, files in this directory are backed up unless the
{@link Titanium.Filesystem.File#property-remoteBackup remoteBackup} flag is set to false.</p>
 */
Titanium.Filesystem.applicationSupportDirectory = null;

/**
 * @property externalStorageDirectory
 * @type String
 * @readonly
 * @platform android 0.1
 * <p>Path to a directory on removable storage, such as SD card.</p>
 * @description <p>This directory can be used for storing arbitrary data. It is read/write and files
in this directory can be passed to other applications, such as video
players--which is not possible with the 
{@link Titanium.Filesystem#property-applicationDataDirectory applicationDataDirectory}.</p>
<p>This directory may not be subject to as many memory limitations as the
<code>applicationDataDirectory</code>, which is stored in the device's internal storage.
Note, however, that the user may remove or replace the removable storage device
without warning, so the application must be prepared to handle this case gracefully. </p>
<p>The application should check
{@link Titanium.Filesystem#method-isExternalStoragePresent isExternalStoragePresent} before
accessing this location. The application should also handle any exceptions generated 
if the storage device is unmounted during use, or if the files stored on external 
storage are not available.</p>
 */
Titanium.Filesystem.externalStorageDirectory = null;

/**
 * @property lineEnding
 * @type String
 * @readonly
 * <p>Platform-specific line ending constant.</p>
 */
Titanium.Filesystem.lineEnding = null;

/**
 * @property resRawDirectory
 * @type String
 * @readonly
 * @platform android 3.0.2
 * <p>Path to the application's raw resource directory.</p>
 * @description <p>On Android, the raw resources directory can be used for resources that need to be
accessed as individual files, not included in the Android resources bundle. For
example, sound files placed in the raw resources directory can be accessed by 
notifications, which cannot access sound files from the resource
directory.</p>
<p>To use raw resources, place files in the <code>platform/android/res/raw</code> folder, where 
<code>platform</code> is at the top level of the project, not inside the <code>Resources</code> folder. You
will need to create the <code>platform</code> folder and subfolders.</p>
<p>This directory is read-only. If you need to modify any files in this directory,
they must first be copied to another directory, such as<br />
{@link Titanium.Filesystem#property-applicationDataDirectory applicationDataDirectory} or
{@link Titanium.Filesystem#property-tempDirectory tempDirectory}. </p>
 */
Titanium.Filesystem.resRawDirectory = null;

/**
 * @property resourcesDirectory
 * @type String
 * @readonly
 * <p>Path to the application's resource directory.</p>
 * @description <p>This directory is read-only. If you need to modify any files in this directory,
they must first be copied to another directory, such as<br />
{@link Titanium.Filesystem#property-applicationDataDirectory applicationDataDirectory} or
{@link Titanium.Filesystem#property-tempDirectory tempDirectory}. </p>
<p>On iOS, 
writable files can also be placed in the 
{@link Titanium.Filesystem#property-applicationSupportDirectory applicationSupportDirectory}.
On Android, writable files can also be placed in the 
{@link Titanium.Filesystem#property-externalStorageDirectory externalStorageDirectory}.</p>
<p>Note that when running on the simulator, the resources directory may be writable,
but it is not writable on device.</p>
 */
Titanium.Filesystem.resourcesDirectory = null;

/**
 * @property separator
 * @type String
 * @readonly
 * <p>Platform-specific path separator constant.</p>
 */
Titanium.Filesystem.separator = null;

/**
 * @property tempDirectory
 * @type String
 * @readonly
 * <p>Path for the application's temporary directory.</p>
 * @description <p>This directory can be used for storing temporary files. Files in this directory
may not persist when the application is shut down and restarted.</p>
 */
Titanium.Filesystem.tempDirectory = null;

/**
 * @class Titanium.Geolocation
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level Geolocation module. The Geolocation module is used for accessing device location based information.</p>
 * @description <p>This module combines two sets of features:</p>
<ul>
<li>
<p>Location services. Determining the location of the device.</p>
</li>
<li>
<p>Geocoding and reverse geocoding. Converting geographic  coordinates into
    addresses, and converting addresses into geographic  coordinates.</p>
</li>
</ul>
<p>Using location services can have a significant impact on a device's battery life, 
so it's important to use them in the most efficient manner possible. Power consumption
is strongly influenced by the accuracy and frequency of location updates required by 
your application. </p>
<p>The location services systems of the underlying platforms are very different, so there
are significant implementation differences between the platforms.</p>
<p>The basic methods of requesting location information and receiving location updates
are essentially the same on all platforms. However, the method of configuring the 
accuracy and frequency of location updates is different for each platform.</p>
<h4>Getting Location Information</h4>
<p>There are two ways to get location information:</p>
<ul>
<li>
<p>Make a one-time request with {@link Titanium.Geolocation#method-getCurrentPosition getCurrentPosition}.</p>
</li>
<li>
<p>Register to receive location updates by adding an event listener for the
    {@link Titanium.Geolocation#event-location location} event.</p>
</li>
</ul>
<p><strong>NOTE:</strong> Location services stay enabled for as long as a listener is registered for the
<code>location</code> event, so be sure to remove the event listener when you do not require
location updates.</p>
<h4>Configurating Location Updates on iOS</h4>
<p>In iOS, the accuracy (and power consumption) of location services is primarily
determined by the {@link Titanium.Geolocation#property-accuracy accuracy} setting. This can be set
to one of the following values:</p>
<ul>
<li>{@link Titanium.Geolocation#property-ACCURACY_BEST ACCURACY_BEST} (highest accuracy and power consumption)</li>
<li>{@link Titanium.Geolocation#property-ACCURACY_HIGH ACCURACY_HIGH}</li>
<li>{@link Titanium.Geolocation#property-ACCURACY_NEAREST_TEN_METERS ACCURACY_NEAREST_TEN_METERS} </li>
<li>{@link Titanium.Geolocation#property-ACCURACY_HUNDRED_METERS ACCURACY_HUNDRED_METERS} </li>
<li>{@link Titanium.Geolocation#property-ACCURACY_KILOMETER ACCURACY_KILOMETER} </li>
<li>{@link Titanium.Geolocation#property-ACCURACY_LOW ACCURACY_LOW}</li>
<li>{@link Titanium.Geolocation#property-ACCURACY_THREE_KILOMETERS ACCURACY_THREE_KILOMETERS} (lowest
    accuracy and power consumption).</li>
<li>{@link Titanium.Geolocation#property-ACCURACY_BEST_FOR_NAVIGATION ACCURACY_BEST_FOR_NAVIGATION}
    (Available in iOS 6.0 and above)</li>
</ul>
<p>Based on the accuracy you choose, iOS uses its own logic to select location providers
and filter location updates to provide location updates that meet your accuracy
requirements.</p>
<p>You can further limit power consumption on iOS by setting the
{@link Titanium.Geolocation#property-distanceFilter distanceFilter} property to eliminate position
updates when the user is not moving.</p>
<h4>Configurating Location Updates on Android</h4>
<p>Prior to Titanium Mobile 2.0, Titanium attempted to follow the iOS model on Android,
but this didn't fit the native Android model well. In Release 2.0, three different
location service modes are supported on Android: <em>simple</em>, <em>manual</em>, and <em>legacy</em>.</p>
<ul>
<li>
<p><em>Simple mode</em> provides a compromise mode that provides adaquate support for 
    undemanding location applications without requiring developers to
    write a lot of Android-specific code. To use simple mode:</p>
<ol>
<li>
<p>Leave the {@link Titanium.Geolocation.Android#property-manualMode} flag set to <code>false</code> (the 
     default value).</p>
</li>
<li>
<p>Set the {@link Titanium.Geolocation#property-accuracy accuracy} property to 
     either {@link Titanium.Geolocation#property-ACCURACY_HIGH ACCURACY_HIGH} or 
     {@link Titanium.Geolocation#property-ACCURACY_LOW ACCURACY_LOW}.</p>
</li>
</ol>
</li>
<li>
<p><em>Manual mode</em> gives developers low-level control of location updates, including
    enabling individual location providers and filtering updates, for the best
    combination of accuracy and battery life. </p>
<p>Manual mode is used when the {@link Titanium.Geolocation.Android#property-manualMode} flag is set
to <code>true</code>. In manual mode, the <code>accuracy</code> property is not used, and all
configuration is done through the {@link Titanium.Geolocation.Android} module.</p>
</li>
<li>
<p><em>Legacy mode</em> is the mode that existed prior to 2.0. Legacy mode is 
    used when the <code>manualMode</code> flag is <code>false</code> and the <code>accuracy</code> property is 
    set to one of the iOS <code>ACCURACY</code> constants:</p>
<ul>
<li>{@link Titanium.Geolocation#property-ACCURACY_BEST ACCURACY_BEST} (highest accuracy and power consumption)</li>
<li>{@link Titanium.Geolocation#property-ACCURACY_NEAREST_TEN_METERS ACCURACY_NEAREST_TEN_METERS} </li>
<li>{@link Titanium.Geolocation#property-ACCURACY_HUNDRED_METERS ACCURACY_HUNDRED_METERS} </li>
<li>{@link Titanium.Geolocation#property-ACCURACY_KILOMETER ACCURACY_KILOMETER} </li>
<li>{@link Titanium.Geolocation#property-ACCURACY_THREE_KILOMETERS ACCURACY_THREE_KILOMETERS} (lowest
    accuracy and power consumption). </li>
</ul>
<p>This mode is deprecated and should not be used for new development. </p>
<p>In this mode, the specified <code>accuracy</code> value determines the 
<em>minimum distance between location updates</em>. If <code>accuracy</code> is set to
<code>ACCURACY_BEST</code>, no distance filter is used on updates.</p>
<p>In legacy mode, only a single location provider (GPS, network, or passive) is
enabled at a time. You can specify a the location provider using the 
{@link Titanium.Geolocation#property-preferredProvider preferredProvider} property.</p>
<p>You can also specifying a desired update frequency using the
{@link Titanium.Geolocation#property-frequency frequency} property. The <code>preferredProvider</code>
and <code>frequency</code> properties are not used in any other mode.</p>
</li>
</ul>
<h4>Configuring Location Updates on Mobile Web</h4>
<p>Location services on Mobile Web operate similarly to the <em>simple mode</em> operations on
Android. Setting {@link Titanium.Geolocation#property-accuracy accuracy} property to 
{@link Titanium.Geolocation#property-ACCURACY_HIGH ACCURACY_HIGH} yeilds the best available location
updates, with the hightest power consumption.
Using {@link Titanium.Geolocation#property-ACCURACY_LOW ACCURACY_LOW} provides lower-quality location
updates with lower power consumption.</p>
<p>In addition to the accuracy setting, there are several Mobile Web-specific settings.
See {@link Titanium.Geolocation.MobileWeb} for details.</p>
<h4>Using the Compass</h4>
<p>Both iOS and Android support a receiving heading updates from a hardware compass, if available.
On Mobile Web, heading updates are supported if the browser supports this feature.
Currently, this support is only available on Mobile Safari.</p>
<p>Check the {@link Titanium.Geolocation#property-hasCompass hasCompass} property to see if the current
device supports a compass.</p>
<p>To retrieve compass readings, you can either use
{@link Titanium.Geolocation#method-getCurrentHeading getCurrentHeading} as shown in the
previous example, or add a listener for the
{@link Titanium.Geolocation#event-heading heading} event, as shown below:</p>
<pre><code>var compassHandler = function(e) {
  if (e.success === undefined || e.success) {
    Ti.API.info("Heading: " + e.heading.magneticHeading);
  }
}
Ti.Geolocation.addEventListener("heading", compassHandler);
</code></pre>
<p>Note that Android does not include a <code>success</code> property in the <code>heading</code> event.
Heading events are only generated on Android when heading data is available. So if
<code>success</code> is undefined, we assume that the event contains valid compass data.</p>
<p>To obtain true heading data for the compass (as opposed to magnetic heading data),
a current location fix is required. See the notes on
{@link HeadingData#property-trueHeading trueHeading} for more information.</p>
<p>As with location updates, the application should unregister for heading updates
when it is no longer being used, or when it goes into the background. Use
<code>removeEventListener</code> to stop heading updates:</p>
<pre><code>Ti.Geolocation.removeEventListener('heading', compassHandler);
</code></pre>
<p>Finally, note that neither the Android emulator nor the iOS simulator provide
compass support. Compass code must be tested on physical devices.</p>
<h4>Geocoding Services</h4>
<p>The module provides two methods, {@link Titanium.Geolocation#method-forwardGeocoder forwardGeocoder} and {@link Titanium.Geolocation#method-reverseGeocoder reverseGeocoder}
to convert between geographic coordinates and addresses. These methods map to MapQuest Open Nominatim Search Service.</p>
<p>While this API has the advantage that it has no daily usage limits, please note that the data backing this API is crowd sourced and might not return 
proper values for valid addresses and geographic coordinates.</p>
<p>If geocoding services are essential component of the application, developers are encouraged to use commercial geocoding providers.</p>
 */
Titanium.Geolocation = {};

/**
 * @class Titanium.Geolocation.Android
 * @typestr Submodule of Titanium.Geolocation
 * @platform android 2.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>Module for Android-specific geolocation functionality.</p>
 * @description <p>This module is used for manually configuring geolocation settings on Android. </p>
<p>Manual configuration is recommended for applications that have more demanding 
geolocation needs (for example, driving directions). However, for basic geolocation
information, <em>simple mode</em> geolocation may be sufficient. For information on simple 
mode, see {@link Titanium.Geolocation}.</p>
<p>Manual configuration involves managing <em>providers</em> and <em>rules</em>:</p>
<ul>
<li>
<p><em>Location providers</em>, such as GPS, provide location updates.</p>
</li>
<li>
<p><em>Location rules</em> filter the results returned by location providers. </p>
</li>
</ul>
<p>Configuring geolocation manually involves three steps:</p>
<ol>
<li>
<p>Enabling manual mode.</p>
</li>
<li>
<p>Enabling location providers.</p>
</li>
<li>
<p>Adding location rules (optional).</p>
</li>
</ol>
<p>As with the other modes, you register for location updates using the main
{@link Titanium.Geolocation} module. Location updates are generated as long as 
an event listener is registered for the <code>location</code> event.  When you are not 
using location updates, you should remove any registered event listeners.</p>
<p>In manual mode, the application is responsible for dynamically updating the settings
to acheive its required accuracy while limiting battery usage. For example, an
application might do any of the following:</p>
<ul>
<li>
<p>If the application isn't getting updates frequently enough, it can adjust its
    provider settings to provide more updates, or relax its location rules to allow
    less accurate updates through. </p>
</li>
<li>
<p>If the application isn't receiving accurate enough updates from one provider, it 
    can add another provider to try to improve results.</p>
</li>
<li>
<p>If the application is getting sufficiently accurate results from the network 
    provider, it can disable the GPS provider to save power.</p>
</li>
</ul>
<h4>Enabling Manual Configuration Mode</h4>
<p>To enable manual configuration mode, set the {@link Titanium.Geolocation.Android#property-manualMode manualMode} 
property to <code>true</code>. In manual configuration mode, the location providers and location
rules set through this module control the generation of location updates.</p>
<p>When <code>manualMode</code> is <code>true</code>, the following configuration settings in the
{@link Titanium.Geolocation} module are ignored:</p>
<ul>
<li>{@link Titanium.Geolocation#property-accuracy Geolocation.accuracy}</li>
<li>{@link Titanium.Geolocation#property-frequency Geolocation.frequency}</li>
<li>{@link Titanium.Geolocation#property-preferredProvider Geolocation.preferredProvider}</li>
</ul>
<p>When <code>manualMode</code> is <code>false</code>, the <code>accuracy</code>, <code>frequency</code> and <code>preferredProvider</code> 
settings from {@link Titanium.Geolocation} are used to configure location updates.
Any location providers and location rules set in {@link Titanium.Geolocation.Android} 
are retained, but they have no effect.</p>
<h4>Location Providers</h4>
<p>Android supports three kinds of location providers: GPS, network, and the 
"passive" location provider, which provides only cached information. </p>
<p>Each location provider represents a different tradeoff between accuracy and
battery power. For most accurate results, you can use a combination of location
providers. Your application can also dynamically change providers to optimize
battery life (for example, if the network provider is providing good enough
location updates, you can disable the GPS provider).</p>
<p>Location providers are represented by the
{@link Titanium.Geolocation.Android.LocationProvider LocationProvider} object. 
To specify a location provider, create a new provider object, then register it
with {@link Titanium.Geolocation.Android#method-createLocationProvider addLocationProvider}:</p>
<pre><code>gpsProvider = Ti.Geolocation.Android.createLocationProvider({
    name: Ti.Geolocation.PROVIDER_GPS,
    minUpdateTime: 60, 
    minUpdateDistance: 100
});
Ti.Geolocation.Android.addLocationProvider(gpsProvider);
</code></pre>
<p>As shown above, when you create a location provider, you can specify two
properties to limit update frequency:</p>
<ul>
<li>
<p><code>minUpdateTime</code>. Limits the frequency of location updates to no more 
    than one per <code>minUpdateTime</code> seconds.</p>
</li>
<li>
<p><code>minUpdateDistance</code>. Don't send location updates until the location changes
    at least <code>minUpdateDistance</code> meters.</p>
</li>
</ul>
<p>Only one provider of each type (GPS, network, passive) can be registered at a
time. Adding a new location provider with the same <code>name</code> value replaces any
existing provider with the same <code>name</code>.</p>
<p>Once a location provider is added, changes made to the location provider object itself
(such as changing its <code>minUpdateTime</code> value) change the active configuration of the 
location system.</p>
<h4>Location Rules</h4>
<p><em>Location Rules</em> filter the results returned by location providers. You use
location rules to reduce the number of location update events, and ensure that 
the events you do receive are as accurate and recent as your application requires.</p>
<p>You are not required to set any location rules. However, by reducing the number of 
location events that are passed from the native code
to the JavaScript layer, location rules can improve both performance and battery
life.</p>
<p>Location rules are represented by the
{@link Titanium.Geolocation.Android.LocationProvider LocationRule} object. To
specify a location rule, create a new rule object, then register it with 
{@link Titanium.Geolocation.Android#method-createLocationProvider addLocationRule}:</p>
<pre><code>var gpsRule = Ti.Geolocation.Android.createLocationRule({
    provider: Ti.Geolocation.PROVIDER_GPS,
    // Updates should be accurate to 100m
    accuracy: 100,
    // Updates should be no older than 5m
    maxAge: 300000
    // But  no more frequent than once per 10 seconds
    minAge: 10000
});
Ti.Geolocation.Android.addLocationRule(gpsRule);
</code></pre>
<p>Each rule can specify any combination of the following criteria:</p>
<ul>
<li>
<p><code>provider</code>. If specified, this rule only applies to updates generated
    by the specified provider. If not specified, this rule applies to all updates.</p>
</li>
<li>
<p><code>accuracy</code>. Minimum accuracy required for a location update. Accuracy is
    expressed as the maximum allowable error, in meters. Updates with reported
    accuracy values greater than this are filtered out. </p>
</li>
<li>
<p><code>minAge</code>. Controls the frequency of location updates. Do not forward an update unless
     at least <code>minAge</code> milliseconds have passed since the last good location
     update.</p>
</li>
<li>
<p><code>maxAge</code>. Controls the freshness of location updates. Do not forward an update
    unless it is newer than <code>maxAge</code> milliseconds.</p>
</li>
</ul>
<p>You can specify as many location rules as you like. The order in which location rules
are added is not significant. For a <code>location</code> event to be generated, the location
update must pass all of the active rules.</p>
<p>Note that some combinations of rules may make it very difficult to get location
updates. In particular, very low values for either <code>accuracy</code> or <code>maxAge</code> may prevent 
results from getting through. </p>
 */
Titanium.Geolocation.Android = {};

/**
 * @class Titanium.Geolocation.Android.LocationProvider
 * @typestr Object of Titanium.Geolocation.Android
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>Represents a source of location information, such as GPS.</p>
 * @description <p>See {@link Titanium.Geolocation.Android} for details on using <code>LocationProviders</code> to 
manually configure location updates.</p>
 */
Titanium.Geolocation.Android.LocationProvider = {};

/**
 * @method getMinUpdateDistance
 * <p>Gets the value of the {@link Titanium.Geolocation.Android.LocationProvider#property-minUpdateDistance minUpdateDistance} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.Android.LocationProvider.getMinUpdateDistance = function(){};

/**
 * @method getMinUpdateTime
 * <p>Gets the value of the {@link Titanium.Geolocation.Android.LocationProvider#property-minUpdateTime minUpdateTime} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.Android.LocationProvider.getMinUpdateTime = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Geolocation.Android.LocationProvider#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Geolocation.Android.LocationProvider.getName = function(){};

/**
 * @method setMinUpdateDistance
 * <p>Sets the value of the {@link Titanium.Geolocation.Android.LocationProvider#property-minUpdateDistance minUpdateDistance} property.</p>
 * @param {Number} minUpdateDistance 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.LocationProvider.setMinUpdateDistance = function(minUpdateDistance){};

/**
 * @method setMinUpdateTime
 * <p>Sets the value of the {@link Titanium.Geolocation.Android.LocationProvider#property-minUpdateTime minUpdateTime} property.</p>
 * @param {Number} minUpdateTime 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.LocationProvider.setMinUpdateTime = function(minUpdateTime){};

/**
 * @method setName
 * <p>Sets the value of the {@link Titanium.Geolocation.Android.LocationProvider#property-name name} property.</p>
 * @param {String} name 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.LocationProvider.setName = function(name){};

/**
 * @property minUpdateDistance
 * @type Number
 * <p>Don't send a location update unless the location has changed at least <code>minUpdateDistance</code> 
meters since the previous update.</p>
 */
Titanium.Geolocation.Android.LocationProvider.minUpdateDistance = null;

/**
 * @property minUpdateTime
 * @type Number
 * <p>Limits the frequency of location updates to no more than one per <code>minUpdateTime</code> seconds.</p>
 */
Titanium.Geolocation.Android.LocationProvider.minUpdateTime = null;

/**
 * @property name
 * @type String
 * <p>Type of location provider: {@link Titanium.Geolocation#property-PROVIDER_GPS PROVIDER_GPS}, 
{@link Titanium.Geolocation#property-PROVIDER_NETWORK PROVIDER_NETWORK}, or 
{@link Titanium.Geolocation#property-PROVIDER_PASSIVE PROVIDER_PASSIVE}.</p>
 */
Titanium.Geolocation.Android.LocationProvider.name = null;

/**
 * @class Titanium.Geolocation.Android.LocationRule
 * @typestr Object of Titanium.Geolocation.Android
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A location rule to filter the results returned by location providers.</p>
 * @description <p>All of the properties are optional.</p>
<p>See {@link Titanium.Geolocation.Android} for details on using <code>LocationProviders</code> to 
manually configure location updates.</p>
 */
Titanium.Geolocation.Android.LocationRule = {};

/**
 * @method getAccuracy
 * <p>Gets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-accuracy accuracy} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.Android.LocationRule.getAccuracy = function(){};

/**
 * @method getMaxAge
 * <p>Gets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-maxAge maxAge} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.Android.LocationRule.getMaxAge = function(){};

/**
 * @method getMinAge
 * <p>Gets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-minAge minAge} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.Android.LocationRule.getMinAge = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Geolocation.Android.LocationRule.getName = function(){};

/**
 * @method setAccuracy
 * <p>Sets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-accuracy accuracy} property.</p>
 * @param {Number} accuracy 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.LocationRule.setAccuracy = function(accuracy){};

/**
 * @method setMaxAge
 * <p>Sets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-maxAge maxAge} property.</p>
 * @param {Number} maxAge 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.LocationRule.setMaxAge = function(maxAge){};

/**
 * @method setMinAge
 * <p>Sets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-minAge minAge} property.</p>
 * @param {Number} minAge 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.LocationRule.setMinAge = function(minAge){};

/**
 * @method setName
 * <p>Sets the value of the {@link Titanium.Geolocation.Android.LocationRule#property-name name} property.</p>
 * @param {String} name 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.LocationRule.setName = function(name){};

/**
 * @property accuracy
 * @type Number
 * <p>Minimum accuracy required for a location update.</p>
 * @description <p>Accuracy is expressed as the maximum allowable error, in meters. To pass this rule,
an update must have an accuracy value equal to or lower than this value.</p>
 */
Titanium.Geolocation.Android.LocationRule.accuracy = null;

/**
 * @property maxAge
 * @type Number
 * <p>Controls the freshness of location updates. Do not forward an update
unless it is newer than <code>maxAge</code> milliseconds.</p>
 */
Titanium.Geolocation.Android.LocationRule.maxAge = null;

/**
 * @property minAge
 * @type Number
 * <p>Controls the frequency of location updates.</p>
 * @description <p>Do not forward an update unless at least <code>minAge</code> milliseconds have passed since the last 
good location update (that is, the last update from any provider that generated a 
<code>location</code> event).</p>
 */
Titanium.Geolocation.Android.LocationRule.minAge = null;

/**
 * @property name
 * @type String
 * <p>If specified, this rule only applies to updates generated
by the specified provider. If <code>null</code>, this rule applies to all updates.</p>
 * @description <p>Can be {@link Titanium.Geolocation#property-PROVIDER_GPS PROVIDER_GPS}, 
{@link Titanium.Geolocation#property-PROVIDER_NETWORK PROVIDER_NETWORK}, or 
{@link Titanium.Geolocation#property-PROVIDER_PASSIVE PROVIDER_PASSIVE}.</p>
 */
Titanium.Geolocation.Android.LocationRule.name = null;

/**
 * @method addLocationProvider
 * <p>Adds and enables the specified location provider, possibly replacing an existing one.</p>
 * @description <p>If another location provider with the same <code>name</code> value is already active, the 
new location provider replaces the exiting one.</p>
 * @param {Titanium.Geolocation.Android.LocationProvider} provider 
 * <p>The location provider to add.</p>
 * @return void
*/
Titanium.Geolocation.Android.addLocationProvider = function(provider){};

/**
 * @method addLocationRule
 * <p>Adds and enables the specified location rule.</p>
 * @description <p>Only location updates that pass all of the active rules are passed on to the
application.</p>
 * @param {Titanium.Geolocation.Android.LocationRule} rule 
 * <p>The location rule to add.</p>
 * @return void
*/
Titanium.Geolocation.Android.addLocationRule = function(rule){};

/**
 * @method createLocationProvider
 * <p>Creates and returns an instance of {@link Titanium.Geolocation.Android.LocationProvider}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Geolocation.Android.LocationProvider} except those marked not-creation or read-only.</p>
 * @return {Titanium.Geolocation.Android.LocationProvider} 
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.Geolocation.Android.createLocationProvider = function(parameters){};

/**
 * @method createLocationRule
 * <p>Creates and returns an instance of {@link Titanium.Geolocation.Android.LocationRule}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Geolocation.Android.LocationRule} except those marked not-creation or read-only.</p>
 * @return {Titanium.Geolocation.Android.LocationRule} 
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.Geolocation.Android.createLocationRule = function(parameters){};

/**
 * @method getManualMode
 * <p>Gets the value of the {@link Titanium.Geolocation.Android#property-manualMode manualMode} property.</p>
 * @return {Boolean} 
*/
Titanium.Geolocation.Android.getManualMode = function(){};

/**
 * @method removeLocationProvider
 * <p>Disables and removes the specified location provider.</p>
 * @param {Titanium.Geolocation.Android.LocationProvider} provider 
 * <p>The location provider to remove.</p>
 * @return void
*/
Titanium.Geolocation.Android.removeLocationProvider = function(provider){};

/**
 * @method removeLocationRule
 * <p>Disables and removes the specified location rule.</p>
 * @param {Titanium.Geolocation.Android.LocationRule} rule 
 * <p>The location rule to remove.</p>
 * @return void
*/
Titanium.Geolocation.Android.removeLocationRule = function(rule){};

/**
 * @method setManualMode
 * <p>Sets the value of the {@link Titanium.Geolocation.Android#property-manualMode manualMode} property.</p>
 * @param {Boolean} manualMode 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.Android.setManualMode = function(manualMode){};

/**
 * @property [manualMode=false]
 * @type Boolean
 * <p>Set to <code>true</code> to enable manual configuration of location updates through this module.</p>
 * @description <p>If <code>true</code>, location updates are controlled by the location providers and location rules 
configured in this module.</p>
<p>If <code>false</code>, location updates are configured using the  {@link Titanium.Geolocation#property-accuracy accuracy},
{@link Titanium.Geolocation#property-frequency frequency} and {@link Titanium.Geolocation#property-preferredProvider preferredProvider}
properties in the {@link Titanium.Geolocation} module.</p>
 */
Titanium.Geolocation.Android.manualMode = null;

/**
 * @class Titanium.Geolocation.MobileWeb
 * @typestr Submodule of Titanium.Geolocation
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The Mobile Web specific geolocation capabilities.</p>
 */
Titanium.Geolocation.MobileWeb = {};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.Geolocation.MobileWeb.getBubbleParent = function(){};

/**
 * @method getForwardGeocoderTimeout
 * <p>Gets the value of the {@link Titanium.Geolocation.MobileWeb#property-forwardGeocoderTimeout forwardGeocoderTimeout} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.MobileWeb.getForwardGeocoderTimeout = function(){};

/**
 * @method getLocationTimeout
 * <p>Gets the value of the {@link Titanium.Geolocation.MobileWeb#property-locationTimeout locationTimeout} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.MobileWeb.getLocationTimeout = function(){};

/**
 * @method getMaximumHeadingAge
 * <p>Gets the value of the {@link Titanium.Geolocation.MobileWeb#property-maximumHeadingAge maximumHeadingAge} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.MobileWeb.getMaximumHeadingAge = function(){};

/**
 * @method getMaximumLocationAge
 * <p>Gets the value of the {@link Titanium.Geolocation.MobileWeb#property-maximumLocationAge maximumLocationAge} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.MobileWeb.getMaximumLocationAge = function(){};

/**
 * @method getReverseGeocoderTimeout
 * <p>Gets the value of the {@link Titanium.Geolocation.MobileWeb#property-reverseGeocoderTimeout reverseGeocoderTimeout} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.MobileWeb.getReverseGeocoderTimeout = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.Geolocation.MobileWeb.setBubbleParent = function(){};

/**
 * @method setForwardGeocoderTimeout
 * <p>Sets the value of the {@link Titanium.Geolocation.MobileWeb#property-forwardGeocoderTimeout forwardGeocoderTimeout} property.</p>
 * @param {Number} forwardGeocoderTimeout 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.MobileWeb.setForwardGeocoderTimeout = function(forwardGeocoderTimeout){};

/**
 * @method setLocationTimeout
 * <p>Sets the value of the {@link Titanium.Geolocation.MobileWeb#property-locationTimeout locationTimeout} property.</p>
 * @param {Number} locationTimeout 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.MobileWeb.setLocationTimeout = function(locationTimeout){};

/**
 * @method setMaximumHeadingAge
 * <p>Sets the value of the {@link Titanium.Geolocation.MobileWeb#property-maximumHeadingAge maximumHeadingAge} property.</p>
 * @param {Number} maximumHeadingAge 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.MobileWeb.setMaximumHeadingAge = function(maximumHeadingAge){};

/**
 * @method setMaximumLocationAge
 * <p>Sets the value of the {@link Titanium.Geolocation.MobileWeb#property-maximumLocationAge maximumLocationAge} property.</p>
 * @param {Number} maximumLocationAge 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.MobileWeb.setMaximumLocationAge = function(maximumLocationAge){};

/**
 * @method setReverseGeocoderTimeout
 * <p>Sets the value of the {@link Titanium.Geolocation.MobileWeb#property-reverseGeocoderTimeout reverseGeocoderTimeout} property.</p>
 * @param {Number} reverseGeocoderTimeout 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.MobileWeb.setReverseGeocoderTimeout = function(reverseGeocoderTimeout){};

/**
 * @property bubbleParent 
 * @hide
*/Titanium.Geolocation.MobileWeb.bubbleParent = null;

/**
 * @property forwardGeocoderTimeout
 * @type Number
 * <p>The time within which forward geocoder requests must succeed, in milliseconds.</p>
 */
Titanium.Geolocation.MobileWeb.forwardGeocoderTimeout = null;

/**
 * @property [locationTimeout=Infinity]
 * @type Number
 * <p>The time within which location requests must succeed, in milliseconds.</p>
 */
Titanium.Geolocation.MobileWeb.locationTimeout = null;

/**
 * @property [maximumHeadingAge=1000]
 * @type Number
 * <p>The maximum age of cached locations acceptible for heading requests, in milliseconds.</p>
 */
Titanium.Geolocation.MobileWeb.maximumHeadingAge = null;

/**
 * @property [maximumLocationAge=0]
 * @type Number
 * <p>The maximum age of cached locations acceptible for location requests, in milliseconds.</p>
 */
Titanium.Geolocation.MobileWeb.maximumLocationAge = null;

/**
 * @property reverseGeocoderTimeout
 * @type Number
 * <p>The time within which reverse geocoder requests must succeed, in milliseconds.</p>
 */
Titanium.Geolocation.MobileWeb.reverseGeocoderTimeout = null;






/**
 * @method forwardGeocoder
 * <p>Resolves an address to a location.</p>
 * @param {String} address 
 * <p>address to resolve.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Geolocation.forwardGeocoder = function(address, callback){};

/**
 * @method getAccuracy
 * <p>Gets the value of the {@link Titanium.Geolocation#property-accuracy accuracy} property.</p>
 * @return {Number} 
*/
Titanium.Geolocation.getAccuracy = function(){};

/**
 * @method getActivityType
 * <p>Gets the value of the {@link Titanium.Geolocation#property-activityType activityType} property.</p>
 * @return {Number} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Geolocation.getActivityType = function(){};

/**
 * @method getCurrentHeading
 * <p>Retrieves the current compass heading.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure of obtaining the current heading.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Geolocation.getCurrentHeading = function(callback){};

/**
 * @method getCurrentPosition
 * <p>Retrieves the last known location from the device.</p>
 * @description <p>On Android, the radios are not turned on to update the location, and a cached
location is used.</p>
<p>On iOS the radios <strong>may</strong> be used if the location is too "old". </p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure of obtaining the current location.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Geolocation.getCurrentPosition = function(callback){};

/**
 * @method getDistanceFilter
 * <p>Gets the value of the {@link Titanium.Geolocation#property-distanceFilter distanceFilter} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.getDistanceFilter = function(){};

/**
 * @method getFrequency
 * <p>Gets the value of the {@link Titanium.Geolocation#property-frequency frequency} property.</p>
 * @deprecated 2.0.0
 * @return {Number} 
*/
Titanium.Geolocation.getFrequency = function(){};

/**
 * @method getHasCompass
 * <p>Gets the value of the {@link Titanium.Geolocation#property-hasCompass hasCompass} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Geolocation.getHasCompass = function(){};

/**
 * @method getHeadingFilter
 * <p>Gets the value of the {@link Titanium.Geolocation#property-headingFilter headingFilter} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.getHeadingFilter = function(){};

/**
 * @method getLocationServicesAuthorization
 * <p>Gets the value of the {@link Titanium.Geolocation#property-locationServicesAuthorization locationServicesAuthorization} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.getLocationServicesAuthorization = function(){};

/**
 * @method getLocationServicesEnabled
 * <p>Gets the value of the {@link Titanium.Geolocation#property-locationServicesEnabled locationServicesEnabled} property.</p>
 * @return {Boolean} 
*/
Titanium.Geolocation.getLocationServicesEnabled = function(){};

/**
 * @method getPauseLocationUpdateAutomatically
 * <p>Gets the value of the {@link Titanium.Geolocation#property-pauseLocationUpdateAutomatically pauseLocationUpdateAutomatically} property.</p>
 * @return {Boolean} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Geolocation.getPauseLocationUpdateAutomatically = function(){};

/**
 * @method getPreferredProvider
 * <p>Gets the value of the {@link Titanium.Geolocation#property-preferredProvider preferredProvider} property.</p>
 * @deprecated 2.0.0
 * @return {String} 
 * @platform android 0.1
*/
Titanium.Geolocation.getPreferredProvider = function(){};

/**
 * @method getPurpose
 * <p>Gets the value of the {@link Titanium.Geolocation#property-purpose purpose} property.</p>
 * @return {String} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.getPurpose = function(){};

/**
 * @method getShowCalibration
 * <p>Gets the value of the {@link Titanium.Geolocation#property-showCalibration showCalibration} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.getShowCalibration = function(){};

/**
 * @method getTrackSignificantLocationChange
 * <p>Gets the value of the {@link Titanium.Geolocation#property-trackSignificantLocationChange trackSignificantLocationChange} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Geolocation.getTrackSignificantLocationChange = function(){};

/**
 * @method reverseGeocoder
 * <p>Tries to resolve a location to an address.</p>
 * @description <p>The callback receives a {@link ReverseGeocodeResponse} object. If the request
is successful, the object includes one or more addresses that are possible matches
for the requested coordinates.</p>
 * @param {Number} latitude 
 * <p>Latitude to search, specified in decimal degrees.</p>
 * @param {Number} longitude 
 * <p>Longitude to search, specified in decimal degrees.</p>
 * @param {Function} callback 
 * <p>Function to invoke on success or failure.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Geolocation.reverseGeocoder = function(latitude, longitude, callback){};

/**
 * @method setAccuracy
 * <p>Sets the value of the {@link Titanium.Geolocation#property-accuracy accuracy} property.</p>
 * @param {Number} accuracy 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.setAccuracy = function(accuracy){};

/**
 * @method setActivityType
 * <p>Sets the value of the {@link Titanium.Geolocation#property-activityType activityType} property.</p>
 * @param {Number} activityType 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Geolocation.setActivityType = function(activityType){};

/**
 * @method setDistanceFilter
 * <p>Sets the value of the {@link Titanium.Geolocation#property-distanceFilter distanceFilter} property.</p>
 * @param {Number} distanceFilter 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.setDistanceFilter = function(distanceFilter){};

/**
 * @method setFrequency
 * <p>Sets the value of the {@link Titanium.Geolocation#property-frequency frequency} property.</p>
 * @deprecated 2.0.0
 * @param {Number} frequency 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Geolocation.setFrequency = function(frequency){};

/**
 * @method setHeadingFilter
 * <p>Sets the value of the {@link Titanium.Geolocation#property-headingFilter headingFilter} property.</p>
 * @param {Number} headingFilter 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.setHeadingFilter = function(headingFilter){};

/**
 * @method setLocationServicesAuthorization
 * <p>Sets the value of the {@link Titanium.Geolocation#property-locationServicesAuthorization locationServicesAuthorization} property.</p>
 * @param {Number} locationServicesAuthorization 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.setLocationServicesAuthorization = function(locationServicesAuthorization){};

/**
 * @method setPauseLocationUpdateAutomatically
 * <p>Sets the value of the {@link Titanium.Geolocation#property-pauseLocationUpdateAutomatically pauseLocationUpdateAutomatically} property.</p>
 * @param {Boolean} pauseLocationUpdateAutomatically 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Geolocation.setPauseLocationUpdateAutomatically = function(pauseLocationUpdateAutomatically){};

/**
 * @method setPreferredProvider
 * <p>Sets the value of the {@link Titanium.Geolocation#property-preferredProvider preferredProvider} property.</p>
 * @deprecated 2.0.0
 * @param {String} preferredProvider 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.1
*/
Titanium.Geolocation.setPreferredProvider = function(preferredProvider){};

/**
 * @method setPurpose
 * <p>Sets the value of the {@link Titanium.Geolocation#property-purpose purpose} property.</p>
 * @param {String} purpose 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.setPurpose = function(purpose){};

/**
 * @method setShowCalibration
 * <p>Sets the value of the {@link Titanium.Geolocation#property-showCalibration showCalibration} property.</p>
 * @param {Boolean} showCalibration 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Geolocation.setShowCalibration = function(showCalibration){};

/**
 * @method setTrackSignificantLocationChange
 * <p>Sets the value of the {@link Titanium.Geolocation#property-trackSignificantLocationChange trackSignificantLocationChange} property.</p>
 * @param {Boolean} trackSignificantLocationChange 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.Geolocation.setTrackSignificantLocationChange = function(trackSignificantLocationChange){};

/**
 * @property ACCURACY_BEST
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request the best
accuracy available.</p>
 * @description <p>Using this value results in the most accurate location updates, and the highest
battery usage.</p>
<p>Using this value on Android enables <em>legacy mode</em> operation, which is not
recommended. </p>
 */
Titanium.Geolocation.ACCURACY_BEST = null;

/**
 * @property ACCURACY_BEST_FOR_NAVIGATION
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request highest possible 
accuracy and combine it with additional sensor data.</p>
 * @description <p>Using this value is intended for use in navigation applications that require 
precise position information at all times and are intended to be used only while 
the device is plugged in.</p>
 */
Titanium.Geolocation.ACCURACY_BEST_FOR_NAVIGATION = null;

/**
 * @property ACCURACY_HIGH
 * @type Number
 * @readonly
 * @platform android 2.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request more
accurate location updates with higher battery usage.</p>
 * @description <p>Using this value on Android enables <em>simple mode</em> operation.</p>
 */
Titanium.Geolocation.ACCURACY_HIGH = null;

/**
 * @property ACCURACY_HUNDRED_METERS
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request location
updates accurate to the nearest 100 meters.</p>
 * @description <p>Using this value on Android enables <em>legacy mode</em> operation, which is not
recommended. </p>
 */
Titanium.Geolocation.ACCURACY_HUNDRED_METERS = null;

/**
 * @property ACCURACY_KILOMETER
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request location
updates accurate to the nearest kilometer.</p>
 * @description <p>Using this value on Android enables <em>legacy mode</em> operation, which is not
recommended. </p>
 */
Titanium.Geolocation.ACCURACY_KILOMETER = null;

/**
 * @property ACCURACY_LOW
 * @type Number
 * @readonly
 * @platform android 2.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request less
accurate location updates with lower battery usage.</p>
 * @description <p>Using this value on Android enables <em>simple mode</em> operation.</p>
 */
Titanium.Geolocation.ACCURACY_LOW = null;

/**
 * @property ACCURACY_NEAREST_TEN_METERS
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request location
updates accurate to the nearest 10 meters.</p>
 * @description <p>Using this value on Android enables <em>legacy mode</em> operation, which is not
recommended. </p>
 */
Titanium.Geolocation.ACCURACY_NEAREST_TEN_METERS = null;

/**
 * @property ACCURACY_THREE_KILOMETERS
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Use with {@link Titanium.Geolocation#property-accuracy accuracy} to request location
updates accurate to the nearest three kilometers.</p>
 * @description <p>Using this value on Android enables <em>legacy mode</em> operation, which is not
recommended. </p>
 */
Titanium.Geolocation.ACCURACY_THREE_KILOMETERS = null;

/**
 * @property ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION
 * @type String
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The location data is used for tracking location changes to the automobile specifically during vehicular navigation.</p>
 * @description <p>Used with {@link Titanium.Geolocation#property-activityType activityType}. This activity might 
cause location updates to be paused only when the vehicle does not move for an 
extended period of time. Available in iOS 6.0 and later.</p>
 */
Titanium.Geolocation.ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION = null;

/**
 * @property ACTIVITYTYPE_FITNESS
 * @type String
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The location data is used for tracking any pedestrian-related activity.</p>
 * @description <p>Used with {@link Titanium.Geolocation#property-activityType activityType}. This activity might 
cause location updates to be paused only when the user does not move a significant 
distance over a period of time.Available in iOS 6.0 and later.</p>
 */
Titanium.Geolocation.ACTIVITYTYPE_FITNESS = null;

/**
 * @property ACTIVITYTYPE_OTHER
 * @type String
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The location data is being used for an unknown activity.</p>
 * @description <p>Used with {@link Titanium.Geolocation#property-activityType activityType}. Available in iOS 6.0 and later.</p>
 */
Titanium.Geolocation.ACTIVITYTYPE_OTHER = null;

/**
 * @property ACTIVITYTYPE_OTHER_NAVIGATION
 * @type String
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The location data is used for tracking movements of other types of vehicular 
navigation that are not automobile related.</p>
 * @description <p>Used with {@link Titanium.Geolocation#property-activityType activityType}. You would use this 
to track navigation by boat, train, or plane. Do not use this type for pedestrian 
navigation tracking. This activity might cause location updates to be paused only 
when the vehicle does not move a significant distance over a period of time. 
Available in iOS 6.0 and later.</p>
 */
Titanium.Geolocation.ACTIVITYTYPE_OTHER_NAVIGATION = null;

/**
 * @property AUTHORIZATION_AUTHORIZED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>A {@link Titanium.Geolocation#property-locationServicesAuthorization locationServicesAuthorization} value 
indicating that the application is authorized to use location services.</p>
 */
Titanium.Geolocation.AUTHORIZATION_AUTHORIZED = null;

/**
 * @property AUTHORIZATION_DENIED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>A {@link Titanium.Geolocation#property-locationServicesAuthorization locationServicesAuthorization} value 
indicating that the application is not authorized to use location services, <em>or</em>
location services are disabled.</p>
 */
Titanium.Geolocation.AUTHORIZATION_DENIED = null;

/**
 * @property AUTHORIZATION_RESTRICTED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>A {@link Titanium.Geolocation#property-locationServicesAuthorization locationServicesAuthorization} value 
indicating that the application is not authorized to use location servies <em>and</em>
the user cannot change this application's status.</p>
 */
Titanium.Geolocation.AUTHORIZATION_RESTRICTED = null;

/**
 * @property AUTHORIZATION_UNKNOWN
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>A {@link Titanium.Geolocation#property-locationServicesAuthorization locationServicesAuthorization} value 
indicating that the authorization state is unknown.</p>
 * @description <p>This value is always returned if the device is running an iOS release prior to 4.2.</p>
 */
Titanium.Geolocation.AUTHORIZATION_UNKNOWN = null;

/**
 * @property ERROR_DENIED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Error code indicating that the user denied access to the location service.</p>
 */
Titanium.Geolocation.ERROR_DENIED = null;

/**
 * @property ERROR_HEADING_FAILURE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Error code indicating that the heading could not be determined.</p>
 */
Titanium.Geolocation.ERROR_HEADING_FAILURE = null;

/**
 * @property ERROR_LOCATION_UNKNOWN
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Error code indicating that the user's location could not be determined.</p>
 */
Titanium.Geolocation.ERROR_LOCATION_UNKNOWN = null;

/**
 * @property ERROR_NETWORK
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Error code indicating that the network was unavailable.</p>
 */
Titanium.Geolocation.ERROR_NETWORK = null;

/**
 * @property ERROR_REGION_MONITORING_DELAYED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Error code indicating that region monitoring is delayed.</p>
 */
Titanium.Geolocation.ERROR_REGION_MONITORING_DELAYED = null;

/**
 * @property ERROR_REGION_MONITORING_DENIED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Error code indicating that region monitoring is denied.</p>
 */
Titanium.Geolocation.ERROR_REGION_MONITORING_DENIED = null;

/**
 * @property ERROR_REGION_MONITORING_FAILURE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Error code indicating a region monitoring failure.</p>
 */
Titanium.Geolocation.ERROR_REGION_MONITORING_FAILURE = null;

/**
 * @property ERROR_TIMEOUT
 * @type Number
 * @readonly
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Error indicating a timeout.</p>
 */
Titanium.Geolocation.ERROR_TIMEOUT = null;

/**
 * @property PROVIDER_GPS
 * @type String
 * @readonly
 * @platform android 0.1
 * <p>Specifies the GPS location provider.</p>
 * @description <p>Used with {@link Titanium.Geolocation#property-preferredProvider preferredProvider}, 
{@link Titanium.Geolocation.Android.LocationProvider LocationProvider.name},
{@link Titanium.Geolocation.Android.LocationRule LocationRule.provider}.</p>
<p>In general, the GPS provider has the highest power consumption and the 
highest accuracy, but this may vary. In some circumstances, the network 
provider may be more reliable.</p>
 */
Titanium.Geolocation.PROVIDER_GPS = null;

/**
 * @property PROVIDER_NETWORK
 * @type String
 * @readonly
 * @platform android 0.1
 * <p>Specifies the network location provider.</p>
 * @description <p>Used with {@link Titanium.Geolocation#property-preferredProvider preferredProvider}, 
{@link Titanium.Geolocation.Android.LocationProvider LocationProvider.name},
{@link Titanium.Geolocation.Android.LocationRule LocationRule.provider}.</p>
<p>Generally requires less power than the GPS provider and provides less accurate
results, but may produce very accurate results in densely-populated areas
with many cell towers and WiFi networks.</p>
 */
Titanium.Geolocation.PROVIDER_NETWORK = null;

/**
 * @property PROVIDER_PASSIVE
 * @type String
 * @readonly
 * @platform android 0.1
 * <p>Specifies the passive location provider.</p>
 * @description <p>Used with {@link Titanium.Geolocation#property-preferredProvider preferredProvider}, 
{@link Titanium.Geolocation.Android.LocationProvider LocationProvider.name},
{@link Titanium.Geolocation.Android.LocationRule LocationRule.provider}.</p>
<p>This provider only uses cached location information, so it does not use
any power, but makes no guarantee that the location results are recent.</p>
 */
Titanium.Geolocation.PROVIDER_PASSIVE = null;

/**
 * @property accuracy
 * @type Number
 * <p>Specifies the requested accuracy for location updates.</p>
 * @description <p>For basic location updates on all platforms, set <code>accuracy</code> to either:</p>
<ul>
<li>{@link Titanium.Geolocation#property-ACCURACY_HIGH ACCURACY_HIGH} for higher-quality location
    updates, with the higher power consumption.</li>
<li>{@link Titanium.Geolocation#property-ACCURACY_LOW ACCURACY_LOW} for lower-quality location
    updates with lower power consumption.</li>
</ul>
<p>For finer-grained control on iOS, specify one of <code>ACCURACY_BEST</code>, 
<code>ACCURACY_NEAREST_TEN_METERS</code>, <code>ACCURACY_HUNDRED_METERS</code>, <code>ACCURACY_KILOMETER</code>, or
<code>ACCURACY_THREE_KILOMETERS</code>. </p>
<p>For finer-grained control on Android, use <em>manual mode</em>, instead of specifing an accuracy. 
This mode requires more active management on the part of the application, but it 
is recommended to maximize accuracy and battery life.
See {@link Titanium.Geolocation.Android} for details on using manual mode.</p>
<p>Note that for backwards compatibility, Android supports using the iOS accuracy constants. 
This usage is deprecated. Applications using one of the iOS constants should
migrate to using <code>ACCURACY_HIGH</code>, <code>ACCURACY_LOW</code>, or Android manual mode.</p>
 */
Titanium.Geolocation.accuracy = null;

/**
 * @property [activityType={@link Titanium.Geolocation#property-ACTIVITYTYPE_OTHER}]
 * @type Number
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>The type of user activity to be associated with the location updates. Available in iOS 6.0 and later.</p>
 * @description <p>Set the activiyType of location updates to either:</p>
<ul>
<li>{@link Titanium.Geolocation#property-ACTIVITYTYPE_OTHER ACTIVITYTYPE_OTHER} for an unknown activity</li>
<li>{@link Titanium.Geolocation#property-ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION} 
    for tracking location changes to the automobile specifically during vehicular navigation.</li>
<li>{@link Titanium.Geolocation#property-ACTIVITYTYPE_FITNESS ACTIVITYTYPE_FITNESS} for tracking 
    any pedestrian-related activity.</li>
<li>{@link Titanium.Geolocation#property-ACTIVITYTYPE_OTHER_NAVIGATION ACTIVITYTYPE_OTHER_NAVIGATION} 
    for tracking movements of other types of vehicular navigation that are not 
    automobile related.</li>
</ul>
<p>The information in this property is used as a cue to determine when location 
updates may be automatically paused. Pausing updates gives the system the 
opportunity to save power in situations where the user's location is not likely 
to be changing. For example, if the activity type is 
{@link Titanium.Geolocation#property-ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION} 
and no location changes have occurred recently, the radios might be powered down 
until movement is detected again. </p>
 */
Titanium.Geolocation.activityType = null;

/**
 * @property [distanceFilter=0]
 * @type Number
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>The minimum change of position (in meters) before a 'location' event is fired.</p>
 * @description <p>If set to 0, distance filtering is disabled, meaning that location events are 
generated continuously.</p>
 */
Titanium.Geolocation.distanceFilter = null;

/**
 * @property frequency
 * @type Number
 * <p>Requested frequency for location updates, in milliseconds.</p>
 * @description <p>Setting a frequency value enables legacy location mode on Android.
Note that only a single provider can be active at one time in legacy mode.</p>
<p>Note that the frequency value is used as a guideline: there are no guarantees
that the device will provide updates at the specified frequency.</p>
<p>A lower frequency value generally increases power consumption. 
A value of 0 means that updates should be generated as quickly as possible.</p>
 * @deprecated 2.0.0 <p>Android legacy mode operation is deprecated. For new development, use
 * either simple mode or manual mode. See "Configurating Location Updates on Android"
 * in the main description of this class for more information.</p>
 */
Titanium.Geolocation.frequency = null;

/**
 * @property hasCompass
 * @type Boolean
 * @readonly
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Indicates whether the current device supports a compass.</p>
 */
Titanium.Geolocation.hasCompass = null;

/**
 * @property [headingFilter=0 (No limit on heading updates)]
 * @type Number
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Minimum heading change (in degrees) before a <code>heading</code> event is fired.</p>
 * @description <p>Set to a value greater than zero to reduce the number of heading events generated.</p>
 */
Titanium.Geolocation.headingFilter = null;

/**
 * @property locationServicesAuthorization
 * @type Number
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Returns an authorization constant indicating if the application has access to location services.</p>
 * @description <p>Always returns <code>AUTHORIZATION_UNKNOWN</code> on pre-4.2 devices. </p>
<p>If <code>locationServicesAuthorization</code> is <code>AUTHORIZATION_RESTRICTED</code>, you should not
attempt to re-authorize: this will lead to issues.</p>
 */
Titanium.Geolocation.locationServicesAuthorization = null;

/**
 * @property locationServicesEnabled
 * @type Boolean
 * @readonly
 * <p>Indicates if the user has enabled or disabled location services for the device (not the application).</p>
 * @description <p>This method returns <code>true</code> if <em>any</em> location provider is enabled.</p>
<p>On Android OS 2.2 and above, there is a new,  "passive" location provider that is enabled
at all times, even when the user disables both the GPS and Network location providers.
Therefore, this method always returns <code>true</code> on these devices.</p>
 */
Titanium.Geolocation.locationServicesEnabled = null;

/**
 * @property [pauseLocationUpdateAutomatically=false]
 * @type Boolean
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Indicates whether the location updates may be paused. Available in iOS 6.0 and later.</p>
 * @description <p>Allowing the location updates to be paused can improve battery life on the 
target device without sacrificing location data. When this property is set to YES, 
the location updates are paused (and powers down the appropriate hardware) at 
times when the location data is unlikely to change. For example, if the user stops 
for food while using a navigation app, the location manager might pause updates for 
a period of time. You can help the determination of when to pause location updates 
by assigning a value to the {@link Titanium.Geolocation#property-activityType activityType} property.</p>
 */
Titanium.Geolocation.pauseLocationUpdateAutomatically = null;

/**
 * @property [preferredProvider={@link Titanium.Geolocation#property-PROVIDER_NETWORK}]
 * @type String
 * @platform android 0.1
 * <p>Determines the preferred location provider, either
{@link Titanium.Geolocation#property-PROVIDER_GPS PROVIDER_GPS},
[PROVIDER_NETWORK](Titanium.Geolocation.PROVIDER_NETWORK],
or {@link Titanium.Geolocation#property-PROVIDER_PASSIVE PROVIDER_PASSIVE}.</p>
 * @description <p>Setting a preferred provider enables legacy location mode on Android.
Note that only a single provider can be active at one time in legacy mode.</p>
<p>The preferred provider affects power consumption. In general, <code>PROVIDER_GPS</code> 
requires the most power, and <code>PROVIDER_PASSIVE</code> requires the least.</p>
<p>If <code>undefined</code>, the preferred provider is auto-detected.</p>
 * @deprecated 2.0.0 <p>Android legacy mode operation is deprecated. For new development, use
 * either simple mode or manual mode. See "Configurating Location Updates on Android"
 * in the main description of this class for more information.</p>
 */
Titanium.Geolocation.preferredProvider = null;

/**
 * @property purpose
 * @type String
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Text to display in the permission dialog when requesting location
services.</p>
 * @description <p>This property informs the end user why location services are being requested by 
the application. This property is <strong>required</strong> starting in iOS 4.0.</p>
 */
Titanium.Geolocation.purpose = null;

/**
 * @property [showCalibration=true]
 * @type Boolean
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Determines whether the compass calibration UI is shown if needed.</p>
 * @description <p>Set to <code>false</code> to disable display of the compass calibration UI. This may result
in invalid heading data. </p>
 */
Titanium.Geolocation.showCalibration = null;

/**
 * @property [trackSignificantLocationChange=false]
 * @type Boolean
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
 * <p>Indicates if the location changes should be updated only when a significant change 
in location occurs.</p>
 * @description <p>The trackSignificantLocationChange service offers a low-power location service for 
devices with cellular radios.This service is available only in iOS 4.0 and later.
This service offers a significant power savings and provides accuracy that is good 
enough for most applications. It uses the device's cellular radio to determine the 
user's location  and report changes in that location, allowing the system to manage 
power usage much more aggressively than it could otherwise. This service is also 
capable of waking up an application that is currently suspended or not running in 
order to deliver new location data.</p>
 */
Titanium.Geolocation.trackSignificantLocationChange = null;

/**
 * @class Titanium.Gesture
 * @typestr Submodule of Titanium
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The Gesture module is responsible for high-level device gestures such as orientation changes 
and shake gestures.</p>
 */
Titanium.Gesture = {};



/**
 * @method getLandscape
 * <p>Gets the value of the {@link Titanium.Gesture#property-landscape landscape} property.</p>
 * @return {Boolean} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Gesture.getLandscape = function(){};

/**
 * @method getOrientation
 * <p>Gets the value of the {@link Titanium.Gesture#property-orientation orientation} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Gesture.getOrientation = function(){};

/**
 * @method getPortrait
 * <p>Gets the value of the {@link Titanium.Gesture#property-portrait portrait} property.</p>
 * @return {Boolean} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Gesture.getPortrait = function(){};

/**
 * @method isLandscape
 * <p>Returns whether current window is considered landscape by the device.</p>
 * @description <p>Value returns <code>true</code> if in landscape, and <code>false</code> otherwise.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Gesture.isLandscape = function(){};

/**
 * @method isPortrait
 * <p>Returns whether current window is considered portrait by the device.</p>
 * @description <p>Value returns <code>true</code> if in portrait, and <code>false</code> otherwise.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Gesture.isPortrait = function(){};

/**
 * @property landscape
 * @type Boolean
 * @readonly
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Indicates whether current window is considered landscape by the device.</p>
 * @description <p>Value is <code>true</code> if in landscape, and <code>false</code> otherwise. </p>
<p>On iOS, use {@link Titanium.Gesture#method-isLandscape isLandscape}.</p>
 */
Titanium.Gesture.landscape = null;

/**
 * @property orientation
 * @type Number
 * @readonly
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Orientation of the current window.</p>
 * @description <p>Value may be one of the group of {@link Titanium.UI} orientation constants, 
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
or {@link Titanium.UI#property-UNKNOWN}. </p>
<p>On iOS, returns the current orientation of the <em>device</em>, regardless of the screen
orientation. To determine the current screen orientation on iOS, use 
{@link Titanium.UI#property-orientation}. </p>
<p>On Android, Mobile Web and Tizen, returns the orientation of the current window, and never reports 
the "reverse" orientations (<code>LANDSCAPE_RIGHT</code> and <code>UPSIDE_PORTRAIT</code>). </p>
<p>For Mobile Web and Tizen, the orientation reported by <code>Gesture.orientation</code> and 
{@link Titanium.UI.Window#property-orientation Window.orientation} is always the same, and corresponds to 
the orientation of the browser window. </p>
<p>To set the <em>allowable</em> orientations for a window, see {@link Titanium.UI.Window#property-orientationModes}.</p>
 */
Titanium.Gesture.orientation = null;

/**
 * @property portrait
 * @type Boolean
 * @readonly
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Indicates whether current window is considered portrait by the device.</p>
 * @description <p>Value is <code>true</code> if in portrait, and <code>false</code> otherwise. </p>
<p>On iOS, use {@link Titanium.Gesture#method-isPortrait isPortrait}.</p>
 */
Titanium.Gesture.portrait = null;

/**
 * @class Titanium.IOStream
 * @typestr Object of Titanium
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>IOStream is the interface that all stream types implement.</p>
 * @description <p>See the {@link Titanium.Stream} module for related utility methods that support asynchronous
I/O.</p>
 * <h3>Examples</h3>
 * <h4>Write Data to a Stream</h4>
 * <p><p>This example demonstrates writing data to a stream.</p></p><pre>var outBuffer = Ti.createBuffer({data: "write me"});
var outStream = // stream object could be socket, file, buffer or blob

var bytesWritten = outStream.write(outBuffer);  // writes entire buffer to stream
Ti.API.info("Bytes written:" + bytesWritten);  // should be 8

bytesWritten = outStream.write(outBuffer, 2, 5);  // only writes "ite m" to stream
Ti.API.info("Bytes written:" + bytesWritten);  // should be 5</pre>
 * <h4>Read Data From a Stream</h4>
 * <p><p>This shows a simple example of reading data from a stream, one buffer full at a
time. </p></p><pre>var size = 0;
// read data one buffer full at a time
while ((size = instream.read(buffer)) &gt; -1) {
    // do something with the data here ...
    Ti.API.info("Read " + size + " bytes.");
}
</pre>
 * <h4>Read Data With Offset and Length</h4>
 * <p><p>This example shows how to read data from a stream into a buffer. We assume that
the <code>inStream</code> variable holds a previously initialized stream that contains the 
string, "World Titanium".</p></p><pre>var inBuffer = Ti.createBuffer({ value: "Hello [           ]" });

// Read the first 6 bytes from the stream to the buffer, starting at position 10.
var bytesRead = inStream.read(inBuffer, 10, 6);  

Ti.API.info("Bytes read: " + bytesRead);
Ti.API.info(inBuffer.toString());

// Read the next 8  bytes from the stream to the buffer, starting at position 8.
bytesRead = inStream.read(inBuffer, 8, 8);

Ti.API.info("Bytes read: " + bytesRead);
Ti.API.info(inBuffer.toString());
</pre>
 * <p><p>The second <code>read</code> overwrites the data from the first <code>read</code>, so the output looks
like this:</p></p><pre>[INFO] Bytes read: 6
[INFO] Hello [   World   ]
[INFO] Bytes read: 8
[INFO] Hello [ Titanium  ]</pre>
 */
Titanium.IOStream = {};

/**
 * @method close
 * <p>Closes this stream.</p>
 * @description <p>Throws an exception on error.</p>
 * @return void
*/
Titanium.IOStream.close = function(){};

/**
 * @method isReadable
 * <p>Indicates whether this stream is readable.</p>
 * @return {Boolean} <p>True if stream is readable, false otherwise.</p>
*/
Titanium.IOStream.isReadable = function(){};

/**
 * @method isWriteable
 * <p>Indicates whether this stream is writeable.</p>
 * @return {Boolean} <p>True if stream is writeable, false otherwise.</p>
*/
Titanium.IOStream.isWriteable = function(){};

/**
 * @method read
 * <p>Reads data from this stream into a buffer.</p>
 * @description <p>If <code>offset</code> and <code>length</code> are specified, data is written into the buffer starting at 
position <code>offset</code>. Data is read from this stream until one of the following occurs:</p>
<ul>
<li>the end of this stream is reached</li>
<li>the end of the buffer is reached</li>
<li>a total of <code>length</code> bytes have been read from the stream</li>
</ul>
<p>If <code>offset</code> and <code>length</code> are omitted, data is written starting at the beginning
of the buffer.</p>
<p>Returns the number of bytes read, or -1 if the end of stream was reached before
any data was read.</p>
<p>Throws an exception on error. For example, if the <code>offset</code> value is past
the last byte of <code>buffer</code>. </p>
<p>This method is synchronous. To perform an asynchronous read on an <code>IOStream</code>, use
{@link Titanium.Stream#method-read}.</p>
 * @param {Titanium.Buffer} buffer 
 * <p>Buffer to read stream data into.</p>
 * @param {Number} [offset=0] (optional)
 * <p>Offset into the buffer to start writing stream data.
If specified, <code>length</code> must also be specified.</p>
 * @param {Number} [length=Length of the supplied buffer.] (optional)
 * <p>Maximum number of bytes to read.
If specified, <code>offset</code> must also be specified.</p>
 * @return {Number} <p>Number of bytes read.</p>
*/
Titanium.IOStream.read = function(buffer, arg, arg){};

/**
 * @method write
 * <p>Writes data from a buffer to this stream.</p>
 * @description <p>If <code>offset</code> and <code>length</code> are specified, data is read from the buffer starting at
<code>offset</code>. Bytes are read from the buffer and written to the stream until:</p>
<ul>
<li>the end of the buffer is reached</li>
<li><code>length</code> bytes have been written</li>
<li>the stream returns an error</li>
</ul>
<p>If <code>offset</code> and <code>length</code> are omitted, all of the data in the buffer is written to
this stream.</p>
<p>Returns the number of bytes actually written.</p>
<p>Throws an exception if an error is encountered.</p>
 * @param {Titanium.Buffer} buffer 
 * <p>Buffer to write to this stream.</p>
 * @param {Number} [offset=0] (optional)
 * <p>Offset in the buffer of the first byte to write to the stream.
If specified, <code>length</code> must also be specified.</p>
 * @param {Number} [length=Length of the supplied buffer.] (optional)
 * <p>Maximum number of bytes to write to the stream.
If specified, <code>offset</code> must also be specified.</p>
 * @return {Number} <p>Number of bytes written.</p>
*/
Titanium.IOStream.write = function(buffer, arg, arg){};

/**
 * @class Titanium.Locale
 * @typestr Submodule of Titanium
 * @platform android 1.5
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level Locale module.</p>
 * @description <p>The <code>Locale</code> module works with localization files to which are generated during compilation 
into the operating system specific localization formats. The <code>Locale</code> module provides 
locale-specific strings which can be referenced at runtime.  Additionally, the module 
contains a few methods and properties for querying device locale information.</p>
<p>The macro <code>L</code> can be used as an alias for the {@link Titanium.Locale#method-getString} method.</p>
 */
Titanium.Locale = {};

/**
 * @method formatTelephoneNumber
 * <p>Formats a telephone number according to the current system locale.</p>
 * @param {String} number 
 * <p>Phone number.</p>
 * @return {String} 
 * @platform android 1.5
 * @platform tizen 3.1
*/
Titanium.Locale.formatTelephoneNumber = function(number){};

/**
 * @method getCurrencyCode
 * <p>Returns the ISO 3-letter currency code for the specified locale.</p>
 * @description <p>This method returns one of the ISO 4217 currency codes. For example, 
<code>getCurrencyCode('en-US')</code> returns <code>USD</code>. See the <code>xe.com</code> website 
<a href="http://www.xe.com/iso4217.php#section2">Currency List</a> section of the <code>www.xe.com</code> website for 
reference.</p>
 * @param {String} locale 
 * <p>Locale, as a combination of ISO 2-letter language and country codes. For example, 
<code>en-US</code> or <code>en-GB</code>. See the 
<a href="http://en.wikipedia.org/wiki/ISO_639-1">ISO 639-1</a> and 
<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> 
sections of wikipedia for reference.</p>
 * @return {String} 
 * @platform android 1.5
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform tizen 3.1
*/
Titanium.Locale.getCurrencyCode = function(locale){};

/**
 * @method getCurrencySymbol
 * <p>Returns the currency symbol for the specified currency code.</p>
 * @description <p>This method returns one of the international currency symbols. For example, 
<code>getCurrencySymbol('USD')</code> returns <code>$</code>. See the 
<a href="http://www.xe.com/symbols.php#section2">Currency Symbols</a> section of the 
<code>www.xe.com</code> website for reference.</p>
 * @param {String} currencyCode 
 * <p>Currency, as an ISO 3-letter code. For example, <code>USD</code> or <code>GBP</code>. See the 
<a href="http://www.xe.com/iso4217.php#section2">Currency List</a> section of the <code>www.xe.com</code> website for 
reference.</p>
 * @return {String} 
 * @platform android 1.5
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform tizen 3.1
*/
Titanium.Locale.getCurrencySymbol = function(currencyCode){};

/**
 * @method getCurrentCountry
 * <p>Gets the value of the {@link Titanium.Locale#property-currentCountry currentCountry} property.</p>
 * @return {String} 
 * @platform android 1.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Locale.getCurrentCountry = function(){};

/**
 * @method getCurrentLanguage
 * <p>Gets the value of the {@link Titanium.Locale#property-currentLanguage currentLanguage} property.</p>
 * @return {String} 
*/
Titanium.Locale.getCurrentLanguage = function(){};

/**
 * @method getCurrentLocale
 * <p>Gets the value of the {@link Titanium.Locale#property-currentLocale currentLocale} property.</p>
 * @return {String} 
*/
Titanium.Locale.getCurrentLocale = function(){};

/**
 * @method getLocaleCurrencySymbol
 * <p>Returns the currency symbol for the specified locale.</p>
 * @description <p>This method returns one of the international currency symbols. For example, 
<code>getLocaleCurrencySymbol('en-US')</code> returns <code>$</code>. See the 
<a href="http://www.xe.com/symbols.php#section2">Currency Symbols</a> section of the 
<code>www.xe.com</code> website for reference.</p>
 * @param {String} locale 
 * <p>Locale, as a combination of ISO 2-letter language and country codes. For example, 
<code>en-US</code> or <code>en-GB</code>. See the 
<a href="http://en.wikipedia.org/wiki/ISO_639-1">ISO 639-1</a> and 
<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> 
sections of wikipedia for reference.</p>
 * @return {String} 
 * @platform android 1.5
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform tizen 3.1
*/
Titanium.Locale.getLocaleCurrencySymbol = function(locale){};

/**
 * @method getString
 * <p>Returns a string, localized according to the current system locale using the appropriate 
<code>/i18n/LANG/strings.xml</code> localization file.</p>
 * @description <p>This method is functionaly identical to its alias {@link Global#method-L}. For example, 
<code>Ti.Locale.getString('thisKey', 'missing key')</code> produces the same result as 
<code>L('thisKey', 'missing key')</code>.</p>
<p>When using with {@link Global.String#method-format} to localize a phrase with multiple string 
substitution placeholders, add the <code>formatted="false"</code> directive to the relevant 
<code>strings.xml</code> element. See example for a demonstration.</p>
 * <h3>Example</h3>
 * <h4>String Localization Demonstration</h4>
 * <p><p>Localize two strings, "hello" and "goodbye" (using the keys "greeting" and "signoff") 
for English and Spanish system locales.  </p>
<p>Note: use the device's system settings to change locales and test this code.</p>
<h4><code>/i18n/en/strings.xml</code></h4></p><pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;resources&gt;
  &lt;string name="phrase" formatted="false"&gt;You say %2$s and I say %1$s!&lt;/string&gt;
  &lt;string name="greeting"&gt;hello&lt;/string&gt;
  &lt;string name="signoff"&gt;goodbye&lt;/string&gt;
&lt;/resources&gt;
</pre>
 * <p><h4><code>/i18n/es/strings.xml</code></h4></p><pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;resources&gt;
  &lt;string name="phrase" formatted="false"&gt;You say %2$s and I say %1$s!&lt;/string&gt;
  &lt;string name="greeting"&gt;hola&lt;/string&gt;
  &lt;string name="signoff"&gt;adios&lt;/string&gt;
&lt;/resources&gt;
</pre>
 * <p><h4><code>/Resources/app.js</code></h4></p><pre>var i18nMissingMsg = '&lt;no translation available&gt;';

// for English locales, displays "You say goodbye and I say hello!"
// for Spanish locales, displays "You say adios and I say hola!"
Ti.API.info('You say ' + Ti.Locale.getString('signoff', i18nMissingMsg) + ' and I say ' + Ti.Locale.getString('greeting', i18nMissingMsg) + '!');

// uses alias L() instead of Ti.Locale.getString()
// formatted="false" is used in the strings.xml element for multiple string substitution
// for English locales, displays "You say goodbye and I say hello!"
// for Spanish locales, displays "You say adios and I say hola!"
Ti.API.info(String.format(L('phrase'), L('greeting', i18nMissingMsg), L('signoff', i18nMissingMsg)));</pre>
 * @param {String} key 
 * <p>Key of string.</p>
 * @param {String} hint (optional)
 * <p>Text to return if key does not exist in the localization file.</p>
 * @return {String} 
*/
Titanium.Locale.getString = function(key, hint){};

/**
 * @property currentCountry
 * @type String
 * @readonly
 * @platform android 1.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Country of the current system locale, as an ISO 2-letter code.</p>
 * @description <p>This property holds a value such as <code>US</code> or <code>GB</code>. See the 
<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> 
country codes section of wikipedia for reference.</p>
 */
Titanium.Locale.currentCountry = null;

/**
 * @property currentLanguage
 * @type String
 * @readonly
 * <p>Language of the current system locale, as an ISO 2-letter code.</p>
 * @description <p>This property holds a value such as <code>en</code> or <code>fr</code>. See the 
<a href="http://en.wikipedia.org/wiki/ISO_639-1">ISO 639-1</a> section of wikipedia for reference.</p>
 */
Titanium.Locale.currentLanguage = null;

/**
 * @property currentLocale
 * @type String
 * @readonly
 * <p>Current system locale, as a combination of ISO 2-letter language and country codes.</p>
 * @description <p>This property holds a value such as <code>en-US</code> or <code>en-GB</code>.
See the <a href="http://en.wikipedia.org/wiki/ISO_639-1">ISO 639-1</a> and 
<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> 
sections of wikipedia for reference.</p>
 */
Titanium.Locale.currentLocale = null;

/**
 * @class Titanium.Map
 * @typestr Submodule of Titanium
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level Map module.  The Map module is used for creating in-application native maps.</p>
 * @description <h4>Android Platform Notes</h4>
<p>This module provides native map support using Google Maps API v1. As of March 3, 2013,
Google is no longer issuing Google Maps API v1 keys and this module can no longer be used to
support native maps on Android unless you have these keys.</p>
<p>For new Android applications, use the {@link Modules.Map Google Maps v2 add-on module}
to add native maps support for your application. If you have an application that still uses the old keys,
you can either transition to the new module or continue using the built-in Titanium.Maps module.</p>
 * <h3>Examples</h3>
 * <h4>Map Example</h4>
 * <p><p>This is a basic map example that places a custom annotation on the map, and 
listens for click events on the annotation. </p>
<p>In this example, a custom property (<code>myid</code>) is added to the annotation object.
While adding custom members to a Titanium object is not generally recommended,
in this case it provides a mechanism for uniquely identifying an annotation. This
can be useful, for example, if the annotations are dynamically generated 
and it is not practical to identify them by title.</p></p><pre>var win = Titanium.UI.createWindow();

var mountainView = Titanium.Map.createAnnotation({
latitude:37.390749,
longitude:-122.081651,
title:"Appcelerator Headquarters",
subtitle:'Mountain View, CA',
pincolor:Titanium.Map.ANNOTATION_RED,
animate:true,
leftButton: '../images/appcelerator_small.png',
myid:1 // Custom property to uniquely identify this annotation.
});

var mapview = Titanium.Map.createView({
mapType: Titanium.Map.STANDARD_TYPE,
region: {latitude:33.74511, longitude:-84.38993, 
latitudeDelta:0.01, longitudeDelta:0.01},
animate:true,
regionFit:true,
userLocation:true,
annotations:[mountainView]
});

win.add(mapview);
// Handle click events on any annotations on this map.
mapview.addEventListener('click', function(evt) {

    Ti.API.info("Annotation " + evt.title + " clicked, id: " + evt.annotation.myid);

    // Check for all of the possible names that clicksouce
    // can report for the left button/view.
    if (evt.clicksource == 'leftButton' || evt.clicksource == 'leftPane' ||
        evt.clicksource == 'leftView') {
        Ti.API.info("Annotation " + evt.title + ", left button clicked.");
    }
});
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>index.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win"&gt;

        &lt;!-- Note the ns attribute is used to change the default namespace. --&gt;
        &lt;View id="mapview" ns="Ti.Map" onClick="doClick"
            animate="true" regionFit="true" userLocation="true"
            mapType="Ti.Map.STANDARD_TYPE" &gt;

            &lt;Annotation id="mountainView"
              latitude="37.390749" longitude="-122.081651"
              title="Appcelerator Headquarters" subtitle="Mountain View, CA"
              pincolor="Titanium.Map.ANNOTATION_RED"
              leftButton="/images/appcelerator_small.png"
              myid="1"/&gt;

            &lt;!-- Place other child views here, such as an ImageView to add an overlay. --&gt;

        &lt;/View&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>index.js:</p></p><pre>function doClick(evt){
    Ti.API.info("Annotation " + evt.title + " clicked, id: " + evt.annotation.myid);

    // Check for all of the possible names that clicksouce
    // can report for the left button/view.
    if (evt.clicksource == 'leftButton' || evt.clicksource == 'leftPane' ||
        evt.clicksource == 'leftView') {
        Ti.API.info("Annotation " + evt.title + ", left button clicked.");
    }
};

// These parameters can also be defined in the TSS file.
$.mapview.annotations = [$.mountainView];
$.mapview.region = {latitude:37.390749, longitude:-122.081651, latitudeDelta:0.01, longitudeDelta:0.01};

$.win.open</pre>
 */
Titanium.Map = {};

/**
 * @class Titanium.Map.Annotation
 * @typestr Object of Titanium.Map
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>Represents a labeled point of interest on the map that the user can click on.</p>
 * @description <p>The <code>Annotation</code> object gives you low-level control over annotations that can be added to 
{@link Titanium.Map.View map view}. An annotation must have its <code>latitude</code> and <code>longitude</code>
properties set to appear on a map.</p>
<p>An annotation can also have a title, a subtitle, and two inset buttons or views on the left
and right side of the title. All of these items are optional.</p>
<p>The controls on the left and right side of the annotation can be specified in one of two
ways:</p>
<ul>
<li>
<p>To display an image, set the {@link Titanium.Map.Annotation#property-leftButton leftButton} or 
  {@link Titanium.Map.Annotation#property-rightButton rightButton} property to an image URL. (On 
  iOS, you can also use a {@link Titanium.UI.iPhone.SystemButton SystemButton} constant 
  to use one of the native system button icons.) </p>
</li>
<li>
<p>To add another type of view to the annotation, set the 
  {@link Titanium.Map.Annotation#property-leftView leftView} or 
  {@link Titanium.Map.Annotation#property-rightView rightView} property to a {@link Titanium.UI.View View}
  object.</p>
</li>
</ul>
<p><code>leftButton</code> and <code>leftView</code> are mutually exclusive, as are <code>rightButton</code> and
<code>rightView</code>. </p>
<p>An annotation has two states: selected and deselected. A deselected annotation
is marked by a pin image. When the user selects the pin, the full annotation is 
displayed.</p>
<p>You can specify a custom image for the map pin by setting the
{@link Titanium.Map.Annotation#property-image image} property. </p>
<p>When the user clicks on an annotation, a <code>click</code> event is generated. </p>
<p>On iOS, You can add a click event listener to a specific annotation, or add a 
click event listener to the map view to receive click events from all annotations 
on the map.</p>
<p>On Android, you must add the click event listener to the map view; the annotation
itself does not generate these events. </p>
<p>Use the {@link Titanium.Map#method-createAnnotation} method to create an annotation.</p>
 */
Titanium.Map.Annotation = {};


/**
 * @method getAnimate
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-animate animate} property.</p>
 * @return {Boolean} 
*/
Titanium.Map.Annotation.getAnimate = function(){};

/**
 * @method getCustomView
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-customView customView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Map.Annotation.getCustomView = function(){};

/**
 * @method getDraggable
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-draggable draggable} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.Map.Annotation.getDraggable = function(){};

/**
 * @method getImage
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-image image} property.</p>
 * @return {String/Titanium.Blob} 
*/
Titanium.Map.Annotation.getImage = function(){};

/**
 * @method getLatitude
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-latitude latitude} property.</p>
 * @return {Number} 
*/
Titanium.Map.Annotation.getLatitude = function(){};

/**
 * @method getLeftButton
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-leftButton leftButton} property.</p>
 * @return {Number/String} 
*/
Titanium.Map.Annotation.getLeftButton = function(){};

/**
 * @method getLeftView
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-leftView leftView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Map.Annotation.getLeftView = function(){};

/**
 * @method getLongitude
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-longitude longitude} property.</p>
 * @return {Number} 
*/
Titanium.Map.Annotation.getLongitude = function(){};

/**
 * @method getPinImage
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-pinImage pinImage} property.</p>
 * @deprecated 1.4
 * @return {String} 
 * @platform android 0.9
*/
Titanium.Map.Annotation.getPinImage = function(){};

/**
 * @method getPincolor
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-pincolor pincolor} property.</p>
 * @return {Number} 
*/
Titanium.Map.Annotation.getPincolor = function(){};

/**
 * @method getRightButton
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-rightButton rightButton} property.</p>
 * @return {Number/String} 
*/
Titanium.Map.Annotation.getRightButton = function(){};

/**
 * @method getRightView
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-rightView rightView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Map.Annotation.getRightView = function(){};

/**
 * @method getSubtitle
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-subtitle subtitle} property.</p>
 * @return {String} 
*/
Titanium.Map.Annotation.getSubtitle = function(){};

/**
 * @method getSubtitleid
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-subtitleid subtitleid} property.</p>
 * @return {String} 
*/
Titanium.Map.Annotation.getSubtitleid = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-title title} property.</p>
 * @return {String} 
*/
Titanium.Map.Annotation.getTitle = function(){};

/**
 * @method getTitleid
 * <p>Gets the value of the {@link Titanium.Map.Annotation#property-titleid titleid} property.</p>
 * @return {String} 
*/
Titanium.Map.Annotation.getTitleid = function(){};

/**
 * @method setAnimate
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-animate animate} property.</p>
 * @param {Boolean} animate 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setAnimate = function(animate){};

/**
 * @method setCustomView
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-customView customView} property.</p>
 * @param {Titanium.UI.View} customView 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.Map.Annotation.setCustomView = function(customView){};

/**
 * @method setDraggable
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-draggable draggable} property.</p>
 * @param {Boolean} draggable 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.Map.Annotation.setDraggable = function(draggable){};

/**
 * @method setImage
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-image image} property.</p>
 * @param {String/Titanium.Blob} image 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setImage = function(image){};

/**
 * @method setLatitude
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-latitude latitude} property.</p>
 * @param {Number} latitude 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setLatitude = function(latitude){};

/**
 * @method setLeftButton
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-leftButton leftButton} property.</p>
 * @param {Number/String} leftButton 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setLeftButton = function(leftButton){};

/**
 * @method setLeftView
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-leftView leftView} property.</p>
 * @param {Titanium.UI.View} leftView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Map.Annotation.setLeftView = function(leftView){};

/**
 * @method setLongitude
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-longitude longitude} property.</p>
 * @param {Number} longitude 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setLongitude = function(longitude){};

/**
 * @method setPinImage
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-pinImage pinImage} property.</p>
 * @deprecated 1.4
 * @param {String} pinImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.Map.Annotation.setPinImage = function(pinImage){};

/**
 * @method setPincolor
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-pincolor pincolor} property.</p>
 * @param {Number} pincolor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setPincolor = function(pincolor){};

/**
 * @method setRightButton
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-rightButton rightButton} property.</p>
 * @param {Number/String} rightButton 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setRightButton = function(rightButton){};

/**
 * @method setRightView
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-rightView rightView} property.</p>
 * @param {Titanium.UI.View} rightView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Map.Annotation.setRightView = function(rightView){};

/**
 * @method setSubtitle
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-subtitle subtitle} property.</p>
 * @param {String} subtitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setSubtitle = function(subtitle){};

/**
 * @method setSubtitleid
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-subtitleid subtitleid} property.</p>
 * @param {String} subtitleid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setSubtitleid = function(subtitleid){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setTitle = function(title){};

/**
 * @method setTitleid
 * <p>Sets the value of the {@link Titanium.Map.Annotation#property-titleid titleid} property.</p>
 * @param {String} titleid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.Annotation.setTitleid = function(titleid){};

/**
 * @property animate
 * @type Boolean
 * <p>Boolean to indicate whether the pin should animate when dropped.</p>
 * @description <p>Must be set before the annotation is added to the map view.</p>
 */
Titanium.Map.Annotation.animate = null;

/**
 * @property customView
 * @type Titanium.UI.View
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Defines a custom view to be used by the annotation.</p>
 * @description <p>A custom View to display for the annotation. <strong>User interaction is disabled on the view.</strong>
No view interaction events (click, touchstart etc) will be fired.</p>
 */
Titanium.Map.Annotation.customView = null;

/**
 * @property [draggable=false]
 * @type Boolean
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Determines whether the pin can be dragged by the user.</p>
 * @description <p>Must be set before the annotation is added to the map view.</p>
 */
Titanium.Map.Annotation.draggable = null;

/**
 * @property [image=If not specified, a standard map pin image is used.]
 * @type String/Titanium.Blob
 * <p>Image to use for the the pin.</p>
 * @description <p>The image can be specified using a local URL or an image <code>Blob</code>. This is ignored if the customView property is set.</p>
 */
Titanium.Map.Annotation.image = null;

/**
 * @property latitude
 * @type Number
 * <p>Latitude of the annotation, in decimal degrees.</p>
 */
Titanium.Map.Annotation.latitude = null;

/**
 * @property leftButton
 * @type Number/String
 * <p>Left button image on the annotation, specified as an image URL or an iOS
button constant.</p>
 * @description <p>On iOS, you can specify a system button icon using one of the
{@link Titanium.UI.iPhone.SystemButton SystemButton} constants:</p>
<pre><code>myAnnotation.leftButton = Titanium.UI.iPhone.SystemButton.INFO_LIGHT;
</code></pre>
<p>Mutually exclusive with <code>leftView</code>.</p>
 */
Titanium.Map.Annotation.leftButton = null;

/**
 * @property leftView
 * @type Titanium.UI.View
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Left view that is displayed on the annotation.</p>
 * @description <p>Mutually exclusive with <code>leftButton</code>.</p>
 */
Titanium.Map.Annotation.leftView = null;

/**
 * @property longitude
 * @type Number
 * <p>Longitude of the annotation, in decimal degrees.</p>
 */
Titanium.Map.Annotation.longitude = null;

/**
 * @property pinImage
 * @type String
 * @platform android 0.9
 * <p>Image for the pin instead of the default image.</p>
 * @deprecated 1.4 <p>Use {@link Titanium.Map.Annotation#property-image} property instead.</p>
 */
Titanium.Map.Annotation.pinImage = null;

/**
 * @property pincolor
 * @type Number
 * <p>Pin color. Specify one of: {@link Titanium.Map#property-ANNOTATION_GREEN}, {@link Titanium.Map#property-ANNOTATION_PURPLE} 
or {@link Titanium.Map#property-ANNOTATION_RED}.</p>
 * @description <p>Pin color is ignored if a custom pin image is specified using {@link Titanium.Map.Annotation#property-image}.</p>
 */
Titanium.Map.Annotation.pincolor = null;

/**
 * @property rightButton
 * @type Number/String
 * <p>Right button image on the annotation, specified as an image URL or an iOS
button constant.</p>
 * @description <p>On iOS, you can specify a system button icon using one of the
{@link Titanium.UI.iPhone.SystemButton SystemButton} constants.</p>
<p>Mutually exclusive with <code>rightView</code>.</p>
 */
Titanium.Map.Annotation.rightButton = null;

/**
 * @property rightView
 * @type Titanium.UI.View
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Right view that is displayed on the annotation.</p>
 * @description <p>Mutually exclusive with <code>rightButton</code>.</p>
 */
Titanium.Map.Annotation.rightView = null;

/**
 * @property subtitle
 * @type String
 * <p>Secondary title of the annotation view.</p>
 */
Titanium.Map.Annotation.subtitle = null;

/**
 * @property subtitleid
 * @type String
 * <p>Key in the locale file to use for the subtitle property.</p>
 */
Titanium.Map.Annotation.subtitleid = null;

/**
 * @property title
 * @type String
 * <p>Primary title of the annotation view.</p>
 */
Titanium.Map.Annotation.title = null;

/**
 * @property titleid
 * @type String
 * <p>Key in the locale file to use for the title property.</p>
 */
Titanium.Map.Annotation.titleid = null;

/**
 * @class Titanium.Map.View
 * @typestr Object of Titanium.Map
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>Map view is used for embedding native mapping capabilities as a view in your application.</p>
 * @description <p>With native maps, you can control the mapping location, the type of map, the zoom level 
and you can add custom annotations directly to the map. Once the map view is
displayed, the user can pan and zoom the map using the native control gestures.</p>
<p>Use the {@link Titanium.Map#method-createView} method to create a map view.</p>
<p>All latitude and longitude values are specified in decimal degrees. Values in degrees,
minutes and seconds (DMS) must be converted to decimal degrees before being passed to
the map view.</p>
<p>You can add {@link Titanium.Map.Annotation Annotation} objects to the map to mark points of
interest. An annotation has two states: selected and deselected. A deselected annotation 
is marked by a pin image. When selected, the full annotation is displayed, typically
including a title, an optional subtitle, and one or more images.</p>
<h4>Android Platform Notes</h4>
<p>On Android, this module requires a Google Maps API v1 key. As of March 3, 2013,
Google is no longer issuing Maps API v1 keys.  If you want to add native maps support
to your Android application, you need to use the {@link Modules.Map Google Maps v2 module}.</p>
<p>Android supports only a <strong>single</strong> map view per application. This limitation is
imposed by Android, not by Titanium. Attempting to add a second map view results in
an exception being thrown.</p>
<p>If you have a Maps API v1 key, edit your <code>tiapp.xml</code> file and add your new key as the
value for the  <code>ti.android.google.map.api.key.production</code> property.</p>
<p>A development API key is included in the default <code>tiapp.xml</code> file. You can use this
key for development and testing as long as you are building your application with the 
default Titanium development keystore.</p>
<h4>iOS Platform Notes</h4>
<p>On iOS, you cannot call any methods on a map view until it has been added to a view.</p>
<p>In addition to annotations, iOS supports adding routes to a map view, using
{@link Titanium.Map.View#method-addRoute addRoute}.</p>
<h4>Mobile Web and Tizen Platform Notes</h4>
<p>For Mobile Web and Tizen, the default map provider is Google. Google Maps does not require you to obtain an API key,
however it is encouraged that you use an API key so that you can monitor your Maps API usage. You can sign
up for the Maps API key on the Google Code web site:</p>
<ul>
<li><a href="https://developers.google.com/maps/signup">developers.google.com/maps/signup</a></li>
</ul>
<p>If you get a Maps API key, edit your <code>tiapp.xml</code> file and add your new key as the
value for the <code>&lt;mobileweb&gt;&lt;map&gt;&lt;apikey&gt;</code> tag.</p>
<pre><code>&lt;mobileweb&gt;
    &lt;map&gt;
        &lt;apikey&gt;[key goes here]&lt;/apikey&gt;
    &lt;/map&gt;
&lt;/mobileweb&gt;
</code></pre>
 */
Titanium.Map.View = {};





















/**
 * @method addAnnotation
 * <p>Adds a new annotation to the map.</p>
 * @param {Object/Titanium.Map.Annotation} annotation 
 * <p>Either a dictionary of properties for the annotation or a {@link Titanium.Map.Annotation} instance.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.addAnnotation = function(annotation){};

/**
 * @method addAnnotations
 * <p>Adds one or more new annotations to the map.</p>
 * @param {Titanium.Map.Annotation[]/Object[]} annotations 
 * <p>Array of {@link Titanium.Map.Annotation Annotation} objects, or an array of
dictionaries describing of properties for the annotation.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.addAnnotations = function(annotations){};

/**
 * @method addRoute
 * <p>Adds a route to the map.</p>
 * @param {MapRouteType} route 
 * <p>Simple dictionary object describing the route.</p>
 * @return void
 * @platform android 2.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.addRoute = function(route){};

/**
 * @method deselectAnnotation
 * <p>Deselects the specified annotation, so the main annotation is hidden and only
a pin image is shown.</p>
 * @param {String/Titanium.Map.Annotation} annotation 
 * <p>Annotation to deselect, identified by an annotation title or a {@link Titanium.Map.Annotation} reference.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.deselectAnnotation = function(annotation){};

/**
 * @method getAnimate
 * <p>Gets the value of the {@link Titanium.Map.View#method-animate animate} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Map.View.getAnimate = function(){};

/**
 * @method getAnimated
 * <p>Gets the value of the {@link Titanium.Map.View#property-animated animated} property.</p>
 * @return {Boolean} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.getAnimated = function(){};

/**
 * @method getAnnotations
 * <p>Gets the value of the {@link Titanium.Map.View#property-annotations annotations} property.</p>
 * @return {Titanium.Map.Annotation[]} 
*/
Titanium.Map.View.getAnnotations = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.Map.View.getEnabled = function(){};

/**
 * @method getHideAnnotationWhenTouchMap
 * <p>Gets the value of the {@link Titanium.Map.View#property-hideAnnotationWhenTouchMap hideAnnotationWhenTouchMap} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.Map.View.getHideAnnotationWhenTouchMap = function(){};

/**
 * @method getLatitudeDelta
 * <p>Gets the value of the {@link Titanium.Map.View#property-latitudeDelta latitudeDelta} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.getLatitudeDelta = function(){};

/**
 * @method getLongitudeDelta
 * <p>Gets the value of the {@link Titanium.Map.View#property-longitudeDelta longitudeDelta} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.getLongitudeDelta = function(){};

/**
 * @method getMapType
 * <p>Gets the value of the {@link Titanium.Map.View#property-mapType mapType} property.</p>
 * @return {Number} 
*/
Titanium.Map.View.getMapType = function(){};

/**
 * @method getRegion
 * <p>Gets the value of the {@link Titanium.Map.View#property-region region} property.</p>
 * @return {MapRegionType} 
*/
Titanium.Map.View.getRegion = function(){};

/**
 * @method getRegionFit
 * <p>Gets the value of the {@link Titanium.Map.View#property-regionFit regionFit} property.</p>
 * @return {Boolean} 
*/
Titanium.Map.View.getRegionFit = function(){};

/**
 * @method getUserLocation
 * <p>Gets the value of the {@link Titanium.Map.View#property-userLocation userLocation} property.</p>
 * @return {Boolean} 
*/
Titanium.Map.View.getUserLocation = function(){};

/**
 * @method removeAllAnnotations
 * <p>Removes all annotations from the map.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.removeAllAnnotations = function(){};

/**
 * @method removeAnnotation
 * <p>Removes an existing annotation from the map.</p>
 * @param {String/Titanium.Map.Annotation} annotation 
 * <p>Annotation to remove, identified by an annotation title or a {@link Titanium.Map.Annotation} reference.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.removeAnnotation = function(annotation){};

/**
 * @method removeAnnotations
 * <p>Removes one or more existing annotations from the map.</p>
 * @description <p>Annotations can be identified by title or by a {@link Titanium.Map.Annotation}
reference.</p>
 * @param {String[]/Titanium.Map.Annotation[]} annotations 
 * <p>Array of annotations to remove.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.removeAnnotations = function(annotations){};

/**
 * @method removeRoute
 * <p>Remove a previously added route.</p>
 * @param {MapRouteType} route 
 * <p>Same route object passed to {@link Titanium.Map.View#method-addRoute addRoute}.</p>
 * @return void
 * @platform android 2.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.removeRoute = function(route){};

/**
 * @method selectAnnotation
 * <p>Selects the annoation, showing the full annotation.</p>
 * @param {String/Titanium.Map.Annotation} annotation 
 * <p>Annotation to show, identified by an annotation title or a {@link Titanium.Map.Annotation} reference.</p>
 * @return void
*/
Titanium.Map.View.selectAnnotation = function(annotation){};

/**
 * @method setAnimate
 * <p>Sets the value of the {@link Titanium.Map.View#method-animate animate} property.</p>
 * @param {Boolean} animate 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.Map.View.setAnimate = function(animate){};

/**
 * @method setAnimated
 * <p>Sets the value of the {@link Titanium.Map.View#property-animated animated} property.</p>
 * @param {Boolean} animated 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.View.setAnimated = function(animated){};

/**
 * @method setAnnotations
 * <p>Sets the value of the {@link Titanium.Map.View#property-annotations annotations} property.</p>
 * @param {Titanium.Map.Annotation[]} annotations 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.View.setAnnotations = function(annotations){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.Map.View.setEnabled = function(){};

/**
 * @method setHideAnnotationWhenTouchMap
 * <p>Sets the value of the {@link Titanium.Map.View#property-hideAnnotationWhenTouchMap hideAnnotationWhenTouchMap} property.</p>
 * @param {Boolean} hideAnnotationWhenTouchMap 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.Map.View.setHideAnnotationWhenTouchMap = function(hideAnnotationWhenTouchMap){};

/**
 * @method setLocation
 * <p>Sets the map location and zoom level.</p>
 * @description <p>Location is set using a simple dictionary object, described in {@link MapLocationType}.
For example:</p>
<pre><code> myMapView.setLocation({
    latitude:37.337681, longitude:-122.038193, animate:true,
    latitudeDelta:0.04, longitudeDelta:0.04});
</code></pre>
 * @param {MapLocationType} location 
 * <p>Dictionary specifying the location and the zoom level for the map.</p>
 * @return void
*/
Titanium.Map.View.setLocation = function(location){};

/**
 * @method setMapType
 * <p>Sets the type of map (satellite, hybrid, or standard).</p>
 * @param {Number} mapType 
 * <p>Map type constant, either {@link Titanium.Map#property-STANDARD_TYPE}, {@link Titanium.Map#property-SATELLITE_TYPE} or 
{@link Titanium.Map#property-HYBRID_TYPE}.</p>
 * @return void
*/
Titanium.Map.View.setMapType = function(mapType){};

/**
 * @method setRegion
 * <p>Sets the value of the {@link Titanium.Map.View#property-region region} property.</p>
 * @param {MapRegionType} region 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.View.setRegion = function(region){};

/**
 * @method setRegionFit
 * <p>Sets the value of the {@link Titanium.Map.View#property-regionFit regionFit} property.</p>
 * @param {Boolean} regionFit 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.View.setRegionFit = function(regionFit){};

/**
 * @method setUserLocation
 * <p>Sets the value of the {@link Titanium.Map.View#property-userLocation userLocation} property.</p>
 * @param {Boolean} userLocation 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Map.View.setUserLocation = function(userLocation){};

/**
 * @method zoom
 * <p>Zooms in or out of the map.</p>
 * @description <p>Zooms in or out by specifying a relative zoom level. A positive value increases
the current zoom level and a negative value decreases the zoom level.</p>
<p>Each increase in zoom level increases the magnification by a factor of two.</p>
 * @param {Number} level 
 * <p>Relative zoom level (positive to zoom in, negative to zoom out).</p>
 * @return void
*/
Titanium.Map.View.zoom = function(level){};

/**
 * @property animate
 * @type Boolean
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Indicates if changes to the mapping region should be animated.</p>
 */
Titanium.Map.View.animate = null;

/**
 * @property animated
 * @type Boolean
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Indicates if changes to the mapping region should be animated.</p>
 */
Titanium.Map.View.animated = null;

/**
 * @property annotations
 * @type Titanium.Map.Annotation[]
 * <p>An array of annotations to add to the map.</p>
 * @description <p>There is no guarantee that the order of elements in the <code>annotations</code> property will be 
maintained when creating, adding or deleting annotations from the Ti.Map.View object.
If the application depends on the annotations being in a set order, it should keep 
references to all of the annotations in a separate array.</p>
 */
Titanium.Map.View.annotations = null;

/**
 * @property enabled 
 * @hide
*/Titanium.Map.View.enabled = null;

/**
 * @property [hideAnnotationWhenTouchMap=false]
 * @type Boolean
 * @platform android 3.0
 * <p>Hide the annotation when clicking in the map view outside of the annotation.</p>
 * @description <p>If 'false', the user deselects an annotation by clicking on the annotation pin.
If 'true', the user deselects an annotation by clicking in the map view outside of the annotation.</p>
 */
Titanium.Map.View.hideAnnotationWhenTouchMap = null;

/**
 * @property latitudeDelta
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>The amount of north-to-south distance displayed on the map, measured in decimal degrees.</p>
 */
Titanium.Map.View.latitudeDelta = null;

/**
 * @property longitudeDelta
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>The amount of east-to-west distance displayed on the map, measured in decimal degrees.</p>
 */
Titanium.Map.View.longitudeDelta = null;

/**
 * @property mapType
 * @type Number
 * <p>Map type, either: {@link Titanium.Map#property-STANDARD_TYPE}, {@link Titanium.Map#property-SATELLITE_TYPE} or {@link Titanium.Map#property-HYBRID_TYPE}.</p>
 */
Titanium.Map.View.mapType = null;

/**
 * @property region
 * @type MapRegionType
 * <p>A dictionary specifying the location and zoom level of the map.</p>
 */
Titanium.Map.View.region = null;

/**
 * @property regionFit
 * @type Boolean
 * <p>Boolean indicating if the map region should be modified 
to fit the map view's aspect ratio.</p>
 * @description <p>If <code>true</code>, the specified region is modified to fit the aspect ratio of the
map view, while remaining centered on the same point.</p>
 */
Titanium.Map.View.regionFit = null;

/**
 * @property userLocation
 * @type Boolean
 * <p>Boolean indicating if the user's current device location should be shown on the
map.</p>
 * @description <p>If <code>true</code>, the user's location is marked with a pin. </p>
 */
Titanium.Map.View.userLocation = null;

/**
 * @method createAnnotation
 * <p>Creates and returns an instance of {@link Titanium.Map.Annotation}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Map.Annotation} except those marked not-creation or read-only.</p>
 * @return {Titanium.Map.Annotation} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.createAnnotation = function(parameters){};

/**
 * @method createView
 * <p>Creates and returns an instance of {@link Titanium.Map.View}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Map.View} except those marked not-creation or read-only.</p>
 * @return {Titanium.Map.View} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Map.createView = function(parameters){};

/**
 * @property ANNOTATION_DRAG_STATE_CANCEL
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Used in the {@link Titanium.Map.View#event-pinchangedragstate pinchangedragstate} event 
to indicate that the user canceled the drag action.</p>
 */
Titanium.Map.ANNOTATION_DRAG_STATE_CANCEL = null;

/**
 * @property ANNOTATION_DRAG_STATE_DRAG
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Used in the {@link Titanium.Map.View#event-pinchangedragstate pinchangedragstate} event 
to indicate that the user moved the annotation.</p>
 */
Titanium.Map.ANNOTATION_DRAG_STATE_DRAG = null;

/**
 * @property ANNOTATION_DRAG_STATE_END
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Used in the {@link Titanium.Map.View#event-pinchangedragstate pinchangedragstate} event 
to indicate that the user finished moving the annotation.</p>
 */
Titanium.Map.ANNOTATION_DRAG_STATE_END = null;

/**
 * @property ANNOTATION_DRAG_STATE_NONE
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Used in the {@link Titanium.Map.View#event-pinchangedragstate pinchangedragstate} event 
to indicate that the annotation is not being dragged.</p>
 */
Titanium.Map.ANNOTATION_DRAG_STATE_NONE = null;

/**
 * @property ANNOTATION_DRAG_STATE_START
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Used in the {@link Titanium.Map.View#event-pinchangedragstate pinchangedragstate} event 
to indicate that the user started dragging the annotation.</p>
 */
Titanium.Map.ANNOTATION_DRAG_STATE_START = null;

/**
 * @property ANNOTATION_GREEN
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to green via the 
{@link Titanium.Map.Annotation#property-pincolor} property.</p>
 */
Titanium.Map.ANNOTATION_GREEN = null;

/**
 * @property ANNOTATION_PURPLE
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to purple via the 
{@link Titanium.Map.Annotation#property-pincolor} property.</p>
 */
Titanium.Map.ANNOTATION_PURPLE = null;

/**
 * @property ANNOTATION_RED
 * @type Number
 * @readonly
 * <p>Color constant used to set a map annotation to red via the 
{@link Titanium.Map.Annotation#property-pincolor} property.</p>
 */
Titanium.Map.ANNOTATION_RED = null;

/**
 * @property HYBRID_TYPE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.Map.View#property-mapType mapType} to display a satellite image of the area with road and road name information layered on top.</p>
 * @description <p>On Android, <code>HYBRID_TYPE</code> produces a road map that looks like 
{@link Titanium.Map#property-STANDARD_TYPE STANDARD_TYPE}, and does not include a satellite
image. This is a known issue
(<a href="https://jira.appcelerator.org/browse/TIMOB-9673">TIMOB-9673</a>).</p>
<p>Use {@link Titanium.Map#property-SATELLITE_TYPE SATELLITE_TYPE} to specify a hybrid-type map on
Android.</p>
 */
Titanium.Map.HYBRID_TYPE = null;

/**
 * @property SATELLITE_TYPE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.Map.View#property-mapType mapType} to display satellite imagery of the area.</p>
 * @description <p>The Android Google Maps API does not support displaying satellite imagery
<em>without</em> roads and names, so specifying <code>SATELLITE_TYPE</code> on Android produces 
the same results as {@link Titanium.Map#property-HYBRID_TYPE HYBRID_TYPE} on other platforms.</p>
 */
Titanium.Map.SATELLITE_TYPE = null;

/**
 * @property STANDARD_TYPE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.Map.View#property-mapType mapType} to display a street map that shows the position of all roads and some road names.</p>
 */
Titanium.Map.STANDARD_TYPE = null;

/**
 * @property TERRAIN_TYPE
 * @type Number
 * @readonly
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Used with {@link Titanium.Map.View#property-mapType mapType} to display the terrain that shows the position of all roads and some road names.</p>
 */
Titanium.Map.TERRAIN_TYPE = null;

/**
 * @class Titanium.Media
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level Media module.</p>
 * @description <p>The Media module is used accessing the device's media related  functionality such 
as playing audio or recording video.</p>
 */
Titanium.Media = {};

/**
 * @class Titanium.Media.Android
 * @typestr Submodule of Titanium.Media
 * @platform android 1.7
 * @extends Titanium.Module
 * <p>Android-specific media-related functionality.</p>
 */
Titanium.Media.Android = {};

/**
 * @method scanMediaFiles
 * <p>Scans newly created or downloaded media files to make them available to other
Android media providers, such as the Gallery.</p>
 * @description <p>Android scans media files for inclusion in the Gallery and other media providers.
Use this method to force an immediate scan of particular files, such as
newly-created or downloaded resources.</p>
<p>See <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html">MediaScannerConnection in the Android API Reference</a>.</p>
 * @param {String[]} paths 
 * <p>Array of paths to the files you want to scan.</p>
 * @param {String[]} mimeTypes 
 * <p>Array of MIME types for the files in the paths parameter. If <code>null</code>, MIME type will 
be inferred from the file names.</p>
 * @param {Function} callback 
 * <p>Function to call when each file is done being scanned. </p>
 * @return void
*/
Titanium.Media.Android.scanMediaFiles = function(paths, mimeTypes, callback){};

/**
 * @method setSystemWallpaper
 * <p>Set the system homescreen wallpaper.</p>
 * @description <p>The image to use as the wallpaper must be passed as a {@link Titanium.Blob}. You can
create a <code>Blob</code> from an image file by calling {@link Titanium.Filesystem.File#method-read File.read}. 
You can also use the {@link Titanium.Media#method-openPhotoGallery} 
or {@link Titanium.Media#method-showCamera} methods to allow users to select an existing photo
or take a new one.</p>
 * @param {Titanium.Blob} image 
 * <p>Image to use as the wallpaper, as a <code>Blob</code> object.</p>
 * @param {Boolean} scale 
 * <p>If <code>true</code>, the image is scaled to fit the width of the system wallpaper. If
<code>false</code>, the image is not scaled.</p>
 * @return void
*/
Titanium.Media.Android.setSystemWallpaper = function(image, scale){};

/**
 * @class Titanium.Media.AudioPlayer
 * @typestr Object of Titanium.Media
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An audio player object used for streaming audio to the device, and low-level control of the audio playback.</p>
 * @description <p>On Android, when you are done playing a given audio file, you must call the 
{@link Titanium.Media.AudioPlayer#method-release release} method to stop buffering audio data and 
release associated system resources.</p>
<p>On iOS, you can control how the audio stream interacts with other system sounds
by setting {@link Titanium.Media#property-audioSessionMode}.</p>
<p>Use the {@link Titanium.Media#method-createAudioPlayer} method to create an audio player.</p>
 * <h3>Example</h3>
 * <h4>Audio Streaming</h4>
 * <p><p>The following example demonstrates using the <code>AudioPlayer</code> object to stream audio.</p></p><pre>var win = Titanium.UI.createWindow({  
    title:'Audio Test',
    backgroundColor:'#fff',
    layout: 'vertical'
});

var startStopButton = Titanium.UI.createButton({
    title:'Start/Stop Streaming',
    top:10,
    width:200,
    height:40
});

var pauseResumeButton = Titanium.UI.createButton({
    title:'Pause/Resume Streaming',
    top:10,
    width:200,
    height:40,
    enabled:false
});

win.add(startStopButton);
win.add(pauseResumeButton);

// allowBackground: true on Android allows the 
// player to keep playing when the app is in the 
// background.
var audioPlayer = Ti.Media.createAudioPlayer({ 
    url: 'www.example.com/podcast.mp3',
    allowBackground: true
});           
    
startStopButton.addEventListener('click',function() {
    // When paused, playing returns false.
    // If both are false, playback is stopped.
    if (audioPlayer.playing || audioPlayer.paused)
    {
        audioPlayer.stop();
        pauseResumeButton.enabled = false;
        if (Ti.Platform.name === 'android')
        { 
            audioPlayer.release();
        }   
    }
    else
    {
        audioPlayer.start();
        pauseResumeButton.enabled = true;
    }
});

pauseResumeButton.addEventListener('click', function() {
    if (audioPlayer.paused) {
        audioPlayer.start();
    }
    else {
        audioPlayer.pause();
    }
});

audioPlayer.addEventListener('progress',function(e) {
    Ti.API.info('Time Played: ' + Math.round(e.progress) + ' milliseconds');
});

audioPlayer.addEventListener('change',function(e)
{
    Ti.API.info('State: ' + e.description + ' (' + e.state + ')');
});

win.addEventListener('close',function() {
    audioPlayer.stop();
    if (Ti.Platform.osname === 'android')
    { 
        audioPlayer.release();
    }
});

win.open();</pre>
 */
Titanium.Media.AudioPlayer = {};



/**
 * @method getAllowBackground
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-allowBackground allowBackground} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
*/
Titanium.Media.AudioPlayer.getAllowBackground = function(){};

/**
 * @method getAutoplay
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-autoplay autoplay} property.</p>
 * @return {Boolean} 
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.getAutoplay = function(){};

/**
 * @method getBitRate
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-bitRate bitRate} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.AudioPlayer.getBitRate = function(){};

/**
 * @method getBufferSize
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-bufferSize bufferSize} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.AudioPlayer.getBufferSize = function(){};

/**
 * @method getIdle
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-idle idle} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.getIdle = function(){};

/**
 * @method getPaused
 * <p>Returns the value of the {@link Titanium.Media.AudioPlayer#property-paused paused} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.getPaused = function(){};

/**
 * @method getPlaying
 * <p>Returns the value of the {@link Titanium.Media.AudioPlayer#property-playing playing} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.getPlaying = function(){};

/**
 * @method getProgress
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#event-progress progress} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.getProgress = function(){};

/**
 * @method getState
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-state state} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.getState = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-url url} property.</p>
 * @return {String} 
*/
Titanium.Media.AudioPlayer.getUrl = function(){};

/**
 * @method getVolume
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-volume volume} property.</p>
 * @return {Number} 
 * @platform android 2.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.getVolume = function(){};

/**
 * @method getWaiting
 * <p>Gets the value of the {@link Titanium.Media.AudioPlayer#property-waiting waiting} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.AudioPlayer.getWaiting = function(){};

/**
 * @method isPaused
 * <p>Returns the value of the {@link Titanium.Media.AudioPlayer#property-paused paused} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.isPaused = function(){};

/**
 * @method isPlaying
 * <p>Returns the value of the {@link Titanium.Media.AudioPlayer#property-playing playing} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.isPlaying = function(){};

/**
 * @method pause
 * <p>Pauses audio playback.</p>
 * @description <p>On iOS and Tizen, the <code>pause</code> call operates as a toggle. If the stream is already paused,
calling <code>pause</code> again resumes playing the stream.</p>
<p>On Android, the <code>pause</code> call does nothing if the stream is already paused.</p>
<p>On both platforms, calling {@link Titanium.Media.AudioPlayer#method-start start} on a paused
stream resumes play.</p>
 * @return void
*/
Titanium.Media.AudioPlayer.pause = function(){};

/**
 * @method play
 * <p>Starts or resumes audio playback.</p>
 * @description <p>This method is identical to {@link Titanium.Media.AudioPlayer#method-start start}.</p>
 * @return void
 * @platform android 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.play = function(){};

/**
 * @method release
 * <p>Stops buffering audio data and releases audio resources.</p>
 * @description <p>On Android, this method should be called when you are done streaming a given
audio object, to release underlying resources, including buffered data.</p>
<p>On Tizen this method releases the internal audio resources immediately.</p>
 * @return void
 * @platform android 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.release = function(){};

/**
 * @method setBitRate
 * <p>Sets the value of the {@link Titanium.Media.AudioPlayer#property-bitRate bitRate} property.</p>
 * @param {Number} bitRate 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.AudioPlayer.setBitRate = function(bitRate){};

/**
 * @method setBufferSize
 * <p>Sets the value of the {@link Titanium.Media.AudioPlayer#property-bufferSize bufferSize} property.</p>
 * @param {Number} bufferSize 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.AudioPlayer.setBufferSize = function(bufferSize){};

/**
 * @method setPaused
 * <p>Sets the value of the {@link Titanium.Media.AudioPlayer#property-paused paused} property.</p>
 * @description <p>On iOS and Tizen, this method can be used to pause and unpause playback. For portability,
it is preferable to use the {@link Titanium.Media.AudioPlayer#method-pause pause} and 
{@link Titanium.Media.AudioPlayer#method-start start} methods instead.</p>
 * @param {Boolean} paused 
 * <p>Pass <code>true</code> to pause the current playback temporarily, <code>false</code> to unpause it.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.setPaused = function(paused){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Titanium.Media.AudioPlayer#property-url url} property.</p>
 * @param {String} url 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.AudioPlayer.setUrl = function(url){};

/**
 * @method setVolume
 * <p>Sets the value of the {@link Titanium.Media.AudioPlayer#property-volume volume} property.</p>
 * @param {Number} volume 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 2.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.setVolume = function(volume){};

/**
 * @method start
 * <p>Starts or resumes audio playback.</p>
 * @return void
*/
Titanium.Media.AudioPlayer.start = function(){};

/**
 * @method stateDescription
 * <p>Converts a {@link Titanium.Media.AudioPlayer#property-state state} value into a text description
suitable for display.</p>
 * @param {Number} state 
 * <p>State value to convert.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.AudioPlayer.stateDescription = function(state){};

/**
 * @method stop
 * <p>Stops audio playback.</p>
 * @return void
*/
Titanium.Media.AudioPlayer.stop = function(){};

/**
 * @property STATE_BUFFERING
 * @type Number
 * @readonly
 * <p>Audio data is being buffered from the network.</p>
 */
Titanium.Media.AudioPlayer.STATE_BUFFERING = null;

/**
 * @property STATE_INITIALIZED
 * @type Number
 * @readonly
 * <p>Audio playback is being initialized.</p>
 */
Titanium.Media.AudioPlayer.STATE_INITIALIZED = null;

/**
 * @property STATE_PAUSED
 * @type Number
 * @readonly
 * <p>Playback is paused.</p>
 */
Titanium.Media.AudioPlayer.STATE_PAUSED = null;

/**
 * @property STATE_PLAYING
 * @type Number
 * @readonly
 * <p>Audio playback is active.</p>
 */
Titanium.Media.AudioPlayer.STATE_PLAYING = null;

/**
 * @property STATE_STARTING
 * @type Number
 * @readonly
 * <p>Audio playback is starting.</p>
 */
Titanium.Media.AudioPlayer.STATE_STARTING = null;

/**
 * @property STATE_STOPPED
 * @type Number
 * @readonly
 * <p>Audio playback is stopped.</p>
 */
Titanium.Media.AudioPlayer.STATE_STOPPED = null;

/**
 * @property STATE_STOPPING
 * @type Number
 * @readonly
 * <p>Audio playback is stopping.</p>
 */
Titanium.Media.AudioPlayer.STATE_STOPPING = null;

/**
 * @property STATE_WAITING_FOR_DATA
 * @type Number
 * @readonly
 * <p>Player is waiting for audio data from the network.</p>
 */
Titanium.Media.AudioPlayer.STATE_WAITING_FOR_DATA = null;

/**
 * @property STATE_WAITING_FOR_QUEUE
 * @type Number
 * @readonly
 * <p>Player is waiting for audio data to fill the queue.</p>
 */
Titanium.Media.AudioPlayer.STATE_WAITING_FOR_QUEUE = null;

/**
 * @property [allowBackground=false]
 * @type Boolean
 * @platform android 0.9
 * @creationOnly
 * <p>Boolean to indicate if audio should continue playing even if the associated
Android {@link Titanium.Android.Activity Activity} is paused.</p>
 * @description <p>Setting <code>allowBackground</code> to <code>true</code> allows the audio to continue playing, for
example, if the application is in the background.</p>
 */
Titanium.Media.AudioPlayer.allowBackground = null;

/**
 * @property [autoplay=false]
 * @type Boolean
 * @platform tizen 3.1
 * @creationOnly
 * <p>Indicates if an audio should automatically start playback.</p>
 */
Titanium.Media.AudioPlayer.autoplay = null;

/**
 * @property bitRate
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Bit rate of the current playback stream.</p>
 */
Titanium.Media.AudioPlayer.bitRate = null;

/**
 * @property bufferSize
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Size of the buffer used for streaming, in bytes.</p>
 */
Titanium.Media.AudioPlayer.bufferSize = null;

/**
 * @property idle
 * @type Boolean
 * @readonly
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
 * <p>Boolean indicating if the player is idle.</p>
 * @description <p><code>true</code> if the player is in the initialized state: that is, not playing, paused, 
or waiting for data.</p>
 */
Titanium.Media.AudioPlayer.idle = null;

/**
 * @property paused
 * @type Boolean
 * <p>Boolean indicating if audio playback is paused.</p>
 */
Titanium.Media.AudioPlayer.paused = null;

/**
 * @property playing
 * @type Boolean
 * @readonly
 * <p>Boolean indicating if audio is currently playing.</p>
 * @description <p>Returns <code>false</code> if playback is stopped or paused.</p>
 */
Titanium.Media.AudioPlayer.playing = null;

/**
 * @property progress
 * @type Number
 * @readonly
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
 * <p>Current playback progress, in milliseconds.</p>
 * @description <p>Returns zero if <code>bitRate</code> has not yet been detected.</p>
 */
Titanium.Media.AudioPlayer.progress = null;

/**
 * @property state
 * @type Number
 * @readonly
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
 * <p>Current state of playback, specified using one of the <code>STATE</code> constants defined on this object.</p>
 */
Titanium.Media.AudioPlayer.state = null;

/**
 * @property url
 * @type String
 * <p>URL for the audio stream.</p>
 */
Titanium.Media.AudioPlayer.url = null;

/**
 * @property volume
 * @type Number
 * @platform android 2.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform tizen 3.1
 * <p>Volume of the audio, from 0.0 (muted) to 1.0 (loudest).</p>
 * @description <p>This setting controls the volume of the sound relative to the overall
volume setting for the device.</p>
<p>On iOS, to adjust the volume of the device, set the <code>volume</code> property of
{@link Titanium.Media#property-appMusicPlayer} and set the {@link Titanium.Media#property-audioSessionMode} property
to either {@link Titanium.Media#property-AUDIO_SESSION_MODE_AMBIENT},
{@link Titanium.Media#property-AUDIO_SESSION_MODE_SOLO_AMBIENT},
or {@link Titanium.Media#property-AUDIO_SESSION_MODE_PLAYBACK}.</p>
 */
Titanium.Media.AudioPlayer.volume = null;

/**
 * @property waiting
 * @type Boolean
 * @readonly
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Boolean indicating if the playback is waiting for audio data from the network.</p>
 * @description <p>This property is <code>true</code> if the player is in any of the waiting states, including
buffering, starting, waiting for data, and waiting for queue.</p>
 */
Titanium.Media.AudioPlayer.waiting = null;

/**
 * @class Titanium.Media.AudioRecorder
 * @typestr Object of Titanium.Media
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>An audio recorder object used for recording audio from the device microphone.</p>
 * @description <p>Use the {@link Titanium.Media#method-createAudioRecorder} method to create an audio recorder. </p>
 */
Titanium.Media.AudioRecorder = {};

/**
 * @method getCompression
 * <p>Gets the value of the {@link Titanium.Media.AudioRecorder#property-compression compression} property.</p>
 * @return {Number} 
*/
Titanium.Media.AudioRecorder.getCompression = function(){};

/**
 * @method getFormat
 * <p>Gets the value of the {@link Titanium.Media.AudioRecorder#property-format format} property.</p>
 * @return {Number} 
*/
Titanium.Media.AudioRecorder.getFormat = function(){};

/**
 * @method getPaused
 * <p>Gets the value of the {@link Titanium.Media.AudioRecorder#property-paused paused} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.AudioRecorder.getPaused = function(){};

/**
 * @method getRecording
 * <p>Gets the value of the {@link Titanium.Media.AudioRecorder#property-recording recording} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.AudioRecorder.getRecording = function(){};

/**
 * @method getStopped
 * <p>Gets the value of the {@link Titanium.Media.AudioRecorder#property-stopped stopped} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.AudioRecorder.getStopped = function(){};

/**
 * @method pause
 * <p>Pauses the current audio recording.</p>
 * @return void
*/
Titanium.Media.AudioRecorder.pause = function(){};

/**
 * @method resume
 * <p>Resumes a paused recording.</p>
 * @return void
*/
Titanium.Media.AudioRecorder.resume = function(){};

/**
 * @method setCompression
 * <p>Sets the value of the {@link Titanium.Media.AudioRecorder#property-compression compression} property.</p>
 * @param {Number} compression 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.AudioRecorder.setCompression = function(compression){};

/**
 * @method setFormat
 * <p>Sets the value of the {@link Titanium.Media.AudioRecorder#property-format format} property.</p>
 * @param {Number} format 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.AudioRecorder.setFormat = function(format){};

/**
 * @method start
 * <p>Starts an audio recording.</p>
 * @return void
*/
Titanium.Media.AudioRecorder.start = function(){};

/**
 * @method stop
 * <p>Stops the current audio recording and returns the recorded audio file.</p>
 * @return {Titanium.Filesystem.File} 
*/
Titanium.Media.AudioRecorder.stop = function(){};

/**
 * @property [compression={@link Titanium.Media#property-AUDIO_FORMAT_LINEAR_PCM}]
 * @type Number
 * <p>Audio compression to be used for the recording.</p>
 * @description <p>Specify one of the <code>AUDIO_FORMAT_</code> constants from {@link Titanium.Media}.</p>
 */
Titanium.Media.AudioRecorder.compression = null;

/**
 * @property [format={@link Titanium.Media#property-AUDIO_FILEFORMAT_CAF}]
 * @type Number
 * <p>Audio format to be used for the recording.</p>
 * @description <p>Specify one of the <code>AUDIO_FILEFORMAT_</code> constants from {@link Titanium.Media}.</p>
 */
Titanium.Media.AudioRecorder.format = null;

/**
 * @property paused
 * @type Boolean
 * @readonly
 * <p>Indicates if the audio recorder is paused.</p>
 */
Titanium.Media.AudioRecorder.paused = null;

/**
 * @property recording
 * @type Boolean
 * @readonly
 * <p>Indicates if the audio recorder is recording.</p>
 */
Titanium.Media.AudioRecorder.recording = null;

/**
 * @property stopped
 * @type Boolean
 * @readonly
 * <p>Indicates if the audio recorder is stopped.</p>
 */
Titanium.Media.AudioRecorder.stopped = null;

/**
 * @class Titanium.Media.Item
 * @typestr Object of Titanium.Media
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.Proxy
 * <p>A representation of a media item returned by {@link Titanium.Media#method-openMusicLibrary openMusicLibrary} or {@link Titanium.Media#method-queryMusicLibrary queryMusicLibrary}.</p>
 * @description <p>This is a read-only object that describes a single media item, not a playlist. 
Titanium does not support access to playlists.</p>
<p><code>Item</code> objects cannot be created explicitly.  The 
{@link Titanium.Media#method-openMusicLibrary openMusicLibrary} returns <code>Item</code> objects in its
<code>success</code> callback function, while {@link Titanium.Media#method-queryMusicLibrary queryMusicLibrary}
returns an array of <code>Item</code> objects.</p>
 */
Titanium.Media.Item = {};

/**
 * @method getAlbumArtist
 * <p>Gets the value of the {@link Titanium.Media.Item#property-albumArtist albumArtist} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getAlbumArtist = function(){};

/**
 * @method getAlbumTitle
 * <p>Gets the value of the {@link Titanium.Media.Item#property-albumTitle albumTitle} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getAlbumTitle = function(){};

/**
 * @method getAlbumTrackCount
 * <p>Gets the value of the {@link Titanium.Media.Item#property-albumTrackCount albumTrackCount} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getAlbumTrackCount = function(){};

/**
 * @method getAlbumTrackNumber
 * <p>Gets the value of the {@link Titanium.Media.Item#property-albumTrackNumber albumTrackNumber} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getAlbumTrackNumber = function(){};

/**
 * @method getArtist
 * <p>Gets the value of the {@link Titanium.Media.Item#property-artist artist} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getArtist = function(){};

/**
 * @method getArtwork
 * <p>Gets the value of the {@link Titanium.Media.Item#property-artwork artwork} property.</p>
 * @return {Titanium.Blob} 
*/
Titanium.Media.Item.getArtwork = function(){};

/**
 * @method getComposer
 * <p>Gets the value of the {@link Titanium.Media.Item#property-composer composer} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getComposer = function(){};

/**
 * @method getDiscCount
 * <p>Gets the value of the {@link Titanium.Media.Item#property-discCount discCount} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getDiscCount = function(){};

/**
 * @method getDiscNumber
 * <p>Gets the value of the {@link Titanium.Media.Item#property-discNumber discNumber} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getDiscNumber = function(){};

/**
 * @method getGenre
 * <p>Gets the value of the {@link Titanium.Media.Item#property-genre genre} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getGenre = function(){};

/**
 * @method getIsCompilation
 * <p>Gets the value of the {@link Titanium.Media.Item#property-isCompilation isCompilation} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.Item.getIsCompilation = function(){};

/**
 * @method getLyrics
 * <p>Gets the value of the {@link Titanium.Media.Item#property-lyrics lyrics} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getLyrics = function(){};

/**
 * @method getMediaType
 * <p>Gets the value of the {@link Titanium.Media.Item#property-mediaType mediaType} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getMediaType = function(){};

/**
 * @method getPlayCount
 * <p>Gets the value of the {@link Titanium.Media.Item#property-playCount playCount} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getPlayCount = function(){};

/**
 * @method getPlaybackDuration
 * <p>Gets the value of the {@link Titanium.Media.Item#property-playbackDuration playbackDuration} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getPlaybackDuration = function(){};

/**
 * @method getPodcastTitle
 * <p>Gets the value of the {@link Titanium.Media.Item#property-podcastTitle podcastTitle} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getPodcastTitle = function(){};

/**
 * @method getRating
 * <p>Gets the value of the {@link Titanium.Media.Item#property-rating rating} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getRating = function(){};

/**
 * @method getSkipCount
 * <p>Gets the value of the {@link Titanium.Media.Item#property-skipCount skipCount} property.</p>
 * @return {Number} 
*/
Titanium.Media.Item.getSkipCount = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.Media.Item#property-title title} property.</p>
 * @return {String} 
*/
Titanium.Media.Item.getTitle = function(){};

/**
 * @property albumArtist
 * @type String
 * @readonly
 * <p>Artist credited for the album containing this item.</p>
 */
Titanium.Media.Item.albumArtist = null;

/**
 * @property albumTitle
 * @type String
 * @readonly
 * <p>Title of the album containing this item.</p>
 */
Titanium.Media.Item.albumTitle = null;

/**
 * @property albumTrackCount
 * @type Number
 * @readonly
 * <p>Number of tracks for the album containing this item.</p>
 */
Titanium.Media.Item.albumTrackCount = null;

/**
 * @property albumTrackNumber
 * @type Number
 * @readonly
 * <p>Track number for this item.</p>
 */
Titanium.Media.Item.albumTrackNumber = null;

/**
 * @property artist
 * @type String
 * @readonly
 * <p>Artist credited for this item.</p>
 */
Titanium.Media.Item.artist = null;

/**
 * @property artwork
 * @type Titanium.Blob
 * @readonly
 * <p>Image for the item's artwork as a <code>Blob</code> object,  or <code>null</code> if no artwork is
available.</p>
 */
Titanium.Media.Item.artwork = null;

/**
 * @property composer
 * @type String
 * @readonly
 * <p>Composer of this item.</p>
 */
Titanium.Media.Item.composer = null;

/**
 * @property discCount
 * @type Number
 * @readonly
 * <p>Total number of discs for the album containing this item.</p>
 */
Titanium.Media.Item.discCount = null;

/**
 * @property discNumber
 * @type Number
 * @readonly
 * <p>Disc number for this item in the album.</p>
 */
Titanium.Media.Item.discNumber = null;

/**
 * @property genre
 * @type String
 * @readonly
 * <p>Genre of this item.</p>
 */
Titanium.Media.Item.genre = null;

/**
 * @property isCompilation
 * @type Boolean
 * @readonly
 * <p>True if this item is part of a compilation album.</p>
 */
Titanium.Media.Item.isCompilation = null;

/**
 * @property lyrics
 * @type String
 * @readonly
 * <p>Lyrics for this item.</p>
 */
Titanium.Media.Item.lyrics = null;

/**
 * @property mediaType
 * @type Number
 * @readonly
 * <p>The type of the media. </p>
 * @description <p>Specify one of the following constants from {@link Titanium.Media}:
{@link Titanium.Media#property-MUSIC_MEDIA_TYPE_ALL MUSIC_MEDIA_TYPE_ALL},
{@link Titanium.Media#property-MUSIC_MEDIA_TYPE_ANY_AUDIO MUSIC_MEDIA_TYPE_ANY_AUDIO},
{@link Titanium.Media#property-MUSIC_MEDIA_TYPE_AUDIOBOOK MUSIC_MEDIA_TYPE_AUDIOBOOK},
{@link Titanium.Media#property-MUSIC_MEDIA_TYPE_MUSIC MUSIC_MEDIA_TYPE_MUSIC}, or
{@link Titanium.Media#property-MUSIC_MEDIA_TYPE_PODCAST MUSIC_MEDIA_TYPE_PODCAST}.</p>
<p>At least in theory, a single item can have more than one media type, in which case the
value represents a bitwise-OR of all the applicable media types.</p>
 */
Titanium.Media.Item.mediaType = null;

/**
 * @property playCount
 * @type Number
 * @readonly
 * <p>Number of times the item has been played.</p>
 */
Titanium.Media.Item.playCount = null;

/**
 * @property playbackDuration
 * @type Number
 * @readonly
 * <p>Length (in seconds) of this item.</p>
 */
Titanium.Media.Item.playbackDuration = null;

/**
 * @property podcastTitle
 * @type String
 * @readonly
 * <p>Title of a podcast item.</p>
 * @description <p>Only included if the media type is {@link Titanium.Media#property-MUSIC_MEDIA_TYPE_PODCAST}.</p>
 */
Titanium.Media.Item.podcastTitle = null;

/**
 * @property rating
 * @type Number
 * @readonly
 * <p>Rating for this item.</p>
 */
Titanium.Media.Item.rating = null;

/**
 * @property skipCount
 * @type Number
 * @readonly
 * <p>Number of times this item has been skipped.</p>
 */
Titanium.Media.Item.skipCount = null;

/**
 * @property title
 * @type String
 * @readonly
 * <p>Title of this item.</p>
 */
Titanium.Media.Item.title = null;

/**
 * @class Titanium.Media.MusicPlayer
 * @typestr Object of Titanium.Media
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.Proxy
 * <p>This object represents a music controller.</p>
 * @description <p>A <code>MusicPlayer</code> lets you manage and playback a queue of media {@link Titanium.Media.Item Item} objects.</p>
<p>Use the {@link Titanium.Media#method-createMusicPlayer} method to create a music palyer.</p>
<p>Use the {@link Titanium.Media Media} module's {@link Titanium.Media#method-openMusicLibrary openMusicLibrary} and
{@link Titanium.Media#method-queryMusicLibrary queryMusicLibrary} methods to access the media items in the
device's media library.</p>
 */
Titanium.Media.MusicPlayer = {};







/**
 * @method getCurrentPlaybackTime
 * <p>Gets the value of the {@link Titanium.Media.MusicPlayer#property-currentPlaybackTime currentPlaybackTime} property.</p>
 * @return {Number} 
*/
Titanium.Media.MusicPlayer.getCurrentPlaybackTime = function(){};

/**
 * @method getNowPlaying
 * <p>Gets the value of the {@link Titanium.Media.MusicPlayer#property-nowPlaying nowPlaying} property.</p>
 * @return {Titanium.Media.Item} 
*/
Titanium.Media.MusicPlayer.getNowPlaying = function(){};

/**
 * @method getPlaybackState
 * <p>Gets the value of the {@link Titanium.Media.MusicPlayer#property-playbackState playbackState} property.</p>
 * @return {Number} 
*/
Titanium.Media.MusicPlayer.getPlaybackState = function(){};

/**
 * @method getRepeatMode
 * <p>Gets the value of the {@link Titanium.Media.MusicPlayer#property-repeatMode repeatMode} property.</p>
 * @return {Number} 
*/
Titanium.Media.MusicPlayer.getRepeatMode = function(){};

/**
 * @method getShuffleMode
 * <p>Gets the value of the {@link Titanium.Media.MusicPlayer#property-shuffleMode shuffleMode} property.</p>
 * @return {Number} 
*/
Titanium.Media.MusicPlayer.getShuffleMode = function(){};

/**
 * @method getVolume
 * <p>Gets the value of the {@link Titanium.Media.MusicPlayer#property-volume volume} property.</p>
 * @return {Number} 
*/
Titanium.Media.MusicPlayer.getVolume = function(){};

/**
 * @method pause
 * <p>Pauses playback of the current media item.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.pause = function(){};

/**
 * @method play
 * <p>Begins playback of the current media item.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.play = function(){};

/**
 * @method seekBackward
 * <p>Begins seeking backward in the currently playing media.</p>
 * @description <p>Seeking speed increases as seeking continues.</p>
<p>Call {@link Titanium.Media.MusicPlayer#method-stopSeeking stopSeeking} to
return to normal play.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.seekBackward = function(){};

/**
 * @method seekForward
 * <p>Begins seeking forward in the currently playing media item.</p>
 * @description <p>While seeking forward audio plays faster than usual. The speed increases as
seeking continues.</p>
<p>Call {@link Titanium.Media.MusicPlayer#method-stopSeeking stopSeeking} to
return to normal play.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.seekForward = function(){};

/**
 * @method setCurrentPlaybackTime
 * <p>Sets the value of the {@link Titanium.Media.MusicPlayer#property-currentPlaybackTime currentPlaybackTime} property.</p>
 * @param {Number} currentPlaybackTime 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.setCurrentPlaybackTime = function(currentPlaybackTime){};

/**
 * @method setQueue
 * <p>Sets the media queue.</p>
 * @description <p>Sets the media queue to a single media item or a list of items.</p>
 * @param {Titanium.Media.Item/Titanium.Media.Item[]/PlayerQueue} queue 
 * <p>One or more media items.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.setQueue = function(queue){};

/**
 * @method setRepeatMode
 * <p>Sets the value of the {@link Titanium.Media.MusicPlayer#property-repeatMode repeatMode} property.</p>
 * @param {Number} repeatMode 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.setRepeatMode = function(repeatMode){};

/**
 * @method setShuffleMode
 * <p>Sets the value of the {@link Titanium.Media.MusicPlayer#property-shuffleMode shuffleMode} property.</p>
 * @param {Number} shuffleMode 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.setShuffleMode = function(shuffleMode){};

/**
 * @method setVolume
 * <p>Sets the value of the {@link Titanium.Media.MusicPlayer#property-volume volume} property.</p>
 * @param {Number} volume 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.setVolume = function(volume){};

/**
 * @method skipToBeginning
 * <p>Skips to the beginning of the currently playing media item.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.skipToBeginning = function(){};

/**
 * @method skipToNext
 * <p>Skips to the next media item in the queue.</p>
 * @description <p>If there are no more media items in the queue, ends playback.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.skipToNext = function(){};

/**
 * @method skipToPrevious
 * <p>Skips to the previous media item in the queue.</p>
 * @description <p>If there are no previous media items in the queue, ends playback.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.skipToPrevious = function(){};

/**
 * @method stop
 * <p>Stops playback of the current media queue.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.stop = function(){};

/**
 * @method stopSeeking
 * <p>Ends a seek operation and returns to the previous playback state.</p>
<p>See also: {@link Titanium.Media.MusicPlayer#method-seekForward seekForward} and
{@link Titanium.Media.MusicPlayer#method-seekBackward seekBackward}.</p>
 * @return void
*/
Titanium.Media.MusicPlayer.stopSeeking = function(){};

/**
 * @property currentPlaybackTime
 * @type Number
 * <p>Current point in song playback, in seconds.</p>
 * @description <p>This property is read/write, so you can update the music player's current position
by setting this property.</p>
 */
Titanium.Media.MusicPlayer.currentPlaybackTime = null;

/**
 * @property nowPlaying
 * @type Titanium.Media.Item
 * @readonly
 * <p>An <code>Item</code> object representing the currently playing media item.</p>
 */
Titanium.Media.MusicPlayer.nowPlaying = null;

/**
 * @property playbackState
 * @type Number
 * @readonly
 * <p>Playback state: one of
{@link Titanium.Media#property-MUSIC_PLAYER_STATE_STOPPED MUSIC_PLAYER_STATE_STOPPED},
{@link Titanium.Media#property-MUSIC_PLAYER_STATE_PLAYING MUSIC_PLAYER_STATE_PLAYING},
{@link Titanium.Media#property-MUSIC_PLAYER_STATE_PAUSED MUSIC_PLAYER_STATE_PAUSED},
{@link Titanium.Media#property-MUSIC_PLAYER_STATE_INTERRUPTED MUSIC_PLAYER_STATE_INTERRUPTED},
{@link Titanium.Media#property-MUSIC_PLAYER_STATE_SEEK_FORWARD MUSIC_PLAYER_STATE_SEEK_FORWARD},
or
{@link Titanium.Media#property-MUSIC_PLAYER_STATE_SEEK_BACKWARD MUSIC_PLAYER_STATE_SEEK_BACKWARD}.</p>
 */
Titanium.Media.MusicPlayer.playbackState = null;

/**
 * @property repeatMode
 * @type Number
 * <p>Repeat setting: one of
{@link Titanium.Media#property-MUSIC_PLAYER_REPEAT_DEFAULT MUSIC_PLAYER_REPEAT_DEFAULT},
{@link Titanium.Media#property-MUSIC_PLAYER_REPEAT_NONE MUSIC_PLAYER_REPEAT_NONE},
{@link Titanium.Media#property-MUSIC_PLAYER_REPEAT_ONE MUSIC_PLAYER_REPEAT_ONE}, or
{@link Titanium.Media#property-MUSIC_PLAYER_REPEAT_ALL MUSIC_PLAYER_REPEAT_ALL}.</p>
 */
Titanium.Media.MusicPlayer.repeatMode = null;

/**
 * @property shuffleMode
 * @type Number
 * <p>Shuffle setting: one of
{@link Titanium.Media#property-MUSIC_PLAYER_SHUFFLE_DEFAULT MUSIC_PLAYER_SHUFFLE_DEFAULT},
{@link Titanium.Media#property-MUSIC_PLAYER_SHUFFLE_NONE MUSIC_PLAYER_SHUFFLE_NONE},
{@link Titanium.Media#property-MUSIC_PLAYER_SHUFFLE_SONGS MUSIC_PLAYER_SHUFFLE_SONGS}, or
{@link Titanium.Media#property-MUSIC_PLAYER_SHUFFLE_ALBUMS MUSIC_PLAYER_SHUFFLE_ALBUMS}.</p>
 */
Titanium.Media.MusicPlayer.shuffleMode = null;

/**
 * @property volume
 * @type Number
 * <p>Volume level for the music player from 0.0 (muted) to 1.0 (loudest).</p>
 * @description <p>This adjusts the volume of the application's session.</p>
<p>The iOS simulator ignores this volume setting. This is a known issue
with Apple's simulator.</p>
 */
Titanium.Media.MusicPlayer.volume = null;

/**
 * @class Titanium.Media.Sound
 * @typestr Object of Titanium.Media
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An object for playing basic audio resources.</p>
 * @description <p>The <code>Sound</code> object loads the entire media resource in memory before playing.  If you need to 
support streaming, use the {@link Titanium.Media.AudioPlayer AudioPlayer} API.</p>
<p>You can control how the sound interacts with other system sounds
by setting {@link Titanium.Media#property-audioSessionMode}.</p>
<p>Use the {@link Titanium.Media#method-createSound} method to create a <code>Sound</code> object.</p>
 * <h3>Example</h3>
 * <h4>Simple Example</h4>
 * <p><p>Simple example of playing a WAVE file from the Resources directory.</p></p><pre>var player = Ti.Media.createSound({url:"sound.wav"});
player.play();</pre>
 */
Titanium.Media.Sound = {};





/**
 * @method getDuration
 * <p>Gets the value of the {@link Titanium.Media.Sound#property-duration duration} property.</p>
 * @return {Number} 
*/
Titanium.Media.Sound.getDuration = function(){};

/**
 * @method getTime
 * <p>Gets the value of the {@link Titanium.Media.Sound#property-time time} property.</p>
 * @return {Number} 
*/
Titanium.Media.Sound.getTime = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.Media.Sound#property-url url} property.</p>
 * @return {String} 
*/
Titanium.Media.Sound.getUrl = function(){};

/**
 * @method getVolume
 * <p>Gets the value of the {@link Titanium.Media.Sound#property-volume volume} property.</p>
 * @return {Number} 
*/
Titanium.Media.Sound.getVolume = function(){};

/**
 * @method isLooping
 * <p>Returns the value of the {@link Titanium.Media.Sound#property-looping looping} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.Sound.isLooping = function(){};

/**
 * @method isPaused
 * <p>Returns the value of the {@link Titanium.Media.Sound#property-paused paused} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.Sound.isPaused = function(){};

/**
 * @method isPlaying
 * <p>Returns the value of the {@link Titanium.Media.Sound#property-playing playing} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.Sound.isPlaying = function(){};

/**
 * @method pause
 * <p>Pauses the audio.</p>
 * @description <p>To restart the audio, call {@link Titanium.Media.Sound#method-play play}.</p>
 * @return void
*/
Titanium.Media.Sound.pause = function(){};

/**
 * @method play
 * <p>Starting playing the sound, or resume playing a paused sound.</p>
 * @return void
*/
Titanium.Media.Sound.play = function(){};

/**
 * @method release
 * <p>Releases all internal resources.</p>
 * @description <p>This is typically unnecessary but can be useful if you load a large audio file in <code>app.js</code>, and 
play it only once and you would like to release all resources after your final play to reduce memory.</p>
 * @return void
*/
Titanium.Media.Sound.release = function(){};

/**
 * @method reset
 * <p>Resets the audio playback position to the beginning.</p>
 * @return void
*/
Titanium.Media.Sound.reset = function(){};

/**
 * @method setLooping
 * <p>Sets the value of the {@link Titanium.Media.Sound#property-looping looping} property.</p>
 * @param {Boolean} looping 
 * <p>New value for the <code>looping</code> property.</p>
 * @return void
*/
Titanium.Media.Sound.setLooping = function(looping){};

/**
 * @method setPaused
 * <p>Sets the value of the {@link Titanium.Media.Sound#property-paused paused} property.</p>
 * @description <p>On iOS and Tizen, this method can be used to pause and unpause playback. For portability,
it is preferable to use the {@link Titanium.Media.Sound#method-pause pause} and
{@link Titanium.Media.Sound#method-play play} methods instead.</p>
 * @param {Boolean} paused 
 * <p>Pass <code>true</code> to pause the current playback temporarily, <code>false</code> to unpause it.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Media.Sound.setPaused = function(paused){};

/**
 * @method setTime
 * <p>Sets the value of the {@link Titanium.Media.Sound#property-time time} property.</p>
 * @param {Number} time 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.Sound.setTime = function(time){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Titanium.Media.Sound#property-url url} property.</p>
 * @param {String} url 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.Sound.setUrl = function(url){};

/**
 * @method setVolume
 * <p>Sets the value of the {@link Titanium.Media.Sound#property-volume volume} property.</p>
 * @param {Number} volume 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.Sound.setVolume = function(volume){};

/**
 * @method stop
 * <p>Stops playing the audio and resets the playback position to the beginning of the clip.</p>
 * @return void
*/
Titanium.Media.Sound.stop = function(){};

/**
 * @property [allowBackground=false]
 * @type Boolean
 * @platform android 1.3
 * @creationOnly
 * <p>Determines whether the audio should continue playing even when its activity is paused.</p>
 */
Titanium.Media.Sound.allowBackground = null;

/**
 * @property duration
 * @type Number
 * @readonly
 * <p>Duration of the audio resource.</p>
 * @description <p>On iOS, playback time is reported in seconds.</p>
<p>On Android and Tizen, time is reported in milliseconds.</p>
 */
Titanium.Media.Sound.duration = null;

/**
 * @property [looping=false]
 * @type Boolean
 * <p>Determines whether the audio should loop upon completion.</p>
 */
Titanium.Media.Sound.looping = null;

/**
 * @property paused
 * @type Boolean
 * <p>Indicates if the audio is paused.</p>
 * @description <p>On iOS and Tizen, this property is read-write, and you can pause and resume playback by setting this 
property to <code>true</code> or <code>false</code>.</p>
<p>On Android, this property is read-only. For portability, use {@link Titanium.Media.Sound#method-pause pause}
to pause audio, and {@link Titanium.Media.Sound#method-play play} to resume.</p>
 */
Titanium.Media.Sound.paused = null;

/**
 * @property playing
 * @type Boolean
 * @readonly
 * <p>Indicates if the audio is playing.</p>
 */
Titanium.Media.Sound.playing = null;

/**
 * @property time
 * @type Number
 * <p>Current playback position of the audio.</p>
 * @description <p>Time is reported in milliseconds.</p>
<p>On iOS, prior to Release 3.0, playback time is reported in seconds.</p>
 */
Titanium.Media.Sound.time = null;

/**
 * @property url
 * @type String
 * <p>URL identifying the audio resource.</p>
 */
Titanium.Media.Sound.url = null;

/**
 * @property volume
 * @type Number
 * <p>Volume of the audio from 0.0 (muted) to 1.0 (loudest).</p>
 * @description <p>This setting controls the volume of the sound relative to the overall
volume setting for the device.</p>
<p>On iOS, to adjust the volume of the device, set the <code>volume</code> property of
{@link Titanium.Media#property-appMusicPlayer} and set the {@link Titanium.Media#property-audioSessionMode} property
to either {@link Titanium.Media#property-AUDIO_SESSION_MODE_AMBIENT},
{@link Titanium.Media#property-AUDIO_SESSION_MODE_SOLO_AMBIENT},
or {@link Titanium.Media#property-AUDIO_SESSION_MODE_PLAYBACK}.</p>
 */
Titanium.Media.Sound.volume = null;

/**
 * @class Titanium.Media.VideoPlayer
 * @typestr Object of Titanium.Media
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A native control for playing videos.</p>
 * @description <p>The video player is a native view that can be used to play videos, either stored
locally or streamed from a web server. The player can occupy the full screen, or can
be used as a view that can be added to other views.</p>
<p>Use the {@link Titanium.Media#method-createVideoPlayer} method to create a video player.</p>
<p>All platforms support specifying the video content as a URL, either to a local file or
a remote stream. This is done by setting the {@link Titanium.Media.VideoPlayer#property-url url} property.</p>
<h4>iOS Implementation Notes</h4>
<p>On iOS, video content can also be specified as a {@link Titanium.Blob Blob} or
{@link Titanium.Filesystem.File File} object using the
{@link Titanium.Media.VideoPlayer#property-media media} property.</p>
<p>On iOS, a video player can dynamically switch back and forth between fullscreen mode
and standard mode. If the native video controls are displayed, the user can use them
to switch between standard and fullscreen mode. </p>
<h4>Android Implementation Notes</h4>
<p>On Android, the video player cannot switch modes. To create a fullscreen player, you
must specify <code>fullscreen: true</code> when you create the player. This fullscreen player
creates its own Android {@link Titanium.Android.Activity Activity} on top of the activity stack.
Unlike a normal view, this fullscreen video player appears as soon as it is created. 
The user can close the player by pressing the <strong>Back</strong> button. See the code examples for 
a sample using the fullscreen player on Android.</p>
<p>There are several known issues with clipping on the Android video player. </p>
<ul>
<li>
<p>When used with <code>scalingMode</code> set to VIDEO_SCALING_ASPECT_FILL or VIDEO_SCALING_NONE,
  the video content is not correctly clipped to the boundaries of the view.<br />
  (<a href="https://jira.appcelerator.org/browse/TIMOB-7628">TIMOB-7628</a>)</p>
</li>
<li>
<p>When a border is set on the view, the video content does not take the border width
  into account, so the video content covers the border.
  (<a href="https://jira.appcelerator.org/browse/TIMOB-7628">TIMOB-7628</a>)</p>
</li>
<li>
<p>If a borderRadius is specified, the video content is not clipped to the rounded
  corners. (<a href="https://jira.appcelerator.org/browse/TIMOB-7629">TIMOB-7629</a>)</p>
</li>
</ul>
<p>On Android, using a video player inside a scroll view is not recommended. When scrolling,
black bars may appear over the video content.</p>
<p>This is because the video player is rendered on a special Android UI element called a SurfaceView.
Android renders the SurfaceView behind the main window and punches a hole in the window
to reveal the video.  Because the content of the SurfaceView does not reside in the application
window, the video content cannot be transformed (moved, scaled or rotated) with the window.
This makes it difficult for the content to render properly inside a ScrollView.</p>
 * <h3>Examples</h3>
 * <h4>Simple Video Player Example</h4>
 * <p><p>The following code creates a simple video player to play a local video file.</p></p><pre>var vidWin = Titanium.UI.createWindow({
    title : 'Video View Demo',
    backgroundColor : '#fff'
});

var videoPlayer = Titanium.Media.createVideoPlayer({
    top : 2,
    autoplay : true,
    backgroundColor : 'blue',
    height : 300,
    width : 300,
    mediaControlStyle : Titanium.Media.VIDEO_CONTROL_DEFAULT,
    scalingMode : Titanium.Media.VIDEO_SCALING_ASPECT_FIT
});

videoPlayer.url = 'movie.mp4';
vidWin.add(videoPlayer);
vidWin.open();</pre>
 * <h4>Android Fullscreen Video Player</h4>
 * <p><p>The Android fullscreen video player operates differently from other video players.
The following example shows how to create, show, and close a fullscreen video
player. </p>
<p>Note that in this example, a button is included to close the player, to
demonstrate a method for dismissing the player programmatically. In practice, the user
can always dismiss the player by using the <strong>Back</strong> button, so an on-screen
control would not be required.</p></p><pre>Titanium.UI.setBackgroundColor('#000');
var win = Titanium.UI.createWindow({
    title : 'Test',
    backgroundColor : '#fff',
    exitOnClose : true
});

// Change to a valid URL
var contentURL = "http://www.example.com/stream.mp4";

var openButton = Ti.UI.createButton({
    title : "Start Video",
    top : "0dp",
    height : "40dp",
    left : "10dp",
    right : "10dp"
});

openButton.addEventListener('click', function() {
    var activeMovie = Titanium.Media.createVideoPlayer({
        url : contentURL,
        backgroundColor : 'blue',
        movieControlMode : Titanium.Media.VIDEO_CONTROL_DEFAULT,
        scalingMode : Titanium.Media.VIDEO_SCALING_ASPECT_FILL,
        fullscreen : true,
        autoplay : true
    });

    var closeButton = Ti.UI.createButton({
        title : "Exit Video",
        top : "0dp",
        height : "40dp",
        left : "10dp",
        right : "10dp"
    });

    closeButton.addEventListener('click', function() {
        activeMovie.hide();
        activeMovie.release();
        activeMovie = null;
    });
    
    activeMovie.add(closeButton);
});
win.add(openButton);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous simple example as an Alloy view.</p>
<p>simplevideoplayer.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="vidWin" title="Video View Demo" backgroundColor="#fff"&gt;
        &lt;VideoPlayer id="videoPlayer" ns="Ti.Media" top="2" url="/movie.mp4"
                     height="300" width="300" backgroundColor="blue" autoplay="true" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.Media.VideoPlayer = {};




























/**
 * @method cancelAllThumbnailImageRequests
 * <p>Cancels all pending asynchronous thumbnail requests.</p>
 * @description <p>Asynchronous thumbnail requests initiated with 
{@link Titanium.Media.VideoPlayer#method-requestThumbnailImagesAtTimes requestThumbnailImagesAtTimes}.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.cancelAllThumbnailImageRequests = function(){};

/**
 * @method getAllowsAirPlay
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-allowsAirPlay allowsAirPlay} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.getAllowsAirPlay = function(){};

/**
 * @method getAutoplay
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-autoplay autoplay} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.VideoPlayer.getAutoplay = function(){};

/**
 * @method getContentURL
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-contentURL contentURL} property.</p>
 * @removed  3.0.0
 * @return {String} 
*/
Titanium.Media.VideoPlayer.getContentURL = function(){};

/**
 * @method getCurrentPlaybackTime
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-currentPlaybackTime currentPlaybackTime} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getCurrentPlaybackTime = function(){};

/**
 * @method getDuration
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-duration duration} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getDuration = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.Media.VideoPlayer.getEnabled = function(){};

/**
 * @method getEndPlaybackTime
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-endPlaybackTime endPlaybackTime} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getEndPlaybackTime = function(){};

/**
 * @method getFullscreen
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#event-fullscreen fullscreen} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.VideoPlayer.getFullscreen = function(){};

/**
 * @method getInitialPlaybackTime
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-initialPlaybackTime initialPlaybackTime} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getInitialPlaybackTime = function(){};

/**
 * @method getLoadState
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-loadState loadState} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getLoadState = function(){};

/**
 * @method getMediaControlStyle
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getMediaControlStyle = function(){};

/**
 * @method getMediaTypes
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-mediaTypes mediaTypes} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.getMediaTypes = function(){};

/**
 * @method getMovieControlMode
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-movieControlMode movieControlMode} property.</p>
 * @deprecated 1.8.0
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.getMovieControlMode = function(){};

/**
 * @method getNaturalSize
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-naturalSize naturalSize} property.</p>
 * @return {MovieSize} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.getNaturalSize = function(){};

/**
 * @method getPlayableDuration
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-playableDuration playableDuration} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getPlayableDuration = function(){};

/**
 * @method getPlaybackState
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#event-playbackState playbackState} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getPlaybackState = function(){};

/**
 * @method getPlaying
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#event-playing playing} property.</p>
 * @return {Boolean} 
*/
Titanium.Media.VideoPlayer.getPlaying = function(){};

/**
 * @method getRepeatMode
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-repeatMode repeatMode} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Media.VideoPlayer.getRepeatMode = function(){};

/**
 * @method getScalingMode
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-scalingMode scalingMode} property.</p>
 * @return {Number} 
*/
Titanium.Media.VideoPlayer.getScalingMode = function(){};

/**
 * @method getSourceType
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-sourceType sourceType} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.getSourceType = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-url url} property.</p>
 * @return {String/String[]} 
*/
Titanium.Media.VideoPlayer.getUrl = function(){};

/**
 * @method getUseApplicationAudioSession
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-useApplicationAudioSession useApplicationAudioSession} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.getUseApplicationAudioSession = function(){};

/**
 * @method getVolume
 * <p>Gets the value of the {@link Titanium.Media.VideoPlayer#property-volume volume} property.</p>
 * @return {Number} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.Media.VideoPlayer.getVolume = function(){};

/**
 * @method pause
 * <p>Pauses playing the video.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.pause = function(){};

/**
 * @method play
 * <p>Starts playing the video.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.play = function(){};

/**
 * @method release
 * <p>Releases the internal video resources immediately.</p>
 * @description <p>This is not usually necessary but can help if you no longer need to use the player after 
it is used to help converse memory.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.release = function(){};

/**
 * @method requestThumbnailImagesAtTimes
 * <p>Asynchronously request thumbnail images for one or more points in time in the video.</p>
 * @description <p>The <code>times</code> parameter specifies an array of time values, in
<strong>seconds</strong>. For each time value, the platform generates an image 
representing the video at that point in time.</p>
<p>The callback function is invoked when a thumbnail is available.</p>
<p>Calling this method will cancel all pending asynchronous thumbnail requests.</p>
 * @param {Number[]} times 
 * <p>Array of time values, representing offsets into the video, in seconds.</p>
 * @param {Number} option 
 * <p>Either {@link Titanium.Media#property-VIDEO_TIME_OPTION_NEAREST_KEYFRAME} or 
{@link Titanium.Media#property-VIDEO_TIME_OPTION_EXACT}.</p>
 * @param {Function} callback 
 * <p>Callback to invoke when a thumbnail is available.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.requestThumbnailImagesAtTimes = function(times, option, callback){};

/**
 * @method setAllowsAirPlay
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-allowsAirPlay allowsAirPlay} property.</p>
 * @param {Boolean} allowsAirPlay 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setAllowsAirPlay = function(allowsAirPlay){};

/**
 * @method setAutoplay
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-autoplay autoplay} property.</p>
 * @param {Boolean} autoplay 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setAutoplay = function(autoplay){};

/**
 * @method setBackgroundView
 * <p>Sets the background view for customization which is always displayed behind movie content.</p>
 * @description <p>To create a background behind the movie content on iOS, you can specify a 
background view. On iOS, you can set the <code>backgroundColor</code> property directly on
the video player, but not a background image or background gradient. For this kind
of effect, specify a background view. </p>
<p>Note that the background view must be sized explicitly: percentage sizes do not work properly.</p>
<p>The following code sample creates a video player with a background image:</p>
<pre><code>var videoPlayer = Titanium.Media.createVideoPlayer({
    height : 300,
    width : 300,
    backgroundView : Ti.UI.createView({
        backgroundImage: 'videoPlayerBG.png
        width : 300,
        height : 300
    })
    borderRadius : 20,
    borderWidth : 2,
    borderColor : 'blue',
});
</code></pre>
<p>Note that if {@link Titanium.Media.VideoPlayer#property-scalingMode scalingMode} is set to 
{@link Titanium.Media#property-VIDEO_SCALING_MODE_FILL VIDEO_SCALING_MODE_FILL} or 
{@link Titanium.Media#property-VIDEO_SCALING_ASPECT_FILL VIDEO_SCALING_ASPECT_FILL},
the playing video will fill the entire video player area, obscuring any background
view.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to set.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setBackgroundView = function(view){};

/**
 * @method setContentURL
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-contentURL contentURL} property.</p>
 * @removed  3.0.0
 * @param {String} contentURL 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setContentURL = function(contentURL){};

/**
 * @method setCurrentPlaybackTime
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-currentPlaybackTime currentPlaybackTime} property.</p>
 * @param {Number} currentPlaybackTime 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setCurrentPlaybackTime = function(currentPlaybackTime){};

/**
 * @method setDuration
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-duration duration} property.</p>
 * @param {Number} duration 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setDuration = function(duration){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.Media.VideoPlayer.setEnabled = function(){};

/**
 * @method setEndPlaybackTime
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-endPlaybackTime endPlaybackTime} property.</p>
 * @param {Number} endPlaybackTime 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setEndPlaybackTime = function(endPlaybackTime){};

/**
 * @method setFullscreen
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#event-fullscreen fullscreen} property.</p>
 * @param {Boolean} fullscreen 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setFullscreen = function(fullscreen){};

/**
 * @method setInitialPlaybackTime
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-initialPlaybackTime initialPlaybackTime} property.</p>
 * @param {Number} initialPlaybackTime 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setInitialPlaybackTime = function(initialPlaybackTime){};

/**
 * @method setMedia
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-media media} property.</p>
 * @param {Titanium.Blob/Titanium.Filesystem.File/String} media 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setMedia = function(media){};

/**
 * @method setMediaControlStyle
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} property.</p>
 * @param {Number} mediaControlStyle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setMediaControlStyle = function(mediaControlStyle){};

/**
 * @method setMediaTypes
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-mediaTypes mediaTypes} property.</p>
 * @param {Number} mediaTypes 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setMediaTypes = function(mediaTypes){};

/**
 * @method setMovieControlMode
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-movieControlMode movieControlMode} property.</p>
 * @deprecated 1.8.0
 * @param {Number} movieControlMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setMovieControlMode = function(movieControlMode){};

/**
 * @method setNaturalSize
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-naturalSize naturalSize} property.</p>
 * @param {MovieSize} naturalSize 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setNaturalSize = function(naturalSize){};

/**
 * @method setRepeatMode
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-repeatMode repeatMode} property.</p>
 * @param {Number} repeatMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Media.VideoPlayer.setRepeatMode = function(repeatMode){};

/**
 * @method setScalingMode
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-scalingMode scalingMode} property.</p>
 * @param {Number} scalingMode 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setScalingMode = function(scalingMode){};

/**
 * @method setSourceType
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-sourceType sourceType} property.</p>
 * @param {Number} sourceType 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setSourceType = function(sourceType){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-url url} property.</p>
 * @param {String/String[]} url 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.setUrl = function(url){};

/**
 * @method setUseApplicationAudioSession
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-useApplicationAudioSession useApplicationAudioSession} property.</p>
 * @param {Boolean} useApplicationAudioSession 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.setUseApplicationAudioSession = function(useApplicationAudioSession){};

/**
 * @method setVolume
 * <p>Sets the value of the {@link Titanium.Media.VideoPlayer#property-volume volume} property.</p>
 * @param {Number} volume 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.Media.VideoPlayer.setVolume = function(volume){};

/**
 * @method stop
 * <p>Stops playing the video.</p>
 * @return void
*/
Titanium.Media.VideoPlayer.stop = function(){};

/**
 * @method thumbnailImageAtTime
 * <p>Returns a thumbnail image for the video at the specified time.</p>
 * @param {Number} time 
 * <p>Playback time, in <strong>seconds</strong>.</p>
 * @param {Number} option 
 * <p>Either {@link Titanium.Media#property-VIDEO_TIME_OPTION_NEAREST_KEYFRAME} or
{@link Titanium.Media#property-VIDEO_TIME_OPTION_EXACT}.</p>
 * @return {Titanium.Blob} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.VideoPlayer.thumbnailImageAtTime = function(time, option){};

/**
 * @property allowsAirPlay
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Whether or not the current movie can be played on a remote device.</p>
 */
Titanium.Media.VideoPlayer.allowsAirPlay = null;

/**
 * @property [autoplay=true]
 * @type Boolean
 * <p>Indicates if a movie should automatically start playback.</p>
 * @description <p>On iOS, playback starts automatically if <code>autoplay</code> is <code>true</code> <em>and</em> the movie is likely to 
finish uninterrupted. The OS determines whether the movie is likely to finish
uninterrupted based on factors including the bit rate of the movie and network
conditions (if the movie is being streamed from a remote source).</p>
 */
Titanium.Media.VideoPlayer.autoplay = null;

/**
 * @property contentURL
 * @type String
 * <p>URL of the media to play.</p>
 * @removed  3.0.0 <p>Use the {@link Titanium.Media.VideoPlayer#property-url url} property instead.</p>
 */
Titanium.Media.VideoPlayer.contentURL = null;

/**
 * @property currentPlaybackTime
 * @type Number
 * <p>Current playback time of the current movie in milliseconds.</p>
 */
Titanium.Media.VideoPlayer.currentPlaybackTime = null;

/**
 * @property duration
 * @type Number
 * <p>The duration of the current movie in milliseconds, or 0.0 if not known.</p>
 * @description <p>The duration of the movie may not be available when playback is started. The
{@link Titanium.Media.VideoPlayer#event-durationavailable durationavailable} event is 
fired when the duration is known.</p>
 */
Titanium.Media.VideoPlayer.duration = null;

/**
 * @property enabled 
 * @hide
*/Titanium.Media.VideoPlayer.enabled = null;

/**
 * @property endPlaybackTime
 * @type Number
 * <p>The end time of movie playback, in milliseconds.</p>
 * @description <p>On iOS, defaults to NaN, which indicates natural end time of the movie.
Changing the value to a value less than <code>duration</code> causes the movie to 
stop playing at the specified point. On iOS, this value is not applicable to
streaming media, so NaN is returned if the current media is being streamed.</p>
<p>On Android, this is always the same as {@link Titanium.Media.VideoPlayer#property-duration duration}
(the natural end time), and changing the value has no effect.</p>
 */
Titanium.Media.VideoPlayer.endPlaybackTime = null;

/**
 * @property [fullscreen=false]
 * @type Boolean
 * <p>Determines if the movie is presented in the entire screen (obscuring all other application content). </p>
 * @description <p>Note that this must be set at different times on different platforms:</p>
<p>On iOS, setting this property to <code>true</code> before the movie player's view is visible
has no effect. </p>
<p>On Android, this property must be set at creation time. For example:</p>
<pre><code>var player = Ti.Media.createVideoPlayer({fullscreen: true});
</code></pre>
<p>On Android, setting this value to <code>true</code> means that the video will have its own Android Activity 
rather than being embedded as a view. </p>
 */
Titanium.Media.VideoPlayer.fullscreen = null;

/**
 * @property initialPlaybackTime
 * @type Number
 * <p>The start time of movie playback, in milliseconds.</p>
 * @description <p>Defaults to NaN in iOS and 0 in Android, indicating the natural start time of the movie.</p>
 */
Titanium.Media.VideoPlayer.initialPlaybackTime = null;

/**
 * @property loadState
 * @type Number
 * @readonly
 * <p>Returns the network load state of the movie player.</p>
 */
Titanium.Media.VideoPlayer.loadState = null;

/**
 * @property media
 * @type Titanium.Blob/Titanium.Filesystem.File/String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Media object to play, as either a <code>File</code>,  a <code>Blob</code>, or a URL.</p>
 */
Titanium.Media.VideoPlayer.media = null;

/**
 * @property [mediaControlStyle=System default video controls ({@link Titanium.Media#property-VIDEO_CONTROL_DEFAULT}).]
 * @type Number
 * <p>The style of the playback controls.</p>
 * @description <p>Specify one of the <code>VIDEO_CONTROL</code> constants from {@link Titanium.Media}.</p>
<p>Mobile web only supports {@link Titanium.Media#property-VIDEO_CONTROL_NONE} and 
{@link Titanium.Media#property-VIDEO_CONTROL_DEFAULT}.</p>
 */
Titanium.Media.VideoPlayer.mediaControlStyle = null;

/**
 * @property mediaTypes
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The types of media in the movie, or {@link Titanium.Media#property-VIDEO_MEDIA_TYPE_NONE} if not known.</p>
 * @description <p>A movie can contain video
({@link Titanium.Media#property-VIDEO_MEDIA_TYPE_VIDEO VIDEO_MEDIA_TYPE_VIDEO}), 
audio, ({@link Titanium.Media#property-VIDEO_MEDIA_TYPE_AUDIO VIDEO_MEDIA_TYPE_AUDIO}), or both.</p>
<p>A movie with both audio and video media is represented by a bitwise OR of the two
constants:</p>
<pre><code>Titanium.Media.VIDEO_MEDIA_TYPE_VIDEO|Titanium.Media.VIDEO_MEDIA_TYPE_AUDIO
</code></pre>
 */
Titanium.Media.VideoPlayer.mediaTypes = null;

/**
 * @property [movieControlMode={@link Titanium.Media#property-VIDEO_CONTROL_DEFAULT}]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Style of the media playback controls.</p>
 * @description <p>Provides the ability to set the control mode of the movie player. </p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} instead.</p>
 */
Titanium.Media.VideoPlayer.movieControlMode = null;

/**
 * @property naturalSize
 * @type MovieSize
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Returns the natural size of the movie.</p>
 * @description <p>Returns a dictionary with properties <code>width</code> and <code>height</code>. Returns 0 for both properties if not 
known or applicable. </p>
<p>The {@link Titanium.Media.VideoPlayer#event-naturalSizeAvailable naturalSizeAvailable} event is
fired when the natural size is known.</p>
 */
Titanium.Media.VideoPlayer.naturalSize = null;

/**
 * @property playableDuration
 * @type Number
 * @readonly
 * <p>Currently playable duration of the movie, in milliseconds, for progressively 
downloaded network content, or 0.0 if not known.</p>
 * @description <p>On Android, this is always the same as {@link Titanium.Media.VideoPlayer#property-duration duration}.</p>
 */
Titanium.Media.VideoPlayer.playableDuration = null;

/**
 * @property playbackState
 * @type Number
 * @readonly
 * <p>Current playback state of the video player.</p>
 * @description <p>One of the <code>VIDEO_PLAYBACK_STATE</code> constants defined in {@link Titanium.Media}.</p>
 */
Titanium.Media.VideoPlayer.playbackState = null;

/**
 * @property playing
 * @type Boolean
 * @readonly
 * <p>Boolean to indicate if the player has started playing.</p>
 */
Titanium.Media.VideoPlayer.playing = null;

/**
 * @property [repeatMode=Titanium.Media.VIDEO_REPEAT_MODE_NONE]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines how the movie player repeats when reaching the end of playback.</p>
 * @description <p>Specify {@link Titanium.Media#property-VIDEO_REPEAT_MODE_NONE VIDEO_REPEAT_MODE_NONE} to disable
repeat, or {@link Titanium.Media#property-VIDEO_REPEAT_MODE_ONE VIDEO_REPEAT_MODE_ONE} to repeat
a single video continuously.</p>
 */
Titanium.Media.VideoPlayer.repeatMode = null;

/**
 * @property [scalingMode={@link Titanium.Media#property-VIDEO_SCALING_ASPECT_FIT}]
 * @type Number
 * <p>Determines how the content scales to fit the view.</p>
 * @description <p>Mobile web only supports 
{@link Titanium.Media#property-VIDEO_SCALING_NONE} and {@link Titanium.Media#property-VIDEO_SCALING_ASPECT_FIT}.</p>
 */
Titanium.Media.VideoPlayer.scalingMode = null;

/**
 * @property [sourceType=Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The playback type of the movie.</p>
 * @description <p>One of: {@link Titanium.Media#property-VIDEO_SOURCE_TYPE_FILE VIDEO_SOURCE_TYPE_FILE}, 
{@link Titanium.Media#property-VIDEO_SOURCE_TYPE_STREAMING VIDEO_SOURCE_TYPE_STREAMING}, or
{@link Titanium.Media#property-VIDEO_SOURCE_TYPE_UNKNOWN VIDEO_SOURCE_TYPE_UNKNOWN}.</p>
<p>Specifying a playback type before playing the movie can result in faster load times.</p>
<p>The {@link Titanium.Media.VideoPlayer#event-sourceChange sourceChange} event is fired when
movie's source type is determined.</p>
 */
Titanium.Media.VideoPlayer.sourceType = null;

/**
 * @property url
 * @type String/String[]
 * <p>URL of the media to play.</p>
 * @description <p>URL identifying a local or remote video to play.</p>
<p>On Mobile Web, video format support depends on the web browser. You can specify an
array of URLs to videos of different formats. The web browser will select the first
video URL in the array that it is able to play. This is not supported on iOS and Android.</p>
 */
Titanium.Media.VideoPlayer.url = null;

/**
 * @property [useApplicationAudioSession=true]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Indicates if the movie player should inherit the application's audio session
instead of creating a new session. </p>
 * @description <p>Creating a new session interrupts the application's session.</p>
<p>Setting this property during playback will not take effect until playback is stopped 
and started again.</p>
 */
Titanium.Media.VideoPlayer.useApplicationAudioSession = null;

/**
 * @property [volume=1.0]
 * @type Number
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Volume of the audio portion of the video. </p>
 * @description <p>On iOS, this adjusts the volume of the application's session as well, and will
not work if useApplicationAudioSession has been set false. On the iOS device,
setting this will be accompanied by an OS-provided indicator. However, the iOS
simulator does not honor this volume setting, and is a known issue with Apple's
simulator.</p>
 */
Titanium.Media.VideoPlayer.volume = null;




/**
 * @method beep
 * <p>Plays a device beep notification.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.beep = function(){};

/**
 * @method createAudioPlayer
 * <p>Creates and returns an instance of {@link Titanium.Media.AudioPlayer}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Media.AudioPlayer} except those marked not-creation or read-only.</p>
 * @return {Titanium.Media.AudioPlayer} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.Media.createAudioPlayer = function(parameters){};

/**
 * @method createAudioRecorder
 * <p>Creates and returns an instance of {@link Titanium.Media.AudioRecorder}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Media.AudioRecorder} except those marked not-creation or read-only.</p>
 * @return {Titanium.Media.AudioRecorder} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.Media.createAudioRecorder = function(parameters){};

/**
 * @method createItem
 * <p>Creates and returns an instance of {@link Titanium.Media.Item}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Media.Item} except those marked not-creation or read-only.</p>
 * @return {Titanium.Media.Item} 
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.Media.createItem = function(parameters){};

/**
 * @method createMusicPlayer
 * <p>Creates and returns an instance of {@link Titanium.Media.MusicPlayer}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Media.MusicPlayer} except those marked not-creation or read-only.</p>
 * @return {Titanium.Media.MusicPlayer} 
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.Media.createMusicPlayer = function(parameters){};

/**
 * @method createSound
 * <p>Creates and returns an instance of {@link Titanium.Media.Sound}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Media.Sound} except those marked not-creation or read-only.</p>
 * @return {Titanium.Media.Sound} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.Media.createSound = function(parameters){};

/**
 * @method createVideoPlayer
 * <p>Creates and returns an instance of {@link Titanium.Media.VideoPlayer}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Media.VideoPlayer} except those marked not-creation or read-only.</p>
 * @return {Titanium.Media.VideoPlayer} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Media.createVideoPlayer = function(parameters){};

/**
 * @method getAppMusicPlayer
 * <p>Gets the value of the {@link Titanium.Media#property-appMusicPlayer appMusicPlayer} property.</p>
 * @return {Titanium.Media.MusicPlayer} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAppMusicPlayer = function(){};

/**
 * @method getAudioLineType
 * <p>Gets the value of the {@link Titanium.Media#property-audioLineType audioLineType} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAudioLineType = function(){};

/**
 * @method getAudioPlaying
 * <p>Gets the value of the {@link Titanium.Media#property-audioPlaying audioPlaying} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAudioPlaying = function(){};

/**
 * @method getAudioSessionMode
 * <p>Gets the value of the {@link Titanium.Media#property-audioSessionMode audioSessionMode} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAudioSessionMode = function(){};

/**
 * @method getAvailableCameraMediaTypes
 * <p>Gets the value of the {@link Titanium.Media#property-availableCameraMediaTypes availableCameraMediaTypes} property.</p>
 * @return {Object[]} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAvailableCameraMediaTypes = function(){};

/**
 * @method getAvailablePhotoGalleryMediaTypes
 * <p>Gets the value of the {@link Titanium.Media#property-availablePhotoGalleryMediaTypes availablePhotoGalleryMediaTypes} property.</p>
 * @return {Object[]} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAvailablePhotoGalleryMediaTypes = function(){};

/**
 * @method getAvailablePhotoMediaTypes
 * <p>Gets the value of the {@link Titanium.Media#property-availablePhotoMediaTypes availablePhotoMediaTypes} property.</p>
 * @return {Object[]} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAvailablePhotoMediaTypes = function(){};

/**
 * @method getAverageMicrophonePower
 * <p>Gets the value of the {@link Titanium.Media#property-averageMicrophonePower averageMicrophonePower} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getAverageMicrophonePower = function(){};

/**
 * @method getCanRecord
 * <p>Gets the value of the {@link Titanium.Media#property-canRecord canRecord} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getCanRecord = function(){};

/**
 * @method getIsCameraSupported
 * <p>Gets the value of the {@link Titanium.Media#property-isCameraSupported isCameraSupported} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform android 0.1
 * @platform tizen 3.1
*/
Titanium.Media.getIsCameraSupported = function(){};

/**
 * @method getPeakMicrophonePower
 * <p>Gets the value of the {@link Titanium.Media#property-peakMicrophonePower peakMicrophonePower} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getPeakMicrophonePower = function(){};

/**
 * @method getSystemMusicPlayer
 * <p>Gets the value of the {@link Titanium.Media#property-systemMusicPlayer systemMusicPlayer} property.</p>
 * @return {Titanium.Media.MusicPlayer} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getSystemMusicPlayer = function(){};

/**
 * @method getVolume
 * <p>Gets the value of the {@link Titanium.Media#event-volume volume} property.</p>
 * @return {Number} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.getVolume = function(){};

/**
 * @method hideCamera
 * <p>Hides the device camera UI.</p>
 * @description <p>Must be called after calling <code>showCamera</code> and only when <code>autohide</code> is set to <code>false</code>. 
This method causes the media capture UI to be hidden.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.hideCamera = function(){};

/**
 * @method hideMusicLibrary
 * <p>Hides the music library.</p>
 * @description <p>Must be called after calling {@link Titanium.Media#method-openMusicLibrary openMusicLibrary} 
and only when <code>autohide</code> is set to <code>false</code>.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.hideMusicLibrary = function(){};

/**
 * @method isMediaTypeSupported
 * <p>Returns <code>true</code> if the source supports the specified media type.</p>
 * @description <p>You can query whether a given media type is supported by the device's
camera (<code>source</code> == 'camera') or photo library (<code>source</code> == 'photo').  </p>
<p>An additional value, <code>photogallery</code> can be  used to query the media 
supported by the device's camera roll or saved image album, which is a 
subset of the iOS photo library. However, when calling 
{@link Titanium.Media#method-openPhotoGallery openPhotoGallery} on iOS, the entire 
library is displayed, and there is currently no way to restrict the 
gallery to show only the camera roll/saved images album. </p>
 * @param {String} source 
 * <p>Media source specified as a string: <code>camera</code> for Camera or <code>photo</code> for Photo Library.</p>
 * @param {String} type 
 * <p>Media type to check, either <code>MEDIA_TYPE_PHOTO</code> or <code>MEDIA_TYPE_VIDEO</code>.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.isMediaTypeSupported = function(source, type){};

/**
 * @method openMusicLibrary
 * <p>Shows the music library and allows the user to select one or more tracks.</p>
 * @description <p>If <code>autohide</code> is set to <code>false</code>, you must hide the library explicitly using 
{@link Titanium.Media#method-hideMusicLibrary hideMusicLibrary}.</p>
 * @param {MusicLibraryOptionsType} options 
 * <p>A dictionary of options as described in {@link MusicLibraryOptionsType}.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.openMusicLibrary = function(options){};

/**
 * @method openPhotoGallery
 * <p>Opens the photo gallery image picker.</p>
 * @param {PhotoGalleryOptionsType} options 
 * <p>Photo gallery options as described in {@link PhotoGalleryOptionsType}.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform android 0.1
 * @platform tizen 3.1
*/
Titanium.Media.openPhotoGallery = function(options){};

/**
 * @method previewImage
 * <p>Displays the given image.</p>
 * @param {Object} options 
 * <p>Dictionary containing the image and callback functions.</p>
 * @return void
 * @platform android 0.1
*/
Titanium.Media.previewImage = function(options){};

/**
 * @method queryMusicLibrary
 * <p>Searches the music library for items matching the specified search predicates.</p>
 * @param {MediaQueryType} query 
 * <p>The query object to extract information from.</p>
 * @return {Titanium.Media.Item[]} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.queryMusicLibrary = function(query){};

/**
 * @method saveToPhotoGallery
 * <p>Saves media to the device's photo gallery / camera roll.</p>
 * @description <p>This operation is asynchronous. The caller can supply callbacks to be triggered when the
save operation completes.</p>
<p>Media can be passed as either a <code>Blob</code> object or a <code>File</code> object. If the <code>media</code> argument
is not one of these types, an error is generated.</p>
<p>Note that when passing a file (or a blob created from a file), the file name must 
have the appropriate extension for the data--for example, <code>image.jpg</code> or <code>video1.mov</code> work,
but <code>video1.tmp</code> does not. Currently, the <code>.mp4</code> extension is not supported, but MP4
files may be imported by saving them with the <code>.mov</code> extension.</p>
 * @param {Titanium.Blob/Titanium.Filesystem.File} media 
 * <p>Media to save to the camera roll or media gallery.</p>
 * @param {Object} callbacks 
 * <p>Pass a dictionary with the following supported keys: <code>success</code> a function that 
will be called when the save succeeds, and <code>error</code> a function that will be 
called upon receiving an error.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform tizen 3.1
*/
Titanium.Media.saveToPhotoGallery = function(media, callbacks){};

/**
 * @method setAudioSessionMode
 * <p>Sets the value of the {@link Titanium.Media#property-audioSessionMode audioSessionMode} property.</p>
 * @param {Number} audioSessionMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.setAudioSessionMode = function(audioSessionMode){};

/**
 * @method setAvailableCameraMediaTypes
 * <p>Sets the value of the {@link Titanium.Media#property-availableCameraMediaTypes availableCameraMediaTypes} property.</p>
 * @param {Object[]} availableCameraMediaTypes 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.setAvailableCameraMediaTypes = function(availableCameraMediaTypes){};

/**
 * @method setAvailablePhotoGalleryMediaTypes
 * <p>Sets the value of the {@link Titanium.Media#property-availablePhotoGalleryMediaTypes availablePhotoGalleryMediaTypes} property.</p>
 * @param {Object[]} availablePhotoGalleryMediaTypes 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.setAvailablePhotoGalleryMediaTypes = function(availablePhotoGalleryMediaTypes){};

/**
 * @method setAvailablePhotoMediaTypes
 * <p>Sets the value of the {@link Titanium.Media#property-availablePhotoMediaTypes availablePhotoMediaTypes} property.</p>
 * @param {Object[]} availablePhotoMediaTypes 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.setAvailablePhotoMediaTypes = function(availablePhotoMediaTypes){};

/**
 * @method setAverageMicrophonePower
 * <p>Sets the value of the {@link Titanium.Media#property-averageMicrophonePower averageMicrophonePower} property.</p>
 * @param {Number} averageMicrophonePower 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.setAverageMicrophonePower = function(averageMicrophonePower){};

/**
 * @method showCamera
 * <p>Shows the camera.</p>
 * @description <p>By default, the native camera controls are displayed. To add your own camera controls,
you can add an overlay view by setting the <code>overlay</code> property on the <code>options</code> argument.</p>
<h4>iOS Platform Notes</h4>
<p>To suppress the default controls, set <code>showControls</code> and <code>autohide</code> to <code>false</code>.</p>
<p>If the <code>showControls</code> option is <code>false</code>, you must control the camera explicitly, using
the {@link Titanium.Media#method-takePicture takePicture} and {@link Titanium.Media#method-hideCamera hideCamera} 
methods.</p>
 * @param {CameraOptionsType} options 
 * <p>A dictionary of camera options as described in {@link CameraOptionsType}.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform android 0.1
 * @platform tizen 3.1
*/
Titanium.Media.showCamera = function(options){};

/**
 * @method startMicrophoneMonitor
 * <p>Starts monitoring the microphone sound level.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.startMicrophoneMonitor = function(){};

/**
 * @method stopMicrophoneMonitor
 * <p>Stops monitoring the microphone sound level.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Media.stopMicrophoneMonitor = function(){};

/**
 * @method takePicture
 * <p>Uses the device camera to capture a photo.</p>
 * @description <p>Must be called after calling <code>showCamera</code> and only when <code>autohide</code> is set to <code>false</code>. </p>
<p>This method causes the media capture device to capture a photo and call the 
<code>success</code> callback.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform android 0.1
*/
Titanium.Media.takePicture = function(){};

/**
 * @method takeScreenshot
 * <p>Takes a screen shot of the visible UI on the device.</p>
 * @description <p>This method is asynchronous. The screenshot is returned in the callback argument.
The callback argument's <code>media</code> property contains the screenshot image as a 
{@link Titanium.Blob Blob} object.</p>
 * @param {Function} callback 
 * <p>Function to call upon capture.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform android 0.1
 * @platform tizen 3.1
*/
Titanium.Media.takeScreenshot = function(callback){};

/**
 * @method vibrate
 * <p>Makes the device vibrate.</p>
 * @description <p>On Android, Mobile Web and Tizen, a <code>pattern</code> argument can be provided to specify a
vibration pattern.</p>
<p>The <code>pattern</code> is an array of Number values.  Each number in the array is 
interpreted as a duration in milliseconds. The first number is the <em>delay</em> 
before the pattern starts, and the remaining numbers are interpreted as 
alternating periods of on and off times. For example, the following pattern:</p>
<p>[ 0, 500, 100, 500, 100, 500 ] </p>
<p>Would cause the vibration to start immediately (delay = 0), and perform three
long vibrations (500 ms) separated by short pauses (100ms).</p>
<p>On Mobile Web and Tizen, calling <code>vibrate</code> without a <code>pattern</code> will stop the vibration.</p>
 * @param {Number[]} pattern (optional)
 * <p>Array of values identifying a vibrate pattern (only used on Android).</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform android 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Media.vibrate = function(pattern){};

/**
 * @property AUDIO_FILEFORMAT_3GP2
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format 3GPP2.</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_3GP2 = null;

/**
 * @property AUDIO_FILEFORMAT_3GPP
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format 3GPP.</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_3GPP = null;

/**
 * @property AUDIO_FILEFORMAT_AIFF
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format Audio Interchange File Format (AIFF).</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_AIFF = null;

/**
 * @property AUDIO_FILEFORMAT_AMR
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format Adaptive Multi-Rate (AMR).</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_AMR = null;

/**
 * @property AUDIO_FILEFORMAT_CAF
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format Apple Compressed Audio Format (CAF).</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_CAF = null;

/**
 * @property AUDIO_FILEFORMAT_MP3
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format MP3.</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_MP3 = null;

/**
 * @property AUDIO_FILEFORMAT_MP4
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format MP4.</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_MP4 = null;

/**
 * @property AUDIO_FILEFORMAT_MP4A
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format MP4A.</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_MP4A = null;

/**
 * @property AUDIO_FILEFORMAT_WAVE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio file format WAVE.</p>
 */
Titanium.Media.AUDIO_FILEFORMAT_WAVE = null;

/**
 * @property AUDIO_FORMAT_AAC
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio format MPEG4 AAC encoding.</p>
 */
Titanium.Media.AUDIO_FORMAT_AAC = null;

/**
 * @property AUDIO_FORMAT_ALAW
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio format 8-bit aLaw encoding.</p>
 */
Titanium.Media.AUDIO_FORMAT_ALAW = null;

/**
 * @property AUDIO_FORMAT_APPLE_LOSSLESS
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio format Apple lossless encoding.</p>
 */
Titanium.Media.AUDIO_FORMAT_APPLE_LOSSLESS = null;

/**
 * @property AUDIO_FORMAT_ILBC
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio format iLBC encoding.</p>
 */
Titanium.Media.AUDIO_FORMAT_ILBC = null;

/**
 * @property AUDIO_FORMAT_IMA4
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio format Apple IMA4 encoding.</p>
 */
Titanium.Media.AUDIO_FORMAT_IMA4 = null;

/**
 * @property AUDIO_FORMAT_LINEAR_PCM
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio format 16-bit, linear PCM encoding.</p>
 */
Titanium.Media.AUDIO_FORMAT_LINEAR_PCM = null;

/**
 * @property AUDIO_FORMAT_ULAW
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Audio format 8-bit muLaw encoding.</p>
 */
Titanium.Media.AUDIO_FORMAT_ULAW = null;

/**
 * @property AUDIO_HEADPHONES
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant for headphones.</p>
 */
Titanium.Media.AUDIO_HEADPHONES = null;

/**
 * @property AUDIO_HEADPHONES_AND_MIC
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant for headphones and microphone.</p>
 */
Titanium.Media.AUDIO_HEADPHONES_AND_MIC = null;

/**
 * @property AUDIO_HEADSET_INOUT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant for headset in/out.</p>
 */
Titanium.Media.AUDIO_HEADSET_INOUT = null;

/**
 * @property AUDIO_LINEOUT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant for line-out.</p>
 */
Titanium.Media.AUDIO_LINEOUT = null;

/**
 * @property AUDIO_MICROPHONE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant for microphone.</p>
 */
Titanium.Media.AUDIO_MICROPHONE = null;

/**
 * @property AUDIO_MUTED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant indicated mute switch is on.</p>
 */
Titanium.Media.AUDIO_MUTED = null;

/**
 * @property AUDIO_RECEIVER_AND_MIC
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant indicating receiver and microphone.</p>
 */
Titanium.Media.AUDIO_RECEIVER_AND_MIC = null;

/**
 * @property AUDIO_SESSION_MODE_AMBIENT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>For long-duration sounds such as rain, car engine noise, and so on.</p>
 * @description <p>Also used for for 'play along' style applications, such a virtual piano that a 
user plays over iPod audio.</p>
<p>See also: {@link Titanium.Media#property-AUDIO_SESSION_MODE_SOLO_AMBIENT AUDIO_SESSION_MODE_SOLO_AMBIENT}.</p>
 */
Titanium.Media.AUDIO_SESSION_MODE_AMBIENT = null;

/**
 * @property AUDIO_SESSION_MODE_PLAYBACK
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Session mode for playing recorded music or other sounds that are central to the successful use of your application.</p>
 * @description <p>When using this mode, your application audio continues with the Ring/Silent switch set 
to silent or when the screen locks. This property normally disallows mixing iPod audio 
with application audio.</p>
 */
Titanium.Media.AUDIO_SESSION_MODE_PLAYBACK = null;

/**
 * @property AUDIO_SESSION_MODE_PLAY_AND_RECORD
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Session mode for recording (input) and playback (output) of audio, such as for a VOIP (voice over IP) application.</p>
 * @description <p>This category is appropriate for simultaneous recording and playback, and also for 
applications that record and play back but not simultaneously. If you want to ensure 
that sounds such as Messages alerts do not play while your application is recording, 
use  {@link Titanium.Media#property-AUDIO_SESSION_MODE_RECORD} instead. This category normally 
disallows mixing iPod audio with application audio.</p>
 */
Titanium.Media.AUDIO_SESSION_MODE_PLAY_AND_RECORD = null;

/**
 * @property AUDIO_SESSION_MODE_RECORD
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Session mode for recording audio; it silences playback audio.</p>
 */
Titanium.Media.AUDIO_SESSION_MODE_RECORD = null;

/**
 * @property AUDIO_SESSION_MODE_SOLO_AMBIENT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Session mode for long-duration sounds such as rain, car engine noise, and so on.</p>
 * @description <p>When you use this category, audio from built-in applications, such as the iPod, 
is silenced. Your audio is silenced when the Ring/Silent switch is set to <code>silent</code> 
or when the screen locks.</p>
<p>To use long-duration sounds without silencing built-in applications, 
see {@link Titanium.Media#property-AUDIO_SESSION_MODE_AMBIENT AUDIO_SESSION_MODE_AMBIENT}.</p>
 */
Titanium.Media.AUDIO_SESSION_MODE_SOLO_AMBIENT = null;

/**
 * @property AUDIO_SPEAKER
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant for speaker output.</p>
 */
Titanium.Media.AUDIO_SPEAKER = null;

/**
 * @property AUDIO_UNAVAILABLE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant indicating that audio is unavailable.</p>
 */
Titanium.Media.AUDIO_UNAVAILABLE = null;

/**
 * @property AUDIO_UNKNOWN
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Line-type constant indicating that line-type is unknown or not determined.</p>
 */
Titanium.Media.AUDIO_UNKNOWN = null;

/**
 * @property DEVICE_BUSY
 * @type Number
 * @readonly
 * <p>Constant for media device busy error.</p>
 */
Titanium.Media.DEVICE_BUSY = null;

/**
 * @property MEDIA_TYPE_PHOTO
 * @type String
 * @readonly
 * <p>Media type constant for photo media.</p>
 */
Titanium.Media.MEDIA_TYPE_PHOTO = null;

/**
 * @property MEDIA_TYPE_VIDEO
 * @type String
 * @readonly
 * <p>Media type constant for video media.</p>
 */
Titanium.Media.MEDIA_TYPE_VIDEO = null;

/**
 * @property MUSIC_MEDIA_GROUP_ALBUM
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by album.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_ALBUM = null;

/**
 * @property MUSIC_MEDIA_GROUP_ALBUM_ARTIST
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by album and artist.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_ALBUM_ARTIST = null;

/**
 * @property MUSIC_MEDIA_GROUP_ARTIST
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by artist.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_ARTIST = null;

/**
 * @property MUSIC_MEDIA_GROUP_COMPOSER
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by composer.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_COMPOSER = null;

/**
 * @property MUSIC_MEDIA_GROUP_GENRE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by genre.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_GENRE = null;

/**
 * @property MUSIC_MEDIA_GROUP_PLAYLIST
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by playlist.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_PLAYLIST = null;

/**
 * @property MUSIC_MEDIA_GROUP_PODCAST_TITLE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by podcast title.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_PODCAST_TITLE = null;

/**
 * @property MUSIC_MEDIA_GROUP_TITLE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for grouping query results by title.</p>
 */
Titanium.Media.MUSIC_MEDIA_GROUP_TITLE = null;

/**
 * @property MUSIC_MEDIA_TYPE_ALL
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Music library media containing any type of content.</p>
 */
Titanium.Media.MUSIC_MEDIA_TYPE_ALL = null;

/**
 * @property MUSIC_MEDIA_TYPE_ANY_AUDIO
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Music library media containing any type of audio content.</p>
 */
Titanium.Media.MUSIC_MEDIA_TYPE_ANY_AUDIO = null;

/**
 * @property MUSIC_MEDIA_TYPE_AUDIOBOOK
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Music library media containing audiobook content.</p>
 */
Titanium.Media.MUSIC_MEDIA_TYPE_AUDIOBOOK = null;

/**
 * @property MUSIC_MEDIA_TYPE_MUSIC
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Music library media containing music content.</p>
 */
Titanium.Media.MUSIC_MEDIA_TYPE_MUSIC = null;

/**
 * @property MUSIC_MEDIA_TYPE_PODCAST
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Music library media containing podcast content.</p>
 */
Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST = null;

/**
 * @property MUSIC_PLAYER_REPEAT_ALL
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for "Repeat All" setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_REPEAT_ALL = null;

/**
 * @property MUSIC_PLAYER_REPEAT_DEFAULT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for user's default repeat setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_REPEAT_DEFAULT = null;

/**
 * @property MUSIC_PLAYER_REPEAT_NONE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for "No Repeat" setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_REPEAT_NONE = null;

/**
 * @property MUSIC_PLAYER_REPEAT_ONE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for "Repeat one item" setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_REPEAT_ONE = null;

/**
 * @property MUSIC_PLAYER_SHUFFLE_ALBUMS
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for shuffling complete albums setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_SHUFFLE_ALBUMS = null;

/**
 * @property MUSIC_PLAYER_SHUFFLE_DEFAULT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for user's default shuffle setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_SHUFFLE_DEFAULT = null;

/**
 * @property MUSIC_PLAYER_SHUFFLE_NONE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for "no shuffle" setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_SHUFFLE_NONE = null;

/**
 * @property MUSIC_PLAYER_SHUFFLE_SONGS
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for shuffling songs setting.</p>
 */
Titanium.Media.MUSIC_PLAYER_SHUFFLE_SONGS = null;

/**
 * @property MUSIC_PLAYER_STATE_INTERRUPTED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for interrupted state.</p>
 */
Titanium.Media.MUSIC_PLAYER_STATE_INTERRUPTED = null;

/**
 * @property MUSIC_PLAYER_STATE_PAUSED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for paused state.</p>
 */
Titanium.Media.MUSIC_PLAYER_STATE_PAUSED = null;

/**
 * @property MUSIC_PLAYER_STATE_PLAYING
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for playing state.</p>
 */
Titanium.Media.MUSIC_PLAYER_STATE_PLAYING = null;

/**
 * @property MUSIC_PLAYER_STATE_SEEK_BACKWARD
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for backward seek state.</p>
 */
Titanium.Media.MUSIC_PLAYER_STATE_SEEK_BACKWARD = null;

/**
 * @property MUSIC_PLAYER_STATE_SEEK_FORWARD
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for forward seek state.</p>
 */
Titanium.Media.MUSIC_PLAYER_STATE_SEEK_FORWARD = null;

/**
 * @property MUSIC_PLAYER_STATE_STOPPED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for stopped state.</p>
 */
Titanium.Media.MUSIC_PLAYER_STATE_STOPPED = null;

/**
 * @property NO_CAMERA
 * @type Number
 * @readonly
 * <p>Constant for media no camera error.</p>
 */
Titanium.Media.NO_CAMERA = null;

/**
 * @property NO_VIDEO
 * @type Number
 * @readonly
 * <p>Constant for media no video error.</p>
 */
Titanium.Media.NO_VIDEO = null;

/**
 * @property QUALITY_HIGH
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Media type constant for high-quality video recording.</p>
 * @description <p>Recorded files are suitable for on-device playback and for wired transfer to the 
Desktop using Image Capture; they are likely to be too large for transfer using Wi-Fi.</p>
 */
Titanium.Media.QUALITY_HIGH = null;

/**
 * @property QUALITY_LOW
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Media type constant for low-quality video recording.</p>
 * @description <p>Recorded files can usually be transferred over the cellular network.</p>
 */
Titanium.Media.QUALITY_LOW = null;

/**
 * @property QUALITY_MEDIUM
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Media type constant for medium-quality video recording.</p>
 * @description <p>Recorded files can usually be transferred using Wi-Fi. This is the default video 
quality setting.</p>
 */
Titanium.Media.QUALITY_MEDIUM = null;

/**
 * @property UNKNOWN_ERROR
 * @type Number
 * @readonly
 * <p>Constant for unknown media error.</p>
 */
Titanium.Media.UNKNOWN_ERROR = null;

/**
 * @property VIDEO_CONTROL_DEFAULT
 * @type Number
 * @readonly
 * <p>Constant for default video controls.</p>
 * @description <p>Used in conjunction with the
{@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} property 
of {@link Titanium.Media.VideoPlayer}.</p>
 */
Titanium.Media.VIDEO_CONTROL_DEFAULT = null;

/**
 * @property VIDEO_CONTROL_EMBEDDED
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for video controls for an embedded view.</p>
 * @description <p>Used in conjunction with the
{@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} property 
of {@link Titanium.Media.VideoPlayer}.</p>
<p>On Android, this constant has the same effect as VIDEO_CONTROL_DEFAULT. Video controls may
only be shown or hidden. </p>
 */
Titanium.Media.VIDEO_CONTROL_EMBEDDED = null;

/**
 * @property VIDEO_CONTROL_FULLSCREEN
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for fullscreen video controls.</p>
 * @description <p>Used in conjunction with the
{@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} property 
of {@link Titanium.Media.VideoPlayer}.</p>
<p>On iOS, use VIDEO_CONTROL_FULLSCREEN when creating a video player that occupies the entire 
screen, that is, the parent window should be a fullscreen window 
({@link Titanium.UI.Window#property-fullscreen fullscreen} set to <code>true</code>) and the video player should 
occupy the entirety of the parent window.</p>
<p>If the user clicks the <strong>Done</strong> button in the fullscreen control bar, the video player 
pauses playback and generates a {@link Titanium.Media.VideoPlayer#event-complete complete} event. </p>
<p>Note that if you create a video player that does <em>not</em> occupy the entire screen, and later 
switch to fullscreen mode, the video controls are switched automatically. That is, if 
<code>mediaControlStyle</code> is set to VIDEO_CONTROL_DEFAULT or VIDEO_CONTROL_EMBEDDED, it is 
automatically switched to the fullscreen controls when the player enters fullscreen mode. 
This is true whether the user initiates the mode switch by clicking the fullscreen button
in the embedded controls, or if you programmatically switch to full screen mode (by setting 
the <code>fullscreen</code> property to true). </p>
<p>On Android, this constant has the same effect as VIDEO_CONTROL_DEFAULT. Video controls may 
only be shown or hidden.  </p>
 */
Titanium.Media.VIDEO_CONTROL_FULLSCREEN = null;

/**
 * @property VIDEO_CONTROL_HIDDEN
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for video controls hidden.</p>
 * @description <p>Used in conjunction with the
{@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} property 
of {@link Titanium.Media.VideoPlayer}.</p>
 */
Titanium.Media.VIDEO_CONTROL_HIDDEN = null;

/**
 * @property VIDEO_CONTROL_NONE
 * @type Number
 * @readonly
 * <p>Constant for no video controls.</p>
 * @description <p>Used in conjunction with the
{@link Titanium.Media.VideoPlayer#property-mediaControlStyle mediaControlStyle} property 
of {@link Titanium.Media.VideoPlayer}.</p>
 */
Titanium.Media.VIDEO_CONTROL_NONE = null;

/**
 * @property VIDEO_CONTROL_VOLUME_ONLY
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant for video controls volume only.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.Media#property-VIDEO_CONTROL_EMBEDDED} instead.</p>
 */
Titanium.Media.VIDEO_CONTROL_VOLUME_ONLY = null;

/**
 * @property VIDEO_FINISH_REASON_PLAYBACK_ENDED
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video playback ended normally.</p>
 */
Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ENDED = null;

/**
 * @property VIDEO_FINISH_REASON_PLAYBACK_ERROR
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video playback ended abnormally.</p>
 */
Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ERROR = null;

/**
 * @property VIDEO_FINISH_REASON_USER_EXITED
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video playback ended by user action (such as clicking the <code>Done</code> button).</p>
 */
Titanium.Media.VIDEO_FINISH_REASON_USER_EXITED = null;

/**
 * @property VIDEO_LOAD_STATE_PLAYABLE
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Current media is playable.</p>
 */
Titanium.Media.VIDEO_LOAD_STATE_PLAYABLE = null;

/**
 * @property VIDEO_LOAD_STATE_PLAYTHROUGH_OK
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Playback will be automatically started in this state when <code>autoplay</code> is true.</p>
 */
Titanium.Media.VIDEO_LOAD_STATE_PLAYTHROUGH_OK = null;

/**
 * @property VIDEO_LOAD_STATE_STALLED
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Playback will be automatically paused in this state, if started.</p>
 */
Titanium.Media.VIDEO_LOAD_STATE_STALLED = null;

/**
 * @property VIDEO_LOAD_STATE_UNKNOWN
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Current load state is not known.</p>
 */
Titanium.Media.VIDEO_LOAD_STATE_UNKNOWN = null;

/**
 * @property VIDEO_MEDIA_TYPE_AUDIO
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>A audio type of media in the movie returned by {@link Titanium.Media.VideoPlayer} <code>mediaTypes</code> property.</p>
 */
Titanium.Media.VIDEO_MEDIA_TYPE_AUDIO = null;

/**
 * @property VIDEO_MEDIA_TYPE_NONE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>An unknown type of media in the movie returned by {@link Titanium.Media.VideoPlayer} <code>mediaTypes</code> property.</p>
 */
Titanium.Media.VIDEO_MEDIA_TYPE_NONE = null;

/**
 * @property VIDEO_MEDIA_TYPE_VIDEO
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>A video type of media in the movie returned by {@link Titanium.Media.VideoPlayer} <code>mediaTypes</code> property.</p>
 */
Titanium.Media.VIDEO_MEDIA_TYPE_VIDEO = null;

/**
 * @property VIDEO_PLAYBACK_STATE_INTERRUPTED
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video playback has been interrupted.</p>
 */
Titanium.Media.VIDEO_PLAYBACK_STATE_INTERRUPTED = null;

/**
 * @property VIDEO_PLAYBACK_STATE_PAUSED
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Video playback is paused.</p>
 */
Titanium.Media.VIDEO_PLAYBACK_STATE_PAUSED = null;

/**
 * @property VIDEO_PLAYBACK_STATE_PLAYING
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Video is being played.</p>
 */
Titanium.Media.VIDEO_PLAYBACK_STATE_PLAYING = null;

/**
 * @property VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video playback is rewinding.</p>
 */
Titanium.Media.VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD = null;

/**
 * @property VIDEO_PLAYBACK_STATE_SEEKING_FORWARD
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video playback is seeking forward.</p>
 */
Titanium.Media.VIDEO_PLAYBACK_STATE_SEEKING_FORWARD = null;

/**
 * @property VIDEO_PLAYBACK_STATE_STOPPED
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Video playback is stopped.</p>
 */
Titanium.Media.VIDEO_PLAYBACK_STATE_STOPPED = null;

/**
 * @property VIDEO_REPEAT_MODE_NONE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Constant for disabling repeat on video playback.</p>
 */
Titanium.Media.VIDEO_REPEAT_MODE_NONE = null;

/**
 * @property VIDEO_REPEAT_MODE_ONE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Constant for repeating one video (i.e., the one video will repeat constantly) during playback.</p>
 */
Titanium.Media.VIDEO_REPEAT_MODE_ONE = null;

/**
 * @property VIDEO_SCALING_ASPECT_FILL
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Scale video to fill the screen, clipping edges if necessary.</p>
 * @description <p>Video is scaled until the video fills the entire screen. Content at the edges 
of the larger of the two dimensions is clipped so that the other dimension fits the 
screen exactly. The aspect ratio of the movie is preserved.</p>
 */
Titanium.Media.VIDEO_SCALING_ASPECT_FILL = null;

/**
 * @property VIDEO_SCALING_ASPECT_FIT
 * @type Number
 * @readonly
 * <p>Scale video to fit the screen, letterboxing if necessary.</p>
 * @description <p>Video is scaled until the larger dimension fits on the screen exactly. In the 
other dimension, the region between the edge of the movie and the edge of the screen 
is filled with a black bar. The aspect ratio of the movie is preserved.</p>
 */
Titanium.Media.VIDEO_SCALING_ASPECT_FIT = null;

/**
 * @property VIDEO_SCALING_MODE_FILL
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video is scaled until both dimensions fit the screen exactly, stretching if necessary.</p>
 * @description <p>The aspect ratio of the video is not preserved.</p>
 */
Titanium.Media.VIDEO_SCALING_MODE_FILL = null;

/**
 * @property VIDEO_SCALING_NONE
 * @type Number
 * @readonly
 * <p>Video scaling is disabled.</p>
 */
Titanium.Media.VIDEO_SCALING_NONE = null;

/**
 * @property VIDEO_SOURCE_TYPE_FILE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video source type is a file.</p>
 * @description <p>Related to the <code>sourceType</code> property of {@link Titanium.Media.VideoPlayer}.</p>
 */
Titanium.Media.VIDEO_SOURCE_TYPE_FILE = null;

/**
 * @property VIDEO_SOURCE_TYPE_STREAMING
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video source type is a remote stream.</p>
 * @description <p>Related to the <code>sourceType</code> property of {@link Titanium.Media.VideoPlayer}</p>
 */
Titanium.Media.VIDEO_SOURCE_TYPE_STREAMING = null;

/**
 * @property VIDEO_SOURCE_TYPE_UNKNOWN
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Video source type is unknown.</p>
 * @description <p>Related to the <code>sourceType</code> property of {@link Titanium.Media.VideoPlayer}</p>
 */
Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN = null;

/**
 * @property VIDEO_TIME_OPTION_EXACT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Use the exact time.</p>
 */
Titanium.Media.VIDEO_TIME_OPTION_EXACT = null;

/**
 * @property VIDEO_TIME_OPTION_NEAREST_KEYFRAME
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Use the closest keyframe in the time.</p>
 */
Titanium.Media.VIDEO_TIME_OPTION_NEAREST_KEYFRAME = null;

/**
 * @property appMusicPlayer
 * @type Titanium.Media.MusicPlayer
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>An instance of {@link Titanium.Media.MusicPlayer} representing the app-specific music player.</p>
 */
Titanium.Media.appMusicPlayer = null;

/**
 * @property audioLineType
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Returns the line type constant for the current line type.</p>
 */
Titanium.Media.audioLineType = null;

/**
 * @property audioPlaying
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Returns <code>true</code> if the device is playing audio.</p>
 */
Titanium.Media.audioPlaying = null;

/**
 * @property audioSessionMode
 * @type Number
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>A constant for the audio session mode to be used.</p>
 * @description <p>Set to one of the <code>AUDIO_SESSION</code> constants defined in {@link Titanium.Media}.</p>
<p>Must be set while the audio session is inactive (no sounds are playing, no listeners 
for audio properties on the Media module, but the iPod may be active).</p>
 */
Titanium.Media.audioSessionMode = null;

/**
 * @property availableCameraMediaTypes
 * @type Object[]
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Array of media type constants supported for the camera.</p>
 */
Titanium.Media.availableCameraMediaTypes = null;

/**
 * @property availablePhotoGalleryMediaTypes
 * @type Object[]
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Array of media type constants supported for saving to the device's camera roll or saved images album.</p>
 */
Titanium.Media.availablePhotoGalleryMediaTypes = null;

/**
 * @property availablePhotoMediaTypes
 * @type Object[]
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Array of media type constants supported for the photo library.</p>
 */
Titanium.Media.availablePhotoMediaTypes = null;

/**
 * @property averageMicrophonePower
 * @type Number
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Current average microphone level in dB or -1 if microphone monitoring is disabled.</p>
 * @description <p>See {@link Titanium.Media#method-startMicrophoneMonitor startMicrophoneMonitor}, 
{@link Titanium.Media#method-stopMicrophoneMonitor stopMicrophoneMonitor}.</p>
 */
Titanium.Media.averageMicrophonePower = null;

/**
 * @property canRecord
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p><code>true</code> if the device has a recording input device available.</p>
 */
Titanium.Media.canRecord = null;

/**
 * @property isCameraSupported
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform android 0.1
 * @platform tizen 3.1
 * <p><code>true</code> if the device has camera support.</p>
 */
Titanium.Media.isCameraSupported = null;

/**
 * @property peakMicrophonePower
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Current microphone level peak power in dB or -1 if microphone monitoring is disabled.</p>
 * @description <p>See {@link Titanium.Media#method-startMicrophoneMonitor startMicrophoneMonitor}, 
{@link Titanium.Media#method-stopMicrophoneMonitor stopMicrophoneMonitor}.</p>
 */
Titanium.Media.peakMicrophonePower = null;

/**
 * @property systemMusicPlayer
 * @type Titanium.Media.MusicPlayer
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>An instance of {@link Titanium.Media.MusicPlayer} representing the system-wide music player.</p>
 */
Titanium.Media.systemMusicPlayer = null;

/**
 * @property volume
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Current volume of the playback device.</p>
 */
Titanium.Media.volume = null;

/**
 * @class Titanium.Module
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>Base type for all Titanium modules.</p>
 * @description <p>A Titanium module is a non-createable Titanium object that is exposed through the
global Titanium object.</p>
<p>For example, the {@link Titanium.UI} module provides constants and factory methods related
to UI objects, as well as a few UI-related properties that are not related to a
specific object.</p>
 */
Titanium.Module = {};

/**
 * @class Titanium.Network
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level network module.</p>
 * @description <p>The <code>Network</code> module is used to access networking related functionality.</p>
<p>For TCP sockets, see {@link Titanium.Network.Socket.TCP}.</p>
<p>The legacy {@link Titanium.Network.TCPSocket} object is still required
by the {@link Titanium.Network.BonjourBrowser BonjourBrowser} and
{@link Titanium.Network.BonjourService BonjourService} objects.</p>
<p>For all other socket needs, use {@link Titanium.Network.Socket.TCP}.</p>
 */
Titanium.Network = {};

/**
 * @class Titanium.Network.BonjourBrowser
 * @typestr Object of Titanium.Network
 * @platform iphone 1.2
 * @platform ipad 1.2
 * @extends Titanium.Proxy
 * <p>A browser for the discovery and retrieval of Bonjour services available on the network.</p>
 * @description <p>Use the {@link Titanium.Network#method-createBonjourBrowser} method to create a <code>BonjourBrowser</code> instance.</p>
<p>If your application publishes Bonjour services itself, that service will be discovered 
by the browser if necessary; be prepared to perform a check if you do not want to list 
local services as available.  Bonjour service browsing is an asynchronous operation, 
meaning that you should be extremely careful when caching values from the <code>services</code> 
property returned by the <code>updatedServices</code> event.  In particular, if you maintain a 
local copy of available services and a user tries to connect to one, you should be prepared 
to handle failures gracefully; the next <code>updatedServices</code> event should provide the new 
services list, but you should not rely on it being delivered before user input.  When 
a window which uses Bonjour browsing is closed, if you do not want to continue searching, 
you must call the stop() method.</p>
 */
Titanium.Network.BonjourBrowser = {};



/**
 * @method getDomain
 * <p>Gets the value of the {@link Titanium.Network.BonjourBrowser#property-domain domain} property.</p>
 * @return {String} 
*/
Titanium.Network.BonjourBrowser.getDomain = function(){};

/**
 * @method getIsSearching
 * <p>Gets the value of the {@link Titanium.Network.BonjourBrowser#property-isSearching isSearching} property.</p>
 * @return {Boolean} 
*/
Titanium.Network.BonjourBrowser.getIsSearching = function(){};

/**
 * @method getServiceType
 * <p>Gets the value of the {@link Titanium.Network.BonjourBrowser#property-serviceType serviceType} property.</p>
 * @return {String} 
*/
Titanium.Network.BonjourBrowser.getServiceType = function(){};

/**
 * @method search
 * <p>Conduct a search for Bonjour services matching the type and domain specified during creation</p>
 * @return void
*/
Titanium.Network.BonjourBrowser.search = function(){};

/**
 * @method setDomain
 * <p>Sets the value of the {@link Titanium.Network.BonjourBrowser#property-domain domain} property.</p>
 * @param {String} domain 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourBrowser.setDomain = function(domain){};

/**
 * @method setIsSearching
 * <p>Sets the value of the {@link Titanium.Network.BonjourBrowser#property-isSearching isSearching} property.</p>
 * @param {Boolean} isSearching 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourBrowser.setIsSearching = function(isSearching){};

/**
 * @method setServiceType
 * <p>Sets the value of the {@link Titanium.Network.BonjourBrowser#property-serviceType serviceType} property.</p>
 * @param {String} serviceType 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourBrowser.setServiceType = function(serviceType){};

/**
 * @method stopSearch
 * <p>Halt an ongoing search</p>
 * @return void
*/
Titanium.Network.BonjourBrowser.stopSearch = function(){};

/**
 * @property domain
 * @type String
 * <p>The domain the browser is searching in</p>
 */
Titanium.Network.BonjourBrowser.domain = null;

/**
 * @property isSearching
 * @type Boolean
 * <p>Whether or not the browser is currently searching</p>
 */
Titanium.Network.BonjourBrowser.isSearching = null;

/**
 * @property serviceType
 * @type String
 * <p>The type of the service the browser searches for</p>
 */
Titanium.Network.BonjourBrowser.serviceType = null;

/**
 * @class Titanium.Network.BonjourService
 * @typestr Object of Titanium.Network
 * @platform iphone 1.2
 * @platform ipad 1.2
 * @extends Titanium.Proxy
 * <p>Describes a service on the network which is published by Bonjour.</p>
 * @description <p>You can obtain a <code>BonjourService</code> instance by calling {@link Titanium.Network#method-createBonjourService} 
or from the <code>service</code> list from a {@link Titanium.Network.BonjourBrowser BonjourBrowser}<br />
<code>updatedServices</code> event.   </p>
<p>You can only publish Bonjour services attached to a socket which is currently listening; 
you cannot publish a service for a remotely connected socket.  If you stop the Bonjour 
service and wish to close the socket it uses, it is strongly recommended that you stop 
the service first.  When a window which publishes a Bonjour service is closed, you must 
stop the service if the associated socket is also to be closed, or if it is no longer 
necessary to publish.  Unlike other network operations, Bonjour service resolution and 
publishing is synchronous, so be aware that your code may block while resolution is going 
on.  In particular, you may wish to display UI elements indicating background activity 
before beginning resolution.</p>
 */
Titanium.Network.BonjourService = {};

/**
 * @method getDomain
 * <p>Gets the value of the {@link Titanium.Network.BonjourService#property-domain domain} property.</p>
 * @return {String} 
*/
Titanium.Network.BonjourService.getDomain = function(){};

/**
 * @method getIsLocal
 * <p>Gets the value of the {@link Titanium.Network.BonjourService#property-isLocal isLocal} property.</p>
 * @return {Boolean} 
*/
Titanium.Network.BonjourService.getIsLocal = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Network.BonjourService#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Network.BonjourService.getName = function(){};

/**
 * @method getSocket
 * <p>Gets the value of the {@link Titanium.Network.BonjourService#property-socket socket} property.</p>
 * @return {Object} 
*/
Titanium.Network.BonjourService.getSocket = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Titanium.Network.BonjourService#property-type type} property.</p>
 * @return {String} 
*/
Titanium.Network.BonjourService.getType = function(){};

/**
 * @method publish
 * <p>Publish a Bonjour service to the network.  Only works if isLocal is TRUE</p>
 * @param {Object} socket 
 * <p>a TCPSocket object to associate with the Bonjour service.</p>
 * @return void
*/
Titanium.Network.BonjourService.publish = function(socket){};

/**
 * @method resolve
 * <p>Resolve a Bonjour service from the network.  Must be done before attempting to access the service's socket information, if a remote service.  You cannot resolve a locally published service.</p>
 * @param {Number} timeout 
 * <p>the timeout for service resolution, in seconds.  Optional, default is 120s.</p>
 * @return void
*/
Titanium.Network.BonjourService.resolve = function(timeout){};

/**
 * @method setDomain
 * <p>Sets the value of the {@link Titanium.Network.BonjourService#property-domain domain} property.</p>
 * @param {String} domain 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourService.setDomain = function(domain){};

/**
 * @method setIsLocal
 * <p>Sets the value of the {@link Titanium.Network.BonjourService#property-isLocal isLocal} property.</p>
 * @param {Boolean} isLocal 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourService.setIsLocal = function(isLocal){};

/**
 * @method setName
 * <p>Sets the value of the {@link Titanium.Network.BonjourService#property-name name} property.</p>
 * @param {String} name 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourService.setName = function(name){};

/**
 * @method setSocket
 * <p>Sets the value of the {@link Titanium.Network.BonjourService#property-socket socket} property.</p>
 * @param {Object} socket 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourService.setSocket = function(socket){};

/**
 * @method setType
 * <p>Sets the value of the {@link Titanium.Network.BonjourService#property-type type} property.</p>
 * @param {String} type 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.BonjourService.setType = function(type){};

/**
 * @method stop
 * <p>Halts publication of a service.</p>
 * @return void
*/
Titanium.Network.BonjourService.stop = function(){};

/**
 * @property domain
 * @type String
 * <p>the domain of the service</p>
 */
Titanium.Network.BonjourService.domain = null;

/**
 * @property isLocal
 * @type Boolean
 * <p>whether or not the service is local to the device</p>
 */
Titanium.Network.BonjourService.isLocal = null;

/**
 * @property name
 * @type String
 * <p>the name of the service</p>
 */
Titanium.Network.BonjourService.name = null;

/**
 * @property socket
 * @type Object
 * <p>the TCPSocket object that is used to connect to the service</p>
 */
Titanium.Network.BonjourService.socket = null;

/**
 * @property type
 * @type String
 * <p>the type of the service</p>
 */
Titanium.Network.BonjourService.type = null;

/**
 * @class Titanium.Network.HTTPClient
 * @typestr Object of Titanium.Network
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>HTTP client object that (mostly) implements the XMLHttpRequest specification.</p>
 * @description <p>Use {@link Titanium.Network#method-createHTTPClient} to create a new <code>HTTPClient</code> object.</p>
<p>An <code>HTTPClient</code> object is intended to be used for a single request. It may be
possible to re-use an <code>HTTPClient</code> object, but this use case is not tested.</p>
<p>There are three steps in making a typical HTTP request:</p>
<ul>
<li>Creating an <code>HTTPClient</code> object.</li>
<li>Opening the <code>HTTPClient</code> object.</li>
<li>Sending the request.</li>
</ul>
<p>Before opening the request, you must define one or more callbacks to handle
the HTTP response, as well as errors, progress updates, and other conditions.</p>
<p>The <code>HTTPClient</code> callbacks operate somewhat differently from other
Titanium callbacks, in accordance with the XMLHttpRequest specification.</p>
<p>When the callbacks are invoked, the <code>this</code> value is set to either the
original <code>HTTPClient</code> object itself, or a response object that holds all
of the response-related properties defined for the <code>HTTPClient</code> object. So the
callbacks can use code like this to access the response values:</p>
<pre><code>httpResponse = this.responseText;
status = this.status;
</code></pre>
<h4>Asynchronous vs. Synchronous HTTP Requests</h4>
<p>By default, the <code>HTTPClient</code> makes asynchronous requests.  Asynchronous requests do not block
the application and use callbacks to process responses when they are received.</p>
<p>Synchronous requests block the execution of the application until it receives a response.
On the iOS and Mobile Web platforms,  you can make synchronous requests by setting the optional
<code>async</code> parameter to <code>false</code> when calling the {@link Titanium.Network.HTTPClient#method-open open} method.</p>
<p>The Android platform does not support synchronous requests.</p>
<h4>Mobile Web Platform Implementation Notes</h4>
<p>Mobile Web is limited by the same-origin policy. According to W3C: "User agents
commonly apply same-origin restrictions to network requests. These restrictions
prevent a client-side Web application running from one origin from obtaining
data retrieved from another origin, and also limit unsafe HTTP requests that can
be automatically launched toward destinations that differ from the running
application's origin."  This means that browsers cannot request information from
a domain that the app itself does not reside on. If you are hosting the app at
foo.example.com, then requests to any domain other than *.example.com will fail.</p>
<p>There are two solutions to get around this problem:</p>
<ul>
<li>Configure the destination server to support Cross-Origin Resource Sharing.</li>
<li>Use {@link Titanium.Network#property-httpURLFormatter Ti.Network.httpURLFormatter} in conjunction
  with a proxy on the server hosting the application.</li>
</ul>
<p>If you use a proxy, be sure to properly configure how cookies are passed through. You
may not want cookies proxied to third parties that could identify a user.</p>
<p>More information about Cross-Origin Resource Sharing can be found on the
<a href="http://www.w3.org/TR/cors/">W3C Cross-Origin Resource Sharing</a> specification page.</p>
 * <h3>Example</h3>
 * <h4>Simple GET Request</h4>
 * <p><p>The following code excerpt does a simple GET request and logs the response text.</p></p><pre> var url = "http://www.appcelerator.com";
 var client = Ti.Network.createHTTPClient({
     // function called when the response data is available
     onload : function(e) {
         Ti.API.info("Received text: " + this.responseText);
         alert('success');
     },
     // function called when an error occurs, including a timeout
     onerror : function(e) {
         Ti.API.debug(e.error);
         alert('error');
     },
     timeout : 5000  // in milliseconds
 });
 // Prepare the connection.
 client.open("GET", url);
 // Send the request.
 client.send();</pre>
 */
Titanium.Network.HTTPClient = {};

/**
 * @method abort
 * <p>Cancels a pending request.</p>
 * @return void
*/
Titanium.Network.HTTPClient.abort = function(){};

/**
 * @method addAuthFactory
 * <p>Registers a new AuthSchemeFactory for a given scheme.</p>
 * @description <p>Use this method to add support for authorization schemes not natively supported by Android.</p>
 * @param {String} scheme 
 * <p>The authentication scheme.</p>
 * @param {Object} factory 
 * <p>The authentication factory. This factory must implement the <a href="http://developer.android.com/reference/org/apache/http/auth/AuthSchemeFactory.html">AuthSchemeFactory</a> interface.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.Network.HTTPClient.addAuthFactory = function(scheme, factory){};

/**
 * @method clearCookies
 * <p>Clears any cookies stored for the host.</p>
 * @param {String} host 
 * <p>The URL of the host/domain to clear cookies for.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.HTTPClient.clearCookies = function(host){};

/**
 * @method getAllResponseHeaders
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-allResponseHeaders allResponseHeaders} property.</p>
 * @return {String} 
 * @platform android 0.1
 * @platform tizen 3.1
*/
Titanium.Network.HTTPClient.getAllResponseHeaders = function(){};

/**
 * @method getAutoEncodeUrl
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-autoEncodeUrl autoEncodeUrl} property.</p>
 * @return {Boolean} 
 * @platform android 0.1
*/
Titanium.Network.HTTPClient.getAutoEncodeUrl = function(){};

/**
 * @method getAutoRedirect
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-autoRedirect autoRedirect} property.</p>
 * @return {Boolean} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.HTTPClient.getAutoRedirect = function(){};

/**
 * @method getCache
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-cache cache} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.Network.HTTPClient.getCache = function(){};

/**
 * @method getConnected
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-connected connected} property.</p>
 * @return {Boolean} 
*/
Titanium.Network.HTTPClient.getConnected = function(){};

/**
 * @method getConnectionType
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-connectionType connectionType} property.</p>
 * @return {String} 
*/
Titanium.Network.HTTPClient.getConnectionType = function(){};

/**
 * @method getDomain
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-domain domain} property.</p>
 * @return {String} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
*/
Titanium.Network.HTTPClient.getDomain = function(){};

/**
 * @method getEnableKeepAlive
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-enableKeepAlive enableKeepAlive} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.HTTPClient.getEnableKeepAlive = function(){};

/**
 * @method getFile
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-file file} property.</p>
 * @return {String} 
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Network.HTTPClient.getFile = function(){};

/**
 * @method getLocation
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-location location} property.</p>
 * @return {String} 
*/
Titanium.Network.HTTPClient.getLocation = function(){};

/**
 * @method getOndatastream
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-ondatastream ondatastream} property.</p>
 * @return {Callback<Object>} 
*/
Titanium.Network.HTTPClient.getOndatastream = function(){};

/**
 * @method getOnerror
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-onerror onerror} property.</p>
 * @return {Callback<FailureResponse>} 
*/
Titanium.Network.HTTPClient.getOnerror = function(){};

/**
 * @method getOnload
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-onload onload} property.</p>
 * @return {Callback<SuccessResponse>} 
*/
Titanium.Network.HTTPClient.getOnload = function(){};

/**
 * @method getOnreadystatechange
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-onreadystatechange onreadystatechange} property.</p>
 * @return {Callback<Object>} 
*/
Titanium.Network.HTTPClient.getOnreadystatechange = function(){};

/**
 * @method getOnsendstream
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-onsendstream onsendstream} property.</p>
 * @return {Callback<Object>} 
*/
Titanium.Network.HTTPClient.getOnsendstream = function(){};

/**
 * @method getPassword
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-password password} property.</p>
 * @return {String} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
*/
Titanium.Network.HTTPClient.getPassword = function(){};

/**
 * @method getReadyState
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-readyState readyState} property.</p>
 * @return {Number} 
*/
Titanium.Network.HTTPClient.getReadyState = function(){};

/**
 * @method getResponseData
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-responseData responseData} property.</p>
 * @return {Titanium.Blob} 
*/
Titanium.Network.HTTPClient.getResponseData = function(){};

/**
 * @method getResponseHeader
 * <p>Returns the value of the specified response header.</p>
 * @param {String} name 
 * <p>Name of the header to retrieve.</p>
 * @return {String} 
*/
Titanium.Network.HTTPClient.getResponseHeader = function(name){};

/**
 * @method getResponseText
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-responseText responseText} property.</p>
 * @return {String} 
*/
Titanium.Network.HTTPClient.getResponseText = function(){};

/**
 * @method getResponseXML
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-responseXML responseXML} property.</p>
 * @return {Titanium.XML.Document} 
*/
Titanium.Network.HTTPClient.getResponseXML = function(){};

/**
 * @method getStatus
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-status status} property.</p>
 * @return {Number} 
*/
Titanium.Network.HTTPClient.getStatus = function(){};

/**
 * @method getStatusText
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-statusText statusText} property.</p>
 * @return {String} 
*/
Titanium.Network.HTTPClient.getStatusText = function(){};

/**
 * @method getTimeout
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-timeout timeout} property.</p>
 * @return {Number} 
*/
Titanium.Network.HTTPClient.getTimeout = function(){};

/**
 * @method getTlsVersion
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-tlsVersion tlsVersion} property.</p>
 * @return {Number} 
 * @platform iphone 1.8
 * @platform ipad 1.8
*/
Titanium.Network.HTTPClient.getTlsVersion = function(){};

/**
 * @method getUsername
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-username username} property.</p>
 * @return {String} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
*/
Titanium.Network.HTTPClient.getUsername = function(){};

/**
 * @method getValidatesSecureCertificate
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-validatesSecureCertificate validatesSecureCertificate} property.</p>
 * @return {Boolean} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.HTTPClient.getValidatesSecureCertificate = function(){};

/**
 * @method getWithCredentials
 * <p>Gets the value of the {@link Titanium.Network.HTTPClient#property-withCredentials withCredentials} property.</p>
 * @return {Boolean} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Network.HTTPClient.getWithCredentials = function(){};

/**
 * @method open
 * <p>Opens the request and prepares the connection.</p>
 * @param {String} method 
 * <p>HTTP method for this request, such as 'GET' or 'POST'.</p>
 * @param {String} url 
 * <p>URL for the request.</p>
 * @param {Boolean} [async=True] (optional)
 * <p>Determines whether the request should be made asynchronously. Only used on iOS, Mobile Web and Tizen.</p>
 * @return void
*/
Titanium.Network.HTTPClient.open = function(method, url, arg){};

/**
 * @method send
 * <p>Sends the request.</p>
 * @description <p>For POST requests, use the <code>data</code> parameter to send POST data.</p>
<p>If you pass a serializable JavaScript object, it is automatically turned into form-encoded
POST data. You can also send an arbitrary string or binary data (in the form of a
{@link Titanium.Blob}).</p>
<p>On iOS, you can specify a synchronous request when you call <code>open</code> by passing <code>false</code> for
the <code>async</code> parameter. In the case of a synchronous request, <code>send</code> blocks until the request
is complete.</p>
 * @param {Object/String/Titanium.Filesystem.File/Titanium.Blob} [data=no data] (optional)
 * <p>Data to send with a POST request.</p>
 * @return void
*/
Titanium.Network.HTTPClient.send = function(arg){};

/**
 * @method setAutoEncodeUrl
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-autoEncodeUrl autoEncodeUrl} property.</p>
 * @param {Boolean} autoEncodeUrl 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.1
*/
Titanium.Network.HTTPClient.setAutoEncodeUrl = function(autoEncodeUrl){};

/**
 * @method setAutoRedirect
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-autoRedirect autoRedirect} property.</p>
 * @param {Boolean} autoRedirect 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.HTTPClient.setAutoRedirect = function(autoRedirect){};

/**
 * @method setCache
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-cache cache} property.</p>
 * @param {Boolean} cache 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.Network.HTTPClient.setCache = function(cache){};

/**
 * @method setDomain
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-domain domain} property.</p>
 * @param {String} domain 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
*/
Titanium.Network.HTTPClient.setDomain = function(domain){};

/**
 * @method setEnableKeepAlive
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-enableKeepAlive enableKeepAlive} property.</p>
 * @param {Boolean} enableKeepAlive 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.HTTPClient.setEnableKeepAlive = function(enableKeepAlive){};

/**
 * @method setFile
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-file file} property.</p>
 * @param {String} file 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Network.HTTPClient.setFile = function(file){};

/**
 * @method setOndatastream
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-ondatastream ondatastream} property.</p>
 * @param {Function} ondatastream 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.HTTPClient.setOndatastream = function(ondatastream){};

/**
 * @method setOnerror
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-onerror onerror} property.</p>
 * @param {Function} onerror 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.HTTPClient.setOnerror = function(onerror){};

/**
 * @method setOnload
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-onload onload} property.</p>
 * @param {Function} onload 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.HTTPClient.setOnload = function(onload){};

/**
 * @method setOnreadystatechange
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-onreadystatechange onreadystatechange} property.</p>
 * @param {Function} onreadystatechange 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.HTTPClient.setOnreadystatechange = function(onreadystatechange){};

/**
 * @method setOnsendstream
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-onsendstream onsendstream} property.</p>
 * @param {Function} onsendstream 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.HTTPClient.setOnsendstream = function(onsendstream){};

/**
 * @method setPassword
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-password password} property.</p>
 * @param {String} password 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
*/
Titanium.Network.HTTPClient.setPassword = function(password){};

/**
 * @method setRequestHeader
 * <p>Sets the value for the specified request header. Must be called after <code>open</code> but before <code>send</code>.</p>
 * @param {String} name 
 * <p>Name of the header to set.</p>
 * @param {String} value 
 * <p>Value to assign to the header. May be <code>null</code> to clear a default header value, such as
X-Requested-With.</p>
 * @return void
*/
Titanium.Network.HTTPClient.setRequestHeader = function(name, value){};

/**
 * @method setTimeout
 * <p>Sets the request timeout.</p>
 * @description <p>On Mobile Web and Tizen, the timeout only works when making asynchronous requests.</p>
 * @param {Number} timeout 
 * <p>Timeout in milliseconds.</p>
 * @return void
*/
Titanium.Network.HTTPClient.setTimeout = function(timeout){};

/**
 * @method setTlsVersion
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-tlsVersion tlsVersion} property.</p>
 * @param {Number} tlsVersion 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 1.8
 * @platform ipad 1.8
*/
Titanium.Network.HTTPClient.setTlsVersion = function(tlsVersion){};

/**
 * @method setUsername
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-username username} property.</p>
 * @param {String} username 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
*/
Titanium.Network.HTTPClient.setUsername = function(username){};

/**
 * @method setValidatesSecureCertificate
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-validatesSecureCertificate validatesSecureCertificate} property.</p>
 * @param {Boolean} validatesSecureCertificate 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.HTTPClient.setValidatesSecureCertificate = function(validatesSecureCertificate){};

/**
 * @method setWithCredentials
 * <p>Sets the value of the {@link Titanium.Network.HTTPClient#property-withCredentials withCredentials} property.</p>
 * @param {Boolean} withCredentials 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Network.HTTPClient.setWithCredentials = function(withCredentials){};

/**
 * @property DONE
 * @type Number
 * @readonly
 * <p>Ready state constant indicating that the request is complete.</p>
 * @description <p>In this ready state, either the data has been transferred, or an error has occured.</p>
<p>See also {@link Titanium.Network.HTTPClient#property-readyState readyState}.</p>
 */
Titanium.Network.HTTPClient.DONE = null;

/**
 * @property HEADERS_RECEIVED
 * @type Number
 * @readonly
 * <p>Ready state constant indicating that response headers have been received.</p>
 * @description <p>See also {@link Titanium.Network.HTTPClient#property-readyState readyState}.</p>
 */
Titanium.Network.HTTPClient.HEADERS_RECEIVED = null;

/**
 * @property LOADING
 * @type Number
 * @readonly
 * <p>Ready state constant indicating that response data is being received from the remote server.</p>
 * @description <p>See also {@link Titanium.Network.HTTPClient#property-readyState readyState}.</p>
 */
Titanium.Network.HTTPClient.LOADING = null;

/**
 * @property OPENED
 * @type Number
 * @readonly
 * <p>Ready state constant indicating that the connection has been opened, but the request has
not yet been sent.</p>
 * @description <p>See also {@link Titanium.Network.HTTPClient#property-readyState readyState}.</p>
 */
Titanium.Network.HTTPClient.OPENED = null;

/**
 * @property UNSENT
 * @type Number
 * @readonly
 * <p>Ready state constant indicating that HTTPClient request has not been opened or sent.</p>
 * @description <p>See also {@link Titanium.Network.HTTPClient#property-readyState readyState}.</p>
 */
Titanium.Network.HTTPClient.UNSENT = null;

/**
 * @property allResponseHeaders
 * @type String
 * @readonly
 * @platform android 0.1
 * @platform tizen 3.1
 * <p>All of the response headers.</p>
 * @description <p>Contains a single string, or an empty string if no headers are available.</p>
<p>See also: {@link Titanium.Network.HTTPClient#method-getResponseHeader getResponseHeader}.</p>
 */
Titanium.Network.HTTPClient.allResponseHeaders = null;

/**
 * @property [autoEncodeUrl=true]
 * @type Boolean
 * @platform android 0.1
 * <p>Determines whether automatic encoding is enabled for the specified URL.</p>
 * @description <p>Set to <code>false</code> to disable automatic URL-encoding.</p>
 */
Titanium.Network.HTTPClient.autoEncodeUrl = null;

/**
 * @property [autoRedirect=true]
 * @type Boolean
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Determines whether automatic automatic handling of HTTP redirects is enabled.</p>
 * @description <p>Set to <code>false</code> to disable automatic HTTP redirects handling.</p>
 */
Titanium.Network.HTTPClient.autoRedirect = null;

/**
 * @property [cache=false]
 * @type Boolean
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Determines whether HTTP responses are cached.</p>
 * @description <p>If <code>cache</code> is set to <code>true</code>, requests using this HTTP client will cache their responses
(respecting headers such as "no-cache", "no-store", and cache expiry). In this case, repeated
requests to the same URL may retrieve the initial response rather than triggering a new
request. The cache is shared between all instances of <code>HTTPClient</code>.</p>
<p>Caching should only be enabled for HTTP requests which you expect the result to remain
consistent for.</p>
<p>If <code>cache</code> is <code>false</code>, any request on this HTTP client will result in a new HTTP request.</p>
<p>This propery must be set before <code>open</code> is called.</p>
 */
Titanium.Network.HTTPClient.cache = null;

/**
 * @property connected
 * @type Boolean
 * @readonly
 * <p>Indicates whether the response was successful.</p>
 */
Titanium.Network.HTTPClient.connected = null;

/**
 * @property connectionType
 * @type String
 * @readonly
 * <p>Connection type, normally either <code>GET</code> or <code>POST</code>.</p>
 */
Titanium.Network.HTTPClient.connectionType = null;

/**
 * @property [domain=Undefined]
 * @type String
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * <p>Sets the domain parameter for authentication credentials.</p>
 * @description <p>Set this parameter when authentication against NTLM domains along with the {@link Titanium.Network.HTTPClient#property-username username}
and {@link Titanium.Network.HTTPClient#property-password password} properties.
iOS supports NTLM authentication natively.
Android can be extended using the {@link Titanium.Network.HTTPClient#method-addAuthFactory addAuthFactory} method.
Must be set before calling {@link Titanium.Network.HTTPClient#method-open open}.</p>
 */
Titanium.Network.HTTPClient.domain = null;

/**
 * @property [enableKeepAlive=false]
 * @type Boolean
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Determines whether the client should attempt to keep a persistent connection.</p>
 * @description <p>Set to <code>true</code> to maintain a persistent connection.</p>
 */
Titanium.Network.HTTPClient.enableKeepAlive = null;

/**
 * @property file
 * @type String
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Target local file to receive data.</p>
 * @description <p>On iOS, can only be set <strong>after</strong> calling {@link Titanium.Network.HTTPClient#method-open open}.</p>
<p>On Mobile Web and Tizen, can be set anytime prior to calling {@link Titanium.Network.HTTPClient#method-send send}.
The file must be writable such as the application data directory or temp directory.</p>
 */
Titanium.Network.HTTPClient.file = null;

/**
 * @property location
 * @type String
 * @readonly
 * <p>Absolute URL of the request.</p>
 */
Titanium.Network.HTTPClient.location = null;

/**
 * @property ondatastream
 * @type Callback<Object>
 * <p>Function to be called at regular intervals as the request data is being received.</p>
 * @description <p>Must be set before calling <code>open</code>.</p>
<p>The <code>progress</code> property of the event will contain a value from 0.0-1.0 with the progress of
the request.</p>
 */
Titanium.Network.HTTPClient.ondatastream = null;

/**
 * @property onerror
 * @type Callback<FailureResponse>
 * <p>Function to be called upon a error response.</p>
 * @description <p>Must be set before calling <code>open</code>.</p>
<p>The callback's argument is an object with a single property, <code>error</code>, containing the error
string.</p>
 */
Titanium.Network.HTTPClient.onerror = null;

/**
 * @property onload
 * @type Callback<SuccessResponse>
 * <p>Function to be called upon a successful response.</p>
 * @description <p>Must be set before calling <code>open</code>.</p>
<p>To access response data and headers, access the <code>HTTPClient</code> object itself (accessible as
<code>this</code> during the callback, or the <code>source</code> property of the callback event).</p>
 */
Titanium.Network.HTTPClient.onload = null;

/**
 * @property onreadystatechange
 * @type Callback<Object>
 * <p>Function to be called for each {@link Titanium.Network.HTTPClient#property-readyState readyState} change.</p>
 * @description <p>Must be set before calling <code>open</code>.</p>
<p>When the callback is invoked, <code>this.readyState</code> is set to one of the
<code>Titanium.Network.HTTPClient</code> ready-state constants,
{@link Titanium.Network.HTTPClient#property-OPENED OPENED},
{@link Titanium.Network.HTTPClient#property-HEADERS_RECEIVED HEADERS_RECEIVED},
{@link Titanium.Network.HTTPClient#property-LOADING LOADING},
or {@link Titanium.Network.HTTPClient#property-DONE DONE}.</p>
 */
Titanium.Network.HTTPClient.onreadystatechange = null;

/**
 * @property onsendstream
 * @type Callback<Object>
 * <p>Function to be called at regular intervals as the request data is being transmitted.</p>
 * @description <p>Must be set before calling <code>open</code>.</p>
<p>The <code>progress</code> property of the event will contain a value from 0.0-1.0 with the progress of
the upload.</p>
 */
Titanium.Network.HTTPClient.onsendstream = null;

/**
 * @property [password=Undefined]
 * @type String
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * <p>Sets the password parameter for authentication credentials.</p>
 * @description <p>Must be set before calling {@link Titanium.Network.HTTPClient#method-open open}.</p>
 */
Titanium.Network.HTTPClient.password = null;

/**
 * @property readyState
 * @type Number
 * @readonly
 * <p>The current ready state of this HTTP request.</p>
 * @description <p>The ready state describes the current state of the request. The ready state is set to one of
the five <code>Titanium.Network.HTTPClient</code> ready state constants. A typical HTTP request goes
through the states in this order:</p>
<ul>
<li>{@link Titanium.Network.HTTPClient#property-UNSENT UNSENT}</li>
<li>{@link Titanium.Network.HTTPClient#property-OPENED OPENED}</li>
<li>{@link Titanium.Network.HTTPClient#property-HEADERS_RECEIVED HEADERS_RECEIVED}</li>
<li>{@link Titanium.Network.HTTPClient#property-LOADING LOADING}</li>
<li>{@link Titanium.Network.HTTPClient#property-DONE DONE}</li>
</ul>
<p>The <code>onreadystatechange</code> callback is invoked each time the ready state changes.</p>
 */
Titanium.Network.HTTPClient.readyState = null;

/**
 * @property responseData
 * @type Titanium.Blob
 * @readonly
 * <p>Response data as a <code>Blob</code> object.</p>
 */
Titanium.Network.HTTPClient.responseData = null;

/**
 * @property responseText
 * @type String
 * @readonly
 * <p>Response as text.</p>
 * @description <p>Set to <code>null</code> if an error was received or no data was returned.</p>
 */
Titanium.Network.HTTPClient.responseText = null;

/**
 * @property responseXML
 * @type Titanium.XML.Document
 * @readonly
 * <p>Response object as an XML DOM Document object.</p>
 * @description <p>Set to <code>null</code> if the content type returned by the server was not XML or if the content could not be parsed.</p>
 */
Titanium.Network.HTTPClient.responseXML = null;

/**
 * @property status
 * @type Number
 * @readonly
 * <p>Response HTTP status code.</p>
 */
Titanium.Network.HTTPClient.status = null;

/**
 * @property statusText
 * @type String
 * @readonly
 * <p>Human-readable status message associated with the status code.</p>
 */
Titanium.Network.HTTPClient.statusText = null;

/**
 * @property timeout
 * @type Number
 * <p>Timeout in milliseconds when the connection should be aborted.</p>
 * @description <p>On Mobile Web and Tizen, the timeout only works when making asynchronous requests.</p>
 */
Titanium.Network.HTTPClient.timeout = null;

/**
 * @property [tlsVersion=undefined. For iOS 4, this is effectively
{@link Titanium.Network#property-TLS_VERSION_1_0 TLS_VERSION_1_0}. For iOS 5 and greater, this is
{@link Titanium.Network#property-TLS_VERSION_1_2 TLS_VERSION_1_2}.]
 * @type Number
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>Sets the TLS version to use for handshakes.</p>
 * @description <p>If you experience handshake failures, set this value to a lower version using the TLS
constants in {@link Titanium.Network}. 'undefined', 'null', or unsupported values use the default
behavior for that iOS version.</p>
 */
Titanium.Network.HTTPClient.tlsVersion = null;

/**
 * @property [username=Undefined]
 * @type String
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * <p>Sets the username parameter for authentication credentials.</p>
 * @description <p>Must be set before calling {@link Titanium.Network.HTTPClient#method-open open}.</p>
 */
Titanium.Network.HTTPClient.username = null;

/**
 * @property [validatesSecureCertificate=False when running in the simulator or on device in testing mode, and true if built for
release in distribution mode.]
 * @type Boolean
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Determines how SSL certification validation is performed on connection.</p>
 */
Titanium.Network.HTTPClient.validatesSecureCertificate = null;

/**
 * @property [withCredentials=false]
 * @type Boolean
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether the request should include any cookies and HTTP authentication information.</p>
 * @description <p>Set to <code>true</code> to include cookies and HTTP authentication information with the request.</p>
<p>This property must be set before open() is called. Setting this to true will force the
request to be asynchronous.</p>
 */
Titanium.Network.HTTPClient.withCredentials = null;

/**
 * @class Titanium.Network.Socket
 * @typestr Submodule of Titanium.Network
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @extends Titanium.Module
 * <p>Socket module, used for creating sockets.</p>
 */
Titanium.Network.Socket = {};

/**
 * @class Titanium.Network.Socket.TCP
 * @typestr Object of Titanium.Network.Socket
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @extends Titanium.IOStream
 * <p>TCP socket that implements the <code>Titanium.IOStream</code> interface.</p>
 * @description <p>Most socket operations are asynchronous. When you create a socket, you can define
callback funtions to receive the results of API calls, as well as to handle incoming
data.</p>
<p>For example, for a client-side socket, you define 
{@link Titanium.Network.Socket.TCP#property-connected connected} and
{@link Titanium.Network.Socket.TCP#property-error error} callback functions.</p>
<p>To connect to a remote host, call the socket's
{@link Titanium.Network.Socket.TCP#method-connect connect} method. If the socket connects
successfully, your <code>connected</code> callback is invoked, and you can send and receive data
on the socket. If the socket connection fails, your <code>error</code> callback is invoked. </p>
<p>After a socket is connected, you can access it like any other {@link Titanium.IOStream}.
Note that the socket's <code>read</code> and <code>write</code> methods may block, so in most cases
you should use the asynchronous {@link Titanium.Stream#method-read read}, {@link Titanium.Stream#method-write write} 
and {@link Titanium.Stream#method-pump pump} methods provided by the {@link Titanium.Stream} module,
rather than using the socket object's <code>read</code> and <code>write</code> methods directly.</p>
<p>A familiarity with the basics of BSD socket programming is a recommended before using 
sockets with Titanium.</p>
<p>Use the {@link Titanium.Network.Socket#method-createTCP} method to create a TCP socket.</p>
 * <h3>Examples</h3>
 * <h4>Simple Socket IO using Stream.pump</h4>
 * <p><p>The following example uses the {@link Titanium.Stream#method-pump pump} method from the {@link Titanium.Stream} 
module to read data from a socket. The <code>pump</code> method registers a callback that is 
called repeatedly to process incoming data from the socket.</p></p><pre>var socket = Ti.Network.Socket.createTCP({
    host: 'blog.example.com', port: 80,
    connected: function (e) {
        Ti.API.info('Socket opened!');
        Ti.Stream.pump(e.socket, readCallback, 1024, true);
        Ti.Stream.write(socket, Ti.createBuffer({
            value: 'GET http://blog.example.com/index.html HTTP/1.1\r\n\r\n'
        }), writeCallback);
    },
        error: function (e) {
        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);
    },
});
socket.connect();

function writeCallback(e) {
    Ti.API.info('Successfully wrote to socket.');
}

function readCallback(e) {
    if (e.bytesProcessed == -1)
    {
        // Error / EOF on socket. Do any cleanup here.
        ...
    }
    try {
        if(e.buffer) {
            var received = e.buffer.toString();
            Ti.API.info('Received: ' + received);
        } else {
            Ti.API.error('Error: read callback called with no buffer!');
        }
    } catch (ex) {
        Ti.API.error(ex);
    }
}
</pre>
 * <h4>Listening Socket Example</h4>
 * <p><p>The following sample shows a trivial example of using a listening 
socket. In this case, the application simply sends messages to itself,
using the loopback address.</p></p><pre>// Hostname to listen on/connect to. Here we use the loopback
// address. iOS also supports Ti.Platform.address (the address of
// the WiFi interface).
// Android supports only the loopback address.

var hostname = '127.0.0.1';

var clientSocket = Ti.Network.Socket.createTCP({
    host : hostname,
    port : 40404,
    connected : function(e) {
        Ti.API.info('Client socket connected!');
        Ti.Stream.pump(e.socket, pumpCallback, 1024, true);
        e.socket.write(Ti.createBuffer({
            value : 'A message from a connecting socket.'
        }));
    },
    error : function(e) {
        Ti.API.info('Error (' + e.errorCode + '): ' + e.error);
    }
});

function writeCallback(e) {
    Ti.API.info('Successfully wrote to socket.');
}

function pumpCallback(e) {
    // Has the remote socket closed its end?
    if (e.bytesProcessed &lt; 0) {
        Ti.API.info("Closing client socket.");
        clientSocket.close();
        return;
    }
    try {
        if(e.buffer) {
            var received = e.buffer.toString();
            Ti.API.info('Received: ' + received);
        } else {
            Ti.API.error('Error: read callback called with no buffer!');
        }
    } catch (ex) {
        Ti.API.error(ex);
    }
}

//Create a socket and listen for incoming connections
var listenSocket = Ti.Network.Socket.createTCP({
    host : hostname,
    port : 40404,
    accepted : function(e) {
        // This where you would usually store the newly-connected socket, e.inbound
        // so it can be used for read / write operations elsewhere in the app.
        // In this case, we simply send a message then close the socket.
        Ti.API.info("Listening socket &lt;" + e.socket + "&gt; accepted incoming connection &lt;" + e.inbound + "&gt;");
        e.inbound.write(Ti.createBuffer({
            value : 'You have been connected to a listening socket.\r\n'
        }));
        e.inbound.close();
        // close the accepted socket

    },
    error : function(e) {
        Ti.API.error("Socket &lt;" + e.socket + "&gt; encountered error when listening");
        Ti.API.error(" error code &lt;" + e.errorCode + "&gt;");
        Ti.API.error(" error description &lt;" + e.error + "&gt;");
    }
});
// Starts the socket listening for connections, does not accept them
listenSocket.listen();
Ti.API.info("Listening now...");

// Tells socket to accept the next inbound connection. listenSocket.accepted gets
// called when a connection is accepted via accept()
Ti.API.info("Calling accept.");
listenSocket.accept({
    timeout : 10000
});

// Call connect after a short timeout to ensure the listening socket is ready to go.
Ti.API.info("Setting timer to connect.");
setTimeout(function(e)
{
    Ti.API.info("Calling connect on client socket.");
   clientSocket.connect();
}, 500);</pre>
 */
Titanium.Network.Socket.TCP = {};

/**
 * @method accept
 * <p>Tells a {@link Titanium.Network.Socket#property-LISTENING LISTENING} socket to accept a connection request at the top of a listener's request queue when one becomes available.</p>
 * @description <p>Nonblocking; if there are no connections in the queue, sets a flag so that 
the socket accepts the next incoming connection immediately. </p>
<p>Takes an argument, an {@link AcceptDict} object which assigns options to the new
connection.  If the socket is already flagged to accept the next connection, 
the existing accept options will be updated to use the newly specified <code>options</code> 
object. </p>
<p>The <code>accepted</code> callback is called when a new connection is accepted as a result of 
calling <code>accept</code>. The callback argument holds a reference to a new socket,
representing the accepted connection.</p>
<p>Note that the connected callback is <strong>not</strong> called on the newly created socket.   <br />
This is because the socket is created in the 
{@link Titanium.Network.Socket#property-CONNECTED CONNECTED} state, so it never transitions
to the <code>CONNECTED</code> state.</p>
<p>Throws an exception if called on a socket that is not in a 
{@link Titanium.Network.Socket#property-LISTENING LISTENING} state.</p>
 * @param {AcceptDict} options 
 * <p>Options to be set on next accepted socket.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.accept = function(options){};

/**
 * @method close
 * <p>Closes a socket.</p>
 * @description <p>Throws exception if the socket is not in a {@link Titanium.Network.Socket#property-CONNECTED CONNECTED} 
or {@link Titanium.Network.Socket#property-LISTENING LISTENING} state. Blocking.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.close = function(){};

/**
 * @method connect
 * <p>Attempts to connect the socket to its host/port.</p>
 * @description <p>Throws an exception if the socket is in a {@link Titanium.Network.Socket#property-CONNECTED CONNECTED} 
or {@link Titanium.Network.Socket#property-LISTENING LISTENING} state. 
Throws an exception if a valid host and port has not been set on this socket. </p>
<p>Nonblocking; connection attempts are asynchronous.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.connect = function(){};

/**
 * @method getAccepted
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-accepted accepted} property.</p>
 * @return {Callback<AcceptedCallbackArgs>} 
*/
Titanium.Network.Socket.TCP.getAccepted = function(){};

/**
 * @method getConnected
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-connected connected} property.</p>
 * @return {Callback<ConnectedCallbackArgs>} 
*/
Titanium.Network.Socket.TCP.getConnected = function(){};

/**
 * @method getError
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-error error} property.</p>
 * @return {Callback<ErrorCallbackArgs>} 
*/
Titanium.Network.Socket.TCP.getError = function(){};

/**
 * @method getHost
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-host host} property.</p>
 * @return {String} 
*/
Titanium.Network.Socket.TCP.getHost = function(){};

/**
 * @method getListenQueueSize
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-listenQueueSize listenQueueSize} property.</p>
 * @return {Number} 
*/
Titanium.Network.Socket.TCP.getListenQueueSize = function(){};

/**
 * @method getPort
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-port port} property.</p>
 * @return {Number} 
*/
Titanium.Network.Socket.TCP.getPort = function(){};

/**
 * @method getState
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-state state} property.</p>
 * @return {Number} 
*/
Titanium.Network.Socket.TCP.getState = function(){};

/**
 * @method getTimeout
 * <p>Gets the value of the {@link Titanium.Network.Socket.TCP#property-timeout timeout} property.</p>
 * @return {Number} 
*/
Titanium.Network.Socket.TCP.getTimeout = function(){};

/**
 * @method listen
 * <p>Attempts to start listening on the socket's host/port.</p>
 * @description <p>The <code>listen</code> call will attempt to listen on the specified host and/or port 
property for the socket if they are set.  </p>
<p>Nonblocking; may return before the socket is fully open and listening.</p>
<p>If the socket is already in a {@link Titanium.Network.Socket#property-LISTENING LISTENING} or
{@link Titanium.Network.Socket#property-CONNECTED CONNECTED} state, <code>listen</code> throws an exception
and sets the socket state to {@link Titanium.Network.Socket#property-ERROR ERROR}, but does 
<strong>not</strong> fire the error callback.</p>
<p>Any error encountered after the socket starts listening results in the error
callback being fired.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.listen = function(){};

/**
 * @method setAccepted
 * <p>Sets the value of the {@link Titanium.Network.Socket.TCP#property-accepted accepted} property.</p>
 * @param {Function} accepted 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.setAccepted = function(accepted){};

/**
 * @method setConnected
 * <p>Sets the value of the {@link Titanium.Network.Socket.TCP#property-connected connected} property.</p>
 * @param {Function} connected 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.setConnected = function(connected){};

/**
 * @method setError
 * <p>Sets the value of the {@link Titanium.Network.Socket.TCP#property-error error} property.</p>
 * @param {Function} error 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.setError = function(error){};

/**
 * @method setHost
 * <p>Sets the value of the {@link Titanium.Network.Socket.TCP#property-host host} property.</p>
 * @param {String} host 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.setHost = function(host){};

/**
 * @method setListenQueueSize
 * <p>Sets the value of the {@link Titanium.Network.Socket.TCP#property-listenQueueSize listenQueueSize} property.</p>
 * @param {Number} listenQueueSize 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.setListenQueueSize = function(listenQueueSize){};

/**
 * @method setPort
 * <p>Sets the value of the {@link Titanium.Network.Socket.TCP#property-port port} property.</p>
 * @param {Number} port 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.setPort = function(port){};

/**
 * @method setTimeout
 * <p>Sets the value of the {@link Titanium.Network.Socket.TCP#property-timeout timeout} property.</p>
 * @param {Number} timeout 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.Socket.TCP.setTimeout = function(timeout){};

/**
 * @property accepted
 * @type Callback<AcceptedCallbackArgs>
 * <p>Callback to be fired when a listener accepts a connection.</p>
 */
Titanium.Network.Socket.TCP.accepted = null;

/**
 * @property connected
 * @type Callback<ConnectedCallbackArgs>
 * <p>Callback to be fired when the socket enters the "connected" state.</p>
 * @description <p>Only invoked following a successful {@link Titanium.Network.Socket.TCP#method-connect connect}
call.</p>
<p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state. </p>
 */
Titanium.Network.Socket.TCP.connected = null;

/**
 * @property error
 * @type Callback<ErrorCallbackArgs>
 * <p>Callback to be fired when the socket enters the {@link Titanium.Network.Socket#property-ERROR ERROR} state.</p>
 */
Titanium.Network.Socket.TCP.error = null;

/**
 * @property host
 * @type String
 * <p>The host to connect to or listen on.</p>
 * @description <p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state. </p>
<p>Supports both IPv4 and IPv6 addresses.</p>
 */
Titanium.Network.Socket.TCP.host = null;

/**
 * @property listenQueueSize
 * @type Number
 * <p>Max number of pending incoming connections to be allowed when the socket is in the {@link Titanium.Network.Socket#property-LISTENING LISTENING} state.</p>
 * @description <p>Any incoming connections received while the max number of pending connections has 
been reached will be rejected.</p>
 */
Titanium.Network.Socket.TCP.listenQueueSize = null;

/**
 * @property port
 * @type Number
 * <p>The port to connect to or listen on.</p>
 * @description <p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state.</p>
 */
Titanium.Network.Socket.TCP.port = null;

/**
 * @property state
 * @type Number
 * @readonly
 * <p>Current state of the socket.</p>
 * @description <p>One of: {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED}, 
{@link Titanium.Network.Socket#property-CONNECTED CONNECTED}, 
{@link Titanium.Network.Socket#property-LISTENING LISTENING}, 
{@link Titanium.Network.Socket#property-CLOSED CLOSED}, or
{@link Titanium.Network.Socket#property-ERROR ERROR}.</p>
 */
Titanium.Network.Socket.TCP.state = null;

/**
 * @property timeout
 * @type Number
 * <p>Timeout, in milliseconds, for <code>connect</code> and all <code>write</code> operations.</p>
 * @description <p>Can only be modified when this socket is in the {@link Titanium.Network.Socket#property-INITIALIZED INITIALIZED} state. </p>
 */
Titanium.Network.Socket.TCP.timeout = null;

/**
 * @method createTCP
 * <p>Returns a new TCP socket object.</p>
 * @description <p>Takes a dictionary containing properties defined in {@link Titanium.Network.Socket.TCP}.<br />
Some properties are only needed based on whether the socket will be a connecting 
(client) socket or a listening (server) socket.</p>
 * @param {Object} params (optional)
 * <p>Creation parameters.</p>
 * @return {Titanium.Network.Socket.TCP} <p>New TCP socket.</p>
*/
Titanium.Network.Socket.createTCP = function(params){};

/**
 * @property CLOSED
 * @type Number
 * @readonly
 * <p>State value representing a closed socket.</p>
 */
Titanium.Network.Socket.CLOSED = null;

/**
 * @property CONNECTED
 * @type Number
 * @readonly
 * <p>State value representing a connected socket.</p>
 */
Titanium.Network.Socket.CONNECTED = null;

/**
 * @property ERROR
 * @type Number
 * @readonly
 * <p>State value indicating an error has occurred on the socket.</p>
 */
Titanium.Network.Socket.ERROR = null;

/**
 * @property INITIALIZED
 * @type Number
 * @readonly
 * <p>State value representing an initialized socket.</p>
 * @description <p>The initial state of a newly-created socket.</p>
 */
Titanium.Network.Socket.INITIALIZED = null;

/**
 * @property LISTENING
 * @type Number
 * @readonly
 * <p>State value representing a socket that is listening for connections.</p>
 */
Titanium.Network.Socket.LISTENING = null;

/**
 * @class Titanium.Network.TCPSocket
 * @typestr Object of Titanium.Network
 * @platform iphone 1.2
 * @platform ipad 1.2
 * @extends Titanium.Proxy
 * <p>The TCPSocket instance returned from {@link Titanium.Network#method-createTCPSocket}.  This object
represents a socket which either listens locally on the device for connections,
or connects to a remote machine.</p>
 * @description <p>Sockets are nontrivial; it is recommended that anyone using them be familiar with the basics of BSD sockets.  All sockets use TCP connections, and are asynchronous for read operations, so your program should be ready to receive 'read' events at any point.  Socket references cannot be transferred to socket objects, and vice-versa - socket references are an internal mechanism which is used only to determine which sockets to send data to and read data from.  For listening sockets, it is highly recommended that you use the {@link Titanium.Network#property-INADDR_ANY} constant as the host name.  If a window containing a socket is closed, the socket MUST be closed also unless you intend to continue to receive data, otherwise the socket will consume resources (and potentially cause conflicts with opening the window again, if a listener) until the program is restarted.  Be aware of the differences between the listen() and connect() functions; attempting to use one when you mean the other may result in errors, unpredictable behavior, or both.</p>
 * @deprecated 1.7.0 <p>USE {@link Titanium.Network.Socket.TCP} WHERE POSSIBLE.</p>
 */
Titanium.Network.TCPSocket = {};




/**
 * @method close
 * <p>close the socket</p>
 * @return void
*/
Titanium.Network.TCPSocket.close = function(){};

/**
 * @method connect
 * <p>connect the scocket to a TCP server</p>
 * @return void
*/
Titanium.Network.TCPSocket.connect = function(){};

/**
 * @method getHostName
 * <p>Gets the value of the {@link Titanium.Network.TCPSocket#property-hostName hostName} property.</p>
 * @return {String} 
*/
Titanium.Network.TCPSocket.getHostName = function(){};

/**
 * @method getIsValid
 * <p>Gets the value of the {@link Titanium.Network.TCPSocket#property-isValid isValid} property.</p>
 * @return {Boolean} 
*/
Titanium.Network.TCPSocket.getIsValid = function(){};

/**
 * @method getMode
 * <p>Gets the value of the {@link Titanium.Network.TCPSocket#property-mode mode} property.</p>
 * @return {Number} 
*/
Titanium.Network.TCPSocket.getMode = function(){};

/**
 * @method getPort
 * <p>Gets the value of the {@link Titanium.Network.TCPSocket#property-port port} property.</p>
 * @return {Number} 
*/
Titanium.Network.TCPSocket.getPort = function(){};

/**
 * @method getStripTerminator
 * <p>Gets the value of the {@link Titanium.Network.TCPSocket#property-stripTerminator stripTerminator} property.</p>
 * @return {Boolean} 
*/
Titanium.Network.TCPSocket.getStripTerminator = function(){};

/**
 * @method listen
 * <p>set up the socket to receive connections</p>
 * @return void
*/
Titanium.Network.TCPSocket.listen = function(){};

/**
 * @method setHostName
 * <p>Sets the value of the {@link Titanium.Network.TCPSocket#property-hostName hostName} property.</p>
 * @param {String} hostName 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.TCPSocket.setHostName = function(hostName){};

/**
 * @method setIsValid
 * <p>Sets the value of the {@link Titanium.Network.TCPSocket#property-isValid isValid} property.</p>
 * @param {Boolean} isValid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.TCPSocket.setIsValid = function(isValid){};

/**
 * @method setMode
 * <p>Sets the value of the {@link Titanium.Network.TCPSocket#property-mode mode} property.</p>
 * @param {Number} mode 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.TCPSocket.setMode = function(mode){};

/**
 * @method setPort
 * <p>Sets the value of the {@link Titanium.Network.TCPSocket#property-port port} property.</p>
 * @param {Number} port 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.TCPSocket.setPort = function(port){};

/**
 * @method setStripTerminator
 * <p>Sets the value of the {@link Titanium.Network.TCPSocket#property-stripTerminator stripTerminator} property.</p>
 * @param {Boolean} stripTerminator 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Network.TCPSocket.setStripTerminator = function(stripTerminator){};

/**
 * @method write
 * <p>write data to the socket, if the mode is WRITE_MODE or READ_WRITE_MODE</p>
 * @param {Object/String} data 
 * <p>either a string or blob object representing the data to be transferred</p>
 * @param {Number} sendTo 
 * <p>the socket reference to send the data to.  Default is to send to all connected sockets</p>
 * @return void
*/
Titanium.Network.TCPSocket.write = function(data, sendTo){};

/**
 * @property hostName
 * @type String
 * <p>the host name to connect to.  Must be {@link Titanium.Network#property-INADDR_ANY} or an identifier for the local device in order to listen</p>
 */
Titanium.Network.TCPSocket.hostName = null;

/**
 * @property isValid
 * @type Boolean
 * <p>whether or not the socket is valid</p>
 */
Titanium.Network.TCPSocket.isValid = null;

/**
 * @property mode
 * @type Number
 * <p>the socket's mode</p>
 */
Titanium.Network.TCPSocket.mode = null;

/**
 * @property port
 * @type Number
 * <p>the port to connect/listen on</p>
 */
Titanium.Network.TCPSocket.port = null;

/**
 * @property stripTerminator
 * @type Boolean
 * <p>strip terminating null character when sending string data; default is false</p>
 */
Titanium.Network.TCPSocket.stripTerminator = null;


/**
 * @method addConnectivityListener
 * <p>Legacy method to add a connectivity listener to listen for network changes.</p>
 * @removed  3.0.0 <p>Use the {@link Titanium.Network#event-change change} event to monitor connectivity changes.</p>
 * @param {Function} callback 
 * <p>Callback function to invoke upon network connectivity changes.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.addConnectivityListener = function(callback){};

/**
 * @method createBonjourBrowser
 * <p>Creates and returns a <code>BonjourBrowser</code> object.</p>
 * @param {String} serviceType 
 * <p>Service to search for, must include the protocol type suffix (._tcp).</p>
 * @param {String} [domain=<code>local.</code> (The trailing period is intentional.)] 
 * <p>Bonjour service domain to conduct the search in.</p>
 * @param {Object} parameters (optional)
 * <p>A dictionary object of properties defined in {@link Titanium.Network.BonjourBrowser}.</p>
 * @return {Titanium.Network.BonjourBrowser} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.createBonjourBrowser = function(serviceType, arg, parameters){};

/**
 * @method createBonjourService
 * <p>Creates and returns a <code>BonjourService</code> object.</p>
 * @param {String} name 
 * <p>Name of the service. Must be a unique identifier for this service type and domain.</p>
 * @param {String} type 
 * <p>Type of service.  Must include the protocol identifier (._tcp).</p>
 * @param {String} [domain=<code>local.</code> (The trailing period is intentional.)] 
 * <p>Domain to publish the service in.</p>
 * @param {Object} parameters (optional)
 * <p>Dictionary object of properties defined in {@link Titanium.Network.BonjourService}.</p>
 * @return {Titanium.Network.BonjourService} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.createBonjourService = function(name, type, arg, parameters){};

/**
 * @method createHTTPClient
 * <p>Creates and returns an instance of {@link Titanium.Network.HTTPClient}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.Network.HTTPClient} except those marked not-creation or read-only.</p>
 * @return {Titanium.Network.HTTPClient} 
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Network.createHTTPClient = function(parameters){};

/**
 * @method createTCPSocket
 * <p>Legacy method to create and return an instance of {@link Titanium.Network.TCPSocket}.</p>
 * @description <p>Note that <code>TCPSocket</code> is still used with the Bonjour services. For other uses,
see {@link Titanium.Network.Socket.TCP}.</p>
 * @deprecated 1.7.0 <p>Use {@link Titanium.Network.Socket#method-createTCP} instead.</p>
 * @param {String} hostName 
 * <p>Host name to connect to/listen on.</p>
 * @param {Number} port 
 * <p>Port for the socket.</p>
 * @param {Number} mode 
 * <p>Socket's mode; one of {@link Titanium.Network#property-READ_MODE}, {@link Titanium.Network#property-WRITE_MODE}, 
{@link Titanium.Network#property-READ_WRITE_MODE}.</p>
 * @param {Object} parameters 
 * <p>Dictionary object with properties defined in {@link Titanium.Network.TCPSocket}.</p>
 * @return {Titanium.Network.TCPSocket} 
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
*/
Titanium.Network.createTCPSocket = function(hostName, port, mode, parameters){};

/**
 * @method decodeURIComponent
 * <p>Returns a decoded version of a URI encoded value.</p>
 * @param {String} value 
 * <p>URI encoded input value to be decoded.</p>
 * @return {String} 
*/
Titanium.Network.decodeURIComponent = function(value){};

/**
 * @method encodeURIComponent
 * <p>Returns a URI encoded version of the specified URI component.</p>
 * @description <p>On iOS, this also escapes the following characters, which are allowed in a 
URL but may not be allowed or desirable inside a path component:</p>
<pre><code>!*'();:@+$,/?%#[]=&amp;
</code></pre>
 * @param {String} value 
 * <p>Input value to be encoded.</p>
 * @return {String} 
*/
Titanium.Network.encodeURIComponent = function(value){};

/**
 * @method getHttpURLFormatter
 * <p>Gets the value of the {@link Titanium.Network#property-httpURLFormatter httpURLFormatter} property.</p>
 * @return {Callback<String>} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Network.getHttpURLFormatter = function(){};

/**
 * @method getNetworkType
 * <p>Gets the value of the {@link Titanium.Network#property-networkType networkType} property.</p>
 * @return {Number} 
*/
Titanium.Network.getNetworkType = function(){};

/**
 * @method getNetworkTypeName
 * <p>Gets the value of the {@link Titanium.Network#property-networkTypeName networkTypeName} property.</p>
 * @return {String} 
*/
Titanium.Network.getNetworkTypeName = function(){};

/**
 * @method getOnline
 * <p>Gets the value of the {@link Titanium.Network#property-online online} property.</p>
 * @return {Boolean} 
*/
Titanium.Network.getOnline = function(){};

/**
 * @method getRemoteDeviceUUID
 * <p>Gets the value of the {@link Titanium.Network#property-remoteDeviceUUID remoteDeviceUUID} property.</p>
 * @return {String} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.getRemoteDeviceUUID = function(){};

/**
 * @method getRemoteNotificationTypes
 * <p>Gets the value of the {@link Titanium.Network#property-remoteNotificationTypes remoteNotificationTypes} property.</p>
 * @return {Number[]} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.getRemoteNotificationTypes = function(){};

/**
 * @method getRemoteNotificationsEnabled
 * <p>Gets the value of the {@link Titanium.Network#property-remoteNotificationsEnabled remoteNotificationsEnabled} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.getRemoteNotificationsEnabled = function(){};

/**
 * @method registerForPushNotifications
 * <p>Registers for push notifications with the Apple Push Notification Service.</p>
 * @description <p>This method should be called at application startup.</p>
 * @param {PushNotificationConfig} config 
 * <p>Dictionary specifying push-notification related options.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.registerForPushNotifications = function(config){};

/**
 * @method removeConnectivityListener
 * <p>Legacy method to remove a connectivity listener.</p>
 * @removed  3.0.0 <p>Use the {@link Titanium.Network#event-change change} event to monitor connectivity changes.</p>
 * @param {Function} callback 
 * <p>Callback function to remove.</p>
 * @return void
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Network.removeConnectivityListener = function(callback){};

/**
 * @method setHttpURLFormatter
 * <p>Sets the value of the {@link Titanium.Network#property-httpURLFormatter httpURLFormatter} property.</p>
 * @param {Function} httpURLFormatter 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Network.setHttpURLFormatter = function(httpURLFormatter){};

/**
 * @method unregisterForPushNotifications
 * <p>Unregisters the application for push notifications.</p>
 * @description <p>Per Apple's documentation, it is rarely necessary to call this method. See:
<a href="http://developer.apple.com/library/IOs/#documentation/UIKit/Reference/UIApplication_Class/Reference/Reference.html#//apple_ref/occ/instm/UIApplication/unregisterForRemoteNotifications">unregisterForRemoteNotifications in the UIApplication Class
Reference</a> </p>
<p>For example, calling this method would be required if a new version of 
your application no longer supports push notifications.</p>
 * @return void
*/
Titanium.Network.unregisterForPushNotifications = function(){};

/**
 * @property INADDR_ANY
 * @type String
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Special hostname value for listening sockets, representing all
locally available network interfaces.</p>
 * @deprecated 1.7.0
 */
Titanium.Network.INADDR_ANY = null;

/**
 * @property NETWORK_LAN
 * @type Number
 * @readonly
 * <p>A {@link Titanium.Network#property-networkType networkType} value indicating that the device is
communicating over a local-area network.</p>
 * @description <p>This network type is only used by the Mobile Web platform, when the application
is running in a desktop browser attached to a LAN.</p>
<p>This constant is also a possible value for the <code>networkType</code> property of the 
{@link Titanium.Network#event-change change} event.</p>
 */
Titanium.Network.NETWORK_LAN = null;

/**
 * @property NETWORK_MOBILE
 * @type Number
 * @readonly
 * <p>A {@link Titanium.Network#property-networkType networkType} value indicating that the device is
communicating over a mobile network.</p>
 * @description <p>This constant is also a possible value for the <code>networkType</code> property of the 
{@link Titanium.Network#event-change change} event.</p>
 */
Titanium.Network.NETWORK_MOBILE = null;

/**
 * @property NETWORK_NONE
 * @type Number
 * @readonly
 * <p>A {@link Titanium.Network#property-networkType networkType} value indicating that no 
network is available.</p>
 * @description <p>This constant is also a possible value for the <code>networkType</code> property of the 
{@link Titanium.Network#event-change change} event.</p>
 */
Titanium.Network.NETWORK_NONE = null;

/**
 * @property NETWORK_UNKNOWN
 * @type Number
 * @readonly
 * <p>A {@link Titanium.Network#property-networkType networkType} value indicating that the<br />
current network type is unknown.</p>
 * @description <p>This constant is also a possible value for the <code>networkType</code> property of the 
{@link Titanium.Network#event-change change} event.</p>
 */
Titanium.Network.NETWORK_UNKNOWN = null;

/**
 * @property NETWORK_WIFI
 * @type Number
 * @readonly
 * <p>A {@link Titanium.Network#property-networkType networkType} value indicating that the<br />
device is communicating over a WiFi network.</p>
 * @description <p>This constant is also a possible value for the <code>networkType</code> property of the 
{@link Titanium.Network#event-change change} event.</p>
 */
Titanium.Network.NETWORK_WIFI = null;

/**
 * @property NOTIFICATION_TYPE_ALERT
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value for an Alert style push notification.</p>
 */
Titanium.Network.NOTIFICATION_TYPE_ALERT = null;

/**
 * @property NOTIFICATION_TYPE_BADGE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value for a Badge style push notification.</p>
 */
Titanium.Network.NOTIFICATION_TYPE_BADGE = null;

/**
 * @property NOTIFICATION_TYPE_NEWSSTAND
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value for a Newsstand style push notification. Only available on iOS5 and later</p>
 */
Titanium.Network.NOTIFICATION_TYPE_NEWSSTAND = null;

/**
 * @property NOTIFICATION_TYPE_SOUND
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value for a Sound style push notification.</p>
 */
Titanium.Network.NOTIFICATION_TYPE_SOUND = null;

/**
 * @property READ_MODE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value specifying read-only mode for sockets.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.READ_MODE = null;

/**
 * @property READ_WRITE_MODE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value specifying read-write mode for sockets.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.READ_WRITE_MODE = null;

/**
 * @property SOCKET_CLOSED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value representing a socket in the CLOSED state.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.SOCKET_CLOSED = null;

/**
 * @property SOCKET_CONNECTED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value representing a socket in the CONNECTED state.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.SOCKET_CONNECTED = null;

/**
 * @property SOCKET_ERROR
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value representing a socket in the ERROR state.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.SOCKET_ERROR = null;

/**
 * @property SOCKET_INITIALIZED
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value representing a socket in the INITIALIZED state.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.SOCKET_INITIALIZED = null;

/**
 * @property SOCKET_LISTENING
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value representing a socket in the LISTENING state.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.SOCKET_LISTENING = null;

/**
 * @property TLS_VERSION_1_0
 * @type Number
 * @readonly
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>Constant value specifying TLS version 1.0 for SSL.</p>
 */
Titanium.Network.TLS_VERSION_1_0 = null;

/**
 * @property TLS_VERSION_1_1
 * @type Number
 * @readonly
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>Constant value specifying TLS version 1.1 for SSL.</p>
 */
Titanium.Network.TLS_VERSION_1_1 = null;

/**
 * @property TLS_VERSION_1_2
 * @type Number
 * @readonly
 * @platform iphone 1.8
 * @platform ipad 1.8
 * <p>Constant value specifying TLS version 1.2 for SSL.</p>
 */
Titanium.Network.TLS_VERSION_1_2 = null;

/**
 * @property WRITE_MODE
 * @type Number
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Constant value specifying write-only mode for sockets.</p>
 * @deprecated 1.7.0 <p>Used with the deprecated {@link Titanium.Network.TCPSocket} only.</p>
 * <p>See {@link Titanium.Network.Socket} for constants used with
 * {@link Titanium.Network.Socket.TCP} sockets.</p>
 */
Titanium.Network.WRITE_MODE = null;

/**
 * @property httpURLFormatter
 * @type Callback<String>
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>User-defined function that is called everytime HTTPClient connects to a remote resource.</p>
 * @description <p>The URL to connect to is passed in as the only function argument, and the function 
is expected to return a URL. The function should return <code>null</code> if an error occurs, 
which will cancel the HTTP request. </p>
<p>This function allows URLs to be formatted for use with the application's proxy to 
get around cross domain issues.</p>
 */
Titanium.Network.httpURLFormatter = null;

/**
 * @property networkType
 * @type Number
 * @readonly
 * <p>Network type value as a constant.</p>
 * @description <p>One of the <code>NETWORK</code> constants defined in {@link Titanium.Network}.</p>
 */
Titanium.Network.networkType = null;

/**
 * @property networkTypeName
 * @type String
 * @readonly
 * <p>Network type as a String. Returns one of <code>NONE</code>, <code>WIFI</code>, <code>LAN</code>, <code>MOBILE</code>, or <code>UNKNOWN</code>.</p>
 */
Titanium.Network.networkTypeName = null;

/**
 * @property online
 * @type Boolean
 * @readonly
 * <p>Boolean value indicating if the device can reach the Internet.</p>
 * @description <p>The <code>online</code> property is <code>true</code> if the device can currently reach the Internet
using either WiFi, mobile network or LAN.</p>
 */
Titanium.Network.online = null;

/**
 * @property remoteDeviceUUID
 * @type String
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Remote device UUID if the device is registered with the Apple Push Notification
Service, or null if it is not registered.</p>
 */
Titanium.Network.remoteDeviceUUID = null;

/**
 * @property remoteNotificationTypes
 * @type Number[]
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Array of push notification type constants enabled for the application.</p>
 */
Titanium.Network.remoteNotificationTypes = null;

/**
 * @property remoteNotificationsEnabled
 * @type Boolean
 * @readonly
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Indicates whether push  notifications have been enabled using 
{@link Titanium.Network#method-registerForPushNotifications registerForPushNotifications}.</p>
 */
Titanium.Network.remoteNotificationsEnabled = null;

/**
 * @class Titanium.Platform
 * @typestr Submodule of Titanium
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top-level Platform module.  The Platform module is used to access the device's platform-related 
functionality.</p>
 * <h3>Example</h3>
 * <h4>Battery Event Example</h4>
 * <p><p>Obtaining battery data when the battery state changes.</p></p><pre>Titanium.Platform.addEventListener('battery', function(e){
  Ti.API.info('The battery state has changed to ' + e.state);
  Ti.API.info('The battery level is ' + e.level);
  Ti.API.info('The battery event source is ' + e.source);
  Ti.API.info('The battery event name ' + e.type);
});</pre>
 */
Titanium.Platform = {};

/**
 * @class Titanium.Platform.Android
 * @typestr Submodule of Titanium.Platform
 * @platform android 1.8.2
 * @extends Titanium.Module
 * <p>The Android-specific Platform module, used to access the device's platform-related functionality.</p>
 */
Titanium.Platform.Android = {};

/**
 * @method getPhysicalSizeCategory
 * <p>Gets the value of the {@link Titanium.Platform.Android#property-physicalSizeCategory physicalSizeCategory} property.</p>
 * @return {Number} 
*/
Titanium.Platform.Android.getPhysicalSizeCategory = function(){};

/**
 * @property API_LEVEL
 * @type Number
 * @readonly
 * <p>Android API level identifier of the Operating System.</p>
 * @description <p>See the official Android Developers documentation for more information about 
<a href="http://developer.android.com/guide/appendix/api-levels.html">API levels</a>.</p>
 */
Titanium.Platform.Android.API_LEVEL = null;

/**
 * @property PHYSICAL_SIZE_CATEGORY_LARGE
 * @type Number
 * @readonly
 * <p>Constant to indicate that the physical size category of the current device/emulator is large</p>
 * @description <p>See the official Android Developers documentation for more information about
<a href="http://developer.android.com/reference/android/content/res/Configuration.html#SCREENLAYOUT_SIZE_LARGE">large screen sizes</a></p>
 */
Titanium.Platform.Android.PHYSICAL_SIZE_CATEGORY_LARGE = null;

/**
 * @property PHYSICAL_SIZE_CATEGORY_NORMAL
 * @type Number
 * @readonly
 * <p>Constant to indicate that the physical size category of the current device/emulator is normal</p>
 * @description <p>See the official Android Developers documentation for more information about
<a href="http://developer.android.com/reference/android/content/res/Configuration.html#SCREENLAYOUT_SIZE_NORMAL">normal screen sizes</a></p>
 */
Titanium.Platform.Android.PHYSICAL_SIZE_CATEGORY_NORMAL = null;

/**
 * @property PHYSICAL_SIZE_CATEGORY_SMALL
 * @type Number
 * @readonly
 * <p>Constant to indicate that the physical size category of the current device/emulator is small</p>
 * @description <p>See the official Android Developers documentation for more information about
<a href="http://developer.android.com/reference/android/content/res/Configuration.html#SCREENLAYOUT_SIZE_SMALL">small screen sizes</a></p>
 */
Titanium.Platform.Android.PHYSICAL_SIZE_CATEGORY_SMALL = null;

/**
 * @property PHYSICAL_SIZE_CATEGORY_UNDEFINED
 * @type Number
 * @readonly
 * <p>Constant to indicate that the physical size category of the current device/emulator is undefined</p>
 * @description <p>See the official Android Developers documentation for more information about
<a href="http://developer.android.com/reference/android/content/res/Configuration.html#SCREENLAYOUT_SIZE_UNDEFINED">undefined screen sizes</a></p>
 */
Titanium.Platform.Android.PHYSICAL_SIZE_CATEGORY_UNDEFINED = null;

/**
 * @property PHYSICAL_SIZE_CATEGORY_XLARGE
 * @type Number
 * @readonly
 * <p>Constant to indicate that the physical size category of the current device/emulator is extra large</p>
 * @description <p>See the official Android Developers documentation for more information about
<a href="http://developer.android.com/reference/android/content/res/Configuration.html#SCREENLAYOUT_SIZE_XLARGE">extra large screen sizes</a></p>
 */
Titanium.Platform.Android.PHYSICAL_SIZE_CATEGORY_XLARGE = null;

/**
 * @property physicalSizeCategory
 * @type Number
 * @readonly
 * <p>The physical size category of the Android device or emulator. </p>
 * @description <p>It can be one of the following values:
- Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_SMALL
- Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_NORMAL
- Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_LARGE
- Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_XLARGE
- Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_UNDEFINED</p>
 */
Titanium.Platform.Android.physicalSizeCategory = null;

/**
 * @class Titanium.Platform.DisplayCaps
 * @typestr Object of Titanium.Platform
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>The Display Caps object returned by the {@link Titanium.Platform#property-displayCaps} property.</p>
 * @description <p>On iPhone and iPod devices with retina display, the <code>density</code> property is <code>high</code> and the <code>dpi</code> 
property is <code>320</code>. For other iPhone and iPod devices, <code>density</code> is <code>medium</code> and <code>dpi</code> is <code>160</code>.</p>
<p>On iPad devices with retina display, the <code>density</code> property is <code>high</code> and the <code>dpi</code> 
property is <code>260</code>. For other iPad devices, <code>density</code> is <code>medium</code> and <code>dpi</code> is <code>130</code>.</p>
<p>Note that Xcode versions prior to 4.3.1 do not have the correct tools to detect the iPad 3 
retina display. Apps must be built with Xcode 4.3.1 or later to detect iPad 3 retina display.</p>
<p>Note that the <code>displayCaps</code> property begins with a lowercase letter, which differentiates it 
from the <code>DisplayCaps</code> object that it returns. Refer to the example to understand how it should 
be called.</p>
 * <h3>Example</h3>
 * <h4>System Display Information</h4>
 * <p><p>Output the display properties to the system log.</p></p><pre>Ti.API.info('Ti.Platform.displayCaps.density: ' + Ti.Platform.displayCaps.density);
Ti.API.info('Ti.Platform.displayCaps.dpi: ' + Ti.Platform.displayCaps.dpi);
Ti.API.info('Ti.Platform.displayCaps.platformHeight: ' + Ti.Platform.displayCaps.platformHeight);
Ti.API.info('Ti.Platform.displayCaps.platformWidth: ' + Ti.Platform.displayCaps.platformWidth);
if(Ti.Platform.osname === 'android'){
  Ti.API.info('Ti.Platform.displayCaps.xdpi: ' + Ti.Platform.displayCaps.xdpi);
  Ti.API.info('Ti.Platform.displayCaps.ydpi: ' + Ti.Platform.displayCaps.ydpi);
  Ti.API.info('Ti.Platform.displayCaps.logicalDensityFactor: ' + Ti.Platform.displayCaps.logicalDensityFactor);
}
</pre>
 */
Titanium.Platform.DisplayCaps = {};

/**
 * @method getDensity
 * <p>Gets the value of the {@link Titanium.Platform.DisplayCaps#property-density density} property.</p>
 * @return {String} 
*/
Titanium.Platform.DisplayCaps.getDensity = function(){};

/**
 * @method getDpi
 * <p>Gets the value of the {@link Titanium.Platform.DisplayCaps#property-dpi dpi} property.</p>
 * @return {Number} 
*/
Titanium.Platform.DisplayCaps.getDpi = function(){};

/**
 * @method getLogicalDensityFactor
 * <p>Gets the value of the {@link Titanium.Platform.DisplayCaps#property-logicalDensityFactor logicalDensityFactor} property.</p>
 * @return {Number} 
 * @platform android 0.8
*/
Titanium.Platform.DisplayCaps.getLogicalDensityFactor = function(){};

/**
 * @method getPlatformHeight
 * <p>Gets the value of the {@link Titanium.Platform.DisplayCaps#property-platformHeight platformHeight} property.</p>
 * @return {Number} 
*/
Titanium.Platform.DisplayCaps.getPlatformHeight = function(){};

/**
 * @method getPlatformWidth
 * <p>Gets the value of the {@link Titanium.Platform.DisplayCaps#property-platformWidth platformWidth} property.</p>
 * @return {Number} 
*/
Titanium.Platform.DisplayCaps.getPlatformWidth = function(){};

/**
 * @method getXdpi
 * <p>Gets the value of the {@link Titanium.Platform.DisplayCaps#property-xdpi xdpi} property.</p>
 * @return {Number} 
 * @platform android 0.8
*/
Titanium.Platform.DisplayCaps.getXdpi = function(){};

/**
 * @method getYdpi
 * <p>Gets the value of the {@link Titanium.Platform.DisplayCaps#property-ydpi ydpi} property.</p>
 * @return {Number} 
 * @platform android 0.8
*/
Titanium.Platform.DisplayCaps.getYdpi = function(){};

/**
 * @method setDensity
 * <p>Sets the value of the {@link Titanium.Platform.DisplayCaps#property-density density} property.</p>
 * @param {String} density 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Platform.DisplayCaps.setDensity = function(density){};

/**
 * @method setDpi
 * <p>Sets the value of the {@link Titanium.Platform.DisplayCaps#property-dpi dpi} property.</p>
 * @param {Number} dpi 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Platform.DisplayCaps.setDpi = function(dpi){};

/**
 * @method setLogicalDensityFactor
 * <p>Sets the value of the {@link Titanium.Platform.DisplayCaps#property-logicalDensityFactor logicalDensityFactor} property.</p>
 * @param {Number} logicalDensityFactor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.Platform.DisplayCaps.setLogicalDensityFactor = function(logicalDensityFactor){};

/**
 * @method setPlatformHeight
 * <p>Sets the value of the {@link Titanium.Platform.DisplayCaps#property-platformHeight platformHeight} property.</p>
 * @param {Number} platformHeight 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Platform.DisplayCaps.setPlatformHeight = function(platformHeight){};

/**
 * @method setPlatformWidth
 * <p>Sets the value of the {@link Titanium.Platform.DisplayCaps#property-platformWidth platformWidth} property.</p>
 * @param {Number} platformWidth 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Platform.DisplayCaps.setPlatformWidth = function(platformWidth){};

/**
 * @method setXdpi
 * <p>Sets the value of the {@link Titanium.Platform.DisplayCaps#property-xdpi xdpi} property.</p>
 * @param {Number} xdpi 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.Platform.DisplayCaps.setXdpi = function(xdpi){};

/**
 * @method setYdpi
 * <p>Sets the value of the {@link Titanium.Platform.DisplayCaps#property-ydpi ydpi} property.</p>
 * @param {Number} ydpi 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.Platform.DisplayCaps.setYdpi = function(ydpi){};

/**
 * @property density
 * @type String
 * <p>Logical density of the display.</p>
 */
Titanium.Platform.DisplayCaps.density = null;

/**
 * @property dpi
 * @type Number
 * <p>Display density expressed as dots-per-inch.</p>
 */
Titanium.Platform.DisplayCaps.dpi = null;

/**
 * @property logicalDensityFactor
 * @type Number
 * @platform android 0.8
 * <p>Logical density of the display, as a scaling factor for the Density Independent Pixel (dip) 
unit.</p>
 * @description <p>One dip is one pixel on a 160dpi display, approximately, with a 240x320, 1.5"x2" display
providing a baseline. For example, for a 160dpi display, this value will be 1, and for 120dpi, 
it will be .75.</p>
<p>This value does not precisely follow the real display size, as given by <code>xdpi</code> and <code>ydpi</code>, 
but instead is used to scale the size of the overall UI in steps based on changes in the 
display dpi. For example, a 240x320 screen will have a density of 1, whether its width is 
1.8" or 1.3". However, if the resolution is increased to 320x480 but the display remains 
1.5"x2" then the density would be increased to about 1.5.</p>
 */
Titanium.Platform.DisplayCaps.logicalDensityFactor = null;

/**
 * @property platformHeight
 * @type Number
 * <p>Absolute height of the display in relation to UI orientation. Measured in platform-specific 
units; pixels on Android and density-independent pixels (dip) on iOS.</p>
 * @description <p>This property depends on the orientation of the UI, rather than the physical orientation of 
the device. While these may often be one in the same, it is not necessarily the case when 
orientation is restricted by {@link Titanium.UI.Window#property-orientationModes}. See example for 
clarification.</p>
 * <h3>Example</h3>
 * <h4>Platform Width and Height</h4>
 * <p><p>Create a window and limit it to portrait mode. Start the app and observe that the platform 
width and height is output to the log. Change the physical orientation of the device and 
click the window to test again. Note that the logged information relates to the UI rather 
than the physical orientation of the device.</p></p><pre>var win = Ti.UI.createWindow({
  title: 'Click window to output UI dimensions',
  backgroundColor: 'white',
  orientationModes: [ Titanium.UI.PORTRAIT ], // UI restricted to portrait mode
  fullscreen: false,
  exitOnClose: true
});

var label = Ti.UI.createLabel({
  text:'Hello world'
});
win.add(label);

function logDisplayCaps(){
  Ti.API.info('Width x Height: ' + Ti.Platform.displayCaps.platformWidth + ' x ' + Ti.Platform.displayCaps.platformHeight);
}

win.addEventListener('click',function(e){
  // as the UI orientation is restricted by orientationModes, this will only ever 
  // output the dimensions of the UI in portrait mode. For example, 480 x 800 for the 
  // Android device tested
  logDisplayCaps();
});

win.open();

logDisplayCaps();</pre>
 */
Titanium.Platform.DisplayCaps.platformHeight = null;

/**
 * @property platformWidth
 * @type Number
 * <p>Absolute width of the display in relation to UI orientation. Measured in platform-specific 
units; pixels on Android and density-independent pixels (dip) on iOS.</p>
 * @description <p>This property depends on the orientation of the UI, rather than the physical orientation of 
the device. While these may often be one in the same, it is not necessarily the case when 
orientation is restricted by {@link Titanium.UI.Window#property-orientationModes}. See example for 
clarification.</p>
 * <h3>Example</h3>
 * <h4>Platform Width and Height</h4>
 * <p><p>Create a window and limit it to portrait mode. Start the app and observe that the platform 
width and height is output to the log. Change the physical orientation of the device and 
click the window to test again. Note that the logged information relates to the UI rather 
than the physical orientation of the device.</p></p><pre>var win = Ti.UI.createWindow({
  title: 'Click window to output UI dimensions',
  backgroundColor: 'white',
  orientationModes: [ Titanium.UI.PORTRAIT ], // UI restricted to portrait mode
  fullscreen: false,
  exitOnClose: true
});

var label = Ti.UI.createLabel({
  text:'Hello world'
});
win.add(label);

function logDisplayCaps(){
  Ti.API.info('Width x Height: ' + Ti.Platform.displayCaps.platformWidth + ' x ' + Ti.Platform.displayCaps.platformHeight);
}

win.addEventListener('click',function(e){
  // as the UI orientation is restricted by orientationModes, this will only ever 
  // output the dimensions of the UI in portrait mode. For example, 480 x 800 for the 
  // Android device tested
  logDisplayCaps();
});

win.open();

logDisplayCaps();    </pre>
 */
Titanium.Platform.DisplayCaps.platformWidth = null;

/**
 * @property xdpi
 * @type Number
 * @platform android 0.8
 * <p>Physical pixels per inch of the display in the X dimension.</p>
 */
Titanium.Platform.DisplayCaps.xdpi = null;

/**
 * @property ydpi
 * @type Number
 * @platform android 0.8
 * <p>Physical pixels per inch of the display in the Y dimension.</p>
 */
Titanium.Platform.DisplayCaps.ydpi = null;


/**
 * @method canOpenURL
 * <p>Returns whether the system is configured with a default application to handle the URL's protocol.</p>
 * @description <p>On Mobile Web, this method always returns true, even if the browser can't open the specific URL, 
unless the URL is empty or undefined.</p>
 * @param {String} url 
 * <p>The url to check.</p>
 * @return {Boolean} 
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Platform.canOpenURL = function(url){};

/**
 * @method createUUID
 * <p>Creates a globally-unique identifier.</p>
 * @return {String} 
*/
Titanium.Platform.createUUID = function(){};

/**
 * @method getAddress
 * <p>Gets the value of the {@link Titanium.Platform#property-address address} property.</p>
 * @return {String} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform tizen 3.1
*/
Titanium.Platform.getAddress = function(){};

/**
 * @method getArchitecture
 * <p>Gets the value of the {@link Titanium.Platform#property-architecture architecture} property.</p>
 * @return {String} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform tizen 3.1
*/
Titanium.Platform.getArchitecture = function(){};

/**
 * @method getAvailableMemory
 * <p>Gets the value of the {@link Titanium.Platform#property-availableMemory availableMemory} property.</p>
 * @return {Number} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Platform.getAvailableMemory = function(){};

/**
 * @method getBatteryLevel
 * <p>Gets the value of the {@link Titanium.Platform#property-batteryLevel batteryLevel} property.</p>
 * @return {Number} 
*/
Titanium.Platform.getBatteryLevel = function(){};

/**
 * @method getBatteryMonitoring
 * <p>Gets the value of the {@link Titanium.Platform#property-batteryMonitoring batteryMonitoring} property.</p>
 * @return {Boolean} 
*/
Titanium.Platform.getBatteryMonitoring = function(){};

/**
 * @method getBatteryState
 * <p>Gets the value of the {@link Titanium.Platform#property-batteryState batteryState} property.</p>
 * @return {Number} 
*/
Titanium.Platform.getBatteryState = function(){};

/**
 * @method getDisplayCaps
 * <p>Gets the value of the {@link Titanium.Platform#property-displayCaps displayCaps} property.</p>
 * @return {Titanium.Platform.DisplayCaps} 
*/
Titanium.Platform.getDisplayCaps = function(){};

/**
 * @method getId
 * <p>Gets the value of the {@link Titanium.Platform#property-id id} property.</p>
 * @return {String} 
*/
Titanium.Platform.getId = function(){};

/**
 * @method getLocale
 * <p>Gets the value of the {@link Titanium.Platform#property-locale locale} property.</p>
 * @return {String} 
*/
Titanium.Platform.getLocale = function(){};

/**
 * @method getMacaddress
 * <p>Gets the value of the {@link Titanium.Platform#property-macaddress macaddress} property.</p>
 * @return {String} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Platform.getMacaddress = function(){};

/**
 * @method getManufacturer
 * <p>Gets the value of the {@link Titanium.Platform#property-manufacturer manufacturer} property.</p>
 * @return {String} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.Platform.getManufacturer = function(){};

/**
 * @method getModel
 * <p>Gets the value of the {@link Titanium.Platform#property-model model} property.</p>
 * @return {String} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform tizen 3.1
*/
Titanium.Platform.getModel = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.Platform#property-name name} property.</p>
 * @return {String} 
*/
Titanium.Platform.getName = function(){};

/**
 * @method getNetmask
 * <p>Gets the value of the {@link Titanium.Platform#property-netmask netmask} property.</p>
 * @return {String} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Platform.getNetmask = function(){};

/**
 * @method getOsname
 * <p>Gets the value of the {@link Titanium.Platform#property-osname osname} property.</p>
 * @return {String} 
*/
Titanium.Platform.getOsname = function(){};

/**
 * @method getOstype
 * <p>Gets the value of the {@link Titanium.Platform#property-ostype ostype} property.</p>
 * @return {String} 
*/
Titanium.Platform.getOstype = function(){};

/**
 * @method getProcessorCount
 * <p>Gets the value of the {@link Titanium.Platform#property-processorCount processorCount} property.</p>
 * @return {Number} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Platform.getProcessorCount = function(){};

/**
 * @method getRuntime
 * <p>Gets the value of the {@link Titanium.Platform#property-runtime runtime} property.</p>
 * @return {String} 
*/
Titanium.Platform.getRuntime = function(){};

/**
 * @method getUsername
 * <p>Gets the value of the {@link Titanium.Platform#property-username username} property.</p>
 * @return {String} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
*/
Titanium.Platform.getUsername = function(){};

/**
 * @method getVersion
 * <p>Gets the value of the {@link Titanium.Platform#property-version version} property.</p>
 * @return {String} 
*/
Titanium.Platform.getVersion = function(){};

/**
 * @method is24HourTimeFormat
 * <p>Returns whether the system settings are configured to show times in 24-hour format.</p>
 * @description <p>On Mobile Web and Tizen, this function always returns false.</p>
 * @return {Boolean} 
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Platform.is24HourTimeFormat = function(){};

/**
 * @method openURL
 * <p>Opens this URL using the system's default application for its protocol.</p>
 * @param {String} url 
 * <p>The url to open.</p>
 * @return {Boolean} 
*/
Titanium.Platform.openURL = function(url){};

/**
 * @method setBatteryMonitoring
 * <p>Sets the value of the {@link Titanium.Platform#property-batteryMonitoring batteryMonitoring} property.</p>
 * @param {Boolean} batteryMonitoring 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.Platform.setBatteryMonitoring = function(batteryMonitoring){};

/**
 * @property BATTERY_STATE_CHARGING
 * @type Number
 * @readonly
 * <p>Constant to indicate that the system is plugged in and currently being charged.</p>
 */
Titanium.Platform.BATTERY_STATE_CHARGING = null;

/**
 * @property BATTERY_STATE_FULL
 * @type Number
 * @readonly
 * <p>Constant to indicate that the battery is fully charged.</p>
 * @description <p>On Mobile Web, <code>BATTERY_STATE_FULL</code> is defined, but will never be a valid state.</p>
 */
Titanium.Platform.BATTERY_STATE_FULL = null;

/**
 * @property BATTERY_STATE_UNKNOWN
 * @type Number
 * @readonly
 * <p>Constant to indicate that the battery state is not known or monitoring is disabled.</p>
 */
Titanium.Platform.BATTERY_STATE_UNKNOWN = null;

/**
 * @property BATTERY_STATE_UNPLUGGED
 * @type Number
 * @readonly
 * <p>Constant to indicate that the system is unplugged.</p>
 */
Titanium.Platform.BATTERY_STATE_UNPLUGGED = null;

/**
 * @property address
 * @type String
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform tizen 3.1
 * <p>System's WIFI IP address. No other network types are supported.</p>
 */
Titanium.Platform.address = null;

/**
 * @property architecture
 * @type String
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform tizen 3.1
 * <p>System's processor architecture.</p>
 */
Titanium.Platform.architecture = null;

/**
 * @property availableMemory
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>System's unused memory, measured in megabytes on iOS and bytes on Android.</p>
 */
Titanium.Platform.availableMemory = null;

/**
 * @property batteryLevel
 * @type Number
 * @readonly
 * <p>Battery level in percent, accessible only when <code>batteryMonitoring</code> is enabled. Measured 
in 5% increments on iPhone/iPad.</p>
 */
Titanium.Platform.batteryLevel = null;

/**
 * @property [batteryMonitoring=false]
 * @type Boolean
 * <p>Determines whether battery monitoring is enabled.</p>
 */
Titanium.Platform.batteryMonitoring = null;

/**
 * @property batteryState
 * @type Number
 * @readonly
 * <p>Indicates the state of the battery. Accessible only when <code>batteryMonitoring</code> is enabled.</p>
 * @description <p>Returns one of the following constants from {@link Titanium.Platform}:<br />
<code>BATTERY_STATE_CHARGING</code>,
<code>BATTERY_STATE_FULL</code>,
<code>BATTERY_STATE_UNKNOWN</code>
or <code>BATTERY_STATE_UNPLUGGED</code>.</p>
<p>On Mobile Web, battery state will either be charging, unplugged, or unknown. Full charge state
is not supported.</p>
 */
Titanium.Platform.batteryState = null;

/**
 * @property displayCaps
 * @type Titanium.Platform.DisplayCaps
 * @readonly
 * <p>Returns the DisplayCaps object.</p>
 * @description <p>Note that the <code>displayCaps</code> property begins with a lowercase letter, which differentiates it 
from the <code>DisplayCaps</code> object that it returns.</p>
 */
Titanium.Platform.displayCaps = null;

/**
 * @property id
 * @type String
 * @readonly
 * <p>Applications's globally-unique ID (UUID).</p>
 * @description <p>On Android, this may be the UDID (unique device ID). For iOS, this
is a unique identifier for this install of the application.</p>
<p>Previously on iOS this may have been a UDID, but access to
this has been restricted by Apple. For more information, see
<a href="https://developer.apple.com/library/ios/#documentation/UIKit/Reference/UIDevice_Class/DeprecationAppendix/AppendixADeprecatedAPI.html#//apple_ref/occ/instp/UIDevice/uniqueIdentifier">Apple's uniqueIdentifier</a>
documentation.</p>
 */
Titanium.Platform.id = null;

/**
 * @property locale
 * @type String
 * @readonly
 * <p>System's default language.</p>
 * @description <p>Locale, as a combination of ISO 2-letter language and country codes. For example, 
<code>en-US</code> or <code>en-GB</code>. See the 
<a href="http://en.wikipedia.org/wiki/ISO_639-1">ISO 639-1</a> and 
<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> 
sections of wikipedia for reference.</p>
 */
Titanium.Platform.locale = null;

/**
 * @property macaddress
 * @type String
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>System's network interface mac address, or app UUID.</p>
 * @description <p>On iOS, this value is the app's UUID. Apple does not allow
access to any hardware identifier information as it can be used for
unique device identification, which they have prohibited.</p>
 */
Titanium.Platform.macaddress = null;

/**
 * @property manufacturer
 * @type String
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Manufacturer of the device.</p>
 * @description <p>Returns the manufacturer of the device, for example, <code>motorola</code>.
Virtual devices return <code>unknown</code>.</p>
 */
Titanium.Platform.manufacturer = null;

/**
 * @property model
 * @type String
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform tizen 3.1
 * <p>Model of the device.</p>
 * @description <p>An identifier of the hardware model of the device. For example, <code>HTC Sensation Z710e</code>.</p>
<p>Virtual devices will also return a value. For example, <code>sdk</code> for the standard Android SDK 
and <code>google_sdk</code> for the enhanced Android Google APIs SDK running in an emulator, and 
<code>Simulator</code> for iOS running in a simulator.</p>
<p>Mobile Web will return the browser Agent information, such as 
<code>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/12.0</code> for 
Firefox 12 running on Ubuntu.</p>
 * <h3>Example</h3>
 * <h4>Testing for a Virtual Device</h4>
 * <pre>Determine whether the application is running on a virtual device.
    if (Ti.Platform.model === 'Simulator' || Ti.Platform.model.indexOf('sdk') !== -1 ){
      alert('Accelerometer does not work on a virtual device');
    } else {
      // Add Accelerometer event listener
    }
    </pre>
 */
Titanium.Platform.model = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>Name of the platform. Returns <code>android</code> for the Android platform, <code>iPhone OS</code> for the iOS
platform (iPhone, iPad, or iPod Touch), <code>TIZEN</code> for Tizen platform and <code>mobileweb</code> for the Mobile Web platform.</p>
 */
Titanium.Platform.name = null;

/**
 * @property netmask
 * @type String
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>System's WIFI network mask. No other network types are supported.</p>
 */
Titanium.Platform.netmask = null;

/**
 * @property osname
 * @type String
 * @readonly
 * <p>Short name of the system's Operating System. Returns <code>android</code> for the Android platfrom,
<code>iphone</code> for the iPhone or iPod Touch, <code>ipad</code> for the iPad, <code>tizen</code> for Tizen platform and <code>mobileweb</code> for the Mobile Web
platform.</p>
 */
Titanium.Platform.osname = null;

/**
 * @property ostype
 * @type String
 * @readonly
 * <p>Operating System architecture. On Android, this is <code>32bit</code>.</p>
 */
Titanium.Platform.ostype = null;

/**
 * @property processorCount
 * @type Number
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>Number of processing cores.</p>
 */
Titanium.Platform.processorCount = null;

/**
 * @property runtime
 * @type String
 * @readonly
 * <p>Short name of the JavaScript runtime in use.</p>
 * @description <p>On iOS this is "javascriptcore", on Android either "v8" or "rhino" and on Mobile Web it is 
determined by the browser used.</p>
 */
Titanium.Platform.runtime = null;

/**
 * @property username
 * @type String
 * @readonly
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * <p>System name, if set. On iOS, this can be found in Settings &gt; General &gt; About &gt; Name.</p>
 */
Titanium.Platform.username = null;

/**
 * @property version
 * @type String
 * @readonly
 * <p>System's OS version.</p>
 */
Titanium.Platform.version = null;

/**
 * @class Titanium.Proxy
 * @typestr Object of Titanium
 * @platform android 0.1
 * @platform blackberry 3.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>The base for all Titanium objects.</p>
 * @description <p>On platforms that use native code (Android, iOS, and BlackBerry), the <code>Proxy</code> type represents a
JavaScript wrapper or <em>proxy</em> around a native object. Setting or getting a property
on a proxy object results in a method invokation on the native object. Likewise,
calling a method on the proxy object results in a method invokation on the native
object.</p>
<p>In Mobile Web, there is no true <code>Proxy</code> type -- all Titanium objects are ordinary JavaScript
objects.</p>
<p>Some Titanium objects are <em>createable</em>: new instances of these objects can be created using
factory methods. For example, a {@link Titanium.UI.Window Window} object can be created using the
{@link Titanium.UI#method-createWindow} method.</p>
<p>In general, developers should avoid modifying the prototype of a Titanium object, or
adding methods to a Titanium object. (Adding a simple property such as an ID value is
generally OK.)</p>
 */
Titanium.Proxy = {};

/**
 * @method addEventListener
 * <p>Adds the specified callback as an event listener for the named event.</p>
 * @param {String} name 
 * <p>Name of the event.</p>
 * @param {Function} callback 
 * <p>Callback function to invoke when the event is fired.</p>
 * @return void
*/
Titanium.Proxy.addEventListener = function(name, callback){};

/**
 * @method applyProperties
 * <p>Applies the properties to the proxy.</p>
 * @description <p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that
myproxy[key] = value.</p>
 * @param {Dictionary} props 
 * <p>A dictionary of properties to apply.</p>
 * @return void
 * @platform android 3.0
 * @platform blackberry 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
*/
Titanium.Proxy.applyProperties = function(props){};

/**
 * @method fireEvent
 * <p>Fires a synthesized event to any registered listeners.</p>
 * @param {String} name 
 * <p>Name of the event.</p>
 * @param {Dictionary} event 
 * <p>A dictionary of keys and values to add to the {@link Titanium.Event} object sent to the listeners.</p>
 * @return void
*/
Titanium.Proxy.fireEvent = function(name, event){};

/**
 * @method getBubbleParent
 * <p>Gets the value of the {@link Titanium.Proxy#property-bubbleParent bubbleParent} property.</p>
 * @return {Boolean} 
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform android 3.0
*/
Titanium.Proxy.getBubbleParent = function(){};

/**
 * @method removeEventListener
 * <p>Removes the specified callback as an event listener for the named event.</p>
 * @description <p>Multiple listeners can be registered for the same event, so the 
<code>callback</code> parameter is used to determine which listener to remove. </p>
<p>When adding a listener, you must save a reference to the callback function
in order to remove the listener later:</p>
<pre><code>var listener = function() { Ti.API.info("Event listener called."); }
window.addEventListener('click', listener);
</code></pre>
<p>To remove the listener, pass in a reference to the callback function:</p>
<pre><code>window.removeEventListener('click', listener);
</code></pre>
 * @param {String} name 
 * <p>Name of the event.</p>
 * @param {Function} callback 
 * <p>Callback function to remove. Must be the same function passed to <code>addEventListener</code>.</p>
 * @return void
*/
Titanium.Proxy.removeEventListener = function(name, callback){};

/**
 * @method setBubbleParent
 * <p>Sets the value of the {@link Titanium.Proxy#property-bubbleParent bubbleParent} property.</p>
 * @param {Boolean} bubbleParent 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform android 3.0
*/
Titanium.Proxy.setBubbleParent = function(bubbleParent){};

/**
 * @property [bubbleParent=true]
 * @type Boolean
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform android 3.0
 * <p>Indicates if the proxy will bubble an event to its parent.</p>
 * @description <p>Some proxies (most commonly views) have a relationship to other proxies, often
established by the add() method. For example, for a button added to a window, a
click event on the button would bubble up to the window. Other common parents are
table sections to their rows, table views to their sections, and scrollable views
to their views. Set this property to false to disable the bubbling to the proxy's parent.</p>
 */
Titanium.Proxy.bubbleParent = null;

/**
 * @class Titanium.Stream
 * @typestr Submodule of Titanium
 * @platform android 1.7
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @extends Titanium.Module
 * <p>Stream module containing stream utility methods.</p>
 * @description <p>This module provides a set of methods for interacting with
{@link Titanium.IOStream IOStream} objects, including asynchronous versions of the 
<code>read</code> and <code>write</code> methods offered by all stream objects. These 
methods should be used in any place where reading from or writing
to a stream might block.</p>
<p>See also:</p>
<ul>
<li>{@link Titanium.IOStream}</li>
<li>{@link Titanium.BlobStream}</li>
<li>{@link Titanium.BufferStream}</li>
<li>{@link Titanium.Filesystem.FileStream}</li>
<li>{@link Titanium.Network.Socket.TCP}</li>
</ul>
 * <h3>Examples</h3>
 * <h4>Stream.pump Example</h4>
 * <p><p>The following example shows how to use the {@link Titanium.Stream#method-pump pump} method.</p></p><pre>var pumpCallback = function(arg) {
    if(arg.bytesProcessed == -1) {
        Ti.API.info("At end of stream.");
    } else {
        Ti.API.info(String.format("Received %.0f bytes. Total: %.0f bytes.", 
                    arg.bytesProcessed, arg.totalBytesProcessed));
        // do something useful with the data in arg.buffer
    }
}
Ti.Stream.pump(inputStream, pumpCallback, 1024);</pre>
 * <h4>Write Stream to File</h4>
 * <p><p>The following example uses the {@link Titanium.Stream#method-writeStream writeStream} method
to copy the contents of an input stream to a file. This can be used for any kind
of input stream -- <code>BufferStream</code>, <code>FileStream</code>, or <code>Socket.TCP</code>.</p></p><pre>var outFileStream = Ti.Filesystem.getFile('outfile.txt').open(Ti.Filesystem.MODE_WRITE);

// writes all data from inputStream to outFileStream in chunks of 1024 bytes
var bytesWritten = Ti.Stream.writeStream(inputStream, outFileStream, 1024);
Ti.API.info('Wrote ' + bytesWritten + ' bytes, closing both streams.');

inputStream.close();
outFileStream.close();</pre>
 */
Titanium.Stream = {};

/**
 * @method createStream
 * <p>Creates stream from a <code>Buffer</code> or <code>Blob</code> object.</p>
 * @description <p>Returns {@link Titanium.BufferStream} or {@link Titanium.BlobStream} depending on whether a
<code>Buffer</code> or <code>Blob</code> is provided as the <code>source</code> property in <code>params</code>.  </p>
<p><code>Blob</code> obects are read only. Throws an exception if <code>MODE_WRITE</code> or <code>MODE_APPEND</code> is 
specified along with a blob object.</p>
 * @param {CreateStreamArgs} params 
 * <p>Parameter object, for specifying the source object and mode.</p>
 * @return {Titanium.IOStream} 
*/
Titanium.Stream.createStream = function(params){};

/**
 * @method pump
 * <p>Reads data from input stream and passes it to a handler method.</p>
 * @description <p>After the end of the input stream is reached, the handler is called 
a final time with no data and <code>bytesProcessed</code> set to -1 to indicate
the end of the input data.</p>
 * @param {Titanium.IOStream} inputStream 
 * <p>Stream to pump from.</p>
 * @param {Function} handler 
 * <p>Handler method that will receive data from <code>inputStream</code>.</p>
 * @param {Number} maxChunkSize 
 * <p>Maximum number of bytes to pass to <code>handler</code> in a single call.</p>
 * @param {Boolean} [isAsync=False] (optional)
 * <p>Specifies if the <code>pump</code> operation should run asynchronously.</p>
 * @return void
*/
Titanium.Stream.pump = function(inputStream, handler, maxChunkSize, arg){};

/**
 * @method read
 * <p>Asynchronously reads data from an {@link Titanium.IOStream IOStream} into a buffer.</p>
 * @description <p>Reads data from the stream and writes it to the buffer. The first byte is
written to <code>buffer[offset]</code>. Reads until the provided buffer is full, the end of 
the stream is detected, or the requested number of bytes have been read. Does not 
resize the supplied buffer.</p>
<p>A request must include both <code>offset</code> and <code>length</code> parameters, or omit them both.</p>
<p>If the stream is not readable, an error is reported:</p>
<ul>
<li>
<p>On iOS, throws an exception.</p>
</li>
<li>
<p>On Android, calls the callback with an error.</p>
</li>
</ul>
<p>If <code>offset</code> is past the last byte of the buffer, throws an exception.</p>
 * @param {Titanium.IOStream} sourceStream 
 * <p>Stream to read from.</p>
 * @param {Titanium.Buffer} buffer 
 * <p>Buffer to read into.</p>
 * @param {Number} [offset=0] (optional)
 * <p>Offset to start reading stream data from, in bytes.
If specified, <code>length</code> must be specified as well.</p>
 * @param {Number} [length=All available data or the length of the buffer, whichever is smaller.] (optional)
 * <p>Number of bytes of data to read from the stream.
If specified, <code>offset</code> must be specified as well.</p>
 * @param {Function} resultsCallback 
 * <p>Function to call with the results of the read operation.</p>
 * @return void
*/
Titanium.Stream.read = function(sourceStream, buffer, arg, arg, resultsCallback){};

/**
 * @method readAll
 * <p>Reads all data from the specified {@link Titanium.IOStream IOStream}.</p>
 * @description <p>Reads data from the stream, either synchronously or asynchronously.</p>
<p>Throws an exception if a read error is encountered or data can't be written to the 
buffer.</p>
<p>If the optional <code>buffer</code> and <code>resultsFunction arguments are specified, the read operation 
takes place asynchronously, and the results are passed to the callback.
The data is written to the provided buffer, which is resized if necessary.</p>
<p>If the <code>buffer</code> and <code>resultsCallback</code> arguments are omitted, a new buffer is
allocated and returned.</p>
 * @param {Titanium.IOStream} sourceStream 
 * <p>Stream to read from.</p>
 * @param {Titanium.Buffer} buffer (optional)
 * <p>Buffer to read into. If specified, <code>resultsCallback</code> must be specified as
well.</p>
 * @param {Callback<ReadCallbackArgs>} resultsCallback (optional)
 * <p>Function to call with the results of the read operation.
If specified, <code>resultsCallback</code> must be specified as well.</p>
 * @return {Titanium.Buffer/void} 
*/
Titanium.Stream.readAll = function(sourceStream, buffer, resultsCallback){};

/**
 * @method write
 * <p>Asynchronously writes data from a buffer to an {@link Titanium.IOStream IOStream}.</p>
 * @description <p>Data is read from the buffer and written to the stream. </p>
<p>If the <code>offset</code> and <code>length</code> arguments are specified, data is read from the buffer
starting at <code>offset</code>, up to <code>offset+length-1</code> or the end of the buffer, whichever
comes first.</p>
<p>If <code>offset</code> and <code>length</code> are omitted, the entire buffer is written to the stream.</p>
<p>If the output stream is not writable, an error is reported:</p>
<ul>
<li>
<p>On iOS, an exception is thrown.</p>
</li>
<li>
<p>On Android, the callback is invoked with an error.</p>
</li>
</ul>
 * @param {Titanium.IOStream} outputStream 
 * <p>Stream to write to.</p>
 * @param {Titanium.Buffer} buffer 
 * <p>Buffer to write from.</p>
 * @param {Number} [offset=0] (optional)
 * <p>Offset to start writing buffer data from.
If specified, <code>length</code> must be specified as well.</p>
 * @param {Number} [length=Length of the supplied buffer.] (optional)
 * <p>Bytes of data to write. If specified, <code>offset</code> must be specified as well.</p>
 * @param {Function} resultsCallback 
 * <p>Function to call with the results of the write operation.</p>
 * @return void
*/
Titanium.Stream.write = function(outputStream, buffer, arg, arg, resultsCallback){};

/**
 * @method writeStream
 * <p>Writes all data from an input stream to an output stream.</p>
 * @description <p>If the optional <code>resultsFunction argument is supplied, the operation is 
performed asynchronously.</p>
<p>If the callback is omitted, this method is synchronous, and blocks until all data has been written.<br />
The synchronous version Returns the total number of bytes written.</p>
<p>If no data can be read from the input stream because the input
stream is at end of stream, behavior varies by platform:</p>
<ul>
<li>
<p>iOS throws an exception.</p>
</li>
<li>
<p>Android returns 0, or calls the callback with <code>bytesProcessed</code> set to 0.</p>
</li>
</ul>
 * @param {Titanium.IOStream} inputStream 
 * <p>Stream to read from.</p>
 * @param {Titanium.IOStream} outputStream 
 * <p>Stream to write to.</p>
 * @param {Number} maxChunkSize 
 * <p>Maximum number of bytes to copy from <code>inputStream</code> to <code>outputStream</code> in a 
single operation.</p>
 * @param {Callback<WriteStreamCallbackArgs>} resultsCallback (optional)
 * <p>Function to call with the results of the <code>writeStream</code> operation.</p>
 * @return void
*/
Titanium.Stream.writeStream = function(inputStream, outputStream, maxChunkSize, resultsCallback){};

/**
 * @property MODE_APPEND
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Stream#method-createStream createStream} to open a stream in append
mode.</p>
 */
Titanium.Stream.MODE_APPEND = null;

/**
 * @property MODE_READ
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Stream#method-createStream createStream} to open a stream in read
mode.</p>
 */
Titanium.Stream.MODE_READ = null;

/**
 * @property MODE_WRITE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.Stream#method-createStream createStream} to open a stream in write
mode.</p>
 */
Titanium.Stream.MODE_WRITE = null;

/**
 * @class Titanium.UI
 * @typestr Submodule of Titanium
 * @platform android 0.4
 * @platform blackberry 3.1
 * @platform iphone 0.4
 * @platform ipad 0.4
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The main {@link Titanium.UI} module.</p>
 * @description <p>The UI module is responsible for native user-interface components and interaction inside 
Titanium.  The goal of the UI module is to provide a native experience along with native 
performance by compiling Javascript code into their native counterparts as part of the 
build process.</p>
<h4>Design</h4>
<p>The UI module is broken down into 3 major area:</p>
<ul>
<li>
<p><strong>Views</strong> - {@link Titanium.UI.View Views} are containers that host visual elements such as 
controls or other views.  Views can have their properties customized, such as their border color 
and radius, can fire events such as swipe events or touches, and can optionally contain a 
hierarchy or other views as children. In Titanium, most views are specialized to perform both a 
visual function and set of interaction behaviors such as {@link Titanium.UI.TableView Table View} or
{@link Titanium.UI.iOS.CoverFlowView Coverflow View}.  Views are always named with the suffix <code>View</code>.</p>
</li>
<li>
<p><strong>Controls</strong> - controls, or sometimes referred as widgets, are visual elements such as 
{@link Titanium.UI.Slider sliders},  {@link Titanium.UI.Button buttons} and {@link Titanium.UI.Switch switches}. 
They provide a visual element which has a defined behavior and typical have special 
configuration and special events.  Controls themselves are views and also inherit a views 
properties, functions and events.</p>
</li>
<li>
<p><strong>Windows</strong> - {@link Titanium.UI.Window Windows} are typically top-level visual constructs that are 
the main part of your interface. An application will always have at least one window and windows 
can take different shapes and sizes, can have display and interaction properties such as 
fullscreen or modal and can be customized, such as changing their opacity or background color. 
Windows themselves are views and also inherit a views properties, functions and events. There 
are a few specialization of Windows such as a {@link Titanium.UI.TabGroup Tab Group} which offer 
additional behavior beyond the basic Window.</p>
</li>
</ul>
<p>Titanium uses the <a href="http://en.wikipedia.org/wiki/Factory_method_pattern">Factory Pattern</a> for 
constructing objects and a general naming pattern for APIs.  For example, to construct a 
{@link Titanium.UI.AlertDialog Alert Dialog}, you call the method {@link Titanium.UI#method-createAlertDialog}.<br />
To create a {@link Titanium.UI.TextArea TextArea}, you call the method {@link Titanium.UI#method-createTextArea}.<br />
Once an object is created, it will be available until it goes out of scope.</p>
<h4>Optimizations</h4>
<p>UI objects are optimized by Titanium to not be realized into the drawing context and placed into 
the device UI surface until needed.  That means that you can create UI objects, set their 
properties and add them to their hierarchy without much worry about memory or performance.<br />
When the native drawing surface needs to render a specific view or control, Titanium will 
automatically create the view as needed.  Additionally, Titanium is optimized to also release 
memory once the view is no longer needed, on screen or in low memory situations.  However, it's 
a good idea to help Titanium along in certain cases where you are no longer using objects.  For 
example, you should call <code>close</code> on a {@link Titanium.UI.Window Window} instance when you are no 
longer using it.  You can safely call <code>open</code> on the window again to re-open it.</p>
<h4>Global Context and Threading</h4>
<p>Be careful with the objects that are created in <code>app.js</code> but only used once. Since the <code>app.js</code> 
context is global and generally is not garbage collected until the application exits, you 
should think about the design of your application as it relates to this fact.</p>
<p>{@link Titanium.UI.Window Window} objects that are opened up with the <code>url</code> property to another 
JavaScript file provide a nice way to decompose your application into smaller units.</p>
<p>Additionally, Window objects created with a <code>url</code> value run in a separate JavaScript context 
and thread. While all UI processing is done on the main UI thread, other processing inside 
a Window or the <code>app.js</code> that does not have UI interaction will run in its own thread.</p>
<p>The other benefit of using the <code>url</code> property is that when the window is closed, resources 
allocated in the window's context can be immediately cleaned up, saving resources such as 
memory and CPU.</p>
<p>For more information, see the sections "Sub-contexts" and "Passing Data Between Contexts" on the 
{@link Titanium.UI.Window Window} reference page.</p>
<h4>Portability</h4>
<p>Titanium components are designed to be portable across as many platforms as it supports.<br />
However, there are cases where a device either does not support a specific feature or capability 
or where it support additional functionality.  For cases where the device OS supports 
capabilities that other platforms do not, we attempt to place those capabilities in a separate 
namespace, such as {@link Titanium.UI.iPhone}. However, in cases where the control is in a common 
namespace and support additional features, we continue to place that functionality directly on 
the object.</p>
<h4>Events</h4>
<p>Event listeners must be defined before their respective events are likely to be fired, otherwise 
they are not guaranteed to be called. The open and focus {@link Titanium.UI.Window Window} event 
listeners, for instance, must be defined before the window is opened.</p>
<p>Evaluating events as late as possible while bearing the above consideration in mind, however, 
can significantly improve application responsiveness. For example, an event listener for a 
click event may be defined after the parent window has been opened.</p>
<h4>Colors</h4>
<p>Many UI components have properties that control their color.</p>
<p>Colors may be specified as a hex triplet to determine the red, green and blue channels. Thus, 
<code>'#000000'</code> is specified for black, <code>'#ff0000'</code> for red, <code>'#00ff00'</code> for green, <code>'#0000ff'</code> for 
blue, and <code>'#ffffff'</code> for white, etc. A channel may be abbreviated when its two hex digits are 
identical, such as <code>'#000'</code>, <code>'#f00'</code>, <code>'#0f0#'</code>, <code>'#00f'</code> and <code>'#fff'</code> for the above colors, 
respectively.</p>
<p>An additional alpha channel is supported as a prefix to the hex triplet. So, to make 
the purple-like color <code>'#ff00ff'</code> semi-opaque, you could use an alpha value of <code>'55'</code>, giving, 
<code>'#55ff00ff'</code> or <code>'#5f0f'</code>.</p>
<p>Note that while the pound symbol, <code>#</code>, is not mandatory on iOS when using the hex triplet format, 
it is recommended to include it to provide compatibility with other platforms.</p>
<p>iOS also accepts colors specified in the form, <code>rgb(R,G,B)</code> and <code>rgba(R,G,B,A)</code>, with the color 
channels inside the parethesis represented by integer numbers between <code>0</code> and <code>255</code> and the 
alpha channel by a float number between <code>0</code> and <code>1.0</code> (transparent to opaque, respectively). 
For example, an opaque purple could be obtained using <code>'rgb(255,0,255)'</code> and a semi-opaque purple 
using <code>'rgba(255,0,255,0.3)'</code>. Note that although this format will work if the <code>rgb</code> or <code>rgba</code> 
prefix is omitted, this is not officially supported and thus not recommended.</p>
<p>Alternatively, the following set of color names are recognized.</p>
<p><code>'aqua'</code>, <code>'black'</code>, <code>'blue'</code>, <code>'brown'</code>, <code>'cyan'</code>, <code>'darkgray'</code>, <code>'fuchsia'</code>, <code>'gray'</code>, 
<code>'green'</code>, <code>'lightgray'</code>, <code>'lime'</code>, <code>'magenta'</code>, <code>'maroon'</code>, <code>'navy'</code>, <code>'olive'</code>, <code>'orange'</code>, 
<code>'pink'</code>, <code>'purple'</code>, <code>'red'</code>, <code>'silver'</code>, <code>'teal'</code>, <code>'white'</code>, <code>'yellow'</code>.</p>
<p>Currently, Android does not support the color name <code>'brown'</code> and iOS does not support <code>'aqua'</code>, 
<code>'fuchsia'</code>, <code>'lime'</code> or <code>'maroon'</code>.</p>
<p>All color properties also accept a value of <code>'transparent'</code>.</p>
<p>If a color property is undefined, the default color of the particular UI element is applied. 
If a color value is not valid on iOS, the default color is applied, whereas, on Android, the 
color yellow is applied.</p>
<p>Besides the above mentioned colors, the following constants can be used to specify iOS
system textures. These constants can be used wherever a color value is required:</p>
<ul>
<li><strong>{@link Titanium.UI.iOS#property-COLOR_SCROLLVIEW_BACKGROUND COLOR_SCROLLVIEW_BACKGROUND}</strong> </li>
<li><strong>{@link Titanium.UI.iOS#property-COLOR_VIEW_FLIPSIDE_BACKGROUND COLOR_VIEW_FLIPSIDE_BACKGROUND}</strong> </li>
<li><strong>{@link Titanium.UI.iOS#property-COLOR_GROUP_TABLEVIEW_BACKGROUND COLOR_GROUP_TABLEVIEW_BACKGROUND}</strong> </li>
<li><strong>{@link Titanium.UI.iOS#property-COLOR_UNDER_PAGE_BACKGROUND COLOR_UNDER_PAGE_BACKGROUND}</strong> (Only 
available on iOS SDK 5.0 and above.)</li>
</ul>
 * <h3>Example</h3>
 * <h4>Color Demo</h4>
 * <p><p>The following example demonstrates all the color formats, and color names, that are intended 
to be supported by Titanium. See the {@link Titanium.UI description} section for details.</p></p><pre>var colorArray = [
  '#ff00ff', '#f0f', 'rgb(255,0,255)',
  'transparent', '#55ff00ff', '#5f0f', 'rgba(255,0,255,0.3)',
  'aqua', 'black', 'blue', 'brown', 'cyan', 'darkgray', 'fuchsia', 'gray', 'green', 
  'lightgray', 'lime', 'magenta', 'maroon', 'navy', 'olive', 'orange', 'pink', 
  'purple', 'red', 'silver', 'teal', 'white', 'yellow',
];
var win = Ti.UI.createWindow({
  backgroundColor: 'black',
  exitOnClose: true,
  fullscreen: false,
  layout: 'vertical',
  title: 'Color Demo'
});
var rows = [];
var row;
for (var i=0, ilen = colorArray.length; i &lt; ilen; i++){
  row = Ti.UI.createTableViewRow({
    color:'black',
    backgroundColor: colorArray[i],
    title: colorArray[i],
    height: 40
  });
  rows.push(row);
}
var table = Ti.UI.createTableView({
  data: rows,
  backgroundColor: 'white'
});
win.add(table);
win.open();</pre>
 */
Titanium.UI = {};

/**
 * @class Titanium.UI.2DMatrix
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>The 2D Matrix is an object for holding values for an affine transformation matrix.</p>
 * @description <p>A 2D matrix is used to rotate, scale, translate, or skew the objects in a two-dimensional space. 
A 2D affine transformation can be  represented by a 3 by 3 matrix:</p>
<table>
<tr><td><i>a</i></td><td><i>b</i></td><td>0</td></tr>
<tr><td><i>c</i></td><td><i>d</i></td><td>0</td></tr>
<tr><td><i>tx</i></td><td><i>ty</i></td><td>1</td></tr>
</table>

<p>The third column is constant (0,0,1). </p>
<p>On iOS, the matrix terms, <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code>, <code>tx</code>, and <code>ty</code>, are available as
properties. On Android, the matrix terms are not available as properties. </p>
<p>Use the {@link Titanium.UI#method-create2DMatrix} method to create a new 2D matrix. You can 
pass an optional {@link MatrixCreationDict} dictionary to the method to initialize the 
matrix. For example:</p>
<p>var m = Ti.UI.2DMatrix({ rotate: 45 });</p>
<p>Produces a new matrix with a 45 degree rotation.  If you pass no arguments, 
<code>create2DMatrix</code> returns an identity matrix.</p>
 */
Titanium.UI.2DMatrix = {};

/**
 * @method getA
 * <p>Gets the value of the {@link Titanium.UI.2DMatrix#property-a a} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.getA = function(){};

/**
 * @method getB
 * <p>Gets the value of the {@link Titanium.UI.2DMatrix#property-b b} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.getB = function(){};

/**
 * @method getC
 * <p>Gets the value of the {@link Titanium.UI.2DMatrix#property-c c} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.getC = function(){};

/**
 * @method getD
 * <p>Gets the value of the {@link Titanium.UI.2DMatrix#property-d d} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.getD = function(){};

/**
 * @method getTx
 * <p>Gets the value of the {@link Titanium.UI.2DMatrix#property-tx tx} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.getTx = function(){};

/**
 * @method getTy
 * <p>Gets the value of the {@link Titanium.UI.2DMatrix#property-ty ty} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.getTy = function(){};

/**
 * @method invert
 * <p>Returns a matrix constructed by inverting this matrix.</p>
 * @return {Titanium.UI.2DMatrix} 
*/
Titanium.UI.2DMatrix.invert = function(){};

/**
 * @method multiply
 * <p>Returns a matrix constructed by combining two existing matrices.</p>
 * @description <p>The argument, <code>t2</code> is concatenated to the matrix instance against which the function is invoked. The 
resulting matrix is the result of multiplying this matrix by <code>t2</code>. You might perform several 
multiplications in order to create a single matrix that contains the cumulative effects of 
several transformations. </p>
<p>Note that matrix operations are not commutative -- the order in which you concatenate matrices 
is important. That is, the result of multiplying matrix <code>t1</code> by matrix <code>t2</code> does not necessarily 
equal the result of multiplying matrix <code>t2</code> by matrix <code>t1</code>.</p>
 * @param {Titanium.UI.2DMatrix} t2 
 * <p>The second matrix.</p>
 * @return {Titanium.UI.2DMatrix} 
*/
Titanium.UI.2DMatrix.multiply = function(t2){};

/**
 * @method rotate
 * <p>Returns a matrix constructed by rotating this matrix.</p>
 * @description <p>There are two distinct versions of this method, depending on whether one argument
or two are specified. </p>
<ul>
<li><code>rotate(angle)</code>. The standard <code>rotate</code> method.</li>
<li><code>rotate(fromAngle, toAngle)</code>. Android only. Used for specifying rotation
    animations.</li>
</ul>
<p>In both cases, a positive value specifies clockwise rotation and a negative value 
specifies counter-clockwise rotation.  </p>
<p>Details for each version are discussed below.</p>
<h4>rotate(angle)</h4>
<p>Returns a matrix constructed by rotating this matrix.</p>
<p>Note that the resulting  matrix only expresses the final transformation, not the 
direction of the rotation. For example, the matrix produced by <code>m1.rotate(-10)</code>
is identical to the matrix produced by <code>m1.rotate(350)</code> and <code>m1.rotate(710)</code>.</p>
<p>Note that if you specify a rotation matrix as the <code>transform</code> property of an
animation, the animation animates the view from its current rotation to the 
rotation represented by the matrix by its shortest path. So to rotate a view 
in a complete circle, the easiest method is to chain together three animations,
rotating 120 degrees each time.</p>
<p>For the purposes of animation, it should be noted that the rotation angle is 
normalized to the range -180 &lt;= angle &lt; 180. In other 
words, an angle of 180 degrees is normalized to -180. This makes no difference
except when determining which direction an animation rotates. 179 degrees rotates
rotate clockwise, but 180 degrees is normalized to -180, so rotates counter-clockwise.</p>
<h4>rotate(angle, toAngle) -- Android Only</h4>
<p>This is an Android-specific method used for creating rotation animations.
Returns a <code>2DMatrix</code> object that represents a rotation from <code>angle</code> to <code>toAngle</code>. </p>
<p>Angles are specified in degrees. Positive values represent clockwise rotation, and negative values
represent counter-clockwise rotation. Values are not normalized, so for example an 
angle of 720 degrees represents two complete clockwise revolutions.</p>
<p>The resulting object cannot be expressed as an affine transform, but can be used with the 
{@link Titanium.UI.Animation#property-transform} property to specify a rotation animation.</p>
 * @param {Number} angle 
 * <p>Angle to rotate to, in degrees. On Android, if <code>angleTo</code> is specified, this specifies
the starting angle for a rotation animation.</p>
 * @param {Number} toAngle (optional)
 * <p>Ending angle for a rotation animation, in degrees. Android only.</p>
 * @return {Titanium.UI.2DMatrix} 
*/
Titanium.UI.2DMatrix.rotate = function(angle, toAngle){};

/**
 * @method scale
 * <p>Returns a <code>2DMatrix</code> object that specifies a scaling animation from one scale to another.</p>
 * @description <p>There are two distinct versions of this method, depending on whether two arguments
or four are specified. </p>
<ul>
<li><code>scale(sx, sy)</code>. The standard <code>scale</code> method.</li>
<li><code>scale(fromSx, fromSy, toSx, toSy)</code>. Android only. Used for specifying a 
    scaling animation from one size to another.</li>
</ul>
<h4>scale(sx, sy)</h4>
<p>Returns a matrix constructed by applying a scale transform to this matrix.
Scaling the current matrix by <code>sx</code> along the X axis and by <code>sy</code> along the Y axis.</p>
<h4>scale(sx, sy, toSx, toSy) -- Android Only</h4>
<p>This Android-specific method returns a <code>2DMatrix</code> object that can be used to
create a scaling animation from one scale factor to another scale factor. </p>
<p>The resulting object cannot be expressed as an affine transform, but can be used with the 
{@link Titanium.UI.Animation#property-transform} property to specify a scaling animation.</p>
 * @param {Number} sx 
 * <p>Horizontal scaling factor. If <code>toSx</code> and <code>toSy</code> are specified, 
this specifies the starting horizontal scaling factor, at the beginning 
of an animation.</p>
 * @param {Number} sy 
 * <p>Vertical scaling factor. If <code>toSx</code> and <code>toSy</code> are specified, 
this specifies the starting vertical scaling factor, at the beginning of 
an animation.</p>
 * @param {Number} toSx (optional)
 * <p>Ending horizontal scaling factor, at the end of an animation.
If specified, <code>toSy</code> must be specified as well. Android only.</p>
 * @param {Number} toSy (optional)
 * <p>Ending vertical scaling factor, at the end of an animation.
If specified, <code>toSx</code> must be specified as well. Android only.</p>
 * @return {Titanium.UI.2DMatrix} 
 * @platform android 0.9
*/
Titanium.UI.2DMatrix.scale = function(sx, sy, toSx, toSy){};

/**
 * @method setA
 * <p>Sets the value of the {@link Titanium.UI.2DMatrix#property-a a} property.</p>
 * @param {Number} a 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.setA = function(a){};

/**
 * @method setB
 * <p>Sets the value of the {@link Titanium.UI.2DMatrix#property-b b} property.</p>
 * @param {Number} b 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.setB = function(b){};

/**
 * @method setC
 * <p>Sets the value of the {@link Titanium.UI.2DMatrix#property-c c} property.</p>
 * @param {Number} c 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.setC = function(c){};

/**
 * @method setD
 * <p>Sets the value of the {@link Titanium.UI.2DMatrix#property-d d} property.</p>
 * @param {Number} d 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.setD = function(d){};

/**
 * @method setTx
 * <p>Sets the value of the {@link Titanium.UI.2DMatrix#property-tx tx} property.</p>
 * @param {Number} tx 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.setTx = function(tx){};

/**
 * @method setTy
 * <p>Sets the value of the {@link Titanium.UI.2DMatrix#property-ty ty} property.</p>
 * @param {Number} ty 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.2DMatrix.setTy = function(ty){};

/**
 * @method translate
 * <p>Returns a matrix constructed by applying a translation transform to this matrix.</p>
 * @param {Number} tx 
 * <p>Horizontal component of the translation.</p>
 * @param {Number} ty 
 * <p>Vertical component of the translation.</p>
 * @return {Titanium.UI.2DMatrix} 
*/
Titanium.UI.2DMatrix.translate = function(tx, ty){};

/**
 * @property a
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The entry at position [1,1] in the matrix.</p>
 */
Titanium.UI.2DMatrix.a = null;

/**
 * @property b
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The entry at position [1,2] in the matrix.</p>
 */
Titanium.UI.2DMatrix.b = null;

/**
 * @property c
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The entry at position [2,1] in the matrix.</p>
 */
Titanium.UI.2DMatrix.c = null;

/**
 * @property d
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The entry at position [2,2] in the matrix.</p>
 */
Titanium.UI.2DMatrix.d = null;

/**
 * @property tx
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The entry at position [3,1] in the matrix.</p>
 */
Titanium.UI.2DMatrix.tx = null;

/**
 * @property ty
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The entry at position [3,2] in the matrix.</p>
 */
Titanium.UI.2DMatrix.ty = null;

/**
 * @class Titanium.UI.3DMatrix
 * @typestr Object of Titanium.UI
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>The 3D Matrix is an object for holding values for a 3D affine transform.</p>
 * @description <p>The 3DMatrix is created by {@link Titanium.UI#method-create3DMatrix}. A 3D transform is
used to rotate, scale, translate, or skew the objects in three-dimensional
space. A 3D transform  is represented by a 4 by 4 matrix.</p>
<p>You create an <code>identity matrix</code> by creating a 3D Matrix with an empty
constructor.</p>
 * <h3>Example</h3>
 * <h4>Apply a 3D Matrix to a Label</h4>
 * <p><p>Move a label through a translation that repositions it from 100px to 200px from the top of
the display.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white'
});

var label = Ti.UI.createLabel({
  font:{fontSize:50},
  text:'Titanium',
  textAlign:'center',
  top: 100
});
win.add(label);

var button = Ti.UI.createButton({
  title:'Animate',
  bottom:20,
  width:200, height:40
});
win.add(button);

button.addEventListener('click', function(){
  var t1 = Ti.UI.create3DMatrix();
  t1 = t1.translate(0, 100, 200);
  t1.m34 = 1.0/-90;
  var a1 = Ti.UI.createAnimation();
  a1.transform = t1;
  a1.duration = 800;
  label.animate(a1);
});
win.open();</pre>
 */
Titanium.UI.3DMatrix = {};

/**
 * @method getM11
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m11 m11} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM11 = function(){};

/**
 * @method getM12
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m12 m12} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM12 = function(){};

/**
 * @method getM13
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m13 m13} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM13 = function(){};

/**
 * @method getM14
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m14 m14} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM14 = function(){};

/**
 * @method getM21
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m21 m21} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM21 = function(){};

/**
 * @method getM22
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m22 m22} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM22 = function(){};

/**
 * @method getM23
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m23 m23} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM23 = function(){};

/**
 * @method getM24
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m24 m24} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM24 = function(){};

/**
 * @method getM31
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m31 m31} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM31 = function(){};

/**
 * @method getM32
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m32 m32} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM32 = function(){};

/**
 * @method getM33
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m33 m33} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM33 = function(){};

/**
 * @method getM34
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m34 m34} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM34 = function(){};

/**
 * @method getM41
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m41 m41} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM41 = function(){};

/**
 * @method getM42
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m42 m42} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM42 = function(){};

/**
 * @method getM43
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m43 m43} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM43 = function(){};

/**
 * @method getM44
 * <p>Gets the value of the {@link Titanium.UI.3DMatrix#property-m44 m44} property.</p>
 * @return {Number} 
*/
Titanium.UI.3DMatrix.getM44 = function(){};

/**
 * @method invert
 * <p>Returns a matrix constructed by inverting this matrix.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.3DMatrix.invert = function(){};

/**
 * @method multiply
 * <p>Returns a matrix constructed by combining two existing matrix.</p>
 * @description <p>The result of this function is the first matrix multiplied by the second matrix. You might perform
several multiplications in order to create a single matrix that contains the cumulative effects of
several transformations. Note that matrix operations are not commutative - the order in which
you concatenate matrices is important. That is, the result of multiplying matrix t1 by matrix t2
does not necessarily equal the result of multiplying matrix t2 by matrix t1.</p>
 * @param {Titanium.UI.3DMatrix} t2 
 * <p>Matrix to concatenate to this matrix.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.3DMatrix.multiply = function(t2){};

/**
 * @method rotate
 * <p>Returns a matrix constructed by rotating this matrix.</p>
 * @param {Number} angle 
 * <p>The angle, in degrees, by which to rotate the matrix. A positive value specifies counterclockwise rotation and a negative value specifies clockwise rotation.</p>
 * @param {Number} x 
 * <p>The x part of the vector about which to rotate.</p>
 * @param {Number} y 
 * <p>The y part of the vector about which to rotate.</p>
 * @param {Number} z 
 * <p>The z part of the vector about which to rotate.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.3DMatrix.rotate = function(angle, x, y, z){};

/**
 * @method scale
 * <p>Returns a matrix constructed by scaling this matrix.</p>
 * @param {Number} sx 
 * <p>The value by which to scale x values of the matrix.</p>
 * @param {Number} sy 
 * <p>The value by which to scale y values of the matrix.</p>
 * @param {Number} sz 
 * <p>The value by which to scale z values of the matrix.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.3DMatrix.scale = function(sx, sy, sz){};

/**
 * @method setM11
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m11 m11} property.</p>
 * @param {Number} m11 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM11 = function(m11){};

/**
 * @method setM12
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m12 m12} property.</p>
 * @param {Number} m12 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM12 = function(m12){};

/**
 * @method setM13
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m13 m13} property.</p>
 * @param {Number} m13 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM13 = function(m13){};

/**
 * @method setM14
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m14 m14} property.</p>
 * @param {Number} m14 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM14 = function(m14){};

/**
 * @method setM21
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m21 m21} property.</p>
 * @param {Number} m21 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM21 = function(m21){};

/**
 * @method setM22
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m22 m22} property.</p>
 * @param {Number} m22 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM22 = function(m22){};

/**
 * @method setM23
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m23 m23} property.</p>
 * @param {Number} m23 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM23 = function(m23){};

/**
 * @method setM24
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m24 m24} property.</p>
 * @param {Number} m24 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM24 = function(m24){};

/**
 * @method setM31
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m31 m31} property.</p>
 * @param {Number} m31 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM31 = function(m31){};

/**
 * @method setM32
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m32 m32} property.</p>
 * @param {Number} m32 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM32 = function(m32){};

/**
 * @method setM33
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m33 m33} property.</p>
 * @param {Number} m33 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM33 = function(m33){};

/**
 * @method setM34
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m34 m34} property.</p>
 * @param {Number} m34 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM34 = function(m34){};

/**
 * @method setM41
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m41 m41} property.</p>
 * @param {Number} m41 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM41 = function(m41){};

/**
 * @method setM42
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m42 m42} property.</p>
 * @param {Number} m42 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM42 = function(m42){};

/**
 * @method setM43
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m43 m43} property.</p>
 * @param {Number} m43 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM43 = function(m43){};

/**
 * @method setM44
 * <p>Sets the value of the {@link Titanium.UI.3DMatrix#property-m44 m44} property.</p>
 * @param {Number} m44 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.3DMatrix.setM44 = function(m44){};

/**
 * @method translate
 * <p>Returns a matrix constructed by translating an existing matrix.</p>
 * @param {Number} tx 
 * <p>The value by which to move x values with the matrix.</p>
 * @param {Number} ty 
 * <p>The value by which to move y values with the matrix.</p>
 * @param {Number} tz 
 * <p>The value by which to move z values with the matrix.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.3DMatrix.translate = function(tx, ty, tz){};

/**
 * @property m11
 * @type Number
 * <p>The entry at position [1,1] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m11 = null;

/**
 * @property m12
 * @type Number
 * <p>The entry at position [1,2] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m12 = null;

/**
 * @property m13
 * @type Number
 * <p>The entry at position [1,3] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m13 = null;

/**
 * @property m14
 * @type Number
 * <p>The entry at position [1,4] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m14 = null;

/**
 * @property m21
 * @type Number
 * <p>The entry at position [2,1] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m21 = null;

/**
 * @property m22
 * @type Number
 * <p>The entry at position [2,2] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m22 = null;

/**
 * @property m23
 * @type Number
 * <p>The entry at position [2,3] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m23 = null;

/**
 * @property m24
 * @type Number
 * <p>The entry at position [2,4] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m24 = null;

/**
 * @property m31
 * @type Number
 * <p>The entry at position [3,1] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m31 = null;

/**
 * @property m32
 * @type Number
 * <p>The entry at position [3,2] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m32 = null;

/**
 * @property m33
 * @type Number
 * <p>The entry at position [3,3] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m33 = null;

/**
 * @property m34
 * @type Number
 * <p>The entry at position [3,4] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m34 = null;

/**
 * @property m41
 * @type Number
 * <p>The entry at position [4,1] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m41 = null;

/**
 * @property m42
 * @type Number
 * <p>The entry at position [4,2] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m42 = null;

/**
 * @property m43
 * @type Number
 * <p>The entry at position [4,3] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m43 = null;

/**
 * @property m44
 * @type Number
 * <p>The entry at position [4,4] in the matrix.</p>
 */
Titanium.UI.3DMatrix.m44 = null;

/**
 * @class Titanium.UI.ActivityIndicator
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An activity indicator that lets the user know an action is taking place.</p>
 * @description <p>An activity indicator can be used to show the progress of an operation in the UI to let the 
user know that some action is taking place. An activity indicator consists of a spinning 
animation and an optional text message, and is used to indicate an ongoing activity of 
indeterminate length. To show progress, use {@link Titanium.UI.ProgressBar} instead.</p>
<p>Use the {@link Titanium.UI#method-createActivityIndicator} method to create an Activity Indicator. </p>
<p>The activity indicator is a view like any other view, and must be
added to a window or other top-level view before it can be shown. Note that, unlike most views, 
the activity indicator is hidden by default and must be shown explicitly.</p>
<h4>Android Platform Notes</h4>
<p>Prior to SDK 3.0, activity indicator on Android produced a modal dialog containing a spinner or
progress bar. In SDK 3.0, this legacy Android activity indicator was renamed to
{@link Titanium.UI.Android.ProgressIndicator}.</p>
<p>In SDK 3.0, use <code>ActivityIndicator</code> for a view that can be added as a child of another view.
Use <code>ProgressIndicator</code> to display a progress indicator in a modal dialog or window title bar.</p>
 * <h3>Examples</h3>
 * <h4>Simple Activity Indicator</h4>
 * <p><p>Open a yellow window immediately after a blue window. Show an activity indicator while 
some code executes and hide it on completion. Then close the yellow window.</p></p><pre>Ti.UI.backgroundColor = 'white';

var win1 = Ti.UI.createWindow({
  backgroundColor: 'blue'
});

var win2 = Ti.UI.createWindow({
  backgroundColor: 'yellow',
  fullscreen: true
});

var style;
if (Ti.Platform.name === 'iPhone OS'){
  style = Ti.UI.iPhone.ActivityIndicatorStyle.DARK;
}
else {
  style = Ti.UI.ActivityIndicatorStyle.DARK;
}
var activityIndicator = Ti.UI.createActivityIndicator({
  color: 'green',
  font: {fontFamily:'Helvetica Neue', fontSize:26, fontWeight:'bold'},
  message: 'Loading...',
  style:style,
  top:10,
  left:10,
  height:Ti.UI.SIZE,
  width:Ti.UI.SIZE
});

// The activity indicator must be added to a window or view for it to appear
win2.add(activityIndicator);

// eventListeners must always be loaded before the event is likely to fire
// hence, the open() method must be positioned before the window is opened
win2.addEventListener('open', function (e) {
  activityIndicator.show();
  // do some work that takes 6 seconds
  // ie. replace the following setTimeout block with your code
  setTimeout(function(){
    e.source.close();
    activityIndicator.hide();
  }, 6000);
});

win1.open();
win2.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as two Alloy views.</p>
<p>win1.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window onOpen="openWin2" backgroundColor="blue" /&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>win1.js:</p></p><pre>function openWin2 () {
    var win2 = Alloy.createController('win2').getView();
    win2.open();
}
</pre>
 * <p><p>win2.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window onOpen="showIndicator" fullscreen="true" backgroundColor="yellow"&gt;

        &lt;!-- Define the styling properties in the TSS file --&gt;
        &lt;ActivityIndicator id="activityIndicator" message="Loading..."/&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>win2.js:</p></p><pre>function showIndicator(e){
    $.activityIndicator.show();
    // do some work that takes 6 seconds
    // ie. replace the following setTimeout block with your code
    setTimeout(function(){
        e.source.close();
        $.activityIndicator.hide();
    }, 6000);
}</pre>
 */
Titanium.UI.ActivityIndicator = {};

/**
 * @method add
 * <p>Adds a child to this activity indicator's hierarchy.</p>
 * @description <p>Adding children to an <code>ActivityIndicator</code> is not supported on all platforms.</p>
<p>If you need to display views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ActivityIndicator.add = function(){};

/**
 * @method getBottom
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-bottom bottom} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.ActivityIndicator.getBottom = function(){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-color color} property.</p>
 * @return {String} 
*/
Titanium.UI.ActivityIndicator.getColor = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-font font} property.</p>
 * @return {Font} 
*/
Titanium.UI.ActivityIndicator.getFont = function(){};

/**
 * @method getHeight
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-height height} property.</p>
 * @return {String} 
*/
Titanium.UI.ActivityIndicator.getHeight = function(){};

/**
 * @method getIndicatorColor
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-indicatorColor indicatorColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.ActivityIndicator.getIndicatorColor = function(){};

/**
 * @method getIndicatorDiameter
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-indicatorDiameter indicatorDiameter} property.</p>
 * @return {String} 
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.ActivityIndicator.getIndicatorDiameter = function(){};

/**
 * @method getLeft
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-left left} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.ActivityIndicator.getLeft = function(){};

/**
 * @method getMessage
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-message message} property.</p>
 * @return {String} 
*/
Titanium.UI.ActivityIndicator.getMessage = function(){};

/**
 * @method getMessageid
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-messageid messageid} property.</p>
 * @return {String} 
*/
Titanium.UI.ActivityIndicator.getMessageid = function(){};

/**
 * @method getRight
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-right right} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.ActivityIndicator.getRight = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-style style} property.</p>
 * @return {Number} 
*/
Titanium.UI.ActivityIndicator.getStyle = function(){};

/**
 * @method getTop
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-top top} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.ActivityIndicator.getTop = function(){};

/**
 * @method getWidth
 * <p>Gets the value of the {@link Titanium.UI.ActivityIndicator#property-width width} property.</p>
 * @return {String} 
*/
Titanium.UI.ActivityIndicator.getWidth = function(){};

/**
 * @method hide
 * <p>Hides the activity indicator and stops the animation.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.hide = function(){};

/**
 * @method remove
 * <p>Removes a child from this activity indicator's hierarchy.</p>
 * @description <p>Adding children to an <code>ActivityIndicator</code> is not supported on all platforms.</p>
<p>See also: {@link Titanium.UI.ActivityIndicator#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ActivityIndicator.remove = function(){};

/**
 * @method setBottom
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-bottom bottom} property.</p>
 * @param {Number/String} bottom 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setBottom = function(bottom){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setColor = function(color){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setFont = function(font){};

/**
 * @method setHeight
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-height height} property.</p>
 * @param {String} height 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setHeight = function(height){};

/**
 * @method setIndicatorColor
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-indicatorColor indicatorColor} property.</p>
 * @param {String} indicatorColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.ActivityIndicator.setIndicatorColor = function(indicatorColor){};

/**
 * @method setIndicatorDiameter
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-indicatorDiameter indicatorDiameter} property.</p>
 * @param {String} indicatorDiameter 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.ActivityIndicator.setIndicatorDiameter = function(indicatorDiameter){};

/**
 * @method setLeft
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-left left} property.</p>
 * @param {Number/String} left 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setLeft = function(left){};

/**
 * @method setMessage
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-message message} property.</p>
 * @param {String} message 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setMessage = function(message){};

/**
 * @method setMessageid
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-messageid messageid} property.</p>
 * @param {String} messageid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setMessageid = function(messageid){};

/**
 * @method setRight
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-right right} property.</p>
 * @param {Number/String} right 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setRight = function(right){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setStyle = function(style){};

/**
 * @method setTop
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-top top} property.</p>
 * @param {Number/String} top 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setTop = function(top){};

/**
 * @method setWidth
 * <p>Sets the value of the {@link Titanium.UI.ActivityIndicator#property-width width} property.</p>
 * @param {String} width 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.setWidth = function(width){};

/**
 * @method show
 * <p>Shows the activity indicator and starts the animation.</p>
 * @return void
*/
Titanium.UI.ActivityIndicator.show = function(){};

/**
 * @property bottom
 * @type Number/String
 * <p>Bottom position of the view.</p>
 * @description <p>Determines the absolute position of the view relative to its parent.  </p>
<p>Can be either a float value or a dimension string (for example <code>100</code>, <code>'50%'</code> or <code>'auto'</code>.)</p>
 */
Titanium.UI.ActivityIndicator.bottom = null;

/**
 * @property color
 * @type String
 * <p>Color of the message text, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
 */
Titanium.UI.ActivityIndicator.color = null;

/**
 * @property font
 * @type Font
 * <p>Font used for the message text.</p>
 */
Titanium.UI.ActivityIndicator.font = null;

/**
 * @property height
 * @type String
 * <p>Width of the view. Only accepts value of {@link Titanium.UI#property-SIZE}, which must be explicitly set in order to
display the message and to position the view correctly.</p>
 */
Titanium.UI.ActivityIndicator.height = null;

/**
 * @property [indicatorColor=<pre>#fff</pre>]
 * @type String
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Color of the animated indicator.</p>
 */
Titanium.UI.ActivityIndicator.indicatorColor = null;

/**
 * @property [indicatorDiameter=36]
 * @type String
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Diameter of the indicator.</p>
 * @description <p>The diameter of the animated indicator, exclusive of any message text.</p>
 */
Titanium.UI.ActivityIndicator.indicatorDiameter = null;

/**
 * @property left
 * @type Number/String
 * <p>Left position of the view.</p>
 * @description <p>Determines the absolute position of the view relative to its parent.  </p>
<p>Can be either a float value or a dimension string (for example <code>100</code>, <code>'50%'</code> or <code>'auto'</code>.)</p>
 */
Titanium.UI.ActivityIndicator.left = null;

/**
 * @property message
 * @type String
 * <p>Message text.</p>
 */
Titanium.UI.ActivityIndicator.message = null;

/**
 * @property messageid
 * @type String
 * <p>Key identifying a string in the locale file to use for the message text.</p>
 * @description <p>Only one of <code>message</code> or <code>messageid</code> should be specified.</p>
 */
Titanium.UI.ActivityIndicator.messageid = null;

/**
 * @property right
 * @type Number/String
 * <p>Right position of the view.</p>
 * @description <p>Determines the absolute position of the view relative to its parent.  </p>
<p>Can be either a float value or a dimension string (for example <code>100</code>, <code>'50%'</code> or <code>'auto'</code>.)</p>
 */
Titanium.UI.ActivityIndicator.right = null;

/**
 * @property [style={@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-PLAIN} (iOS), {@link Titanium.UI.ActivityIndicatorStyle#property-PLAIN} (Android and Mobile Web)]
 * @type Number
 * <p>The style for the activity indicator.</p>
 * @description <p>One of the activity indicator style constants. On iOS: 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-DARK}, 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-BIG}, 
or {@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-PLAIN}. On Android and Mobile Web:
{@link Titanium.UI.ActivityIndicatorStyle#property-DARK}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG_DARK}, 
or {@link Titanium.UI.ActivityIndicatorStyle#property-PLAIN}.</p>
<p>On Mobile Web, setting the style automatically sets the indicator color and diameter.</p>
<p>See also: {@link Titanium.UI.ActivityIndicator#property-indicatorColor indicatorColor},
{@link Titanium.UI.ActivityIndicator#property-indicatorDiameter indicatorDiameter}</p>
 */
Titanium.UI.ActivityIndicator.style = null;

/**
 * @property top
 * @type Number/String
 * <p>Top position of the view.</p>
 * @description <p>Determines the absolute position of the view relative to its parent.  </p>
<p>Can be either a float value or a dimension string (for example <code>100</code>, <code>'50%'</code> or <code>'auto'</code>.)</p>
 */
Titanium.UI.ActivityIndicator.top = null;

/**
 * @property width
 * @type String
 * <p>Width of the view. Only accepts value of {@link Titanium.UI#property-SIZE}, which must be explicitly set in order to
display the message and to position the view correctly.</p>
 */
Titanium.UI.ActivityIndicator.width = null;

/**
 * @class Titanium.UI.ActivityIndicatorStyle
 * @typestr Submodule of Titanium.UI
 * @platform android 3.0
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>A set of constants for the styles available for {@link Titanium.UI.ActivityIndicator} objects.</p>
 */
Titanium.UI.ActivityIndicatorStyle = {};

/**
 * @property BIG
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Large white spinning indicator.</p>
 * @description <p>Used with the {@link Titanium.UI.ActivityIndicator#property-style} property.</p>
<p>One of the group of activity indicator style constants 
{@link Titanium.UI.ActivityIndicatorStyle#property-DARK DARK}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG BIG}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG_DARK BIG}, 
and {@link Titanium.UI.ActivityIndicatorStyle#property-PLAIN PLAIN}.</p>
 */
Titanium.UI.ActivityIndicatorStyle.BIG = null;

/**
 * @property BIG_DARK
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Large gray spinning indicator.</p>
 * @description <p>Used with the {@link Titanium.UI.ActivityIndicator#property-style} property.</p>
<p>One of the group of activity indicator style constants 
{@link Titanium.UI.ActivityIndicatorStyle#property-DARK DARK}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG BIG}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG_DARK BIG}, 
and {@link Titanium.UI.ActivityIndicatorStyle#property-PLAIN PLAIN}.</p>
 */
Titanium.UI.ActivityIndicatorStyle.BIG_DARK = null;

/**
 * @property DARK
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Small gray spinning indicator.</p>
 * @description <p>Used with the {@link Titanium.UI.ActivityIndicator#property-style} property.</p>
<p>One of the group of activity indicator style constants 
{@link Titanium.UI.ActivityIndicatorStyle#property-DARK DARK}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG BIG}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG_DARK BIG}, 
and {@link Titanium.UI.ActivityIndicatorStyle#property-PLAIN PLAIN}.</p>
 */
Titanium.UI.ActivityIndicatorStyle.DARK = null;

/**
 * @property PLAIN
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Small white spinning indicator (default).</p>
 * @description <p>Used with the {@link Titanium.UI.ActivityIndicator#property-style} property.</p>
<p>One of the group of activity indicator style constants 
{@link Titanium.UI.ActivityIndicatorStyle#property-DARK DARK}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG BIG}, 
{@link Titanium.UI.ActivityIndicatorStyle#property-BIG_DARK BIG}, 
and {@link Titanium.UI.ActivityIndicatorStyle#property-PLAIN PLAIN}.</p>
 */
Titanium.UI.ActivityIndicatorStyle.PLAIN = null;

/**
 * @class Titanium.UI.AlertDialog
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An alert dialog is a modal view that includes an optional title, a message and buttons, 
positioned in the middle of the display.</p>
 * @description <p>An alert dialog is created using {@link Titanium.UI#method-createAlertDialog}.</p>
<p>Although this dialog always appears in the middle of the display (not touching the edges), 
other aspects of its aesthetics and the way the user interacts with it are different for each 
platform, as described below.</p>
<h4>Android</h4>
<p>On Android, the default alert dialog displays text information, via a title and message, without 
any buttons. As the user can use the system hardware <code>back</code> button to dismiss it, a button is 
optional.</p>
<p>Buttons are shown if the <code>buttonNames</code> property is defined, and are rendered horizontally below 
the message.</p>
<p>To create a custom layout, a view may be added and, in turn, a hierarchy of views added to that 
child view.</p>
<h4>iOS</h4>
<p>On iOS, the default alert dialog displays text information, via a title and message, with 
a single button to allow it to be dismissed.</p>
<p>Buttons are defined using the <code>buttonNames</code> property and are rendered vertically below 
the message.</p>
<p>On iOS 4.0 and later, alert dialogs are automatically cancelled when the application is 
paused/suspended. This behavior can avoided by setting <code>persistent</code> property on alert dialog 
to be <code>true</code>.</p>
<p>On iOS 5.0 and later, <code>style</code> property can be used to allow the user to enter plain text, 
obscured text or login identifier and password. Entered values can be captured with listening
<code>cancel</code> event.</p>
<h4>Global Alias</h4>
<p>A global method <code>alert()</code> is aliased to this object, and can be invoked with a single message. 
For example</p>
<pre><code>alert('this is a message');
</code></pre>
<p>This will generate an alert with a title of "Alert" and an "OK" button.</p>
<h4>Caveats</h4>
<p>Multiple alerts should not be shown at once.</p>
<p>The <code>title</code> and <code>ok</code> properties cannot be changed while the alert dialog is being displayed. On
Android only, you can change the <code>message</code> property while the alert dialog is being displayed.</p>
 * <h3>Examples</h3>
 * <h4>Single-button Alert Dialog (using alias)</h4>
 * <p><p>Create a single-button alert dialog using the global <code>alert()</code> alias.</p></p><pre>Ti.UI.setBackgroundColor('white');
var win = Ti.UI.createWindow({  
  title: 'Click window to test',
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false
});

win.addEventListener('click', function(e){
  alert('The file has been deleted');
});
win.open();</pre>
 * <h4>Single-button Alert Dialog (standard)</h4>
 * <p><p>Create a single-button alert dialog, without explicitly defining it using the <code>buttonNames</code> 
property, which is invoked when the app window is clicked.</p></p><pre>Ti.UI.setBackgroundColor('white');
var win = Ti.UI.createWindow({  
  title: 'Click window to test',
  backgroundColor: 'white',
exitOnClose: true,
fullscreen: false
});

win.addEventListener('click', function(e){
  var dialog = Ti.UI.createAlertDialog({
    message: 'The file has been deleted',
    ok: 'Okay',
    title: 'File Deleted'
  }).show();
});
win.open();</pre>
 * <h4>Three-button Alert Dialog</h4>
 * <p><p>Create a three-button alert dialog, which is invoked when the app window is clicked. 
Output a message to the log when the cancel button is clicked.</p></p><pre>Ti.UI.setBackgroundColor('white');
var win = Ti.UI.createWindow({  
  title: 'Click window to test',
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false
});
win.addEventListener('click', function(e){
  var dialog = Ti.UI.createAlertDialog({
    cancel: 1,
    buttonNames: ['Confirm', 'Cancel', 'Help'],
    message: 'Would you like to delete the file?',
    title: 'Delete'
  });
  dialog.addEventListener('click', function(e){
    if (e.index === e.source.cancel){
      Ti.API.info('The cancel button was clicked');
    }
    Ti.API.info('e.cancel: ' + e.cancel);
    Ti.API.info('e.source.cancel: ' + e.source.cancel);
    Ti.API.info('e.index: ' + e.index);
  });
  dialog.show();
});
win.open();</pre>
 * <h4>Alert Dialog with Plain Text Input (iOS 5 and later)</h4>
 * <p><p>Create an alert dialog and allow the user enter plain text, which is invoked when the
app window is clicked.
Output entered text value to the log when the OK button is clicked.</p></p><pre>Ti.UI.setBackgroundColor('white');
var win = Ti.UI.createWindow({
  title: 'Click window to test'
});
win.addEventListener('click', function(e){
  var dialog = Ti.UI.createAlertDialog({
    title: 'Enter text',
    style: Ti.UI.iPhone.AlertDialogStyle.PLAIN_TEXT_INPUT,
    buttonNames: ['OK']
  });
  dialog.addEventListener('click', function(e){
    Ti.API.info('e.text: ' + e.text);
  });
  dialog.show();
});
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous three-button alert dialog example as an Alloy view.</p>
<p>alertdialog.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" onClick="showDialog" title="Click window to test" backgroundColor="white"
        exitOnClose="true" fullscreen="false" &gt;

        &lt;AlertDialog id="dialog" onClick="doClick" title="Delete"
            message="Would you like to delete the file?" cancel="1"&gt;

            &lt;!-- The ButtonNames tag sets the buttonNames property. --&gt;
            &lt;ButtonNames&gt;
                &lt;ButtonName&gt;Confirm&lt;/ButtonName&gt;
                &lt;ButtonName&gt;Cancel&lt;/ButtonName&gt;
                &lt;ButtonName&gt;Help&lt;/ButtonName&gt;
            &lt;/ButtonNames&gt;
        &lt;/AlertDialog&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>alertdialog.js:</p></p><pre>function showDialog(){
    $.dialog.show();
};

function doClick(e){
    Ti.API.info('e.text: ' + e.text);
};</pre>
 */
Titanium.UI.AlertDialog = {};


/**
 * @method getAndroidView
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-androidView androidView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 0.8
*/
Titanium.UI.AlertDialog.getAndroidView = function(){};

/**
 * @method getButtonNames
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-buttonNames buttonNames} property.</p>
 * @return {String[]} 
*/
Titanium.UI.AlertDialog.getButtonNames = function(){};

/**
 * @method getCancel
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-cancel cancel} property.</p>
 * @return {Number} 
*/
Titanium.UI.AlertDialog.getCancel = function(){};

/**
 * @method getMessage
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-message message} property.</p>
 * @return {String} 
*/
Titanium.UI.AlertDialog.getMessage = function(){};

/**
 * @method getOk
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-ok ok} property.</p>
 * @return {String} 
*/
Titanium.UI.AlertDialog.getOk = function(){};

/**
 * @method getPersistent
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-persistent persistent} property.</p>
 * @return {Boolean} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.AlertDialog.getPersistent = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-style style} property.</p>
 * @return {Number} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.AlertDialog.getStyle = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.AlertDialog#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.AlertDialog.getTitle = function(){};

/**
 * @method hide
 * <p>Hides this dialog.</p>
 * @return void
*/
Titanium.UI.AlertDialog.hide = function(){};

/**
 * @method setAndroidView
 * <p>Sets the value of the {@link Titanium.UI.AlertDialog#property-androidView androidView} property.</p>
 * @param {Titanium.UI.View} androidView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.AlertDialog.setAndroidView = function(androidView){};

/**
 * @method setCancel
 * <p>Sets the value of the {@link Titanium.UI.AlertDialog#property-cancel cancel} property.</p>
 * @param {Number} cancel 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.AlertDialog.setCancel = function(cancel){};

/**
 * @method setMessage
 * <p>Sets the value of the {@link Titanium.UI.AlertDialog#property-message message} property.</p>
 * @param {String} message 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.AlertDialog.setMessage = function(message){};

/**
 * @method setOk
 * <p>Sets the value of the {@link Titanium.UI.AlertDialog#property-ok ok} property.</p>
 * @param {String} ok 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.AlertDialog.setOk = function(ok){};

/**
 * @method setPersistent
 * <p>Sets the value of the {@link Titanium.UI.AlertDialog#property-persistent persistent} property.</p>
 * @param {Boolean} persistent 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.AlertDialog.setPersistent = function(persistent){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.AlertDialog#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.AlertDialog.setStyle = function(style){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.AlertDialog#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.AlertDialog.setTitle = function(title){};

/**
 * @method show
 * <p>Shows this dialog.</p>
 * @return void
*/
Titanium.UI.AlertDialog.show = function(){};

/**
 * @property androidView
 * @type Titanium.UI.View
 * @platform android 0.8
 * <p>View to load inside the message area, to create a custom layout.</p>
 */
Titanium.UI.AlertDialog.androidView = null;

/**
 * @property [buttonNames=No buttons (Android), Single "OK" button (iOS, Mobile Web)]
 * @type String[]
 * @creationOnly
 * <p>Name of each button to create.</p>
 * @description <p>On iOS, a button will automatically be created if none are explicitly defined, because 
without it users would be unable to dismiss the dialog. Conversely, a dialog with no 
buttons may be created on Android, as the hardware <code>back</code> button may be used instead.</p>
<p>A maximum of 3 buttons is supported on Android.</p>
 */
Titanium.UI.AlertDialog.buttonNames = null;

/**
 * @property [cancel=undefined (Android), -1 (iOS, Mobile Web)]
 * @type Number
 * <p>Index to define the cancel button.</p>
 * @description <p>On iOS and Mobile Web, set to <code>-1</code> to disable the cancel option.</p>
 */
Titanium.UI.AlertDialog.cancel = null;

/**
 * @property message
 * @type String
 * <p>Dialog message.</p>
 */
Titanium.UI.AlertDialog.message = null;

/**
 * @property messageid
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Key identifying a string in the locale file to use for the message text.</p>
 */
Titanium.UI.AlertDialog.messageid = null;

/**
 * @property ok
 * @type String
 * <p>Text for the <code>OK</code> button.</p>
 * @description <p>This property is useful when only one button is required, as it negates the need to define 
the <code>buttonNames</code> property. If <code>buttonNames</code> is defined, this property is ignored.</p>
 */
Titanium.UI.AlertDialog.ok = null;

/**
 * @property okid
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Key identifying a string in the locale file to use for the <code>ok</code> text.</p>
 * @description <p>If <code>buttonNames</code> is defined, this property is ignored.</p>
 */
Titanium.UI.AlertDialog.okid = null;

/**
 * @property [persistent=false on iOS, true on Android]
 * @type Boolean
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Boolean value indicating if the alert dialog should only be cancelled by user gesture or by hide method.</p>
 * @description <p>This property is useful to ensure that the alert dialog will not be ignored 
by the user when the application is paused/suspended.</p>
 */
Titanium.UI.AlertDialog.persistent = null;

/**
 * @property [style={@link Titanium.UI.iPhone.AlertDialogStyle#property-DEFAULT}]
 * @type Number
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>The style for the alert dialog.</p>
 * @description <p>Style of the alert dialog, specified using one of the constants from
{@link Titanium.UI.iPhone.AlertDialogStyle}. Using styles other than default one can break
your dialog layout if more than two buttons used. All styles can handle up to two
buttons comfortably, except for default style can handle up to six buttons when <code>title</code>
and <code>message</code> is empty or not given. Note that this property available on 
iOS SDK 5 or above. </p>
 */
Titanium.UI.AlertDialog.style = null;

/**
 * @property title
 * @type String
 * <p>Title of the dialog.</p>
 * @description <p>If not set, a dialog with no title bar will be created.</p>
 */
Titanium.UI.AlertDialog.title = null;

/**
 * @property titleid
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Key identifying a string in the locale file to use for the title text.</p>
 */
Titanium.UI.AlertDialog.titleid = null;

/**
 * @class Titanium.UI.Android
 * @typestr Submodule of Titanium.UI
 * @platform android 1.0
 * @extends Titanium.Module
 * <p>The Android-specific UI capabilities. All properties, methods and events in this namespace will 
only work on Android systems.</p>
 * <h3>Example</h3>
 * <h4>Android Preferences Example</h4>
 * <p><p>Create preferences interface for the application.</p>
<h4><code>app.js</code></h4></p><pre>var button = Ti.UI.createButton({
  title:'Click to Open Preferences'
});
button.addEventListener('click', function() {
  Ti.UI.Android.openPreferences();
});
Ti.UI.currentWindow.add(button);
</pre>
 * <p><h4><code>platform/android/res/xml/preferences.xml</code></h4></p><pre>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
    android:title="Preferences"&gt;
  &lt;PreferenceScreen
      android:title="Misc. Preferences"
      android:summary="Click to see more options"&gt;
    &lt;EditTextPreference
      android:title="Edit Text Preference"
      android:summary="You may enter a string"
      android:defaultValue=""
      android:key="editText" /&gt;
  &lt;/PreferenceScreen&gt;
  &lt;PreferenceCategory android:title="Category One"&gt;
    &lt;CheckBoxPreference
      android:title="CheckBox Preference"
      android:defaultValue="false"
      android:summary="You may enter a boolean"
      android:key="checkbox" /&gt;
    &lt;RingtonePreference
      android:title="Ringtone Preference"
      android:summary="You may pick a ringtone"
      android:defaultValue=""
      android:key="ringtone" /&gt;
  &lt;/PreferenceCategory&gt;
  &lt;PreferenceCategory android:title="Category Two"&gt;
    &lt;ListPreference
      android:title="List Preference"
      android:summary="You may chose from multiple choices"
      android:key="list" 
    android:entries="@array/listNames"
    android:entryValues="@array/listValues" 
    /&gt;
  &lt;/PreferenceCategory&gt;
&lt;/PreferenceScreen&gt;
</pre>
 * <p><h4><code>platform/android/res/values/array/array.xml</code></h4></p><pre>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;resources&gt;
  &lt;string-array name="listNames"&gt;
    &lt;item&gt;5 Minutes&lt;/item&gt;
    &lt;item&gt;10 Minutes&lt;/item&gt;
    &lt;item&gt;15 Minutes&lt;/item&gt;
    &lt;item&gt;30 Minutes&lt;/item&gt;
    &lt;item&gt;60 Minutes&lt;/item&gt;
  &lt;/string-array&gt;
  &lt;string-array name="listValues"&gt;
    &lt;item&gt;5&lt;/item&gt;
    &lt;item&gt;10&lt;/item&gt;
    &lt;item&gt;15&lt;/item&gt;
    &lt;item&gt;30&lt;/item&gt;
    &lt;item&gt;60&lt;/item&gt;
  &lt;/string-array&gt;
&lt;/resources&gt;</pre>
 */
Titanium.UI.Android = {};

/**
 * @class Titanium.UI.Android.ProgressIndicator
 * @typestr Object of Titanium.UI.Android
 * @platform android 3.0
 * @extends Titanium.Proxy
 * <p>A progress dialog or a horizontal progress bar in the title of the window.</p>
 * @description <p>A progress indicator can be used to show the progress of an operation in the UI to let the
user know that some action is taking place. It is used to indicate an ongoing activity of
determinate or indeterminate length.</p>
<p>Use the {@link Titanium.UI.Android#method-createProgressIndicator} method to create a progress indicator.</p>
<p>A progress indicator can be either a progress dialog or a horizontal progress bar in the title 
of the window. The progress dialog is a modal dialog that blocks the UI. See also: 
{@link Titanium.UI.Android#property-PROGRESS_INDICATOR_DIALOG},
{@link Titanium.UI.Android#property-PROGRESS_INDICATOR_STATUS_BAR}.</p>
<p>Calling <code>show</code> displays the indicator, and calling <code>hide</code> removes it.</p>
<p>To display a horizontal progress bar in the title of a heavyweight window,
wait for the window to open before creating the progress bar.
For example, in the sample code below, for it to work in the status bar,
create the progress bar inside the event listener, which waits for the open event.</p>
 * <h3>Examples</h3>
 * <h4>Simple Progress Indicator</h4>
 * <p><p>Click the button to show a progress indicator while
some code executes and hide it on completion.</p></p><pre>Ti.UI.backgroundColor = 'white';

var win = Ti.UI.createWindow({
  backgroundColor: 'blue'
});

var button = Ti.UI.createButton({
  title: 'Show Progress Dialog'
});

var progressIndicator = Ti.UI.Android.createProgressIndicator({
  message: 'Loading...',
  location: Ti.UI.Android.PROGRESS_INDICATOR_DIALOG,
  type: Ti.UI.Android.PROGRESS_INDICATOR_DETERMINANT,
  cancelable: true,
  min: 0,
  max: 10
});

button.addEventListener('click', function (e) {
  progressIndicator.show();
  var value = 0;
  setInterval(function(){
    if (value &gt; 10) {
        return;
    }
    progressIndicator.value = value;
    value ++;
  }, 200);
  // do some work that takes 3 seconds
  // ie. replace the following setTimeout block with your code
  setTimeout(function(){
    progressIndicator.hide();
  }, 3000);
});

win.add(button);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view-controller.</p>
<p>index.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window backgroundColor="blue"&gt;
        &lt;Button id="button" onClick="showIndicator"&gt;Show Progress Dialog&lt;/Button&gt;

        &lt;ProgressIndicator ns="Ti.UI.Android" platform="android" id="progressIndicator"
         message="Loading..." min="0" max="10" cancelable="true"
         location="Ti.UI.Android.PROGRESS_INDICATOR_DIALOG"
         type="Ti.UI.Android.PROGRESS_INDICATOR_DETERMINANT" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>index.js:</p></p><pre>function showIndicator(e) {
    $.progressIndicator.show();
    var value = 0;
    setInterval(function(){
        if (value &gt; 10) {
            return;
        }
        $.progressIndicator.value = value;
        value ++;
    }, 200);
    // do some work that takes 3 seconds
    // ie. replace the following setTimeout block with your code
    setTimeout(function(){
        $.progressIndicator.hide();
    }, 3000);
}
$.index.open();</pre>
 */
Titanium.UI.Android.ProgressIndicator = {};


/**
 * @method getCancelable
 * <p>Gets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-cancelable cancelable} property.</p>
 * @return {Boolean} 
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.getCancelable = function(){};

/**
 * @method getLocation
 * <p>Gets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-location location} property.</p>
 * @return {Number} 
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.getLocation = function(){};

/**
 * @method getMax
 * <p>Gets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-max max} property.</p>
 * @return {Number} 
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.getMax = function(){};

/**
 * @method getMessage
 * <p>Gets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-message message} property.</p>
 * @return {String} 
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.getMessage = function(){};

/**
 * @method getMessageid
 * <p>Gets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-messageid messageid} property.</p>
 * @return {String} 
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.getMessageid = function(){};

/**
 * @method getMin
 * <p>Gets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-min min} property.</p>
 * @return {Number} 
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.getMin = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-type type} property.</p>
 * @return {Number} 
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.getType = function(){};

/**
 * @method hide
 * <p>Hides the progress indicator and stops the animation.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.hide = function(){};

/**
 * @method setCancelable
 * <p>Sets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-cancelable cancelable} property.</p>
 * @param {Boolean} cancelable 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.setCancelable = function(cancelable){};

/**
 * @method setLocation
 * <p>Sets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-location location} property.</p>
 * @param {Number} location 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.setLocation = function(location){};

/**
 * @method setMax
 * <p>Sets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-max max} property.</p>
 * @param {Number} max 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.setMax = function(max){};

/**
 * @method setMessage
 * <p>Sets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-message message} property.</p>
 * @param {String} message 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.setMessage = function(message){};

/**
 * @method setMessageid
 * <p>Sets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-messageid messageid} property.</p>
 * @param {String} messageid 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.setMessageid = function(messageid){};

/**
 * @method setMin
 * <p>Sets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-min min} property.</p>
 * @param {Number} min 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.setMin = function(min){};

/**
 * @method setType
 * <p>Sets the value of the {@link Titanium.UI.Android.ProgressIndicator#property-type type} property.</p>
 * @param {Number} type 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.setType = function(type){};

/**
 * @method show
 * <p>Shows the progress indicator and starts the animation.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.Android.ProgressIndicator.show = function(){};

/**
 * @property cancelable
 * @type Boolean
 * @platform android 3.0
 * <p>When <code>true</code> allows the user to cancel the progress dialog by pressing the BACK button.</p>
 */
Titanium.UI.Android.ProgressIndicator.cancelable = null;

/**
 * @property [location={@link Titanium.UI.Android#property-PROGRESS_INDICATOR_DIALOG}]
 * @type Number
 * @platform android 3.0
 * <p>Location for the progress indicator.</p>
 * @description <p>One of the constants:
{@link Titanium.UI.Android#property-PROGRESS_INDICATOR_DIALOG},
{@link Titanium.UI.Android#property-PROGRESS_INDICATOR_STATUS_BAR}.</p>
 */
Titanium.UI.Android.ProgressIndicator.location = null;

/**
 * @property max
 * @type Number
 * @platform android 3.0
 * <p>Maximum value of the progress bar.</p>
 */
Titanium.UI.Android.ProgressIndicator.max = null;

/**
 * @property message
 * @type String
 * @platform android 3.0
 * <p>Message text.</p>
 */
Titanium.UI.Android.ProgressIndicator.message = null;

/**
 * @property messageid
 * @type String
 * @platform android 3.0
 * <p>Key identifying a string in the locale file to use for the message text.</p>
 * @description <p>Only one of <code>message</code> or <code>messageid</code> should be specified.</p>
 */
Titanium.UI.Android.ProgressIndicator.messageid = null;

/**
 * @property min
 * @type Number
 * @platform android 3.0
 * <p>Minimum value of the progress bar.</p>
 */
Titanium.UI.Android.ProgressIndicator.min = null;

/**
 * @property [type={@link Titanium.UI.Android#property-PROGRESS_INDICATOR_INDETERMINANT}]
 * @type Number
 * @platform android 3.0
 * <p>Type for the progress indicator.</p>
 * @description <p>One of the constants:
{@link Titanium.UI.Android#property-PROGRESS_INDICATOR_INDETERMINANT},
{@link Titanium.UI.Android#property-PROGRESS_INDICATOR_DETERMINANT}.</p>
 */
Titanium.UI.Android.ProgressIndicator.type = null;

/**
 * @class Titanium.UI.Android.SearchView
 * @typestr Object of Titanium.UI.Android
 * @platform android 3.0.2
 * @extends Titanium.UI.View
 * <p>A specialized text field for entering search text.</p>
 * @description <p>A widget that provides a user interface for the user to enter a search query and submit a request to a search provider.</p>
<p>Search views are most commonly used for filtering the rows in a {@link Titanium.UI.TableView TableView}.
Similar to {@link Titanium.UI.SearchBar SearchBar}, you can add a search view to a table view by setting the table view's 
{@link Titanium.UI.TableView#property-search search} property. </p>
<p>You can also add search view in an action bar as an action view.</p>
<p>A search view can be used without a table view.</p>
<p>Use the {@link Titanium.UI.Android#method-createSearchView} method to create a search view. This is only
supported on Google API 11 (Android 3.0) and later, and the Android manifest <code>targetSDKVersion</code>
key must be set in the <code>tiapp.xml</code> file.</p>
 * <h3>Examples</h3>
 * <h4>Search View for Table in Action Bar</h4>
 * <p><p>The following example creates a SearchView widget for a TableView
and displays it as an Action Bar item if the Google API level is 11 or later.
If not, it defaults to use the search bar.</p></p><pre>var win = Ti.UI.createWindow({
    backgroundColor: 'blue',
    fullscreen: false
});

var search;
var searchAsChild = false;

if (Ti.Platform.name == 'android' &amp;&amp; Ti.Platform.Android.API_LEVEL &gt; 11) {
    // Use action bar search view
    search = Ti.UI.Android.createSearchView({
        hintText: "Table Search"
    });

    win.activity.onCreateOptionsMenu = function(e) {
        var menu = e.menu;
        var menuItem = menu.add({
            title: 'Table Search',
            actionView : search,
            icon: (Ti.Android.R.drawable.ic_menu_search ? Ti.Android.R.drawable.ic_menu_search : "my_search.png"),
            showAsAction: Ti.Android.SHOW_AS_ACTION_IF_ROOM | Ti.Android.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
        });
    };
}
else {
    // Use search bar
    search = Ti.UI.createSearchBar({
        hintText: "Table Search"
    });
    searchAsChild = true;
}

var data = [];
data.push(Ti.UI.createTableViewRow({title:'Apple'}));
data.push(Ti.UI.createTableViewRow({title:'Banana'}));
data.push(Ti.UI.createTableViewRow({title:'Orange'}));
data.push(Ti.UI.createTableViewRow({title:'Raspberry'}));

var tableview = Titanium.UI.createTableView({
    data:data,
    search:search,
    searchAsChild:searchAsChild
});

win.add(tableview);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy project.</p>
<p>index.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="blue" fullscreen="false" layout="vertical"&gt;
        &lt;TableView id="tableview" top="10"&gt;
            &lt;TableViewRow title="Apple" /&gt;
            &lt;TableViewRow title="Banana" /&gt;
            &lt;TableViewRow title="Orange" /&gt;
            &lt;TableViewRow title="Raspberry" /&gt;
        &lt;/TableView&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>index.js:</p></p><pre>if (OS_ANDROID &amp;&amp; Ti.Platform.Android.API_LEVEL &gt; 11) {
    // use action bar search view
    var search = Alloy.createController("searchview").getView();
    $.tableview.searchAsChild = false;
    $.tableview.search = search;
    $.win.addEventListener("open", function() {
        $.win.activity.onCreateOptionsMenu = function(e) {
            e.menu.add({
                title: "Table Search",
                icon: (Ti.Android.R.drawable.ic_menu_search ? Ti.Android.R.drawable.ic_menu_search : "my_search.png"),
                actionView: search,
                showAsAction : Ti.Android.SHOW_AS_ACTION_ALWAYS | Ti.Android.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
            });
        }
        $.win.activity.invalidateOptionsMenu();
    });
} else {
    // use a search bar
    $.tableview.search = Alloy.createController("searchbar").getView();
}
$.win.open();
</pre>
 * <p><p>searchview.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;SearchView id="searchView" ns="Ti.UI.Android" platform="android" hintText="Table Search" /&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>searchbar.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;SearchBar id="searchBar" hintText="Table Search" /&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.Android.SearchView = {};







/**
 * @method add 
 * @hide
*/Titanium.UI.Android.SearchView.add = function(){};

/**
 * @method blur
 * <p>Causes the search view to lose focus.</p>
 * @return void
*/
Titanium.UI.Android.SearchView.blur = function(){};

/**
 * @method focus
 * <p>Causes the search view to gain focus.</p>
 * @return void
*/
Titanium.UI.Android.SearchView.focus = function(){};

/**
 * @method getAnchorPoint 
 * @hide
*/Titanium.UI.Android.SearchView.getAnchorPoint = function(){};

/**
 * @method getBackgroundLeftCap 
 * @hide
*/Titanium.UI.Android.SearchView.getBackgroundLeftCap = function(){};

/**
 * @method getBackgroundTopCap 
 * @hide
*/Titanium.UI.Android.SearchView.getBackgroundTopCap = function(){};

/**
 * @method getHintText
 * <p>Gets the value of the {@link Titanium.UI.Android.SearchView#property-hintText hintText} property.</p>
 * @return {String} 
*/
Titanium.UI.Android.SearchView.getHintText = function(){};

/**
 * @method getIconified
 * <p>Gets the value of the {@link Titanium.UI.Android.SearchView#property-iconified iconified} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Android.SearchView.getIconified = function(){};

/**
 * @method getIconifiedByDefault
 * <p>Gets the value of the {@link Titanium.UI.Android.SearchView#property-iconifiedByDefault iconifiedByDefault} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Android.SearchView.getIconifiedByDefault = function(){};

/**
 * @method getSubmitEnabled
 * <p>Gets the value of the {@link Titanium.UI.Android.SearchView#property-submitEnabled submitEnabled} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Android.SearchView.getSubmitEnabled = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.Android.SearchView#property-value value} property.</p>
 * @return {String} 
*/
Titanium.UI.Android.SearchView.getValue = function(){};

/**
 * @method setAnchorPoint 
 * @hide
*/Titanium.UI.Android.SearchView.setAnchorPoint = function(){};

/**
 * @method setBackgroundLeftCap 
 * @hide
*/Titanium.UI.Android.SearchView.setBackgroundLeftCap = function(){};

/**
 * @method setBackgroundTopCap 
 * @hide
*/Titanium.UI.Android.SearchView.setBackgroundTopCap = function(){};

/**
 * @method setHintText
 * <p>Sets the value of the {@link Titanium.UI.Android.SearchView#property-hintText hintText} property.</p>
 * @param {String} hintText 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Android.SearchView.setHintText = function(hintText){};

/**
 * @method setIconified
 * <p>Sets the value of the {@link Titanium.UI.Android.SearchView#property-iconified iconified} property.</p>
 * @param {Boolean} iconified 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Android.SearchView.setIconified = function(iconified){};

/**
 * @method setIconifiedByDefault
 * <p>Sets the value of the {@link Titanium.UI.Android.SearchView#property-iconifiedByDefault iconifiedByDefault} property.</p>
 * @param {Boolean} iconifiedByDefault 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Android.SearchView.setIconifiedByDefault = function(iconifiedByDefault){};

/**
 * @method setSubmitEnabled
 * <p>Sets the value of the {@link Titanium.UI.Android.SearchView#property-submitEnabled submitEnabled} property.</p>
 * @param {Boolean} submitEnabled 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Android.SearchView.setSubmitEnabled = function(submitEnabled){};

/**
 * @method setValue
 * <p>Sets the value of the {@link Titanium.UI.Android.SearchView#property-value value} property.</p>
 * @param {String} value 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Android.SearchView.setValue = function(value){};

/**
 * @property anchorPoint 
 * @hide
*/Titanium.UI.Android.SearchView.anchorPoint = null;

/**
 * @property backgroundLeftCap 
 * @hide
*/Titanium.UI.Android.SearchView.backgroundLeftCap = null;

/**
 * @property backgroundTopCap 
 * @hide
*/Titanium.UI.Android.SearchView.backgroundTopCap = null;

/**
 * @property [hintText=no hint text]
 * @type String
 * <p>Text to show when the search view field is not focused.</p>
 */
Titanium.UI.Android.SearchView.hintText = null;

/**
 * @property [iconified=undefined]
 * @type Boolean
 * <p>Iconifies or expands the search view</p>
 * @description <p>see <a href="http://developer.android.com/reference/android/widget/SearchView.html#setIconified(boolean)">Android Documentation</a> for more details.</p>
 */
Titanium.UI.Android.SearchView.iconified = null;

/**
 * @property [iconifiedByDefault=true]
 * @type Boolean
 * <p>Sets the default or resting state of the search view</p>
 * @description <p>see <a href="http://developer.android.com/reference/android/widget/SearchView.html#setIconifiedByDefault(boolean)">Android Documentation</a> for more details.</p>
 */
Titanium.UI.Android.SearchView.iconifiedByDefault = null;

/**
 * @property [submitEnabled=undefined]
 * @type Boolean
 * <p>Whether to display the submit button when necessary or never display.</p>
 */
Titanium.UI.Android.SearchView.submitEnabled = null;

/**
 * @property value
 * @type String
 * <p>Value of the search view.</p>
 * @description <p>This value cannot be set until after the search view is created.</p>
 */
Titanium.UI.Android.SearchView.value = null;

/**
 * @method createProgressIndicator
 * <p>Creates and returns an instance of {@link Titanium.UI.Android.ProgressIndicator}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Android.ProgressIndicator} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Android.ProgressIndicator} 
 * @platform android 3.0
*/
Titanium.UI.Android.createProgressIndicator = function(parameters){};

/**
 * @method createSearchView
 * <p>Creates and returns an instance of {@link Titanium.UI.Android.SearchView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Android.SearchView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Android.SearchView} 
 * @platform android 3.0.2
*/
Titanium.UI.Android.createSearchView = function(parameters){};

/**
 * @method hideSoftKeyboard
 * <p>Hides the soft keyboard.</p>
 * @description <p>Be aware that it is not currently possible in the native Android API to detect that the 
keyboard is already visible or to globally show the keyboard.</p>
 * @return void
*/
Titanium.UI.Android.hideSoftKeyboard = function(){};

/**
 * @method openPreferences
 * <p>Opens an application preferences dialog, using the native Android system settings interface, 
defined by the platform-specific <code>preferences.xml</code> and <code>array.xml</code> files.</p>
 * @description <p>The preferences configuration files must be created in the project folders, 
<code>platform/android/res/xml/preferences.xml</code> and <code>platform/android/res/values/array/array.xml</code>.</p>
<p>See the example for a demonstration, and the official Android Developer documentation for 
the <a href="http://developer.android.com/resources/samples/ApiDemos/res/xml/preferences.html">preferences.xml</a> 
format.</p>
 * @return void
*/
Titanium.UI.Android.openPreferences = function(){};

/**
 * @property LINKIFY_ALL
 * @type Number
 * @readonly
 * <p>Converts all detectable types of data into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_ALL} instead.</p>
 */
Titanium.UI.Android.LINKIFY_ALL = null;

/**
 * @property LINKIFY_EMAIL_ADDRESSES
 * @type Number
 * @readonly
 * <p>Converts strings formatted as email addresses into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_EMAIL_ADDRESSES} instead.</p>
 */
Titanium.UI.Android.LINKIFY_EMAIL_ADDRESSES = null;

/**
 * @property LINKIFY_MAP_ADDRESSES
 * @type Number
 * @readonly
 * <p>Converts strings formatted as addresses into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_MAP_ADDRESSES} instead.</p>
 */
Titanium.UI.Android.LINKIFY_MAP_ADDRESSES = null;

/**
 * @property LINKIFY_PHONE_NUMBERS
 * @type Number
 * @readonly
 * <p>Converts strings formatted as phone numbers into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_PHONE_NUMBERS} instead.</p>
 */
Titanium.UI.Android.LINKIFY_PHONE_NUMBERS = null;

/**
 * @property LINKIFY_WEB_URLS
 * @type Number
 * @readonly
 * <p>Converts strings formatted as URLs into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_URLS} instead.</p>
 */
Titanium.UI.Android.LINKIFY_WEB_URLS = null;

/**
 * @property OVER_SCROLL_ALWAYS
 * @type Number
 * @readonly
 * @platform android 3.1
 * <p>Always allow a user to over-scroll this view, provided it is a view that can scroll.</p>
 * @description <p>Use this with the following properties - {@link Titanium.UI.ScrollableView#property-overScrollMode}, {@link Titanium.UI.ScrollView#property-overScrollMode}, 
{@link Titanium.UI.TableView#property-overScrollMode} and {@link Titanium.UI.WebView#property-overScrollMode}. </p>
<p>Only applicable when {@link Titanium.Platform.Android#property-API_LEVEL} is 9 or above.</p>
 */
Titanium.UI.Android.OVER_SCROLL_ALWAYS = null;

/**
 * @property OVER_SCROLL_IF_CONTENT_SCROLLS
 * @type Number
 * @readonly
 * @platform android 3.1
 * <p>Allow a user to over-scroll this view only if the content is large enough to meaningfully scroll, provided it is a view that can scroll.</p>
 * @description <p>Use this with the following properties - {@link Titanium.UI.ScrollableView#property-overScrollMode}, {@link Titanium.UI.ScrollView#property-overScrollMode}, 
{@link Titanium.UI.TableView#property-overScrollMode} and {@link Titanium.UI.WebView#property-overScrollMode}. </p>
<p>Only applicable when {@link Titanium.Platform.Android#property-API_LEVEL} is 9 or above.</p>
 */
Titanium.UI.Android.OVER_SCROLL_IF_CONTENT_SCROLLS = null;

/**
 * @property OVER_SCROLL_NEVER
 * @type Number
 * @readonly
 * @platform android 3.1
 * <p>Never allow a user to over-scroll this view.</p>
 * @description <p>Use this with the following properties - {@link Titanium.UI.ScrollableView#property-overScrollMode}, {@link Titanium.UI.ScrollView#property-overScrollMode}, 
{@link Titanium.UI.TableView#property-overScrollMode} and {@link Titanium.UI.WebView#property-overScrollMode}. </p>
<p>Only applicable when {@link Titanium.Platform.Android#property-API_LEVEL} is 9 or above.</p>
 */
Titanium.UI.Android.OVER_SCROLL_NEVER = null;

/**
 * @property PIXEL_FORMAT_A_8
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android A_8 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_A_8 = null;

/**
 * @property PIXEL_FORMAT_LA_88
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android LA_88 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_LA_88 = null;

/**
 * @property PIXEL_FORMAT_L_8
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android L_8 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_L_8 = null;

/**
 * @property PIXEL_FORMAT_OPAQUE
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android OPAQUE pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_OPAQUE = null;

/**
 * @property PIXEL_FORMAT_RGBA_4444
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android RGBA_4444 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_RGBA_4444 = null;

/**
 * @property PIXEL_FORMAT_RGBA_5551
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android RGBA_5551 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_RGBA_5551 = null;

/**
 * @property PIXEL_FORMAT_RGBA_8888
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android RGBA_8888 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_RGBA_8888 = null;

/**
 * @property PIXEL_FORMAT_RGBX_8888
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android RGBX_8888 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_RGBX_8888 = null;

/**
 * @property PIXEL_FORMAT_RGB_332
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android RGB_332 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_RGB_332 = null;

/**
 * @property PIXEL_FORMAT_RGB_565
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android RGB_565 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_RGB_565 = null;

/**
 * @property PIXEL_FORMAT_RGB_888
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android RGB_888 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_RGB_888 = null;

/**
 * @property PIXEL_FORMAT_TRANSLUCENT
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android TRANSLUCENT pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_TRANSLUCENT = null;

/**
 * @property PIXEL_FORMAT_TRANSPARENT
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android A_8 pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format can 
improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_TRANSPARENT = null;

/**
 * @property PIXEL_FORMAT_UNKNOWN
 * @type Number
 * @readonly
 * @platform android 1.8
 * <p>Android UNKNOWN pixel format for {@link Titanium.UI.Window}. Selecting the correct pixel format 
can improve image clarity and performance.</p>
 * @description <p>See the Android Developer website for official documentation about the 
<a href="http://developer.android.com/reference/android/graphics/PixelFormat.html">PixelFormat</a>
constants.</p>
 */
Titanium.UI.Android.PIXEL_FORMAT_UNKNOWN = null;

/**
 * @property PROGRESS_INDICATOR_DETERMINANT
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>Used with the {@link Titanium.UI.Android.ProgressIndicator#property-type} property to indicate an ongoing 
activity of determinate length.</p>
 */
Titanium.UI.Android.PROGRESS_INDICATOR_DETERMINANT = null;

/**
 * @property PROGRESS_INDICATOR_DIALOG
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>Display {@link Titanium.UI.Android.ProgressIndicator} as a modal dialog. (default)</p>
 * @description <p>Used with the {@link Titanium.UI.Android.ProgressIndicator#property-location} property.</p>
 */
Titanium.UI.Android.PROGRESS_INDICATOR_DIALOG = null;

/**
 * @property PROGRESS_INDICATOR_INDETERMINANT
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>Used with the {@link Titanium.UI.Android.ProgressIndicator#property-type} property to indicate an ongoing 
activity of indeterminate length. (default)</p>
 */
Titanium.UI.Android.PROGRESS_INDICATOR_INDETERMINANT = null;

/**
 * @property PROGRESS_INDICATOR_STATUS_BAR
 * @type Number
 * @readonly
 * @platform android 3.0
 * <p>Display {@link Titanium.UI.Android.ProgressIndicator} as a horizontal progress bar in the title of 
the window.</p>
 * @description <p>Used with the {@link Titanium.UI.Android.ProgressIndicator#property-location} property.</p>
 */
Titanium.UI.Android.PROGRESS_INDICATOR_STATUS_BAR = null;

/**
 * @property SOFT_INPUT_ADJUST_PAN
 * @type Number
 * @readonly
 * @creationOnly
 * <p>Pan the current heavyweight window when the input method (ie software keyboard) is shown, to 
ensure that its contents are not obscured.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>One of the group of soft input adjustment constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_UNSPECIFIED SOFT_INPUT_ADJUST_UNSPECIFIED}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_RESIZE SOFT_INPUT_ADJUST_RESIZE}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_PAN SOFT_INPUT_ADJUST_PAN}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_ADJUST_PAN = null;

/**
 * @property SOFT_INPUT_ADJUST_RESIZE
 * @type Number
 * @readonly
 * @creationOnly
 * <p>Resize the current heavyweight window when the input method (ie software keyboard) is shown, 
to ensure that its contents are not obscured.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>One of the group of soft input adjustment constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_UNSPECIFIED SOFT_INPUT_ADJUST_UNSPECIFIED}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_RESIZE SOFT_INPUT_ADJUST_RESIZE}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_PAN SOFT_INPUT_ADJUST_PAN}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_ADJUST_RESIZE = null;

/**
 * @property SOFT_INPUT_ADJUST_UNSPECIFIED
 * @type Number
 * @readonly
 * @creationOnly
 * <p>Use the system-default behavior to determine how the soft input area (ie software keyboard) 
is accomodated by the current heavyweight window when it receives focus (default.)</p>
 * @description <p>Depends on the <code>AndroidManifest.xml</code> setting if defined or system-default otherwise to 
determine how to accomodate the soft keyboard when visible.</p>
<p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>One of the group of soft input adjustment constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_UNSPECIFIED SOFT_INPUT_ADJUST_UNSPECIFIED}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_RESIZE SOFT_INPUT_ADJUST_RESIZE}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_PAN SOFT_INPUT_ADJUST_PAN}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_ADJUST_UNSPECIFIED = null;

/**
 * @property SOFT_INPUT_STATE_ALWAYS_HIDDEN
 * @type Number
 * @readonly
 * <p>Always hide the soft input area (ie software keyboard) when the current heavyweight window 
receives focus.</p>
 * @description <p>Note that the unresolved bug <a href="https://code.google.com/p/android/issues/detail?id=7115">#7115</a> 
on the Official Android Project website affects this functionality.</p>
<p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>One of the group of soft input visibility constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_HIDDEN SOFT_INPUT_STATE_ALWAYS_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_VISIBLE SOFT_INPUT_STATE_ALWAYS_VISIBLE}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_HIDDEN SOFT_INPUT_STATE_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_UNSPECIFIED SOFT_INPUT_STATE_UNSPECIFIED}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_STATE_VISIBLE SOFT_INPUT_STATE_VISIBLE}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_STATE_ALWAYS_HIDDEN = null;

/**
 * @property SOFT_INPUT_STATE_ALWAYS_VISIBLE
 * @type Number
 * @readonly
 * <p>Always show the soft input area (ie software keyboard) when the current heavyweight window 
receives focus.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>This constant is one of the group of soft input visibility constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_HIDDEN SOFT_INPUT_STATE_ALWAYS_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_VISIBLE SOFT_INPUT_STATE_ALWAYS_VISIBLE}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_HIDDEN SOFT_INPUT_STATE_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_UNSPECIFIED SOFT_INPUT_STATE_UNSPECIFIED}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_STATE_VISIBLE SOFT_INPUT_STATE_VISIBLE}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_STATE_ALWAYS_VISIBLE = null;

/**
 * @property SOFT_INPUT_STATE_HIDDEN
 * @type Number
 * @readonly
 * <p>Attempt to hide the soft input area (ie software keyboard) when the current heavyweight 
window receives focus.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>This constant is one of the group of soft input visibility constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_HIDDEN SOFT_INPUT_STATE_ALWAYS_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_VISIBLE SOFT_INPUT_STATE_ALWAYS_VISIBLE}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_HIDDEN SOFT_INPUT_STATE_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_UNSPECIFIED SOFT_INPUT_STATE_UNSPECIFIED}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_STATE_VISIBLE SOFT_INPUT_STATE_VISIBLE}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_STATE_HIDDEN = null;

/**
 * @property SOFT_INPUT_STATE_UNSPECIFIED
 * @type Number
 * @readonly
 * <p>Use the system-default behavior to determine whether to show the soft input area 
(ie software keyboard) when the current heavyweight window receives focus.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>This constant is one of the group of soft input visibility constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_HIDDEN SOFT_INPUT_STATE_ALWAYS_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_VISIBLE SOFT_INPUT_STATE_ALWAYS_VISIBLE}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_HIDDEN SOFT_INPUT_STATE_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_UNSPECIFIED SOFT_INPUT_STATE_UNSPECIFIED}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_STATE_VISIBLE SOFT_INPUT_STATE_VISIBLE}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_STATE_UNSPECIFIED = null;

/**
 * @property SOFT_INPUT_STATE_VISIBLE
 * @type Number
 * @readonly
 * <p>Attempt to show the soft input area (ie software keyboard) when the current heavyweight 
window receives focus.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#property-windowSoftInputMode} property.</p>
<p>This constant is one of the group of soft input visibility constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_HIDDEN SOFT_INPUT_STATE_ALWAYS_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_VISIBLE SOFT_INPUT_STATE_ALWAYS_VISIBLE}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_HIDDEN SOFT_INPUT_STATE_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_UNSPECIFIED SOFT_INPUT_STATE_UNSPECIFIED}, 
and {@link Titanium.UI.Android#property-SOFT_INPUT_STATE_VISIBLE SOFT_INPUT_STATE_VISIBLE}.</p>
 */
Titanium.UI.Android.SOFT_INPUT_STATE_VISIBLE = null;

/**
 * @property SOFT_KEYBOARD_DEFAULT_ON_FOCUS
 * @type Number
 * @readonly
 * <p>Use Android default behavior to handle keyboard visibility when a view receives focus. 
(default)</p>
 */
Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS = null;

/**
 * @property SOFT_KEYBOARD_HIDE_ON_FOCUS
 * @type Number
 * @readonly
 * <p>Attempt to hide the soft keyboard when a view receives focus. Note: system can override 
request.</p>
 */
Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS = null;

/**
 * @property SOFT_KEYBOARD_SHOW_ON_FOCUS
 * @type Number
 * @readonly
 * <p>Attempt to show the soft keyboard when a view receives focus. Note: system can override 
request.</p>
 */
Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS = null;

/**
 * @property SWITCH_STYLE_CHECKBOX
 * @type Number
 * @readonly
 * <p>Display {@link Titanium.UI.Switch} as a checkbox.</p>
 */
Titanium.UI.Android.SWITCH_STYLE_CHECKBOX = null;

/**
 * @property SWITCH_STYLE_TOGGLEBUTTON
 * @type Number
 * @readonly
 * <p>Display {@link Titanium.UI.Switch} as a toggle button. (default)</p>
 */
Titanium.UI.Android.SWITCH_STYLE_TOGGLEBUTTON = null;

/**
 * @property WEBVIEW_PLUGINS_OFF
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.WebView#property-pluginState WebView.pluginState} to disable plugins in a web view.</p>
 * @description <p>Content that requires a plugin, such as Flash Player, is not loaded, and any
alternative content is displayed instead.</p>
 */
Titanium.UI.Android.WEBVIEW_PLUGINS_OFF = null;

/**
 * @property WEBVIEW_PLUGINS_ON
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.WebView#property-pluginState WebView.pluginState} to enable plugins in a web view.</p>
 * @description <p>Content that requires a plugin, such as Flash Player, is always loaded, whether or not a plugin is
available for the content.</p>
 */
Titanium.UI.Android.WEBVIEW_PLUGINS_ON = null;

/**
 * @property WEBVIEW_PLUGINS_ON_DEMAND
 * @type Number
 * @readonly
 * <p>Display a placeholder and only load plugins when user selects it.</p>
 * @description <p>Content that requires a plugin, such as Flash Player, is replaced by a placeholder. When 
the user clicks on the placeholder, the plugin is loaded and the content is displayed.</p>
<p>Use with {@link Titanium.UI.WebView#property-pluginState WebView.pluginState} to load plugins on demand.</p>
 */
Titanium.UI.Android.WEBVIEW_PLUGINS_ON_DEMAND = null;

/**
 * @class Titanium.UI.Animation
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>The <code>Animation</code> object defines an animation that can be applied to a view.</p>
 * @description <p>An animation object describes the properties of an animation. At its most basic, an animation 
object represents a single-phase animation with an end state and a duration. </p>
<p>When {@link Titanium.UI.View#method-animate animate} is called on a {@link Titanium.UI.View View}, the view is 
animated from its current state to the state described by the animation object. The properties 
that can be animated include the view's position, size, colors, transformation matrix and opacity. </p>
<p>Animations can be set to reverse themselves automatically on completion, and to repeat a given 
number of times. For more complicated effects, multiple animations can be combined in sequence, 
starting one animation when the previous animation completes.</p>
<p>Use the {@link Titanium.UI#method-createAnimation} method to create an animation object.</p>
<p>Note that when you animate a view's size or position, the actual layout properties (such as 
<code>top</code>, <code>left</code>, <code>width</code>, <code>height</code>) are not changed by the animation. See the description of the 
{@link Titanium.UI.View#method-animate animate} method for more information.</p>
<h4>iOS Platform Notes</h4>
<p>iOS supports both 2D and 3D matrix transformations in animations.</p>
<p>In iOS, you can also specify an animation curve or <em>easing function</em> to control the pace of the 
animation. To use an easing function, set the animation's <code>curve</code> property to one of the 
<code>ANIMATION_CURVE</code> constants defined in {@link Titanium.UI}. For example, 
{@link Titanium.UI#property-ANIMATION_CURVE_EASE_IN ANIMATION_CURVE_EASE_IN} specifies an animation that 
starts slowly and then speeds up.</p>
<p>Finally, iOS also supports <em>transitions</em> between windows or views. You can create a transition 
by creating an animation object and setting the <code>view</code> property to the view you want to 
transition to. The <code>transition</code> property specifies the transition effect to apply. Use one of 
the transition style constants defined in {@link Titanium.UI.iPhone.AnimationStyle}.</p>
<h4>Android Platform Notes</h4>
<p>Android supports 2D matrix transformations. Note that the 
{@link Titanium.UI.2DMatrix#method-rotate 2DMatrix.rotate} method operates differently on Android. Called 
with a single argument, it rotates from zero to the specified angle. That is, it ignores any 
existing rotation. Called with two arguments, it interprets the first argument as a "from" 
angle and the second argument as a "to" angle. </p>
<p>Android doesn't support any animation curves or easing functions. Animations always interpolate 
linearly between the start state and the end state.</p>
<h4>Mobile Web Platform Notes</h4>
<p>Mobile Web supports 2D matrix transformations and animation curves in animations.</p>
<p>iOS 5.1 and older as well as Safari 5 have a bug where you cannot animate both a position and
transform matrix at the same time. The matrix transform animation will override the position
animation until the matrix transform animation is complete, then jumps to the animated position.</p>
 * <h3>Examples</h3>
 * <h4>Simple Animation Applied to a View</h4>
 * <p><p>Create a simple animation and apply it to the view.  In this example, the view will animate 
from red to black to orange over 2 seconds.</p></p><pre>var view = Titanium.UI.createView({
  backgroundColor:'red'
});
var animation = Titanium.UI.createAnimation();
animation.backgroundColor = 'black';
animation.duration = 1000;
var animationHandler = function() {
  animation.removeEventListener('complete',animationHandler);
  animation.backgroundColor = 'orange';
  view.animate(animation);
};
animation.addEventListener('complete',animationHandler);
view.animate(animation);</pre>
 * <h4>Animation Using Matrix Transforms</h4>
 * <p><p>The following example uses a transformation matrix to animate
a view when the view is clicked. The animation rotates and scales
the view, then returns it to its original size and position. The
entire animation is repeated three times.</p></p><pre>var box = Ti.UI.createView({
  backgroundColor : 'red',
  height : '100',
  width : '100'
});
win.add(box);

box.addEventListener('click', function() {
  var matrix = Ti.UI.create2DMatrix()
  matrix = matrix.rotate(180);
  matrix = matrix.scale(2, 2);
  var a = Ti.UI.createAnimation({
    transform : matrix,
    duration : 2000,
    autoreverse : true,
    repeat : 3
  });
  box.animate(a);
});</pre>
 * <h4>Using an anchorPoint (Android and iOS)</h4>
 * <p><p>Create a button and a blue square view. For each click of the button, apply a 90 degree 
rotation animation pivoted at one of a series of anchor points. In particular, note that 
an anchor point is configured using the {@link Titanium.UI.Animation#property-anchorPoint} property for 
Android and the {@link Titanium.UI.View#property-anchorPoint} property for iOS.</p></p><pre>var animationType = [
  { name: 'Top Left', anchorPoint: {x:0, y:0} },
  { name: 'Top Right', anchorPoint: {x:1, y:0} },
  { name: 'Bottom Left', anchorPoint: {x:0, y:1} },
  { name: 'Bottom Right', anchorPoint: {x:1, y:1} },
  { name: 'Center', anchorPoint: {x:0.5, y:0.5} }
];
var animationTypeLength = animationType.length;
var animationCount = 0;
var animationTypePointer = 0;

var t = Ti.UI.create2DMatrix();
t = t.rotate(90);

// animation properties
var a = {
  transform: t,
  duration: 2000,
  autoreverse: true
};

Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow();

var view = Ti.UI.createView({
  backgroundColor:'#336699',
  width:100, height:100
});
win.add(view);

var button = Ti.UI.createButton({
  title:'Animate ' + animationType[animationTypePointer].name,
  height: (Ti.UI.Android) ? 80 : 40,
  width: (Ti.UI.Android) ? 300 : 200,
  top:30
});
win.add(button);

function updateButton(name){
  button.title = 'Animate ' + name;
}

button.addEventListener('click', function(){
  // set new anchorPoint on animation for Android
  a.anchorPoint = animationType[animationTypePointer].anchorPoint;
  
  // set new anchorPoint on view for iOS
  view.anchorPoint = animationType[animationTypePointer].anchorPoint;
  
  animationCount++;
  
  // determine position of next object in animationType array or return to first item
  // using modulus operator
  animationTypePointer = animationCount % animationTypeLength;
  
  // animate view, followed by callback to set next button title
  view.animate(a, function(){
    updateButton(animationType[animationTypePointer].name);
  });
});

win.open();</pre>
 */
Titanium.UI.Animation = {};



/**
 * @method getAnchorPoint
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-anchorPoint anchorPoint} property.</p>
 * @return {Point} 
 * @platform android 0.9
*/
Titanium.UI.Animation.getAnchorPoint = function(){};

/**
 * @method getAutoreverse
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-autoreverse autoreverse} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Animation.getAutoreverse = function(){};

/**
 * @method getBackgroundColor
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-backgroundColor backgroundColor} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.getBackgroundColor = function(){};

/**
 * @method getBottom
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-bottom bottom} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getBottom = function(){};

/**
 * @method getCenter
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-center center} property.</p>
 * @return {Object} 
*/
Titanium.UI.Animation.getCenter = function(){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-color color} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.getColor = function(){};

/**
 * @method getCurve
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-curve curve} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.getCurve = function(){};

/**
 * @method getDelay
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-delay delay} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getDelay = function(){};

/**
 * @method getDuration
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-duration duration} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getDuration = function(){};

/**
 * @method getHeight
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-height height} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getHeight = function(){};

/**
 * @method getLeft
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-left left} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getLeft = function(){};

/**
 * @method getOpacity
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-opacity opacity} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getOpacity = function(){};

/**
 * @method getOpaque
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-opaque opaque} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Animation.getOpaque = function(){};

/**
 * @method getRepeat
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-repeat repeat} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getRepeat = function(){};

/**
 * @method getRight
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-right right} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getRight = function(){};

/**
 * @method getTop
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-top top} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getTop = function(){};

/**
 * @method getTransform
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-transform transform} property.</p>
 * @return {Titanium.UI.2DMatrix/Titanium.UI.3DMatrix} 
*/
Titanium.UI.Animation.getTransform = function(){};

/**
 * @method getTransition
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-transition transition} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Animation.getTransition = function(){};

/**
 * @method getView
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-view view} property.</p>
 * @return {Titanium.UI.View} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Animation.getView = function(){};

/**
 * @method getVisible
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-visible visible} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.getVisible = function(){};

/**
 * @method getWidth
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-width width} property.</p>
 * @return {Number} 
*/
Titanium.UI.Animation.getWidth = function(){};

/**
 * @method getZIndex
 * <p>Gets the value of the {@link Titanium.UI.Animation#property-zIndex zIndex} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.getZIndex = function(){};

/**
 * @method setAnchorPoint
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-anchorPoint anchorPoint} property.</p>
 * @param {Point} anchorPoint 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.Animation.setAnchorPoint = function(anchorPoint){};

/**
 * @method setAutoreverse
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-autoreverse autoreverse} property.</p>
 * @param {Boolean} autoreverse 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setAutoreverse = function(autoreverse){};

/**
 * @method setBackgroundColor
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-backgroundColor backgroundColor} property.</p>
 * @param {String} backgroundColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.setBackgroundColor = function(backgroundColor){};

/**
 * @method setBottom
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-bottom bottom} property.</p>
 * @param {Number} bottom 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setBottom = function(bottom){};

/**
 * @method setCenter
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-center center} property.</p>
 * @param {Object} center 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setCenter = function(center){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.setColor = function(color){};

/**
 * @method setCurve
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-curve curve} property.</p>
 * @param {Number} curve 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.setCurve = function(curve){};

/**
 * @method setDelay
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-delay delay} property.</p>
 * @param {Number} delay 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setDelay = function(delay){};

/**
 * @method setDuration
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-duration duration} property.</p>
 * @param {Number} duration 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setDuration = function(duration){};

/**
 * @method setHeight
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-height height} property.</p>
 * @param {Number} height 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setHeight = function(height){};

/**
 * @method setLeft
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-left left} property.</p>
 * @param {Number} left 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setLeft = function(left){};

/**
 * @method setOpacity
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-opacity opacity} property.</p>
 * @param {Number} opacity 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setOpacity = function(opacity){};

/**
 * @method setOpaque
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-opaque opaque} property.</p>
 * @param {Boolean} opaque 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Animation.setOpaque = function(opaque){};

/**
 * @method setRepeat
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-repeat repeat} property.</p>
 * @param {Number} repeat 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setRepeat = function(repeat){};

/**
 * @method setRight
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-right right} property.</p>
 * @param {Number} right 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setRight = function(right){};

/**
 * @method setTop
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-top top} property.</p>
 * @param {Number} top 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setTop = function(top){};

/**
 * @method setTransform
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-transform transform} property.</p>
 * @param {Titanium.UI.2DMatrix/Titanium.UI.3DMatrix} transform 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setTransform = function(transform){};

/**
 * @method setTransition
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-transition transition} property.</p>
 * @param {Number} transition 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Animation.setTransition = function(transition){};

/**
 * @method setView
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-view view} property.</p>
 * @param {Titanium.UI.View} view 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Animation.setView = function(view){};

/**
 * @method setVisible
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-visible visible} property.</p>
 * @param {Boolean} visible 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.setVisible = function(visible){};

/**
 * @method setWidth
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-width width} property.</p>
 * @param {Number} width 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Animation.setWidth = function(width){};

/**
 * @method setZIndex
 * <p>Sets the value of the {@link Titanium.UI.Animation#property-zIndex zIndex} property.</p>
 * @param {Number} zIndex 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Animation.setZIndex = function(zIndex){};

/**
 * @property anchorPoint
 * @type Point
 * @platform android 0.9
 * <p>Coordinate of the view about which to pivot an animation.</p>
 * @description <p>Used on Android only. For iOS, use {@link Titanium.UI.View#property-anchorPoint}. </p>
<p>Anchor point is specified as a fraction of the view's size.  For example, <code>{0, 0}</code> is at 
the view's top-left corner, <code>{0.5, 0.5}</code> at its center and <code>{1, 1}</code> at its bottom-right 
corner. </p>
<p>See the "Using an anchorPoint" example for a demonstration.</p>
 */
Titanium.UI.Animation.anchorPoint = null;

/**
 * @property [autoreverse=false]
 * @type Boolean
 * <p>Specifies if the animation should be replayed in reverse upon completion.</p>
 */
Titanium.UI.Animation.autoreverse = null;

/**
 * @property backgroundColor
 * @type String
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Value of the <code>backgroundColor</code> property at the end of the animation, as a color name 
or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Animation.backgroundColor = null;

/**
 * @property bottom
 * @type Number
 * <p>Value of the <code>bottom</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.bottom = null;

/**
 * @property center
 * @type Object
 * <p>Value of the <code>center</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.center = null;

/**
 * @property color
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Value of the <code>color</code> property at the end of the animation, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Animation.color = null;

/**
 * @property curve
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Animation curve or easing function to apply to the animation.</p>
 * @description <p>Specify one of the animation constants, 
{@link Titanium.UI#property-ANIMATION_CURVE_EASE_IN}, 
{@link Titanium.UI#property-ANIMATION_CURVE_EASE_IN_OUT}, 
{@link Titanium.UI#property-ANIMATION_CURVE_EASE_OUT}, 
or {@link Titanium.UI#property-ANIMATION_CURVE_LINEAR}.</p>
 */
Titanium.UI.Animation.curve = null;

/**
 * @property delay
 * @type Number
 * <p>Delay, in milliseconds before starting the animation.</p>
 */
Titanium.UI.Animation.delay = null;

/**
 * @property duration
 * @type Number
 * <p>Duration of the animation, in milliseconds.</p>
 */
Titanium.UI.Animation.duration = null;

/**
 * @property height
 * @type Number
 * <p>Value of the <code>height</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.height = null;

/**
 * @property left
 * @type Number
 * <p>Value of the <code>left</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.left = null;

/**
 * @property opacity
 * @type Number
 * <p>Value of the <code>opacity</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.opacity = null;

/**
 * @property opaque
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Value of the <code>opaque</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.opaque = null;

/**
 * @property [repeat=1 (no repeat)]
 * @type Number
 * <p>Number of times the animation should be performed.</p>
 * @description <p>If <code>autoreverse</code> is <code>true</code>, then one repeat of the animation consists of the animation 
being played once forward, and once backward.</p>
 */
Titanium.UI.Animation.repeat = null;

/**
 * @property right
 * @type Number
 * <p>Value of the <code>right</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.right = null;

/**
 * @property top
 * @type Number
 * <p>Value of the <code>top</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.top = null;

/**
 * @property transform
 * @type Titanium.UI.2DMatrix/Titanium.UI.3DMatrix
 * <p>Animate the view from its current tranform to the specified transform.</p>
 * @description <p>Over the course of the animation, the view interpolates from its current transform to the 
specified transform.</p>
<p>3D transforms are only supported on iOS.</p>
 */
Titanium.UI.Animation.transform = null;

/**
 * @property transition
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Transition type to use during a transition animation.</p>
 * @description <p>One of the activity indicator style constants 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_DOWN}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_UP}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_LEFT}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_RIGHT}, 
or {@link Titanium.UI.iPhone.AnimationStyle#property-NONE}.</p>
<p>The new view being transitioned to <strong>should NOT</strong> be a child of another view or 
of the animating view. The animation replaces the current view from the 
view heirarchy and adds the new view to it.</p>
 */
Titanium.UI.Animation.transition = null;

/**
 * @property view
 * @type Titanium.UI.View
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>New view to transition to.</p>
 * @description <p>Specify the <code>transition</code> property with one of the transition style constants defined 
in {@link Titanium.UI.iPhone.AnimationStyle} to select the effect to apply.</p>
<p>The new view being transitioned to <strong>should NOT</strong> be a child of another view or
of the animating view. The animation replaces the current view from the
view heirarchy and adds the new view to it.</p>
 */
Titanium.UI.Animation.view = null;

/**
 * @property visible
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Value of the <code>visible</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.visible = null;

/**
 * @property width
 * @type Number
 * <p>Value of the <code>width</code> property at the end of the animation.</p>
 */
Titanium.UI.Animation.width = null;

/**
 * @property zIndex
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Value of the <code>zIndex</code> property at the end of the animation.</p>
 * @description <p>Refer to {@link Titanium.UI.View#property-zIndex} for an explanation of z-index.</p>
 */
Titanium.UI.Animation.zIndex = null;

/**
 * @class Titanium.UI.Button
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A button widget that has four states: normal, disabled, focused and selected.</p>
 * @description <p>A button displays its  selected state while it is being pressed. The focused state is
only used on Android devices that have navigation keys or a keyboard, to indicate
which button has input focus.</p>
<p>You can specify background images for each state, as well as button text and a button
icon. On iOS, there are button styles which define appearance for each state, even if
no button images are set.</p>
<p>Use the {@link Titanium.UI#method-createButton} method to create a button.</p>
<h4>Android and Mobile Web Platform Notes</h4>
<p>Android and Mobile Web use default button images for the normal, focused, selected and disabled
states. If you use a custom button image, you should specify versions for the focused
and selected states (and the disabled state, if the button is ever disabled).</p>
<p>Android and Mobile Web also support setting the background color for each of the states. These are not
supported on iOS.</p>
<h4>iOS Platform Notes</h4>
<p>iOS buttons have two special properties, <code>style</code> and <code>systemButton</code>.</p>
<p>The <code>style</code> property specifies the type of button decoration, and can be set to one 
of the values described in {@link Titanium.UI.iPhone.SystemButtonStyle}. </p>
<p>Unlike Android and Mobile Web, iOS doesn't supply any default background images for buttons--
system button styles serve this purpose.</p>
<p>Button style decorations are drawn above the background gradient and background color, 
and below any background images. </p>
<p>To use a custom button style, for example using a background gradient,
you may need to explicitly set <code>style</code> to <code>PLAIN</code>, to prevent the button style from<br />
overriding any background color or gradient. In addition, the <code>backgroundImage</code> must be 
partially or wholly transparent for the background color or background gradient to be visible.</p>
<p>In order for a background gradient to show through, the <code>backgroundColor</code> may need to be
set to 'transparent'.</p>
<p>The <code>systemButton</code> property lets you create a predefined system-defined button, 
such as the <strong>Camera</strong> or <strong>Add</strong> buttons, for use in toolbars and nav bars.
Specifically, system buttons may be used in the following locations:</p>
<ul>
<li>{@link Titanium.UI.iOS.Toolbar}. The <code>items</code> array can contain system buttons.</li>
<li>{@link Titanium.UI.iPad.Popover}. The <code>leftNavButton</code> and <code>rightNavButton</code> properties can
  refer to system buttons</li>
<li>{@link Titanium.UI.iPad.SplitWindow}. The <code>toolbar</code> array can contain system buttons.</li>
<li>{@link Titanium.UI.TextField}. The <code>keyboardToolbar</code> array can contain system buttons.</li>
<li>{@link Titanium.UI.TextArea}. The <code>keyboardToolbar</code> array can contain system buttons.</li>
<li>{@link Titanium.UI.Window}. The <code>leftNavButton</code> and <code>rightNavButton</code> properties can refer to 
  system buttons and the <code>toolbar</code> array can contain system buttons.</li>
</ul>
<p>Use the constants in {@link Titanium.UI.iPhone.SystemButton} 
to specify a button type. The size, style and decoration of system buttons is set
automatically, so you can create a button by setting only the <code>systemButton</code> property.</p>
<p>For example:</p>
<pre><code>cancelButton = Ti.UI.createButton({ systemButton: Ti.UI.iPhone.SystemButton.CANCEL });
</code></pre>
<p>Note that the <code>systemButton</code> property specifies <em>appearance</em>, not behavior. For
example, to bring up the camera when the user presses the <strong>Camera</strong> button, you must 
add an event listener to the button and call {@link Titanium.Media#method-showCamera} when the 
button is clicked.</p>
<h5>iOS Pressed Button Effects</h5>
<p>If you do not supply separate background images for the normal and selected states,
iOS supplies a built-in effect for pressed buttons. For most iOS buttons, the effect
dims the entire button (except for the text) while the button is being pressed.</p>
<p>For toolbar buttons that use the {@link Titanium.UI.iPhone.SystemButtonStyle#property-PLAIN PLAIN} style
or use system icons such as {@link Titanium.UI.iPhone.SystemButton#property-CAMERA CAMERA}, a glow effect is
used. The glow effect shows as a white circular glow or highlight at the center of the button
when the button is pressed. </p>
 * <h3>Examples</h3>
 * <h4>Simple Button Example</h4>
 * <pre>
var button = Titanium.UI.createButton({
   title: 'Hello',
   top: 10,
   width: 100,
   height: 50
});
button.addEventListener('click',function(e)
{
   Titanium.API.info("You clicked the button");
});</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>button.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;!-- The title property can also be defined as node text. --&gt;
        &lt;Button id="button" onClick="doClick" title="Hello"
            top="10" width="100" height="50" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>button.js:</p></p><pre>function doClick(e){
    Titanium.API.info("You clicked the button");
};</pre>
 */
Titanium.UI.Button = {};

/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to a <code>Button</code> is not supported on all platforms.</p>
<p>If you need to display views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.add = function(view){};

/**
 * @method getBackgroundDisabledImage
 * <p>Gets the value of the {@link Titanium.UI.Button#property-backgroundDisabledImage backgroundDisabledImage} property.</p>
 * @return {String} 
 * @platform android 0.8
*/
Titanium.UI.Button.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedImage
 * <p>Gets the value of the {@link Titanium.UI.Button#property-backgroundFocusedImage backgroundFocusedImage} property.</p>
 * @return {String} 
 * @platform android 0.8
*/
Titanium.UI.Button.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundImage
 * <p>Gets the value of the {@link Titanium.UI.Button#property-backgroundImage backgroundImage} property.</p>
 * @return {String} 
*/
Titanium.UI.Button.getBackgroundImage = function(){};

/**
 * @method getBackgroundSelectedImage
 * <p>Gets the value of the {@link Titanium.UI.Button#property-backgroundSelectedImage backgroundSelectedImage} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.getBackgroundSelectedImage = function(){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.Button#property-color color} property.</p>
 * @return {String} 
*/
Titanium.UI.Button.getColor = function(){};

/**
 * @method getEnabled
 * <p>Gets the value of the {@link Titanium.UI.Button#property-enabled enabled} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.getEnabled = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.Button#property-font font} property.</p>
 * @return {Font} 
*/
Titanium.UI.Button.getFont = function(){};

/**
 * @method getImage
 * <p>Gets the value of the {@link Titanium.UI.Button#property-image image} property.</p>
 * @return {String/Titanium.Blob} 
*/
Titanium.UI.Button.getImage = function(){};

/**
 * @method getSelectedColor
 * <p>Gets the value of the {@link Titanium.UI.Button#property-selectedColor selectedColor} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.getSelectedColor = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.Button#property-style style} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Button.getStyle = function(){};

/**
 * @method getSystemButton
 * <p>Gets the value of the {@link Titanium.UI.Button#property-systemButton systemButton} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Button.getSystemButton = function(){};

/**
 * @method getTextAlign
 * <p>Gets the value of the {@link Titanium.UI.Button#property-textAlign textAlign} property.</p>
 * @return {String/Number} 
*/
Titanium.UI.Button.getTextAlign = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.Button#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.Button.getTitle = function(){};

/**
 * @method getTitleid
 * <p>Gets the value of the {@link Titanium.UI.Button#property-titleid titleid} property.</p>
 * @return {String} 
 * @platform android 1.5
 * @platform blackberry 3.1
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.getTitleid = function(){};

/**
 * @method getVerticalAlign
 * <p>Gets the value of the {@link Titanium.UI.Button#property-verticalAlign verticalAlign} property.</p>
 * @return {Number/String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.getVerticalAlign = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.Button#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.remove = function(view){};

/**
 * @method setBackgroundDisabledImage
 * <p>Sets the value of the {@link Titanium.UI.Button#property-backgroundDisabledImage backgroundDisabledImage} property.</p>
 * @param {String} backgroundDisabledImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Button.setBackgroundDisabledImage = function(backgroundDisabledImage){};

/**
 * @method setBackgroundFocusedImage
 * <p>Sets the value of the {@link Titanium.UI.Button#property-backgroundFocusedImage backgroundFocusedImage} property.</p>
 * @param {String} backgroundFocusedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Button.setBackgroundFocusedImage = function(backgroundFocusedImage){};

/**
 * @method setBackgroundImage
 * <p>Sets the value of the {@link Titanium.UI.Button#property-backgroundImage backgroundImage} property.</p>
 * @param {String} backgroundImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Button.setBackgroundImage = function(backgroundImage){};

/**
 * @method setBackgroundSelectedImage
 * <p>Sets the value of the {@link Titanium.UI.Button#property-backgroundSelectedImage backgroundSelectedImage} property.</p>
 * @param {String} backgroundSelectedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.setBackgroundSelectedImage = function(backgroundSelectedImage){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.Button#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Button.setColor = function(color){};

/**
 * @method setEnabled
 * <p>Sets the value of the {@link Titanium.UI.Button#property-enabled enabled} property.</p>
 * @param {Boolean} enabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.setEnabled = function(enabled){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.Button#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Button.setFont = function(font){};

/**
 * @method setImage
 * <p>Sets the value of the {@link Titanium.UI.Button#property-image image} property.</p>
 * @param {String/Titanium.Blob} image 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Button.setImage = function(image){};

/**
 * @method setSelectedColor
 * <p>Sets the value of the {@link Titanium.UI.Button#property-selectedColor selectedColor} property.</p>
 * @param {String} selectedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.setSelectedColor = function(selectedColor){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.Button#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Button.setStyle = function(style){};

/**
 * @method setSystemButton
 * <p>Sets the value of the {@link Titanium.UI.Button#property-systemButton systemButton} property.</p>
 * @param {Number} systemButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Button.setSystemButton = function(systemButton){};

/**
 * @method setTextAlign
 * <p>Sets the value of the {@link Titanium.UI.Button#property-textAlign textAlign} property.</p>
 * @param {String/Number} textAlign 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Button.setTextAlign = function(textAlign){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.Button#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Button.setTitle = function(title){};

/**
 * @method setTitleid
 * <p>Sets the value of the {@link Titanium.UI.Button#property-titleid titleid} property.</p>
 * @param {String} titleid 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.5
 * @platform blackberry 3.1
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.setTitleid = function(titleid){};

/**
 * @method setVerticalAlign
 * <p>Sets the value of the {@link Titanium.UI.Button#property-verticalAlign verticalAlign} property.</p>
 * @param {Number/String} verticalAlign 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Button.setVerticalAlign = function(verticalAlign){};

/**
 * @property [backgroundDisabledImage=If <code>backgroundDisabledImage</code> is undefined, and the normal background image
<code>backgroundImage</code> is set, the normal image is used when this view is disabled.]
 * @type String
 * @platform android 0.8
 * <p>Background image for the button in its disabled state, specified as a local file path 
or URL. </p>
 * @description <p>Also sets the background image for the other button states (normal, focused, selected), 
unless they've been specified explicitly, except for iOS, which requires a backgroundImage.</p>
 */
Titanium.UI.Button.backgroundDisabledImage = null;

/**
 * @property [backgroundFocusedImage=If <code>backgroundFocusedImage</code> is undefined, and the normal background image
<code>backgroundImage</code> is set, the normal image is used when this view is focused.]
 * @type String
 * @platform android 0.8
 * <p>Background image for the button in its focused state, specified as a local file path 
or URL. </p>
 * @description <p>Focusable must be true for normal views. Sets the background image for the focused 
state only. For iOS, since there is not a trackball, this does nothing.</p>
 */
Titanium.UI.Button.backgroundFocusedImage = null;

/**
 * @property [backgroundImage=Default behavior when <code>backgroundImage</code> is unspecified depends on the type of view and
the platform. For generic views, no image is used. For most controls (buttons, text
fields, and so on), platform-specific default images are used.]
 * @type String
 * <p>Background image for the button in its normal state, specified as a local file path or URL. </p>
 * @description <p>Also sets the background image for the other button states (disabled, focused, selected), 
unless they've been specified explicitly. On iOS, if backgroundDisabledImage is unset, the
image will appear faded to indicate being disabled. Also on iOS, if backgroundSelectedImage
is unset, the image will be darkened to indicate being selected.</p>
 */
Titanium.UI.Button.backgroundImage = null;

/**
 * @property [backgroundSelectedImage=If <code>backgroundSelectedImage</code> is undefined, and the normal background image
<code>backgroundImage</code> is set, the normal image is used when this view is selected.]
 * @type String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Background image for the button in its selected state, specified as a local file 
path or URL. </p>
 * @description <p>On Android, Focusable must be true in order to be selected. Sets the background image for the selected 
state only.</p>
 */
Titanium.UI.Button.backgroundSelectedImage = null;

/**
 * @property color
 * @type String
 * <p>Default button text color, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Button.color = null;

/**
 * @property [enabled=true]
 * @type Boolean
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Set to <code>true</code> to enable the button, <code>false</code> to disable the button.</p>
 * @description <p>Set to <code>true</code> to enable or <code>false</code> to disable the view.</p>
 */
Titanium.UI.Button.enabled = null;

/**
 * @property font
 * @type Font
 * <p>Font to use for the button text.</p>
 */
Titanium.UI.Button.font = null;

/**
 * @property image
 * @type String/Titanium.Blob
 * <p>Image to display on the button, specified as a local path, URL or a <code>Blob</code>.</p>
 * @description <p>The image is displayed to the left of the title.</p>
<p>Support for using {@link Titanium.Blob} for this property is only available on Android and iOS.</p>
 */
Titanium.UI.Button.image = null;

/**
 * @property selectedColor
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Button text color used to indicate the selected state, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Button.selectedColor = null;

/**
 * @property style
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Style constant for the button, as defined in {@link Titanium.UI.iPhone.SystemButtonStyle}.</p>
 */
Titanium.UI.Button.style = null;

/**
 * @property systemButton
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies an iOS system button appearance, as defined in {@link Titanium.UI.iPhone.SystemButton}.</p>
 */
Titanium.UI.Button.systemButton = null;

/**
 * @property [textAlign={@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER}]
 * @type String/Number
 * <p>Text alignment, specified using one of the {@link Titanium.UI} text alignment constants: {@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT TEXT_ALIGNMENT_LEFT}, {@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER TEXT_ALIGNMENT_CENTER}, or {@link Titanium.UI#property-TEXT_ALIGNMENT_RIGHT TEXT_ALIGNMENT_RIGHT}.</p>
 */
Titanium.UI.Button.textAlign = null;

/**
 * @property title
 * @type String
 * <p>Button title.</p>
 */
Titanium.UI.Button.title = null;

/**
 * @property titleid
 * @type String
 * @platform android 1.5
 * @platform blackberry 3.1
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Key identifying a string from the locale file to use for the button title.</p>
 * @description <p>Only one of <code>title</code> or <code>titleid</code> should be specified.</p>
 */
Titanium.UI.Button.titleid = null;

/**
 * @property [verticalAlign=Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER]
 * @type Number/String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Vertical alignment for the text field, specified using one of the 
vertical alignment constants from {@link Titanium.UI}: 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_BOTTOM TEXT_VERTICAL_ALIGNMENT_BOTTOM}, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_CENTER TEXT_VERTICAL_ALIGNMENT_CENTER}, or 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_TOP TEXT_VERTICAL_ALIGNMENT_TOP}.</p>
 */
Titanium.UI.Button.verticalAlign = null;

/**
 * @class Titanium.UI.ButtonBar
 * @typestr Object of Titanium.UI
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.UI.View
 * <p>An iOS button bar component.</p>
 * @description <p>The button bar is a set of buttons joined into a single control. Each button in a
button bar can have a text label or an icon, but not both. </p>
<p>The {@link Titanium.UI.iOS.TabbedBar TabbedBar} control is a button bar where the 
last selected button mantains a pressed or selected state. The following discussion
applies to both button bar and tabbed bar.</p>
<p>The buttons share a common style, defined by the <code>style</code> property. This can be 
set to one of the constants defined in 
{@link Titanium.UI.iPhone.SystemButtonStyle Titanium.UI.iPhone.SystemButtonStyle}:</p>
<ul>
<li><code>PLAIN</code>. Default style for <code>ButtonBar</code> and <code>TabbedBar</code>.</li>
<li><code>BORDERED</code>. Creates a bar like the <code>PLAIN</code> bar, but with a heavier border.</li>
<li><code>BAR</code>. Creates a more compact bar with
        translucent buttons that allow the bar's background color to show through.</li>
</ul>
<p>If you want the background color or background gradient of the button bar itself 
to show through, the style must be set to {@link Titanium.UI.iPhone.SystemButtonStyle#property-BAR}.</p>
<p>Note that you cannot style individual buttons in a button bar. If you want to give a
distinct visual style to individual buttons, to use an icon and text on the same button,
or to use a button-bar type component on a platform other than iOS, you can use a set 
of individual {@link Titanium.UI.Button Button} controls wrapped in a
{@link Titanium.UI.View View} to create the appearance of a button bar.</p>
<p>Use the {@link Titanium.UI#method-createButtonBar} method to create a button bar.</p>
 * <h3>Examples</h3>
 * <h4>Simple 3 button button bar</h4>
 * <pre>
var bb1 = Titanium.UI.createButtonBar({
labels:['One', 'Two', 'Three'],
backgroundColor:'#336699',
top:50,
style:Titanium.UI.iPhone.SystemButtonStyle.BAR,
height:25,
width:200
});
win.add(bb1);</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win"&gt;
        &lt;ButtonBar id="bb1" platform="ios" backgroundColor="#369" top="50" height="25" width="200"&gt;

            &lt;!-- The Labels tag sets the ButtonBar.labels property --&gt;
            &lt;Labels&gt;

                &lt;!-- Specify text with node text or the title attribute. --&gt;
                &lt;!-- Can also specify the enabled, image and width attributes. --&gt;

                &lt;Label&gt;One&lt;/Label&gt;
                &lt;Label&gt;Two&lt;/Label&gt;
                &lt;Label&gt;Three&lt;/Label&gt;

            &lt;/Labels&gt;

            &lt;!-- Place additional views for the ButtonBar here. --&gt;

        &lt;/ButtonBar&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.ButtonBar = {};














/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.ButtonBar.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.ButtonBar.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.ButtonBar.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.ButtonBar.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.ButtonBar.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.ButtonBar.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.ButtonBar.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.ButtonBar.getFocusable = function(){};

/**
 * @method getIndex
 * <p>Gets the value of the {@link Titanium.UI.ButtonBar#property-index index} property.</p>
 * @return {Number} 
*/
Titanium.UI.ButtonBar.getIndex = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.ButtonBar.getKeepScreenOn = function(){};

/**
 * @method getLabels
 * <p>Gets the value of the {@link Titanium.UI.ButtonBar#property-labels labels} property.</p>
 * @return {String[]/BarItemType[]} 
*/
Titanium.UI.ButtonBar.getLabels = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.ButtonBar.getSoftKeyboardOnFocus = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.ButtonBar#property-style style} property.</p>
 * @return {Number} 
*/
Titanium.UI.ButtonBar.getStyle = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.ButtonBar.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.ButtonBar.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.ButtonBar.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.ButtonBar.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.ButtonBar.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.ButtonBar.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.ButtonBar.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.ButtonBar.setFocusable = function(){};

/**
 * @method setIndex
 * <p>Sets the value of the {@link Titanium.UI.ButtonBar#property-index index} property.</p>
 * @param {Number} index 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ButtonBar.setIndex = function(index){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.ButtonBar.setKeepScreenOn = function(){};

/**
 * @method setLabels
 * <p>Sets the value of the {@link Titanium.UI.ButtonBar#property-labels labels} property.</p>
 * @param {String[]/BarItemType[]} labels 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ButtonBar.setLabels = function(labels){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.ButtonBar.setSoftKeyboardOnFocus = function(){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.ButtonBar#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ButtonBar.setStyle = function(style){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.ButtonBar.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.ButtonBar.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.ButtonBar.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.ButtonBar.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.ButtonBar.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.ButtonBar.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.ButtonBar.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.ButtonBar.focusable = null;

/**
 * @property index
 * @type Number
 * <p>Index of the currently selected button.</p>
 */
Titanium.UI.ButtonBar.index = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.ButtonBar.keepScreenOn = null;

/**
 * @property labels
 * @type String[]/BarItemType[]
 * <p>Array of labels for the button bar.</p>
 * @description <p>The labels can be specified either using an array of strings, in which case
each string defines the title for a button, or using an array of simple
dictionary objects, {@link BarItemType}, which can specify title, image, width and
enabled state for each button.</p>
 */
Titanium.UI.ButtonBar.labels = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.ButtonBar.softKeyboardOnFocus = null;

/**
 * @property [style=Titanium.UI.iPhone.SystemButtonStyle.PLAIN]
 * @type Number
 * <p>Style of the button bar.</p>
 * @description <p>Specify one of the constants defined in
{@link Titanium.UI.iPhone.SystemButtonStyle Titanium.UI.iPhone.SystemButtonStyle},
either <code>PLAIN</code>, <code>BORDERED</code>, or <code>BAR</code>.</p>
<p>The <code>BAR</code> style specifies a more compact style and allows the bar's background
color or gradient to show through.</p>
 */
Titanium.UI.ButtonBar.style = null;

/**
 * @class Titanium.UI.Clipboard
 * @typestr Submodule of Titanium.UI
 * @platform android 1.5
 * @platform iphone 1.5
 * @platform ipad 1.5
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>A module used for accessing clipboard data.</p>
 * @description <p>The Clipboard is a temporary data store, used to save a single item of data that may then 
be accessed by the user using UI copy and paste interactions within an app or between apps.</p>
<p>On iOS and Mobile Web, the module's <code>*Data()</code> methods enable multiple representations of the 
same data item to be stored together with their respective 
<a href="http://en.wikipedia.org/wiki/Internet_media_type">MIME type</a> to describe their format. For 
example, <code>'text'</code> and <code>'text/plain'</code> for text, and <code>'image/jpg'</code> and <code>'image/png'</code> for an image.</p>
<p>When working with text, either the <code>*Data()</code> methods may be used with a <code>'text/plain'</code> type, or 
the <code>*Text()</code> methods without the need to specify the type.</p>
<p>Android currently only supports text type of data to be stored. </p>
<h4>Clipboard Data Types</h4>
<p>The <code>*Text()</code> methods are equivalent to calling <code>*Data()</code> with a <code>'text'</code> or <code>'text/plain'</code> 
type. These work with plain Unicode strings. </p>
<p>An image is stored using the <code>'image'</code> type, or an explicit image MIME type, and is returned as 
a {@link Titanium.Blob} (binary) type. </p>
<p>A URL is stored with the <code>'url'</code> or <code>'text/uri-list'</code> type, and is returned as a string. </p>
<p>Any data type that is specified but not correctly mapped to a clipboard type by the system is 
retrieved as a {@link Titanium.Blob} type. </p>
 * <h3>Example</h3>
 * <h4>Copy Text to the Clipboard</h4>
 * <p><p>Clear the clipboard and output the resulting empty clipboard to console. </p>
<p>Then, store the string, "hello", to the clipboard and output it from the clipboard to the 
console. </p></p><pre>Ti.API.log('Deleting all text in Clipboard');
Ti.UI.Clipboard.clearText();
Ti.API.log('Clipboard.getText(): ' + Ti.UI.Clipboard.getText()); // returns empty string on Android and undefined on iOS
Ti.API.log('Set text Clipboard to hello');
Ti.UI.Clipboard.setText('hello');
Ti.API.log('Clipboard.hasText(), should be true: ' + Ti.UI.Clipboard.hasText()); // returns true on Android and 1 on iOS
Ti.API.log('Clipboard.getText(), should be hello: ' + Ti.UI.Clipboard.getText());</pre>
 */
Titanium.UI.Clipboard = {};

/**
 * @method clearData
 * <p>Deletes data of the specified MIME type stored in the clipboard. If MIME type omitted, all 
data is deleted.</p>
 * @description <p>On Android, identical to <code>clearText</code> method.</p>
 * @param {String} type (optional)
 * <p>MIME type. Ignored on Android.</p>
 * @return void
*/
Titanium.UI.Clipboard.clearData = function(type){};

/**
 * @method clearText
 * <p>Deletes all text data stored in the clipboard.</p>
 * @description <p>This method deletes any data saved using the <code>setText</code> method, or that has a <code>text</code> or 
<code>text/plain</code> MIME type.</p>
 * @return void
*/
Titanium.UI.Clipboard.clearText = function(){};

/**
 * @method getData
 * <p>Gets data of the specified MIME type stored in the clipboard.</p>
 * @param {String} type 
 * <p>MIME type. Must be text type on Android.</p>
 * @return {String/Titanium.Blob} 
*/
Titanium.UI.Clipboard.getData = function(type){};

/**
 * @method getText
 * <p>Gets text data stored in the clipboard.</p>
 * @return {String} 
*/
Titanium.UI.Clipboard.getText = function(){};

/**
 * @method hasData
 * <p>Indicates whether any data of the specified MIME type is stored in the clipboard.</p>
 * @param {String} type 
 * <p>MIME type. Must be text type on Android.</p>
 * @return {Boolean} 
*/
Titanium.UI.Clipboard.hasData = function(type){};

/**
 * @method hasText
 * <p>Indicates whether any text data is stored in the clipboard.</p>
 * @return {Boolean/Number} 
*/
Titanium.UI.Clipboard.hasText = function(){};

/**
 * @method setData
 * <p>Stores data of the specified MIME type in the clipboard.</p>
 * @description <p>This method will overwrite any existing data for the specified MIME type. </p>
<p>Note that the clipboard is intended to store only one item of data at a time. This method 
enables different representations/formats of a data item to be saved.</p>
 * @param {String} type 
 * <p>MIME type. Must be text type on Android.</p>
 * @param {Object} data 
 * <p>New item of data.</p>
 * @return void
*/
Titanium.UI.Clipboard.setData = function(type, data){};

/**
 * @method setText
 * <p>Stores text data in the clipboard.</p>
 * @description <p>This method will overwrite any existing text data.</p>
 * @param {String} text 
 * <p>New item of data.</p>
 * @return void
*/
Titanium.UI.Clipboard.setText = function(text){};

/**
 * @class Titanium.UI.CoverFlowView
 * @typestr Object of Titanium.UI
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.UI.View
 * <p>The cover flow view is a container showing animated three-dimensional images in a style
consistent with the cover flow presentation used for iPod, iTunes, and file browsing.</p>
 * @description <p>Use the {@link Titanium.UI#method-createCoverFlowView} method to create a cover flow view.</p>
 * <h3>Example</h3>
 * <h4>Simple 3 image cover flow example</h4>
 * <p><p>Create a simple cover flow view.</p></p><pre>var view = Titanium.UI.createCoverFlowView({
images:['a.png','b.png','c.png'],
backgroundColor:'#000'
});
window.add(view);</pre>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS.CoverFlowView} instead.</p>
 */
Titanium.UI.CoverFlowView = {};

















/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.CoverFlowView.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.CoverFlowView.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.CoverFlowView.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.CoverFlowView.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.CoverFlowView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.CoverFlowView.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.CoverFlowView.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.CoverFlowView.getFocusable = function(){};

/**
 * @method getImages
 * <p>Gets the value of the {@link Titanium.UI.CoverFlowView#property-images images} property.</p>
 * @return {String[]/Titanium.Blob[]/Titanium.Filesystem.File[]/CoverFlowImageType[]} 
*/
Titanium.UI.CoverFlowView.getImages = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.CoverFlowView.getKeepScreenOn = function(){};

/**
 * @method getSelected
 * <p>Gets the value of the {@link Titanium.UI.CoverFlowView#property-selected selected} property.</p>
 * @return {Number} 
*/
Titanium.UI.CoverFlowView.getSelected = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.CoverFlowView.getSoftKeyboardOnFocus = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.CoverFlowView.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.CoverFlowView.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.CoverFlowView.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.CoverFlowView.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.CoverFlowView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.CoverFlowView.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.CoverFlowView.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.CoverFlowView.setFocusable = function(){};

/**
 * @method setImage
 * <p>Changes the image for a specified index.</p>
 * @description <p>To specify a size for the image, you may pass the image as a simple dictionary, as
defined in {@link CoverFlowImageType}.  If you specify a size, the size must be exact,
not 'auto' or a percentage size.</p>
<p>If the image is passed as a <code>File</code> object or file path, the filename is checked.
If the filename includes the '@2x' string used to identify high-resolution images
for the Retina display, the image is treated accordingly.</p>
 * @param {Number} index 
 * <p>Index to add the image at.</p>
 * @param {String/Titanium.Blob/Titanium.Filesystem.File/CoverFlowImageType} image 
 * <p>Image to add at this index.</p>
 * @return void
*/
Titanium.UI.CoverFlowView.setImage = function(index, image){};

/**
 * @method setImages
 * <p>Sets the value of the {@link Titanium.UI.CoverFlowView#property-images images} property.</p>
 * @param {String[]/Titanium.Blob[]/Titanium.Filesystem.File[]/CoverFlowImageType[]} images 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.CoverFlowView.setImages = function(images){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.CoverFlowView.setKeepScreenOn = function(){};

/**
 * @method setSelected
 * <p>Sets the value of the {@link Titanium.UI.CoverFlowView#property-selected selected} property.</p>
 * @param {Number} selected 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.CoverFlowView.setSelected = function(selected){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.CoverFlowView.setSoftKeyboardOnFocus = function(){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.CoverFlowView.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.CoverFlowView.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.CoverFlowView.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.CoverFlowView.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.CoverFlowView.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.CoverFlowView.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.CoverFlowView.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.CoverFlowView.focusable = null;

/**
 * @property images
 * @type String[]/Titanium.Blob[]/Titanium.Filesystem.File[]/CoverFlowImageType[]
 * <p>Array of images to display in the view.</p>
 */
Titanium.UI.CoverFlowView.images = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.CoverFlowView.keepScreenOn = null;

/**
 * @property selected
 * @type Number
 * <p>Index to make selected.</p>
 */
Titanium.UI.CoverFlowView.selected = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.CoverFlowView.softKeyboardOnFocus = null;

/**
 * @class Titanium.UI.DashboardItem
 * @typestr Object of Titanium.UI
 * @platform iphone 1.2
 * @platform ipad 1.2
 * @extends Titanium.Proxy
 * <p>A dashboard item is a view that is displayed as an icon in a {@link Titanium.UI.DashboardView}.</p>
 * @description <p>A DashboardItem is created using the {@link Titanium.UI#method-createDashboardItem} method.</p>
 */
Titanium.UI.DashboardItem = {};




/**
 * @method getBadge
 * <p>Gets the value of the {@link Titanium.UI.DashboardItem#property-badge badge} property.</p>
 * @return {Number} 
*/
Titanium.UI.DashboardItem.getBadge = function(){};

/**
 * @method getCanDelete
 * <p>Gets the value of the {@link Titanium.UI.DashboardItem#property-canDelete canDelete} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.DashboardItem.getCanDelete = function(){};

/**
 * @method getImage
 * <p>Gets the value of the {@link Titanium.UI.DashboardItem#property-image image} property.</p>
 * @return {String/Titanium.Blob} 
*/
Titanium.UI.DashboardItem.getImage = function(){};

/**
 * @method getSelectedImage
 * <p>Gets the value of the {@link Titanium.UI.DashboardItem#property-selectedImage selectedImage} property.</p>
 * @return {String/Titanium.Blob} 
*/
Titanium.UI.DashboardItem.getSelectedImage = function(){};

/**
 * @method setBadge
 * <p>Sets the value of the {@link Titanium.UI.DashboardItem#property-badge badge} property.</p>
 * @param {Number} badge 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.DashboardItem.setBadge = function(badge){};

/**
 * @method setCanDelete
 * <p>Sets the value of the {@link Titanium.UI.DashboardItem#property-canDelete canDelete} property.</p>
 * @param {Boolean} canDelete 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.DashboardItem.setCanDelete = function(canDelete){};

/**
 * @method setImage
 * <p>Sets the value of the {@link Titanium.UI.DashboardItem#property-image image} property.</p>
 * @param {String/Titanium.Blob} image 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.DashboardItem.setImage = function(image){};

/**
 * @method setSelectedImage
 * <p>Sets the value of the {@link Titanium.UI.DashboardItem#property-selectedImage selectedImage} property.</p>
 * @param {String/Titanium.Blob} selectedImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.DashboardItem.setSelectedImage = function(selectedImage){};

/**
 * @property [badge=0]
 * @type Number
 * <p>Integer value displayed in a badge.</p>
 * @description <p>Set to <code>0</code> to reset and remove the badge.</p>
 */
Titanium.UI.DashboardItem.badge = null;

/**
 * @property [canDelete=true]
 * @type Boolean
 * <p>Determines whether this item can be deleted when it edit mode.</p>
 */
Titanium.UI.DashboardItem.canDelete = null;

/**
 * @property image
 * @type String/Titanium.Blob
 * <p>Image or path to image to display in the item by default.</p>
 */
Titanium.UI.DashboardItem.image = null;

/**
 * @property selectedImage
 * @type String/Titanium.Blob
 * <p>Image or path to image to display in the item as it is selected.</p>
 */
Titanium.UI.DashboardItem.selectedImage = null;

/**
 * @class Titanium.UI.DashboardView
 * @typestr Object of Titanium.UI
 * @platform iphone 1.2
 * @platform ipad 1.2
 * @extends Titanium.UI.View
 * <p>A dashboard view is an iOS Springboard-like view of {@link Titanium.UI.DashboardItem} items that may 
be deleted and reordered by the user using its built-in edit mode.</p>
 * @description <p>The DashboardView is created using the {@link Titanium.UI#method-createDashboardView} method.</p>
<p>Dashboard view's edit mode may be activated by a longpress of a {@link Titanium.UI.DashboardItem} item, 
unless this behavior has been disabled by the {@link Titanium.UI.DashboardView#property-editable editable} 
property. As a dashboard view does not inherently provide a way to exit edit mode, this must be 
explicitly defined.</p>
<p>When edit mode has been activated, the item icons wobble by default to act as a visual cue. 
This behavior may be disabled using the {@link Titanium.UI.DashboardView#property-wobble wobble} property.</p>
<p>If a dashboard contains more than 9 items, it will be paged into screens in a 3 x 3 formation 
using its built-in scrollable view. A paging control is added to the bottom of the view to 
indicate the active page.</p>
<p>Note that a dashboard is only intended to be used in {@link Titanium.UI#property-PORTRAIT PORTRAIT} 
orientation mode.</p>
 * <h3>Examples</h3>
 * <h4>Dashboard Demo</h4>
 * <p><p>Create a toolbar with an edit/done button and a dashboard of items on a single screen. 
Set the badge value for some items, and allow them to be reset with a click. Enter edit mode 
with a longpress of a dashboard item (default behavior). Toggle edit mode with a click to 
the toolbar button.</p>
<p>Copy the files in the KitchenSink 
<a href="https://github.com/appcelerator/titanium_mobile/tree/master/demos/KitchenSink/Resources/images/dashboard">dashboard</a> 
directory to the local project <code>/images/dashboard</code> directory.</p></p><pre>    
var win = Ti.UI.createWindow({
    backgroundColor: '#13386c'
});

var button = Ti.UI.createButton({
    title: 'Edit',
    style: Ti.UI.iPhone.SystemButtonStyle.DONE,
});

var toolbar = Ti.UI.iOS.createToolbar({
    items:[button],
    top: 0
});
win.add(toolbar);

var label = Ti.UI.createLabel({
  color: 'white',
  font: { fontSize: 14 },
  text: 'Click an item to reset badge\nPress and hold an item to enable edit mode',
  textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,
  top: 55,
  height: 40,
  width: 300
});
win.add(label);

var dashboardData = [];
var itemData = [
  { name: 'account', badge: 10 },
  { name: 'cases', badge: 2 },
  { name: 'calls', badge: 2 },
  { name: 'contacts', badge: 5},
  { name: 'emps' }, 
  { name: 'leads' },
  { name: 'meetings', badge: 3 },
  { name: 'opps',  badge:  126 }, // badge will be displayed as "99+"
  { name: 'tasks' }
];

for (var i=0, ilen=itemData.length; i&lt;ilen; i++){
  var item = Ti.UI.createDashboardItem({
    badge: itemData[i].badge,
    image: '/images/dashboard/' + itemData[i].name + '_off.png',
    selectedImage: '/images/dashboard/' + itemData[i].name + '_on.png',
    label: itemData[i].name
  });
  dashboardData.push(item);
}

var dashboard = Ti.UI.createDashboardView({
  data: dashboardData,
  wobble: true,
  top: 100
});
win.add(dashboard);

var isEditable = false;

button.addEventListener('click', function(e){
  if(isEditable){
    dashboard.stopEditing();
  } else {
    dashboard.startEditing();
  }
});

dashboard.addEventListener('edit',function(e){
  button.title = 'Done';
  button.style = Ti.UI.iPhone.SystemButtonStyle.DONE;
  isEditable = true;
});

dashboard.addEventListener('commit',function(e){
  button.title = 'Edit';
  button.style = Ti.UI.iPhone.SystemButtonStyle.PLAIN;
  isEditable = false;
});

dashboard.addEventListener('click', function(e){
  e.item.badge = 0;
});

win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>dashboard.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="#13386c"&gt;
        &lt;Toolbar id="toolbar" top="0"&gt;
            &lt;Items&gt;
                &lt;Button id="button" onClick="changeMode"&gt;Edit&lt;/Button&gt;
            &lt;/Items&gt;
        &lt;/Toolbar&gt;
        &lt;Label id="label" color="white" top="55" height="40" width="300"&gt;
            Click an item to reset badge\nPress and hold an item to enable edit mode
        &lt;/Label&gt;

        &lt;!--
            Adding DashboardItems to a DashboardView would be easier programmatically,
            but the purpose of this example is to show how to do it in markup.
        --&gt;
        &lt;DashboardView id="dashboard" top="100" wobble="true"
            onClick="resetBadge" onEdit="handleEdit" onCommit="handleCommit"&gt;

            &lt;DashboardItem image="account_off.png" selectedImage="account_on.png" badge="10" label="account"/&gt;
            &lt;DashboardItem image="calls_off.png" selectedImage="calls_on.png" badge="110" label="calls"/&gt;
            &lt;DashboardItem image="cases_off.png" selectedImage="cases_on.png" label="cases"/&gt;
            &lt;DashboardItem image="contacts_off.png" selectedImage="contacts_on.png" badge="23" label="contacts"/&gt;
            &lt;DashboardItem image="emps_off.png" selectedImage="emps_on.png" label="employees"/&gt;
            &lt;DashboardItem image="leads_off.png" selectedImage="leads_on.png" badge="1" label="leads"/&gt;
            &lt;DashboardItem image="meetings_off.png" selectedImage="meetings_on.png" badge="5" label="meetings"/&gt;
            &lt;DashboardItem image="opps_off.png" selectedImage="opps_on.png" label="opps"/&gt;
            &lt;DashboardItem image="tasks_off.png" selectedImage="tasks_on.png" label="tasks"/&gt;

        &lt;/DashboardView&gt;

    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>dashboard.js:</p></p><pre>var isEditable = false;

function changeMode(e){
  if(isEditable){
    $.dashboard.stopEditing();
  } else {
    $.dashboard.startEditing();
  }
});

function handleEdit(e){
  $.button.title = 'Done';
  $.button.style = Ti.UI.iPhone.SystemButtonStyle.DONE;
  isEditable = true;
});

function handleCommit(e){
  $.button.title = 'Edit';
  $.button.style = Ti.UI.iPhone.SystemButtonStyle.PLAIN;
  isEditable = false;
});

function resetBadge(e){
  e.item.badge = 0;
});</pre>
 */
Titanium.UI.DashboardView = {};


















/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundSelectedImage = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.DashboardView.getBackgroundSelectedImage = function(){};

/**
 * @method getColumnCount
 * <p>Gets the value of the {@link Titanium.UI.DashboardView#property-columnCount columnCount} property.</p>
 * @return {Number} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.DashboardView.getColumnCount = function(){};

/**
 * @method getData
 * <p>Gets the value of the {@link Titanium.UI.DashboardView#property-data data} property.</p>
 * @return {Titanium.UI.DashboardItem[]} 
*/
Titanium.UI.DashboardView.getData = function(){};

/**
 * @method getEditable
 * <p>Gets the value of the {@link Titanium.UI.DashboardView#property-editable editable} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.DashboardView.getEditable = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.DashboardView.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.DashboardView.getFocusable = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.DashboardView.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.DashboardView.getKeepScreenOn = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.DashboardView.getKeepScreenOn = function(){};

/**
 * @method getRowCount
 * <p>Gets the value of the {@link Titanium.UI.DashboardView#property-rowCount rowCount} property.</p>
 * @return {Number} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.DashboardView.getRowCount = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.DashboardView.getSoftKeyboardOnFocus = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.DashboardView.getSoftKeyboardOnFocus = function(){};

/**
 * @method getWobble
 * <p>Gets the value of the {@link Titanium.UI.DashboardView#property-wobble wobble} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.DashboardView.getWobble = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundSelectedImage = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.DashboardView.setBackgroundSelectedImage = function(){};

/**
 * @method setData
 * <p>Sets the value of the {@link Titanium.UI.DashboardView#property-data data} property.</p>
 * @param {Titanium.UI.DashboardItem[]} data 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.DashboardView.setData = function(data){};

/**
 * @method setEditable
 * <p>Sets the value of the {@link Titanium.UI.DashboardView#property-editable editable} property.</p>
 * @param {Boolean} editable 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.DashboardView.setEditable = function(editable){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.DashboardView.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.DashboardView.setFocusable = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.DashboardView.setFocusable = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.DashboardView.setKeepScreenOn = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.DashboardView.setKeepScreenOn = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.DashboardView.setSoftKeyboardOnFocus = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.DashboardView.setSoftKeyboardOnFocus = function(){};

/**
 * @method setWobble
 * <p>Sets the value of the {@link Titanium.UI.DashboardView#property-wobble wobble} property.</p>
 * @param {Boolean} wobble 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.DashboardView.setWobble = function(wobble){};

/**
 * @method startEditing
 * <p>Enable edit mode.</p>
 * @description <p>This method causes the {@link Titanium.UI.DashboardView#event-edit} event to fire.</p>
 * @return void
*/
Titanium.UI.DashboardView.startEditing = function(){};

/**
 * @method stopEditing
 * <p>Disable edit mode.</p>
 * @description <p>This method causes the {@link Titanium.UI.DashboardView#event-commit} event to fire.</p>
 * @return void
*/
Titanium.UI.DashboardView.stopEditing = function(){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.DashboardView.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.DashboardView.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.DashboardView.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.DashboardView.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.DashboardView.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.DashboardView.backgroundSelectedImage = null;

/**
 * @property [columnCount=3]
 * @type Number
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @creationOnly
 * <p>The number of columns of items in the view.</p>
 */
Titanium.UI.DashboardView.columnCount = null;

/**
 * @property data
 * @type Titanium.UI.DashboardItem[]
 * <p>Items to display in this view.</p>
 */
Titanium.UI.DashboardView.data = null;

/**
 * @property [editable=true]
 * @type Boolean
 * <p>Determines whether edit mode is activated by a longpress of an item.</p>
 * @description <p>Set to <code>false</code> to prevent a longpress from activating edit mode.</p>
 */
Titanium.UI.DashboardView.editable = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.DashboardView.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.DashboardView.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.DashboardView.keepScreenOn = null;

/**
 * @property [rowCount=3]
 * @type Number
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @creationOnly
 * <p>The number of rows of items in the view.</p>
 */
Titanium.UI.DashboardView.rowCount = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.DashboardView.softKeyboardOnFocus = null;

/**
 * @property [wobble=true]
 * @type Boolean
 * <p>Determines whether the wobble visual editing cue is enabled in edit mode.</p>
 * @description <p>Set to <code>false</code> to disable wobble effect.</p>
<p>Must be defined before edit mode is activated in order to take effect.</p>
 */
Titanium.UI.DashboardView.wobble = null;

/**
 * @class Titanium.UI.EmailDialog
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An email dialog is a modal window that allows users to compose and send an email.</p>
 * @description <p>The Email Dialog is created by {@link Titanium.UI#method-createEmailDialog}.</p>
<p>On Mobile Web and Tizen, the <code>to</code> addresses, <code>cc</code> addresses, <code>bcc</code> addresses, <code>subject</code>, and <code>body</code> are 
appended together and formatted into a <code>mailto:</code> URL. This URL typically has a limit of 
approximately 2000 characters.</p>
 * <h3>Examples</h3>
 * <h4>Simple Email Dialog with Attachment</h4>
 * <p><p>Create and send an email with a file attachment.</p></p><pre>var emailDialog = Ti.UI.createEmailDialog()
emailDialog.subject = "Hello from Titanium";
emailDialog.toRecipients = ['foo@yahoo.com'];
emailDialog.messageBody = '&lt;b&gt;Appcelerator Titanium Rocks!&lt;/b&gt;';
var f = Ti.Filesystem.getFile('cricket.wav');
emailDialog.addAttachment(f);
emailDialog.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>emaildialog.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;EmailDialog id="emailDialog" subject="Hello from Titanium" messageBody="&lt;b&gt;Appcelerator Titanium Rocks!&lt;/b&gt;" /&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>emaildialog.js:</p></p><pre>$.emailDialog.toRecipients = ['foo@yahoo.com'];
var f = Ti.Filesystem.getFile('cricket.wav');
$.emailDialog.addAttachment(f);</pre>
 */
Titanium.UI.EmailDialog = {};


/**
 * @method addAttachment
 * <p>Adds an attachment.</p>
 * @description <p>On Android, multiple attachments may be added, but will only work if the user chooses to 
send via the Android Gmail or K9 mail clients.</p>
<p>The Android "Mail" app, which is only available on some handsets, will only accept one 
attachment from a Titanium app.</p>
 * @param {Titanium.Blob/Titanium.Filesystem.File} attachment 
 * <p>Attachment to include in the email.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.EmailDialog.addAttachment = function(attachment){};

/**
 * @method getBarColor
 * <p>Gets the value of the {@link Titanium.UI.EmailDialog#property-barColor barColor} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.EmailDialog.getBarColor = function(){};

/**
 * @method getBccRecipients
 * <p>Gets the value of the {@link Titanium.UI.EmailDialog#property-bccRecipients bccRecipients} property.</p>
 * @return {String[]} 
*/
Titanium.UI.EmailDialog.getBccRecipients = function(){};

/**
 * @method getCcRecipients
 * <p>Gets the value of the {@link Titanium.UI.EmailDialog#property-ccRecipients ccRecipients} property.</p>
 * @return {String[]} 
*/
Titanium.UI.EmailDialog.getCcRecipients = function(){};

/**
 * @method getHtml
 * <p>Gets the value of the {@link Titanium.UI.EmailDialog#property-html html} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.EmailDialog.getHtml = function(){};

/**
 * @method getMessageBody
 * <p>Gets the value of the {@link Titanium.UI.EmailDialog#property-messageBody messageBody} property.</p>
 * @return {String} 
*/
Titanium.UI.EmailDialog.getMessageBody = function(){};

/**
 * @method getSubject
 * <p>Gets the value of the {@link Titanium.UI.EmailDialog#property-subject subject} property.</p>
 * @return {String} 
*/
Titanium.UI.EmailDialog.getSubject = function(){};

/**
 * @method getToRecipients
 * <p>Gets the value of the {@link Titanium.UI.EmailDialog#property-toRecipients toRecipients} property.</p>
 * @return {String[]} 
*/
Titanium.UI.EmailDialog.getToRecipients = function(){};

/**
 * @method isSupported
 * <p>Indicates whether sending email is supported by the system.</p>
 * @return {Boolean} 
*/
Titanium.UI.EmailDialog.isSupported = function(){};

/**
 * @method open
 * <p>Opens this email dialog.</p>
 * @param {Object} properties 
 * <p>Animation properties. Set <code>animated</code> Boolean property to <code>true</code> to animate dialog 
on open. (iPhone, iPad only)</p>
 * @return void
*/
Titanium.UI.EmailDialog.open = function(properties){};

/**
 * @method setBarColor
 * <p>Sets the value of the {@link Titanium.UI.EmailDialog#property-barColor barColor} property.</p>
 * @param {String} barColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.EmailDialog.setBarColor = function(barColor){};

/**
 * @method setBccRecipients
 * <p>Sets the value of the {@link Titanium.UI.EmailDialog#property-bccRecipients bccRecipients} property.</p>
 * @param {String[]} bccRecipients 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.EmailDialog.setBccRecipients = function(bccRecipients){};

/**
 * @method setCcRecipients
 * <p>Sets the value of the {@link Titanium.UI.EmailDialog#property-ccRecipients ccRecipients} property.</p>
 * @param {String[]} ccRecipients 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.EmailDialog.setCcRecipients = function(ccRecipients){};

/**
 * @method setHtml
 * <p>Sets the value of the {@link Titanium.UI.EmailDialog#property-html html} property.</p>
 * @param {Boolean} html 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.EmailDialog.setHtml = function(html){};

/**
 * @method setMessageBody
 * <p>Sets the value of the {@link Titanium.UI.EmailDialog#property-messageBody messageBody} property.</p>
 * @param {String} messageBody 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.EmailDialog.setMessageBody = function(messageBody){};

/**
 * @method setSubject
 * <p>Sets the value of the {@link Titanium.UI.EmailDialog#property-subject subject} property.</p>
 * @param {String} subject 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.EmailDialog.setSubject = function(subject){};

/**
 * @method setToRecipients
 * <p>Sets the value of the {@link Titanium.UI.EmailDialog#property-toRecipients toRecipients} property.</p>
 * @param {String[]} toRecipients 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.EmailDialog.setToRecipients = function(toRecipients){};

/**
 * @property CANCELLED
 * @type Number
 * @readonly
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Constant for the <code>CANCELLED</code> status result. On Android, this property exists but is not used.</p>
 */
Titanium.UI.EmailDialog.CANCELLED = null;

/**
 * @property FAILED
 * @type Number
 * @readonly
 * <p>Constant for the <code>FAILED</code> status result.</p>
 */
Titanium.UI.EmailDialog.FAILED = null;

/**
 * @property SAVED
 * @type Number
 * @readonly
 * <p>Constant for the <code>SAVED</code> status result. On Android, this property exists but is not used.</p>
 */
Titanium.UI.EmailDialog.SAVED = null;

/**
 * @property SENT
 * @type Number
 * @readonly
 * <p>Constant for the <code>SENT</code> status result.</p>
 */
Titanium.UI.EmailDialog.SENT = null;

/**
 * @property barColor
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Bar color of the email dialog window, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
 */
Titanium.UI.EmailDialog.barColor = null;

/**
 * @property bccRecipients
 * @type String[]
 * <p>Recipients of the email included via the <code>BCC</code> (Blind Carbon Copy) field.</p>
 */
Titanium.UI.EmailDialog.bccRecipients = null;

/**
 * @property ccRecipients
 * @type String[]
 * <p>Recipients of the email included via the <code>CC</code> (Carbon Copy) field.</p>
 */
Titanium.UI.EmailDialog.ccRecipients = null;

/**
 * @property [html=false]
 * @type Boolean
 * <p>Determines whether the email message, specifically the contents of 
{@link Titanium.UI.EmailDialog#property-messageBody messageBody}, should be sent as HTML content type 
rather than plain text.</p>
 * @description <p>On Mobile Web and Tizen, while iPhone and iPad properly interpret HTML messages, some email clients, 
especially those for the desktop, do not support them.</p>
 */
Titanium.UI.EmailDialog.html = null;

/**
 * @property messageBody
 * @type String
 * <p>Email message body.</p>
 */
Titanium.UI.EmailDialog.messageBody = null;

/**
 * @property subject
 * @type String
 * <p>Subject line for the email.</p>
 */
Titanium.UI.EmailDialog.subject = null;

/**
 * @property toRecipients
 * @type String[]
 * <p>Recipients of the email included via the main <code>TO</code> field.</p>
 */
Titanium.UI.EmailDialog.toRecipients = null;

/**
 * @class Titanium.UI.ImageView
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A view to display a single image or series of animated images. </p>
 * @description <p>Use the {@link Titanium.UI#method-createImageView} method to create an <code>ImageView</code>.</p>
<p>Specifying either a <code>width</code> or <code>height</code> property for this view will scale its image(s) with 
the aspect ratio maintained, up to a maximum size that does not exceed its parent view.</p>
<h4>Android 9-Patch Scaled Images</h4>
<p>A nine-patch (9-patch) image is simply a standard <code>png</code> image with a transparent border of a 
single pixel, containing "guides" defined by solid black (<code>#000</code>) color fills. Guides added to the 
top and left edges determine that the image may be stretched in horizontal and vertical planes 
respectively. Optionally, the content area may be defined by guides added to the bottom and 
right edges.</p>
<p>Although any image editor may be used to create the guides, certain settings can cause the edges 
of the graphic to "bleed" into the transparent border, consequently making it non-transparent. 
Thus, the <code>draw9patch</code> utility provided in the Android SDK tools directory is recommended for 
this purpose.</p>
<p>For further information about nine-patch images and the Android utility, see the 
<a href="http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch">Nine-patch</a> 
and <a href="http://developer.android.com/guide/developing/tools/draw9patch.html">Draw 9-patch</a> sections 
of the Android Developer website.</p>
<p>The nine-patch technique may be used with any of Titanium's static image properties. See the 
"Button with Nine-patch Background Image" example for a demonstration.</p>
 * <h3>Examples</h3>
 * <h4>Basic Image View</h4>
 * <p><p>In this example, we create a simple image view:</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow();
var image = Ti.UI.createImageView({
  image:'/images/myimage.png'
});
win.add(image);
win.open();</pre>
 * <h4>Button with Nine-patch Background Image</h4>
 * <p><p>To prepare, copy the images 
<a href="https://github.com/appcelerator/titanium_mobile/raw/master/demos/KitchenSink/Resources/images/custom-slider-right.9.png">custom-slider-right.9.png</a> 
and <a href="https://github.com/appcelerator/titanium_mobile/raw/master/demos/KitchenSink/Resources/images/custom-slider-left.9.png">custom-slider-left.9.png</a> 
into the project <code>/images/</code> directory/.</p>
<p>Create a button with a nine-patch image background, that swaps with another image when 
selected, and generates a message in the console when clicked.</p>
<p>Note that images are referenced in the code without the <code>.9</code> part of the filename, and that 
the project should be cleaned to ensure that the files are correctly copied to the project.</p></p><pre>var win = Ti.UI.createWindow({
    backgroundColor: 'white',
    exitOnClose: true,
    fullscreen: false,
    title: 'Click button to test'
});
 
var button = Ti.UI.createButton({
    backgroundImage: '/images/custom-slider-right.png',
    backgroundSelectedImage:'/images/custom-slider-left.png',
    title: 'Click me!',
    top: 10,
    width: 300,
    height: 200
});
button.addEventListener('click',function(e){
    Ti.API.info("You clicked the button");
});
win.add(button);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous basic image view example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;ImageView id="image" image="/images/myimage.png" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.ImageView = {};







/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to an <code>ImageView</code> is not supported on all platforms.</p>
<p>If you need to add views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ImageView.add = function(view){};

/**
 * @method getAnimating
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-animating animating} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.ImageView.getAnimating = function(){};

/**
 * @method getAutorotate
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-autorotate autorotate} property.</p>
 * @return {Boolean} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.ImageView.getAutorotate = function(){};

/**
 * @method getDecodeRetries
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-decodeRetries decodeRetries} property.</p>
 * @return {Number} 
 * @platform android 1.7
*/
Titanium.UI.ImageView.getDecodeRetries = function(){};

/**
 * @method getDefaultImage
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-defaultImage defaultImage} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.ImageView.getDefaultImage = function(){};

/**
 * @method getDuration
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-duration duration} property.</p>
 * @return {Number} 
*/
Titanium.UI.ImageView.getDuration = function(){};

/**
 * @method getEnableZoomControls
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-enableZoomControls enableZoomControls} property.</p>
 * @return {Boolean} 
 * @platform android 1.3
*/
Titanium.UI.ImageView.getEnableZoomControls = function(){};

/**
 * @method getHires
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-hires hires} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ImageView.getHires = function(){};

/**
 * @method getImage
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-image image} property.</p>
 * @return {String/Titanium.Blob/Titanium.Filesystem.File} 
*/
Titanium.UI.ImageView.getImage = function(){};

/**
 * @method getImages
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-images images} property.</p>
 * @return {String[]/Titanium.Blob[]/Titanium.Filesystem.File[]} 
*/
Titanium.UI.ImageView.getImages = function(){};

/**
 * @method getPaused
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-paused paused} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.ImageView.getPaused = function(){};

/**
 * @method getPreventDefaultImage
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-preventDefaultImage preventDefaultImage} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ImageView.getPreventDefaultImage = function(){};

/**
 * @method getRepeatCount
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-repeatCount repeatCount} property.</p>
 * @return {Number} 
*/
Titanium.UI.ImageView.getRepeatCount = function(){};

/**
 * @method getReverse
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-reverse reverse} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.ImageView.getReverse = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.UI.ImageView#property-url url} property.</p>
 * @removed  3.0.0
 * @return {String} 
*/
Titanium.UI.ImageView.getUrl = function(){};

/**
 * @method pause
 * <p>Pauses a running animation. Use <code>resume</code> method to continue.</p>
 * @description <p>This method only works if multiple images are specified.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ImageView.pause = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.ImageView#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ImageView.remove = function(view){};

/**
 * @method resume
 * <p>Resumes an animation from a <code>pause</code> state.</p>
 * @description <p>This method only works if multiple images are specified.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ImageView.resume = function(){};

/**
 * @method setDecodeRetries
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-decodeRetries decodeRetries} property.</p>
 * @param {Number} decodeRetries 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.7
*/
Titanium.UI.ImageView.setDecodeRetries = function(decodeRetries){};

/**
 * @method setDefaultImage
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-defaultImage defaultImage} property.</p>
 * @param {String} defaultImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.ImageView.setDefaultImage = function(defaultImage){};

/**
 * @method setDuration
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-duration duration} property.</p>
 * @param {Number} duration 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ImageView.setDuration = function(duration){};

/**
 * @method setEnableZoomControls
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-enableZoomControls enableZoomControls} property.</p>
 * @param {Boolean} enableZoomControls 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.3
*/
Titanium.UI.ImageView.setEnableZoomControls = function(enableZoomControls){};

/**
 * @method setHires
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-hires hires} property.</p>
 * @param {Boolean} hires 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ImageView.setHires = function(hires){};

/**
 * @method setImage
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-image image} property.</p>
 * @param {String/Titanium.Blob/Titanium.Filesystem.File} image 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ImageView.setImage = function(image){};

/**
 * @method setImages
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-images images} property.</p>
 * @param {String[]/Titanium.Blob[]/Titanium.Filesystem.File[]} images 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ImageView.setImages = function(images){};

/**
 * @method setPreventDefaultImage
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-preventDefaultImage preventDefaultImage} property.</p>
 * @param {Boolean} preventDefaultImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ImageView.setPreventDefaultImage = function(preventDefaultImage){};

/**
 * @method setRepeatCount
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-repeatCount repeatCount} property.</p>
 * @param {Number} repeatCount 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ImageView.setRepeatCount = function(repeatCount){};

/**
 * @method setReverse
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-reverse reverse} property.</p>
 * @param {Boolean} reverse 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ImageView.setReverse = function(reverse){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Titanium.UI.ImageView#property-url url} property.</p>
 * @removed  3.0.0
 * @param {String} url 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ImageView.setUrl = function(url){};

/**
 * @method start
 * <p>Starts the image animation. On Android and Mobile Web, also resets <code>index</code> to the first image.</p>
 * @description <p>This method only works if multiple images are specified.</p>
 * @return void
*/
Titanium.UI.ImageView.start = function(){};

/**
 * @method stop
 * <p>Stops a running animation. On iOS and Mobile Web, also resets <code>index</code> to the first image.</p>
 * @description <p>This method only works if multiple images are specified.</p>
 * @return void
*/
Titanium.UI.ImageView.stop = function(){};

/**
 * @method toBlob
 * <p>Returns the image as a Blob object.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ImageView.toBlob = function(){};

/**
 * @property [animating=false on creation, true on load (Android), false (iPhone, iPad, Mobile Web, Tizen)]
 * @type Boolean
 * @readonly
 * <p>Indicates whether animation is running.</p>
 */
Titanium.UI.ImageView.animating = null;

/**
 * @property [autorotate=false on android, true on iOS.]
 * @type Boolean
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @creationOnly
 * <p>Indicates whether the image should be rotated based on exif orientation data. 
By default, this is false on android and true on iOS. 
The auto rotate behavior is not supported on Mobile Web and Tizen.</p>
 */
Titanium.UI.ImageView.autorotate = null;

/**
 * @property [decodeRetries=5]
 * @type Number
 * @platform android 1.7
 * <p>Number of times to retry decoding the bitmap at a URL.</p>
 */
Titanium.UI.ImageView.decodeRetries = null;

/**
 * @property defaultImage
 * @type String
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
 * <p>Local path to the default image to display while loading a remote image.</p>
 */
Titanium.UI.ImageView.defaultImage = null;

/**
 * @property [duration=200 ms in Release 2.1.1 and later. Platform-specific default in earlier releases.]
 * @type Number
 * <p>Amount of time in milliseconds to animate one cycle.</p>
 * @description <p>Starting with release 2.1.1, the minimum duration is 30 ms and the default duration is 200 ms.</p>
<p>On Android, prior to release 2.1.1, if any images are assigned to the <code>images</code> property when the animation is 
started, duration will be set to the number of images multiplied by 33 ms. If no images 
are assigned, duration will be set to 100 ms.</p>
<p>On iOS, Tizen and Mobile Web, prior to release 2.1.1, the default is 30 ms.</p>
<p>On Android, if the value of duration is changed, {@link Titanium.UI.ImageView#event-stop stop}
and {@link Titanium.UI.ImageView#event-start start} need to be called for the new value to take effect.</p>
 */
Titanium.UI.ImageView.duration = null;

/**
 * @property [enableZoomControls=false]
 * @type Boolean
 * @platform android 1.3
 * <p>Show zoom controls when the user touches the image view.</p>
 */
Titanium.UI.ImageView.enableZoomControls = null;

/**
 * @property [hires=false]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Set to <code>true</code> to prevent scaling of 2x-resolution remote images for Retina 
displays.</p>
 * @description <p>Causes images to display at 50%, where one pixel of the graphic maps to one physical pixel 
on-screen. This functionality is automatically determined for local images via their 
filenames, and thus this property is only applicable to remote images.</p>
 */
Titanium.UI.ImageView.hires = null;

/**
 * @property image
 * @type String/Titanium.Blob/Titanium.Filesystem.File
 * <p>Image to display.</p>
 * @description <p>Image to display, defined using a local filesystem path, a <code>File</code> object, a remote URL, 
or a <code>Blob</code> object containing image data. <code>Blob</code> and <code>File</code> objects are not supported on 
Mobile Web.</p>
 */
Titanium.UI.ImageView.image = null;

/**
 * @property images
 * @type String[]/Titanium.Blob[]/Titanium.Filesystem.File[]
 * <p>Array of images to animate, defined using local filesystem paths, <code>File</code> objects, 
remote URLs (Android only), or <code>Blob</code> objects containing image data. <code>Blob</code> and <code>File</code> 
objects are not supported on Mobile Web.</p>
 */
Titanium.UI.ImageView.images = null;

/**
 * @property [paused=false]
 * @type Boolean
 * @readonly
 * <p>Indicates whether the animation is paused.</p>
 */
Titanium.UI.ImageView.paused = null;

/**
 * @property [preventDefaultImage=false]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Prevent the default image from being displayed while loading a remote image. This property 
is ignored when the <code>defaultImage</code> property is set.</p>
 */
Titanium.UI.ImageView.preventDefaultImage = null;

/**
 * @property [repeatCount=0 (infinite)]
 * @type Number
 * <p>Number of times to repeat the image animation.</p>
 */
Titanium.UI.ImageView.repeatCount = null;

/**
 * @property [reverse=false]
 * @type Boolean
 * <p>Run the animation in reverse.</p>
 */
Titanium.UI.ImageView.reverse = null;

/**
 * @property url
 * @type String
 * <p>URL to the image to display.</p>
 * @removed  3.0.0 <p>Use {@link Titanium.UI.ImageView#property-image image} instead.</p>
 */
Titanium.UI.ImageView.url = null;

/**
 * @class Titanium.UI.Label
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A text label, with optional background image.</p>
 * @description <p>Use the {@link Titanium.UI#method-createLabel} method to create a label.</p>
 * <h3>Examples</h3>
 * <h4>Basic Label</h4>
 * <p><p>Create a center-aligned label with a text shadow and specified-size font, and another 
containing forced line breaks and unicode symbols.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false,
  layout: 'vertical',
  title: 'Label Demo'
});

var label1 = Ti.UI.createLabel({
  color: '#900',
  font: { fontSize:48 },
  shadowColor: '#aaa',
  shadowOffset: {x:5, y:5},
  text: 'A simple label',
  textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,
  top: 30,
  width: Ti.UI.SIZE, height: Ti.UI.SIZE
});

var label2 = Ti.UI.createLabel({
  color:'blue',
  text: 'A long label with\na few line breaks\nand unicode (UTF8)\nsymbols such as\na white chess piece \u2655\nand the euro symbol \u20ac\nlooks like this!\n',
  textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT,
  top: 30,
  width: 300, height: 200
});

win.add(label1);
win.add(label2);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>The font and shadowOffset properties need to be defined in the TSS or controller file.
These property values are dictionaries, rather than single values,
so they cannot be included in markup.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white" exitOnClose="true" fullscreen="false" layout="vertical" title="Label Demo"&gt;

        &lt;!-- The text property can either be defined as an attribute or as node text. --&gt;
        &lt;Label id="label1" color="#900" shadowColor="#aaa" text="A simple label" textAlign="Ti.UI.TEXT_ALIGNMENT_CENTER"
            top="30" width="Ti.UI.SIZE" height="Ti.UI.SIZE" /&gt;
        &lt;Label id="label2" color="blue" textAlign="Ti.UI.TEXT_ALIGNMENT_LEFT" top="30" width="300" height="200"&gt;
            A long label with\na few line breaks\nand unicode (UTF8)\nsymbols such as\na white chess piece \u2655\nand the euro symbol \u20ac\nlooks like this!\n
        &lt;/Label&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.Label = {};

/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to a <code>Label</code> is not supported on all platforms.</p>
<p>If you need to add views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.add = function(view){};

/**
 * @method getAutoLink
 * <p>Gets the value of the {@link Titanium.UI.Label#property-autoLink autoLink} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.getAutoLink = function(){};

/**
 * @method getBackgroundPaddingBottom
 * <p>Gets the value of the {@link Titanium.UI.Label#property-backgroundPaddingBottom backgroundPaddingBottom} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.getBackgroundPaddingBottom = function(){};

/**
 * @method getBackgroundPaddingLeft
 * <p>Gets the value of the {@link Titanium.UI.Label#property-backgroundPaddingLeft backgroundPaddingLeft} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.getBackgroundPaddingLeft = function(){};

/**
 * @method getBackgroundPaddingRight
 * <p>Gets the value of the {@link Titanium.UI.Label#property-backgroundPaddingRight backgroundPaddingRight} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.getBackgroundPaddingRight = function(){};

/**
 * @method getBackgroundPaddingTop
 * <p>Gets the value of the {@link Titanium.UI.Label#property-backgroundPaddingTop backgroundPaddingTop} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.getBackgroundPaddingTop = function(){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.Label#property-color color} property.</p>
 * @return {String} 
*/
Titanium.UI.Label.getColor = function(){};

/**
 * @method getEllipsize
 * <p>Gets the value of the {@link Titanium.UI.Label#property-ellipsize ellipsize} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.getEllipsize = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.Label#property-font font} property.</p>
 * @return {Font} 
*/
Titanium.UI.Label.getFont = function(){};

/**
 * @method getHighlightedColor
 * <p>Gets the value of the {@link Titanium.UI.Label#property-highlightedColor highlightedColor} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.getHighlightedColor = function(){};

/**
 * @method getHtml
 * <p>Gets the value of the {@link Titanium.UI.Label#property-html html} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.getHtml = function(){};

/**
 * @method getMinimumFontSize
 * <p>Gets the value of the {@link Titanium.UI.Label#property-minimumFontSize minimumFontSize} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.getMinimumFontSize = function(){};

/**
 * @method getShadowColor
 * <p>Gets the value of the {@link Titanium.UI.Label#property-shadowColor shadowColor} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.getShadowColor = function(){};

/**
 * @method getShadowOffset
 * <p>Gets the value of the {@link Titanium.UI.Label#property-shadowOffset shadowOffset} property.</p>
 * @return {Object} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.getShadowOffset = function(){};

/**
 * @method getText
 * <p>Gets the value of the {@link Titanium.UI.Label#property-text text} property.</p>
 * @return {String} 
*/
Titanium.UI.Label.getText = function(){};

/**
 * @method getTextAlign
 * <p>Gets the value of the {@link Titanium.UI.Label#property-textAlign textAlign} property.</p>
 * @return {String/Number} 
*/
Titanium.UI.Label.getTextAlign = function(){};

/**
 * @method getTextid
 * <p>Gets the value of the {@link Titanium.UI.Label#property-textid textid} property.</p>
 * @return {String} 
*/
Titanium.UI.Label.getTextid = function(){};

/**
 * @method getVerticalAlign
 * <p>Gets the value of the {@link Titanium.UI.Label#property-verticalAlign verticalAlign} property.</p>
 * @return {Number/String} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.getVerticalAlign = function(){};

/**
 * @method getWordWrap
 * <p>Gets the value of the {@link Titanium.UI.Label#property-wordWrap wordWrap} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.getWordWrap = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.Label#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.remove = function(view){};

/**
 * @method setAutoLink
 * <p>Sets the value of the {@link Titanium.UI.Label#property-autoLink autoLink} property.</p>
 * @param {Number} autoLink 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.setAutoLink = function(autoLink){};

/**
 * @method setBackgroundPaddingBottom
 * <p>Sets the value of the {@link Titanium.UI.Label#property-backgroundPaddingBottom backgroundPaddingBottom} property.</p>
 * @param {Number} backgroundPaddingBottom 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.setBackgroundPaddingBottom = function(backgroundPaddingBottom){};

/**
 * @method setBackgroundPaddingLeft
 * <p>Sets the value of the {@link Titanium.UI.Label#property-backgroundPaddingLeft backgroundPaddingLeft} property.</p>
 * @param {Number} backgroundPaddingLeft 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.setBackgroundPaddingLeft = function(backgroundPaddingLeft){};

/**
 * @method setBackgroundPaddingRight
 * <p>Sets the value of the {@link Titanium.UI.Label#property-backgroundPaddingRight backgroundPaddingRight} property.</p>
 * @param {Number} backgroundPaddingRight 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.setBackgroundPaddingRight = function(backgroundPaddingRight){};

/**
 * @method setBackgroundPaddingTop
 * <p>Sets the value of the {@link Titanium.UI.Label#property-backgroundPaddingTop backgroundPaddingTop} property.</p>
 * @param {Number} backgroundPaddingTop 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.setBackgroundPaddingTop = function(backgroundPaddingTop){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.Label#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Label.setColor = function(color){};

/**
 * @method setEllipsize
 * <p>Sets the value of the {@link Titanium.UI.Label#property-ellipsize ellipsize} property.</p>
 * @param {Boolean} ellipsize 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.setEllipsize = function(ellipsize){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.Label#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Label.setFont = function(font){};

/**
 * @method setHighlightedColor
 * <p>Sets the value of the {@link Titanium.UI.Label#property-highlightedColor highlightedColor} property.</p>
 * @param {String} highlightedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.setHighlightedColor = function(highlightedColor){};

/**
 * @method setHtml
 * <p>Sets the value of the {@link Titanium.UI.Label#property-html html} property.</p>
 * @param {String} html 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.setHtml = function(html){};

/**
 * @method setMinimumFontSize
 * <p>Sets the value of the {@link Titanium.UI.Label#property-minimumFontSize minimumFontSize} property.</p>
 * @param {Number} minimumFontSize 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Label.setMinimumFontSize = function(minimumFontSize){};

/**
 * @method setShadowColor
 * <p>Sets the value of the {@link Titanium.UI.Label#property-shadowColor shadowColor} property.</p>
 * @param {String} shadowColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.setShadowColor = function(shadowColor){};

/**
 * @method setShadowOffset
 * <p>Sets the value of the {@link Titanium.UI.Label#property-shadowOffset shadowOffset} property.</p>
 * @param {Object} shadowOffset 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.setShadowOffset = function(shadowOffset){};

/**
 * @method setText
 * <p>Sets the value of the {@link Titanium.UI.Label#property-text text} property.</p>
 * @param {String} text 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Label.setText = function(text){};

/**
 * @method setTextAlign
 * <p>Sets the value of the {@link Titanium.UI.Label#property-textAlign textAlign} property.</p>
 * @param {String/Number} textAlign 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Label.setTextAlign = function(textAlign){};

/**
 * @method setTextid
 * <p>Sets the value of the {@link Titanium.UI.Label#property-textid textid} property.</p>
 * @param {String} textid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Label.setTextid = function(textid){};

/**
 * @method setVerticalAlign
 * <p>Sets the value of the {@link Titanium.UI.Label#property-verticalAlign verticalAlign} property.</p>
 * @param {Number/String} verticalAlign 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.setVerticalAlign = function(verticalAlign){};

/**
 * @method setWordWrap
 * <p>Sets the value of the {@link Titanium.UI.Label#property-wordWrap wordWrap} property.</p>
 * @param {Boolean} wordWrap 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Label.setWordWrap = function(wordWrap){};

/**
 * @property autoLink
 * @type Number
 * @platform android 0.8
 * @platform tizen 3.1
 * <p>Automatically convert certain text items in the label to clickable links.</p>
 * @description <p>Specify which types of items to convert by setting <code>autoLink</code> to one of the 
{@link Titanium.UI} <code>AUTOLINK</code> constants: 
{@link Titanium.UI#property-AUTOLINK_ALL AUTOLINK_ALL},
{@link Titanium.UI#property-AUTOLINK_EMAIL_ADDRESSES AUTOLINK_EMAIL_ADDRESSES},
{@link Titanium.UI#property-AUTOLINK_MAP_ADDRESSES AUTOLINK_MAP_ADDRESSES},
{@link Titanium.UI#property-AUTOLINK_NONE AUTOLINK_NONE},
{@link Titanium.UI#property-AUTOLINK_PHONE_NUMBERS AUTOLINK_PHONE_NUMBERS},
or {@link Titanium.UI#property-AUTOLINK_URLS AUTOLINK_URLS}.</p>
<p>Multiple autolink values can be combined with a bitwise OR. For example:</p>
<pre><code>label.autoLink = AUTOLINK_MAP_ADDRESSES|AUTOLINK_PHONE_NUMBERS;
</code></pre>
<p>Prior to Release 3.0, this field used platform-specific constants. These are now
deprecated in favor of the <code>AUTOLINK</code> constants listed above.</p>
<p>The Android-specific legacy constants are defined in {@link Titanium.UI.Android}:
{@link Titanium.UI.Android#property-LINKIFY_ALL LINKIFY_ALL},
{@link Titanium.UI.Android#property-LINKIFY_EMAIL_ADDRESSES LINKIFY_EMAIL_ADDRESSES},
{@link Titanium.UI.Android#property-LINKIFY_MAP_ADDRESSES LINKIFY_MAP_ADDRESSES},
{@link Titanium.UI.Android#property-LINKIFY_PHONE_NUMBERS LINKIFY_PHONE_NUMBERS},
and {@link Titanium.UI.Android#property-LINKIFY_WEB_URLS LINKIFY_WEB_URLS}.</p>
<p>On Tizen, only the following flags are supported:
{@link Titanium.UI#property-AUTOLINK_EMAIL_ADDRESSES AUTOLINK_EMAIL_ADDRESSES},
{@link Titanium.UI#property-AUTOLINK_NONE AUTOLINK_NONE},
{@link Titanium.UI#property-AUTOLINK_PHONE_NUMBERS AUTOLINK_PHONE_NUMBERS},
and {@link Titanium.UI#property-AUTOLINK_URLS AUTOLINK_URLS}.</p>
 */
Titanium.UI.Label.autoLink = null;

/**
 * @property backgroundPaddingBottom
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Number of pixels to extend the background image past the label on the bottom.</p>
 */
Titanium.UI.Label.backgroundPaddingBottom = null;

/**
 * @property backgroundPaddingLeft
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Number of pixels to extend the background image past the label on the left.</p>
 */
Titanium.UI.Label.backgroundPaddingLeft = null;

/**
 * @property backgroundPaddingRight
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Number of pixels to extend the background image past the label on the right.</p>
 */
Titanium.UI.Label.backgroundPaddingRight = null;

/**
 * @property backgroundPaddingTop
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Number of pixels to extend the background image past the label on the top.</p>
 */
Titanium.UI.Label.backgroundPaddingTop = null;

/**
 * @property color
 * @type String
 * <p>Color of the label text, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Label.color = null;

/**
 * @property [ellipsize=false]
 * @type Boolean
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Turn on/off the addition of ellipses at the end of the label if the text is too large to fit.</p>
 */
Titanium.UI.Label.ellipsize = null;

/**
 * @property font
 * @type Font
 * <p>Font to use for the label text.</p>
 */
Titanium.UI.Label.font = null;

/**
 * @property highlightedColor
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Color of the label when in the highlighted state, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>Used when the label is part of a view that can be highlighted, such as a 
{@link Titanium.UI.TableViewRow}.</p>
 */
Titanium.UI.Label.highlightedColor = null;

/**
 * @property html
 * @type String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Simple HTML formatting.</p>
 */
Titanium.UI.Label.html = null;

/**
 * @property minimumFontSize
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Minimum font size when the font is sized based on the contents.</p>
 * @description <p>Enables font scaling to fit and forces the label content to be limited to a single line.</p>
 */
Titanium.UI.Label.minimumFontSize = null;

/**
 * @property shadowColor
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Text shadow color, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Label.shadowColor = null;

/**
 * @property shadowOffset
 * @type Object
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Shadow offset as a dictionary with the properties <code>x</code> and <code>y</code>.</p>
 */
Titanium.UI.Label.shadowOffset = null;

/**
 * @property text
 * @type String
 * <p>Label text.</p>
 * @description <p>Use the backslash and letter <code>n</code> line feed character combination, ie <code>\n</code>, to force a new 
line. </p>
<p>Use unicode characters, such as those included in (but not limited to) the 
<a href="http://en.wikibooks.org/w/index.php?title=Unicode/List_of_useful_symbols">Unicode List of Useful Symbols</a> 
section of wikipedia, to insert special characters and symbols.</p>
<p>See the example in {@link Titanium.UI.Label label} for a demonstration.</p>
 */
Titanium.UI.Label.text = null;

/**
 * @property textAlign
 * @type String/Number
 * <p>Text alignment. One of {@link Titanium.UI} text alignment constants, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT TEXT_ALIGNMENT_LEFT}, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER TEXT_ALIGNMENT_CENTER}, 
or {@link Titanium.UI#property-TEXT_ALIGNMENT_RIGHT TEXT_ALIGNMENT_RIGHT}.</p>
 */
Titanium.UI.Label.textAlign = null;

/**
 * @property textid
 * @type String
 * <p>Key identifying a string from the locale file to use for the label text.</p>
 * @description <p>Only one of <code>text</code> or <code>textid</code> should be specified.</p>
 */
Titanium.UI.Label.textid = null;

/**
 * @property [verticalAlign=Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER on Mobile Web. Undefined on Android, iPhone and iPad.]
 * @type Number/String
 * @platform android 3.0
 * @platform blackberry 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Vertical text alignment, specified using one of the 
vertical alignment constants from {@link Titanium.UI}: 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_BOTTOM TEXT_VERTICAL_ALIGNMENT_BOTTOM}, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_CENTER TEXT_VERTICAL_ALIGNMENT_CENTER}, or 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_TOP TEXT_VERTICAL_ALIGNMENT_TOP}.</p>
 * @description <p>On iPhone and iPad the default value of the property is undefined. The behavior of the label
depends on the actual content height. If the actual content height is larger than the available
height the text is truncated at the end and the content is center aligned.</p>
<p>On Android, the default value of the property is undefined, and the default
behavior when the property is undefined is to center the text vertically.</p>
 */
Titanium.UI.Label.verticalAlign = null;

/**
 * @property [wordWrap=true]
 * @type Boolean
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Enable or disable word wrapping in the label.</p>
 */
Titanium.UI.Label.wordWrap = null;

/**
 * @class Titanium.UI.ListItem
 * @typestr Object of Titanium.UI
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
 * @extends Titanium.Proxy
 * <p>A list item is an individual item in a list section.</p>
 * @description <p>A list item is a combination of a {@link ListDataItem} and {@link ItemTemplate}.  The list data item
represents the actual data, while the item template represents the style elements of the item.</p>
<p>You do not create <code>ListItem</code> objects the same way you do other Titanium proxies.
A <code>Ti.UI.createListItem</code> method does not exist to create list item objects.</p>
<p>Instead, you have to pass a {@link ListDataItem} array to the <code>setItems</code> method of a <code>ListSection</code>.
The list data items contain the data you want to display in the list.</p>
<p>By default, only the <code>title</code>, <code>image</code> and <code>accessoryType</code> keys of the list data item's
<code>properties</code> dictionary are displayed if an item template is not defined.  See "Default List Item"
for an example of using the default template.</p>
<h4>Item Templates</h4>
<p>To customize the style of a list item, use an item template to create your view structure.</p>
<p>Add key-value pairs of view properties and their values to the <code>properties</code> dictionary of the
item template to set view properties of the list item.</p>
<p>Add key-value pairs of event names and their callback functions (or array of callback functions
for multiple callback bindings) to the <code>events</code> dictionary of the  item template to bind callbacks
to events, which are bubbled from the subcomponents of the item.</p>
<p>Add additional views, such as labels or image views, to the <code>childTemplates</code> array of the item
template. The child templates are item templates with two extra properties:</p>
<ul>
<li>Set the <code>type</code> property to a Titanium view class, such as <code>Ti.UI.Label</code> or <code>Ti.UI.ImageView</code>,
  to use that view in your template.</li>
<li>Set the <code>bindId</code> to bind the template to a custom property in the list data item. The custom
  properties in the list data item contain key-value pairs of view properties and their values.</li>
</ul>
<p>For example, suppose you have a list data item defined as <code>{foo:{text: 'foobar'}}</code> and an item
template defined as <code>{childTemplates: [{type: 'Ti.UI.Label', bindId: 'foo'}]}</code>.  The <code>foo</code>
property in the list data item binds to the label in the template, which sets the <code>text</code>
property of the label in the template to the <code>text</code> property in the list data item.</p>
<p>To bind the list data item to an item template, use the {@link Titanium.UI.ListView#property-templates}
property to map the template to a style name, then use the style name to either set the
{@link Titanium.UI.ListView#property-defaultItemTemplate} property to globally set the style for all items or set the
<code>template</code> property of the list data item to override or individually set the style.</p>
<p>On iOS, you can specify one of the template constants for the {@link ListDataItem#property-template} property
or {@link Titanium.UI.ListView#property-defaultItemTemplate} property: {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_CONTACTS},
{@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SETTINGS} or {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SUBTITLE}.</p>
<h4>Eventing</h4>
<p>Unlike other views, you cannot use the <code>addEventListener</code> method to bind callbacks to events for a
ListItem.</p>
<p>Use the ListView's {@link Titanium.UI.ListView#event-itemclick itemclick} event to monitor click events on
items in the list view. Do not rely on the <code>source</code> property to determine which item fired the
event.  Either use the <code>sectionIndex</code> and <code>itemIndex</code>, or the <code>itemId</code> to determine the list item
that generated the event, and use the <code>bindId</code> to check which child control fired the event.
See "Default List Item" for an example of using the <code>itemclick</code> event.</p>
<p>To monitor events that bubble to the ListItem or to monitor events of the view subcomponents,
bind them to the item by using the <code>events</code> dictionary of the item template or the child view
templates, respectively. Add the bindings as key-value pairs, where the key is the event name
and the value is the callback (or array of callbacks for multiple bindings). See "List Items
with an Item Template" for an example of binding a <code>click</code> event to an item using an item template.</p>
 * <h3>Examples</h3>
 * <h4>Default List Items</h4>
 * <p><p>Creates a list without using an item template. Monitors the <code>itemclick</code> event to check and
uncheck tasks.</p></p><pre>var win = Ti.UI.createWindow({backgroundColor: 'white'});
var listView = Ti.UI.createListView();

var tasks = [
    {id: 'trash', name: 'Take Out the Trash', icon: 'trash.png'},
    {id: 'dishes', name: 'Do the Dishes', icon: 'dishes.png'},
    {id: 'doggie', name: 'Walk the Dog', icon: 'doggie.png'}
];

var data = [];
for (var i = 0; i &lt; tasks.length; i++) {
    data.push(
        { properties: {
            itemId: tasks[i].id,
            title: tasks[i].name,
            image: tasks[i].icon,
            accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_NONE,
            color: 'black'
        }
    });
}

var section = Ti.UI.createListSection();
section.setItems(data);
listView.sections = [section];
listView.addEventListener('itemclick', function(e){
    var item = section.getItemAt(e.itemIndex);
    if (item.properties.accessoryType == Ti.UI.LIST_ACCESSORY_TYPE_NONE) {
        item.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_CHECKMARK;
        item.properties.color = 'red';
    }
    else {
        item.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_NONE;
        item.properties.color = 'black';
    }
    section.updateItemAt(e.itemIndex, item);
});
win.add(listView);
win.open();</pre>
 * <h4>List Items with an Item Template</h4>
 * <p><p>Previous example modified to use an item template.  The template defines a small icon on the
far left, a title label to the right of the icon and a subtitle below the title label in
smaller text.</p>
<p>Monitors the <code>click</code> event of the item rather than the <code>itemclick</code> event of the list view.</p></p><pre>var win = Ti.UI.createWindow({backgroundColor: 'white'});

var plainTemplate = {
    childTemplates: [
        {                            // Image justified left
            type: 'Ti.UI.ImageView', // Use an image view for the image
            bindId: 'pic',           // Maps to a custom pic property of the item data
            properties: {            // Sets the image view properties
                width: '50dp', height: '50dp', left: 0
            }
        },
        {                            // Title
            type: 'Ti.UI.Label',     // Use a label for the title
            bindId: 'title',         // Maps to a custom title property of the item data
            properties: {            // Sets the label properties
                color: 'black',
                font: { fontFamily:'Arial', fontSize: '20dp', fontWeight:'bold' },
                left: '60dp', top: 0,
            },
        },
        {                            // Subtitle
            type: 'Ti.UI.Label',     // Use a label for the subtitle
            bindId: 'subtitle',      // Maps to a custom subtitle property of the item data
            properties: {            // Sets the label properties
                color: 'gray',
                font: { fontFamily:'Arial', fontSize: '14dp' },
                left: '60dp', top: '25dp',
            }
        }
    ],
    // Binds a callback to the click event, which catches events bubbled by the view subcomponents.
    events: {click: toggleCheck }
};

// The following API calls are equivalent to using jQuery.extend(true, {}, oldObject)
// Copy the plainTemplate
var redTemplate = JSON.parse(JSON.stringify(plainTemplate));
// Change the text color to red
redTemplate.childTemplates[1].properties.color = 'red';
redTemplate.childTemplates[2].properties.color = 'red';
// Rebind the click event callback
redTemplate.events.click = toggleCheck;

var listView = Ti.UI.createListView({
    // Maps plainTemplate to 'uncheck' and redTemplate to 'check' 
    templates: { 'uncheck': plainTemplate, 'check': redTemplate },
    // Use 'uncheck', that is, the plainTemplate created earlier for all items
    // Can be overridden by the item's template property
    defaultItemTemplate: 'uncheck'
});

var tasks = [
    {id: 'trash', name: 'Take Out the Trash', person: 'Yakko', icon: 'trash.png'},
    {id: 'dishes', name: 'Do the Dishes', person: 'Wakko', icon: 'dishes.png'},
    {id: 'doggie', name: 'Walk the Dog', person: 'Dot', icon: 'doggie.png'}
];

var data = [];
for (var i = 0; i &lt; tasks.length; i++) {
    data.push({
        // Maps to the title component in the template
        // Sets the text property of the Label component
        title : { text: tasks[i].name },
        // Maps to the subtitle component in the template
        // Sets the text property of the Label component
        subtitle : { text : tasks[i].person },
        // Maps to the pic component in the template
        // Sets the image property of the ImageView component
        pic : { image : tasks[i].icon },
        // Sets the regular list data properties
        properties : {
            itemId: tasks[i].id,
            accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_NONE,
        }
    });
}

var section = Ti.UI.createListSection();
section.setItems(data);
listView.sections = [section];

// Modified version of the `itemclick` event listener
// Changes the item template rather than the list item's color property
function toggleCheck (e) {
    var item = section.getItemAt(e.itemIndex);
    if (item.properties.accessoryType == Ti.UI.LIST_ACCESSORY_TYPE_NONE) {
        item.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_CHECKMARK;
        item.template = 'check';
    }
    else {
        item.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_NONE;
        item.template = 'uncheck';
    }
    section.updateItemAt(e.itemIndex, item);
} 

win.add(listView);
win.open();</pre>
 */
Titanium.UI.ListItem = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.UI.ListItem.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Titanium.UI.ListItem.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.UI.ListItem.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.ListItem.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.UI.ListItem.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.ListItem.setBubbleParent = function(){};

/**
 * @property [accessoryType=Titanium.UI.LIST_ACCESSORY_TYPE_NONE]
 * @type Number
 * <p>Sets an accessory on the right side of an item.</p>
 * @description <p>Specify one of the following:
{@link Titanium.UI#property-LIST_ACCESSORY_TYPE_CHECKMARK},
{@link Titanium.UI#property-LIST_ACCESSORY_TYPE_DETAIL},
{@link Titanium.UI#property-LIST_ACCESSORY_TYPE_DISCLOSURE},
or {@link Titanium.UI#property-LIST_ACCESSORY_TYPE_NONE}.</p>
 */
Titanium.UI.ListItem.accessoryType = null;

/**
 * @property [allowsSelection=true]
 * @type Boolean
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Determines whether this item can be selected.</p>
 * @description <p>Set to <code>false</code> to prevent the item from being selected.</p>
<p>On iOS, even if this property is set to <code>false</code>, you can interact with the detail disclosure
accessory (<code>accessoryType</code> set to {@link Titanium.UI#property-LIST_ACCESSORY_TYPE_DETAIL}) and any child
templates that are controls, such as a button, slider, etc.</p>
 */
Titanium.UI.ListItem.allowsSelection = null;

/**
 * @property [backgroundColor=Transparent]
 * @type String
 * <p>Background color of the view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
 */
Titanium.UI.ListItem.backgroundColor = null;

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.ListItem.bubbleParent = null;

/**
 * @property color
 * @type String
 * <p>Default text color of the item when not selected, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
<p>On Android, <code>selectedColor</code> is not supported, so the text is always displayed in this color.</p>
<p>Only applies to the built-in templates.</p>
 */
Titanium.UI.ListItem.color = null;

/**
 * @property [font=System default font.]
 * @type Font
 * <p>Font to use for the item title.</p>
 * @description <p>Only applies to the built-in templates.</p>
 */
Titanium.UI.ListItem.font = null;

/**
 * @property height
 * @type Number/String
 * <p>Row height in platform-specific units.</p>
 * @description <p>On Android, the value can be either a float value or a dimension string, for example, '40dp'.</p>
<p>On iOS, the value can only be an absolute value.</p>
 */
Titanium.UI.ListItem.height = null;

/**
 * @property image
 * @type String
 * <p>Image to render in the image area of the item, specified as a local path or URL.</p>
 * @description <p>On iOS, the image is on the left, and on Android, the image is on the right.</p>
<p>On Android, this image only appears on the default template.</p>
<p>On iOS, only local images are supported.</p>
<p>On iOS, this image only appears if the ListDataItem <code>template</code> property or ListView
<code>defaultItemTemplate</code> property is either: {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_DEFAULT},
{@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SETTINGS} or {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SUBTITLE}.</p>
 */
Titanium.UI.ListItem.image = null;

/**
 * @property itemId
 * @type String
 * <p>A user defined string that gets passed to events.</p>
 */
Titanium.UI.ListItem.itemId = null;

/**
 * @property selectionStyle
 * @type Number
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Selection style constant to control the selection color.</p>
 * @description <p>Specify one of the constants from {@link Titanium.UI.iPhone.ListViewCellSelectionStyle}.</p>
 */
Titanium.UI.ListItem.selectionStyle = null;

/**
 * @property subtitle
 * @type String
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Subtitle to set in the text area of the item.</p>
 * @description <p>This subtitle only appears if the ListDataItem <code>template</code> property or ListView
<code>defaultItemTemplate</code> property is set to either: {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_CONTACTS},
{@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SETTINGS} or {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SUBTITLE}.</p>
 */
Titanium.UI.ListItem.subtitle = null;

/**
 * @property title
 * @type String
 * <p>Title to set in the text area of the item.</p>
 * @description <p>This title only appears for the built-in templates.</p>
 */
Titanium.UI.ListItem.title = null;

/**
 * @class Titanium.UI.ListSection
 * @typestr Object of Titanium.UI
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
 * @extends Titanium.Proxy
 * <p>A list section is a container within a list view used to organize list items.</p>
 * @description <p>Use the {@link Titanium.UI#method-createListSection} method to create a <code>ListSection</code>.</p>
<p>List sections are used to manipulate and organize list items contained within it.</p>
<p>For examples of using list sections, see the examples in {@link Titanium.UI.ListView} and
{@link Titanium.UI.ListItem}.</p>
 */
Titanium.UI.ListSection = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.UI.ListSection.addEventListener = function(){};

/**
 * @method appendItems
 * <p>Appends the data entries to the end of the list section.</p>
 * @description <p>On iOS, the list item(s) can be inserted with an animation by specifying the <code>animation</code> parameter.</p>
 * @param {ListDataItem[]} dataItems 
 * <p>List items to add.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListSection.appendItems = function(dataItems, animation){};

/**
 * @method deleteItemsAt
 * <p>Removes count entries from the list section at the specified index.</p>
 * @description <p>On iOS, the list item(s) can be removed with an animation by specifying the <code>animation</code> parameter.</p>
 * @param {Number} itemIndex 
 * <p>Index of where to remove items.</p>
 * @param {Number} count 
 * <p>Number of items to remove.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListSection.deleteItemsAt = function(itemIndex, count, animation){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.UI.ListSection.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.ListSection.getBubbleParent = function(){};

/**
 * @method getFooterTitle
 * <p>Gets the value of the {@link Titanium.UI.ListSection#property-footerTitle footerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.ListSection.getFooterTitle = function(){};

/**
 * @method getHeaderTitle
 * <p>Gets the value of the {@link Titanium.UI.ListSection#property-headerTitle headerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.ListSection.getHeaderTitle = function(){};

/**
 * @method getItemAt
 * <p>Returns the item entry from the list view at the specified index.</p>
 * @param {Number} itemIndex 
 * <p>Index of where to retrieve an item.</p>
 * @return {ListDataItem} 
*/
Titanium.UI.ListSection.getItemAt = function(itemIndex){};

/**
 * @method getItems
 * <p>Gets the value of the {@link Titanium.UI.ListSection#property-items items} property.</p>
 * @return {ListDataItem[]} 
*/
Titanium.UI.ListSection.getItems = function(){};

/**
 * @method insertItemsAt
 * <p>Inserts data entries to the list section at the specified index.</p>
 * @description <p>On iOS, the list item(s) can be inserted with an animation by specifying the <code>animation</code> parameter.</p>
 * @param {Number} itemIndex 
 * <p>Index of where to insert the items.</p>
 * @param {ListDataItem[]} dataItems 
 * <p>List items to insert.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListSection.insertItemsAt = function(itemIndex, dataItems, animation){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.UI.ListSection.removeEventListener = function(){};

/**
 * @method replaceItemsAt
 * <p>Removes count entries from the list section at the specified index,
then inserts data entries to the list section at the same index.</p>
 * @description <p>On iOS, the list item(s) can be replaced with an animation by specifying the <code>animation</code> parameter.</p>
 * @param {Number} index 
 * <p>Index of where to remove then insert items.</p>
 * @param {Number} count 
 * <p>Number of list items to remove.</p>
 * @param {ListDataItem[]} dataItems 
 * <p>List items to insert.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListSection.replaceItemsAt = function(index, count, dataItems, animation){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.ListSection.setBubbleParent = function(){};

/**
 * @method setFooterTitle
 * <p>Sets the value of the {@link Titanium.UI.ListSection#property-footerTitle footerTitle} property.</p>
 * @param {String} footerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ListSection.setFooterTitle = function(footerTitle){};

/**
 * @method setHeaderTitle
 * <p>Sets the value of the {@link Titanium.UI.ListSection#property-headerTitle headerTitle} property.</p>
 * @param {String} headerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ListSection.setHeaderTitle = function(headerTitle){};

/**
 * @method setItems
 * <p>Sets the data entries in the list section.</p>
 * @description <p>On iOS, the list item(s) can be inserted with an animation by specifying the <code>animation</code> parameter.</p>
 * @param {ListDataItem[]} dataItems 
 * <p>List items to set.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListSection.setItems = function(dataItems, animation){};

/**
 * @method updateItemAt
 * <p>Updates an item at the specified index.</p>
 * @description <p>On iOS, the list item can be updated with an animation by specifying the <code>animation</code> parameter.</p>
 * @param {Number} index 
 * <p>Index of where to update the item.</p>
 * @param {ListDataItem} dataItem 
 * <p>List item to update.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListSection.updateItemAt = function(index, dataItem, animation){};

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.ListSection.bubbleParent = null;

/**
 * @property footerTitle
 * @type String
 * <p>Title of this section footer.</p>
 * @description <p>Using this property and <code>footerView</code> together is not supported. Use one or the other.</p>
<p><strong>Note:</strong> the <code>footerView</code> property has not been implemented in this version of ListSection.</p>
 */
Titanium.UI.ListSection.footerTitle = null;

/**
 * @property headerTitle
 * @type String
 * <p>Title of this section header.</p>
 * @description <p>Using this property and <code>headerView</code> together is not supported. Use one or the other.</p>
<p><strong>Note:</strong> the <code>headerView</code> property has not been implemented in this version of ListSection.</p>
 */
Titanium.UI.ListSection.headerTitle = null;

/**
 * @property items
 * @type ListDataItem[]
 * <p>Items of this list section.</p>
 */
Titanium.UI.ListSection.items = null;

/**
 * @class Titanium.UI.ListView
 * @typestr Object of Titanium.UI
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
 * @extends Titanium.UI.View
 * <p>A list view is used to present information, organized in to sections and items,
in a vertically-scrolling view.</p>
 * @description <p>Use the {@link Titanium.UI#method-createListView} method to create a <code>ListView</code>.</p>
<p>A <code>ListView</code> object is a container for {@link Titanium.UI.ListSection ListSection} 
objects that are, in turn, containers for {@link Titanium.UI.ListItem ListItem} objects. </p>
<p><strong>Note:</strong> this is the first version of list view. Not all features from the specification
are implemented in this version.  A complete list of implemented features is schedule for
the next list version, which is planned for Release 3.2.0.</p>
<h4>Creating a List</h4>
<p>To create a list, pass an array of {@link ListDataItem} objects to the ListSection's
{@link Titanium.UI.ListSection#method-setItems setItems} method, which creates and adds each array 
element as a row to a single {@link Titanium.UI.ListSection ListSection}. Use the ListView's
{@link Titanium.UI.ListView#property-sections sections} property to add the section(s) to the list view.</p>
<p>By default, only the <code>image</code>, <code>title</code> and <code>accessoryType</code> of a list data item
are displayed in the list. Refer to the next section for using an item template.</p>
<p>See the "List View Sections" example.</p>
<h4>Customizing the List Items</h4>
<p>To create a custom list view, you need to define an {@link ItemTemplate} and define each view
component you want to add. Use the <code>bindId</code> property of the child template to bind a dictionary
property in the item data to a child view component.</p>
<p>Map the template to a style name using the {@link Titanium.UI.ListView#property-templates} property, then use
the style name to  set the {@link Titanium.UI.ListView#property-defaultItemTemplate} property to globally change 
all item styles or set the {@link ListDataItem#property-template} property when passing in your list data
to apply the template to that one list item or to override the globally defined template.</p>
<p>On iOS, you can specify one of the template constants for the {@link ListDataItem#property-template} property
or {@link Titanium.UI.ListView#property-defaultItemTemplate}:
{@link Titanium.UI#property-LIST_ITEM_TEMPLATE_CONTACTS}, {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SETTINGS}
or {@link Titanium.UI#property-LIST_ITEM_TEMPLATE_SUBTITLE}.</p>
<p>See {@link Titanium.UI.ListItem} for a detailed description of creating list items with a custom
item template and see the "List View with Custom Item Template" example for a sample.</p>
<h4>List and Table Views</h4>
<p>This section describes the differences between the new list view and the old table view.</p>
<p><code>ListView</code> is analogous to <code>TableView</code>, <code>ListSection</code> is analogous to <code>TableViewSection</code>, and
<code>ListItem</code> is analogous to <code>TableViewRow</code>.</p>
<p>Both list view and table view present data to user as a vertically scrolling list of rows.
However, list view uses a data-oriented approach versus table view's view-oriented approach.</p>
<p>Because of list view's approach, list view's performance is faster but limits access to items
in the list, that is, you cannot directly manipulate the views, set view properties and bind event
callbacks the same way as you can with table view rows. The next subsection describes how to
use list items.</p>
<h5>ListItem versus TableViewRow</h5>
<p>You need to explicitly create a <code>ListSection</code> in order to add a <code>ListItem</code> to a <code>ListView</code>.
You cannot directly add a <code>ListItem</code> to a <code>ListView</code>.
In a <code>TableView</code>, a <code>TableViewRow</code> can be directly added to a <code>TableView</code> because a
<code>TableViewSection</code> is implicitly created and added to the <code>TableView</code>.</p>
<p>A <code>ListItem</code> object is not created in the same method as a <code>TableViewRow</code>.
A <code>ListItem</code> is create by passing an array of <code>ListDataItem</code> objects to the <code>ListSection</code>.
A <code>createListItem</code> method does not exist to create <code>ListItem</code> objects.</p>
<p>You cannot add views to a <code>ListItem</code> using the <code>add</code> method, which could be done with a
<code>TableViewRow</code>. To add views to a <code>ListItem</code>, you need to define an {@link ItemTemplate},
which is bound to a list data item using the <code>template</code> property.</p>
<p>You cannot explicitly set properties or bind events for a <code>ListItem</code>.  You have to set them using the
<code>properties</code> dictionary of a {@link ListDataItem} or {@link ItemTemplate} and the <code>events</code> dictionary of the
{@link ItemTemplate} or {@link ViewTemplate}, respectively.</p>
<h5>API Differences</h5>
<p><strong>Note:</strong> This is the first version of list view and some features have not been implemented.
The differences listed are for the final planned list view and the current table view in Release 3.1.0.</p>
<ul>
<li>
<p><strong>TableViewRow properties</strong>: The following properties and their accessors are not
  available for ListItem: <code>accessibilityLabel</code>, <code>className</code>, <code>editable</code>, <code>hasCheck</code>,
  <code>hasChild</code>, <code>hasDetail</code>, <code>leftImage</code>, <code>moveable</code> and <code>rightImage</code>.</p>
<ul>
<li>For <code>hasCheck</code>, <code>hasChild</code>, and <code>hasDetail</code>, use the <code>accessoryType</code> property.</li>
<li>For <code>leftImage</code> and <code>rightImage</code>, use the <code>image</code> property or create a custom item template.</li>
</ul>
</li>
<li>
<p><strong>TableViewRow methods</strong>: ListItem does not support any methods. Adding views and binding
  event callbacks are supported through the item template.</p>
</li>
<li>
<p><strong>TableViewSection properties</strong>: The following properties and their accessors are not
  supported by ListSection: <code>rows</code> and <code>rowCount</code>.</p>
<ul>
<li>For <code>rows</code>, use the <code>items</code> property.</li>
<li>For <code>rowCount</code>, use the <code>itemCount</code> property. (Not yet implemented.)</li>
</ul>
</li>
<li>
<p><strong>TableViewSection methods</strong>: The following methods are not supported by ListSection:
  <code>add</code>, <code>remove</code> and <code>rowAtIndex</code>.</p>
<ul>
<li>For <code>rowAtIndex</code>, use the <code>getItemAt</code> method.</li>
<li>For <code>add</code> and <code>remove</code>, use the other ListSection methods to manipulate the ListItems in the
  ListSection.</li>
</ul>
</li>
<li>
<p><strong>TableView properties</strong>: The <code>data</code> property and its accessors are not available
  for ListView. Use the <code>sections</code> property to set the ListSections for a ListView.  You
  cannot directly add ListItems to a ListView.</p>
</li>
<li>
<p><strong>TableView methods</strong>: The following methods are not available to ListView:
  <code>appendRow</code>, <code>deleteRow</code>, <code>deselectRow</code>, <code>insertRowAfter</code>, <code>insertRowBefore</code>, <code>selectRow</code>,
  <code>updateRow</code>, <code>scrollToIndex</code> and <code>selectRow</code>.</p>
<ul>
<li>For <code>scrollToIndex</code>, use the <code>scrollToItem</code> method.</li>
<li>For <code>selectRow</code>, use the <code>selectItem</code> method. (Currently implemented only for iOS.)</li>
<li>For all other row methods, you cannot manipulate ListItems with a ListView.
  You have to manipulate them with the ListSection they are contained in.</li>
</ul>
</li>
</ul>
<h4>List and Scroll Views</h4>
<p>As a list view inherently scrolls, it creates a very poor user experience when it contains
other scrolling views, such as a {@link Titanium.UI.ScrollableView ScrollableView} or
{@link Titanium.UI.TextArea TextArea}. Thus, this layout is strongly discouraged.</p>
<h4>TextFields in Lists with SOFT_INPUT_ADJUST_PAN (Android)</h4>
<p>When a {@link Titanium.UI.TextField TextField} is placed in a row near the bottom of a <code>ListView</code>,
in a window that is configured with
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_PAN SOFT_INPUT_ADJUST_PAN}, it is expected for the 
text field to automatically move to a visible position after it is focused and the software
keyboard displayed. However, due to a known problem caused by native Android's ListView behavior,
the keyboard is likely to completely obscure the text field.</p>
<p>To mitigate this, a <code>ScrollView</code> may be used instead of a list view, as demonstrated in the
{@link Titanium.UI.ScrollView ScrollView}, "Scroll View as a Table View", example.</p>
 * <h3>Examples</h3>
 * <h4>List View Sections</h4>
 * <p><p>Creates a list with three sections, each with two rows.
Adds two sections to the table before and one after it is rendered.</p></p><pre>var win = Ti.UI.createWindow({backgroundColor: 'white'});
var listView = Ti.UI.createListView();
var sections = [];

var fruitSection = Ti.UI.createListSection({ headerTitle: 'Fruits'});
var fruitDataSet = [
    {properties: { title: 'Apple'}},
    {properties: { title: 'Banana'}},
];
fruitSection.setItems(fruitDataSet);
sections.push(fruitSection);

var vegSection = Ti.UI.createListSection({ headerTitle: 'Vegetables'});
var vegDataSet = [
    {properties: { title: 'Carrots'}},
    {properties: { title: 'Potatoes'}},
];
vegSection.setItems(vegDataSet);
sections.push(vegSection);

listView.sections = sections;
win.add(listView);
win.open();

var fishSection = Ti.UI.createListSection({ headerTitle: 'Fish'});
var fishDataSet = [
    {properties: { title: 'Cod'}},
    {properties: { title: 'Haddock'}},
];
fishSection.setItems(fishDataSet);
listView.appendSection(fishSection);</pre>
 * <h4>List View with Custom Item Template</h4>
 * <p><p>Modifies the previous example to create a list using an item template to customize the view layout.</p></p><pre>var win = Ti.UI.createWindow({backgroundColor: 'white'});

// Create a custom template that displays an image on the left, 
// then a title next to it with a subtitle below it.
var myTemplate = {
    childTemplates: [
        {                            // Image justified left
            type: 'Ti.UI.ImageView', // Use an image view for the image
            bindId: 'pic',           // Maps to a custom pic property of the item data
            properties: {            // Sets the image view  properties
                width: '50dp', height: '50dp', left: 0
            }
        },
        {                            // Title 
            type: 'Ti.UI.Label',     // Use a label for the title 
            bindId: 'info',          // Maps to a custom info property of the item data
            properties: {            // Sets the label properties
                color: 'black',
                font: { fontFamily:'Arial', fontSize: '20dp', fontWeight:'bold' },
                left: '60dp', top: 0,
            }
        },
        {                            // Subtitle
            type: 'Ti.UI.Label',     // Use a label for the subtitle
            bindId: 'es_info',       // Maps to a custom es_info property of the item data
            properties: {            // Sets the label properties
                color: 'gray',
                font: { fontFamily:'Arial', fontSize: '14dp' },
                left: '60dp', top: '25dp',
            }
        }
    ]
};

var listView = Ti.UI.createListView({
    // Maps myTemplate dictionary to 'template' string
    templates: { 'template': myTemplate },
    // Use 'template', that is, the myTemplate dict created earlier
    // for all items as long as the template property is not defined for an item.
    defaultItemTemplate: 'template'
});
var sections = [];

var fruitSection = Ti.UI.createListSection({ headerTitle: 'Fruits / Frutas'});
var fruitDataSet = [
    // the text property of info maps to the text property of the title label
    // the text property of es_info maps to text property of the subtitle label
    // the image property of pic maps to the image property of the image view
    { info: {text: 'Apple'}, es_info: {text: 'Manzana'}, pic: {image: 'apple.png'}},
    { info: {text: 'Banana'}, es_info: {text: 'Banana'}, pic: {image: 'banana.png'}}
];
fruitSection.setItems(fruitDataSet);
sections.push(fruitSection);

var vegSection = Ti.UI.createListSection({ headerTitle: 'Vegetables / Verduras'});
var vegDataSet = [
    { info: {text: 'Carrot'}, es_info: {text: 'Zanahoria'}, pic: {image: 'carrot.png'}},
    { info: {text: 'Potato'}, es_info: {text: 'Patata'}, pic: {image: 'potato.png'}}
];
vegSection.setItems(vegDataSet);
sections.push(vegSection);

var grainSection = Ti.UI.createListSection({ headerTitle: 'Grains / Granos'});
var grainDataSet = [
    { info: {text: 'Corn'}, es_info: {text: 'Maiz'}, pic: {image: 'corn.png'}},
    { info: {text: 'Rice'}, es_info: {text: 'Arroz'}, pic: {image: 'rice.png'}}
];
grainSection.setItems(grainDataSet);
sections.push(grainSection);

listView.setSections(sections);
win.add(listView);
win.open();</pre>
 */
Titanium.UI.ListView = {};
















/**
 * @method appendSection
 * <p>Appends a single section or an array of sections to the end of the list.</p>
 * @description <p>On iOS, the section(s) can be inserted with an animation by specifying the <code>animation</code>
parameter.</p>
 * @param {Titanium.UI.ListSection/Titanium.UI.ListSection[]} section 
 * <p>Section or sections to add to the list.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListView.appendSection = function(section, animation){};

/**
 * @method deleteSectionAt
 * <p>Deletes an existing section.</p>
 * @description <p>On iOS, the section can be deleted with an animation by specifying the <code>animation</code> parameter.</p>
 * @param {Number} sectionIndex 
 * <p>Index of the section to delete.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListView.deleteSectionAt = function(sectionIndex, animation){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.ListView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.ListView.getBackgroundSelectedImage = function(){};

/**
 * @method getDefaultItemTemplate
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-defaultItemTemplate defaultItemTemplate} property.</p>
 * @return {String/Number} 
*/
Titanium.UI.ListView.getDefaultItemTemplate = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.ListView.getEnabled = function(){};

/**
 * @method getFooterTitle
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-footerTitle footerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.ListView.getFooterTitle = function(){};

/**
 * @method getHeaderTitle
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-headerTitle headerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.ListView.getHeaderTitle = function(){};

/**
 * @method getScrollIndicatorStyle
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-scrollIndicatorStyle scrollIndicatorStyle} property.</p>
 * @return {Number} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.ListView.getScrollIndicatorStyle = function(){};

/**
 * @method getSectionCount
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-sectionCount sectionCount} property.</p>
 * @return {Number} 
*/
Titanium.UI.ListView.getSectionCount = function(){};

/**
 * @method getSections
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-sections sections} property.</p>
 * @return {Titanium.UI.ListSection[]} 
*/
Titanium.UI.ListView.getSections = function(){};

/**
 * @method getShowVerticalScrollIndicator
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-showVerticalScrollIndicator showVerticalScrollIndicator} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.ListView.getShowVerticalScrollIndicator = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-style style} property.</p>
 * @return {Number} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.ListView.getStyle = function(){};

/**
 * @method getTemplates
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-templates templates} property.</p>
 * @return {Dictionary} 
*/
Titanium.UI.ListView.getTemplates = function(){};

/**
 * @method getWillScrollOnStatusTap
 * <p>Gets the value of the {@link Titanium.UI.ListView#property-willScrollOnStatusTap willScrollOnStatusTap} property.</p>
 * @return {Boolean} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.ListView.getWillScrollOnStatusTap = function(){};

/**
 * @method insertSectionAt
 * <p>Inserts a section or an array of sections at a specific index.</p>
 * @description <p>Existing sections at that index and after are pushed down.</p>
<p>On iOS, the section(s) may be inserted with an animation by setting the <code>animation</code> parameter.</p>
 * @param {Number} sectionIndex 
 * <p>Index of the section to insert before.</p>
 * @param {Titanium.UI.ListSection/Titanium.UI.ListSection[]} section 
 * <p>Section or sections to insert.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListView.insertSectionAt = function(sectionIndex, section, animation){};

/**
 * @method replaceSectionAt
 * <p>Replaces an existing section.</p>
 * @description <p>On iOS, the section may be replaced with an animation by setting the <code>animation</code> parameter.</p>
 * @param {Number} sectionIndex 
 * <p>Index of the section to update.</p>
 * @param {Titanium.UI.ListSection} section 
 * <p>section data to update.</p>
 * @param {ListViewAnimationProperties} animation 
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListView.replaceSectionAt = function(sectionIndex, section, animation){};

/**
 * @method scrollToItem
 * <p>Scrolls to a specific item.</p>
 * @description <p>On Android 4.x, the list does not stop at the correct position.
This is a known bug in Android.
(<a href="https://code.google.com/p/android/issues/detail?id=37278">Android Issue #37278</a>)</p>
 * @param {Number} sectionIndex 
 * <p>Section index.</p>
 * @param {Number} itemIndex 
 * <p>Item index.</p>
 * @param {ListViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.ListView.scrollToItem = function(sectionIndex, itemIndex, animation){};

/**
 * @method selectItem
 * <p>Selects an item in the list using the specified item and section indices.</p>
 * @param {Number} sectionIndex 
 * <p>Index of the section the item is in.</p>
 * @param {Number} itemIndex 
 * <p>Index of the item to select.</p>
 * @return void
 * @platform ipad 3.1
 * @platform iphone 3.1
*/
Titanium.UI.ListView.selectItem = function(sectionIndex, itemIndex){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.ListView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.ListView.setBackgroundSelectedImage = function(){};

/**
 * @method setDefaultItemTemplate
 * <p>Sets the value of the {@link Titanium.UI.ListView#property-defaultItemTemplate defaultItemTemplate} property.</p>
 * @param {String/Number} defaultItemTemplate 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ListView.setDefaultItemTemplate = function(defaultItemTemplate){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.ListView.setEnabled = function(){};

/**
 * @method setFooterTitle
 * <p>Sets the value of the {@link Titanium.UI.ListView#property-footerTitle footerTitle} property.</p>
 * @param {String} footerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ListView.setFooterTitle = function(footerTitle){};

/**
 * @method setHeaderTitle
 * <p>Sets the value of the {@link Titanium.UI.ListView#property-headerTitle headerTitle} property.</p>
 * @param {String} headerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ListView.setHeaderTitle = function(headerTitle){};

/**
 * @method setScrollIndicatorStyle
 * <p>Sets the value of the {@link Titanium.UI.ListView#property-scrollIndicatorStyle scrollIndicatorStyle} property.</p>
 * @param {Number} scrollIndicatorStyle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.ListView.setScrollIndicatorStyle = function(scrollIndicatorStyle){};

/**
 * @method setSections
 * <p>Sets the value of the {@link Titanium.UI.ListView#property-sections sections} property.</p>
 * @param {Titanium.UI.ListSection[]} sections 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ListView.setSections = function(sections){};

/**
 * @method setShowVerticalScrollIndicator
 * <p>Sets the value of the {@link Titanium.UI.ListView#property-showVerticalScrollIndicator showVerticalScrollIndicator} property.</p>
 * @param {Boolean} showVerticalScrollIndicator 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ListView.setShowVerticalScrollIndicator = function(showVerticalScrollIndicator){};

/**
 * @method setWillScrollOnStatusTap
 * <p>Sets the value of the {@link Titanium.UI.ListView#property-willScrollOnStatusTap willScrollOnStatusTap} property.</p>
 * @param {Boolean} willScrollOnStatusTap 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.ListView.setWillScrollOnStatusTap = function(willScrollOnStatusTap){};

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.ListView.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.ListView.backgroundSelectedImage = null;

/**
 * @property [defaultItemTemplate=Titanium.UI.LIST_ITEM_TEMPLATE_DEFAULT]
 * @type String/Number
 * <p>Sets the default template for list data items that do not specify the <code>template</code> property.</p>
 * @description <p>Can be set to any of the built-in templates or those defined in the <code>templates</code> property.</p>
<p>Can be changed dynamically.</p>
 */
Titanium.UI.ListView.defaultItemTemplate = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.ListView.enabled = null;

/**
 * @property footerTitle
 * @type String
 * <p>List view footer title.</p>
 */
Titanium.UI.ListView.footerTitle = null;

/**
 * @property headerTitle
 * @type String
 * <p>List view header title.</p>
 */
Titanium.UI.ListView.headerTitle = null;

/**
 * @property [scrollIndicatorStyle={@link Titanium.UI.iPhone.ScrollIndicatorStyle#property-DEFAULT}]
 * @type Number
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Style of the scrollbar, specified using one of the constants from
{@link Titanium.UI.iPhone.ScrollIndicatorStyle}.</p>
 */
Titanium.UI.ListView.scrollIndicatorStyle = null;

/**
 * @property sectionCount
 * @type Number
 * @readonly
 * <p>Number of sections in this list view.</p>
 */
Titanium.UI.ListView.sectionCount = null;

/**
 * @property sections
 * @type Titanium.UI.ListSection[]
 * <p>Sections of this list.</p>
 */
Titanium.UI.ListView.sections = null;

/**
 * @property [showVerticalScrollIndicator=true]
 * @type Boolean
 * <p>Determines whether this list view displays a vertical scroll indicator.</p>
 * @description <p>Set to <code>false</code> to hide the vertical scroll indicator.</p>
 */
Titanium.UI.ListView.showVerticalScrollIndicator = null;

/**
 * @property [style=Titanium.UI.iPhone.ListViewStyle.PLAIN]
 * @type Number
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @creationOnly
 * <p>Style of the list view, specified using one of the constants from
{@link Titanium.UI.iPhone.ListViewStyle}.</p>
 * @description <p>Style should always be set before setting the sections on list view.</p>
 */
Titanium.UI.ListView.style = null;

/**
 * @property templates
 * @type Dictionary
 * @creationOnly
 * <p>Contain key-value pairs mapping a style name (key) to an {@link ItemTemplate} (value).</p>
 * @description <p>This property cannot be changed once a window has been opened.</p>
 */
Titanium.UI.ListView.templates = null;

/**
 * @property [willScrollOnStatusTap=true]
 * @type Boolean
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Controls the scroll-to-top gesture.</p>
 * @description <p>If the user taps on the status bar, the view scrolls to the top.
This gesture works when you have a single visible list view.
If there are multiple list views, table views, web views, text areas, and/or scroll views visible,
you need to disable (set to <code>false</code>) this property on the views you <strong>DO NOT</strong> want to
enable this behavior for.  The remaining view responds to the scroll-to-top gesture.</p>
 */
Titanium.UI.ListView.willScrollOnStatusTap = null;

/**
 * @class Titanium.UI.MaskedImage
 * @typestr Object of Titanium.UI
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.UI.View
 * <p>A control that displays an image composited with a background image or color.</p>
 * @description <p>This is an iOS-specific control that can be used to display an image combined with 
another image and/or color. The layers are drawn in the following order:</p>
<ul>
<li>The <code>mask</code>, or background image.</li>
<li>The <code>image</code>, or foreground image.</li>
<li>The <code>tint</code>, or constant tint color.</li>
</ul>
<p>The way the layers are combined depends on the value of the <code>mode</code> property. 
The <code>mode</code> value can be set to one of the {@link Titanium.UI.iOS} <code>BLEND_MODE</code> constants. 
These constants correspond directly to the iOS blend modes described in the iOS developer 
library:</p>
<p><a href="http://developer.apple.com/library/ios/#documentation/GraphicsImaging/Reference/CGContext/Reference/reference.html#//apple_ref/c/tdef/CGBlendMode">"CGBlendMode" in CGContext Reference</a></p>
<p>and:</p>
<p><a href="http://developer.apple.com/library/ios/#documentation/GraphicsImaging/Conceptual/drawingwithquartz2d/dq_images/dq_images.html#//apple_ref/doc/uid/TP30001066-CH212-TPXREF101">"Using Blend Modes with Images" in Quartz2D
Reference</a></p>
<p>When compositing two images, the <code>mask</code> property specifies the background, or 
destination (D) image, and the <code>image</code> property specifies the foreground, or 
source (S) layer. For example, to use an image as an alpha mask for another image,
you could use the following code:</p>
<pre><code>var imageMask = Titanium.UI.createMaskedImage({
    mask : 'mask.png', // alpha mask
    image : 'demo_image.png', // image to mask
    mode : Titanium.UI.iOS.BLEND_MODE_SOURCE_OUT
});
</code></pre>
<p>Note that this legacy control lacks many of the features associated with a standard
{@link Titanium.UI.ImageView ImageView} control.</p>
<p>Use the {@link Titanium.UI#method-createMaskedImage} method to create a masked image view.</p>
 * <h3>Example</h3>
 * <h4>Luminosity Blend Mode</h4>
 * <p><p>The following code excerpt creates a monochrome version of the background image,
using the luminosity from the background image and the specified <code>tint</code> color:</p></p><pre>var imageMask = Titanium.UI.createMaskedImage({
    mask : 'demo_image.png', // background image
    tint: 'red',
    mode : Titanium.UI.iOS.BLEND_MODE_LUMINOSITY,
});</pre>
 */
Titanium.UI.MaskedImage = {};




/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.MaskedImage.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.MaskedImage.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.MaskedImage.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.MaskedImage.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.MaskedImage.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.MaskedImage.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.MaskedImage.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.MaskedImage.getFocusable = function(){};

/**
 * @method getImage
 * <p>Gets the value of the {@link Titanium.UI.MaskedImage#property-image image} property.</p>
 * @return {String} 
*/
Titanium.UI.MaskedImage.getImage = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.MaskedImage.getKeepScreenOn = function(){};

/**
 * @method getMask
 * <p>Gets the value of the {@link Titanium.UI.MaskedImage#property-mask mask} property.</p>
 * @return {String} 
*/
Titanium.UI.MaskedImage.getMask = function(){};

/**
 * @method getMode
 * <p>Gets the value of the {@link Titanium.UI.MaskedImage#property-mode mode} property.</p>
 * @return {Number} 
*/
Titanium.UI.MaskedImage.getMode = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.MaskedImage.getSoftKeyboardOnFocus = function(){};

/**
 * @method getTint
 * <p>Gets the value of the {@link Titanium.UI.MaskedImage#property-tint tint} property.</p>
 * @return {String} 
*/
Titanium.UI.MaskedImage.getTint = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.MaskedImage.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.MaskedImage.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.MaskedImage.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.MaskedImage.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.MaskedImage.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.MaskedImage.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.MaskedImage.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.MaskedImage.setFocusable = function(){};

/**
 * @method setImage
 * <p>Sets the value of the {@link Titanium.UI.MaskedImage#property-image image} property.</p>
 * @param {String} image 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.MaskedImage.setImage = function(image){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.MaskedImage.setKeepScreenOn = function(){};

/**
 * @method setMask
 * <p>Sets the value of the {@link Titanium.UI.MaskedImage#property-mask mask} property.</p>
 * @param {String} mask 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.MaskedImage.setMask = function(mask){};

/**
 * @method setMode
 * <p>Sets the value of the {@link Titanium.UI.MaskedImage#property-mode mode} property.</p>
 * @param {Number} mode 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.MaskedImage.setMode = function(mode){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.MaskedImage.setSoftKeyboardOnFocus = function(){};

/**
 * @method setTint
 * <p>Sets the value of the {@link Titanium.UI.MaskedImage#property-tint tint} property.</p>
 * @param {String} tint 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.MaskedImage.setTint = function(tint){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.MaskedImage.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.MaskedImage.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.MaskedImage.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.MaskedImage.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.MaskedImage.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.MaskedImage.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.MaskedImage.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.MaskedImage.focusable = null;

/**
 * @property image
 * @type String
 * <p>Image drawn as the Foreground image.</p>
 * @description <p>Specify a local file path.</p>
<p>Unlike the standard {@link Titanium.UI.ImageView ImageView}, images <strong>cannot</strong> be specified 
using a remote URL, {@link Titanium.Blob}, or {@link Titanium.Filesystem.File} object.</p>
 */
Titanium.UI.MaskedImage.image = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.MaskedImage.keepScreenOn = null;

/**
 * @property mask
 * @type String
 * <p>Image drawn as the background image.</p>
 * @description <p>Specify a local file path. </p>
<p>Unlike the standard {@link Titanium.UI.ImageView ImageView}, images <strong>cannot</strong> be specified 
using a remote URL, {@link Titanium.Blob}, or {@link Titanium.Filesystem.File} object.</p>
 */
Titanium.UI.MaskedImage.mask = null;

/**
 * @property [mode=Titanium.UI.iOS.BLEND_MODE_SOURCE_IN]
 * @type Number
 * <p>Blend mode to use to combine layers.</p>
 * @description <p>Specify one of the <code>BLEND_MODE</code> constants from {@link Titanium.UI.iOS}</p>
 */
Titanium.UI.MaskedImage.mode = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.MaskedImage.softKeyboardOnFocus = null;

/**
 * @property tint
 * @type String
 * <p>Color to combine with the image, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.MaskedImage.tint = null;

/**
 * @class Titanium.UI.MobileWeb
 * @typestr Submodule of Titanium.UI
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The UI capabilities specific to Mobile Web. All events, methods and properties in this namespace 
will only work on this platform.</p>
 */
Titanium.UI.MobileWeb = {};

/**
 * @class Titanium.UI.MobileWeb.NavigationGroup
 * @typestr Object of Titanium.UI.MobileWeb
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A Navigation Group implements a specialized view that manages the navigation of hierarchical 
content.</p>
 * @description <p>The navigation group is created with the method {@link Titanium.UI.MobileWeb#method-createNavigationGroup}.
The <code>window</code> property must be set initially in the constructor when creating a navigation group.
All navigation groups must have a root window that cannot be removed.</p>
 * <h3>Examples</h3>
 * <h4>Simple Navigation Group</h4>
 * <p><p>Creates a navigation group with the first window colored red.
Press the button to open the blue window.
Use the back button to return to the red root window.</p></p><pre>var win1 = Titanium.UI.createWindow();

var win2 = Titanium.UI.createWindow({
    backgroundColor: 'red',
    title: 'Red Window'
});

var win3 = Titanium.UI.createWindow({
    backgroundColor: 'blue',
    title: 'Blue Window'
});

var button = Titanium.UI.createButton({
    title: 'Open Blue Window'
});
button.addEventListener('click', function(){
    nav.open(win3, {animated:true});
});

var nav = Titanium.UI.MobileWeb.createNavigationGroup({
   window: win2
});

win2.add(button);
win1.add(nav);
win1.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as two Alloy views.</p>
<p>navgroup.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window&gt;
        &lt;NavigationGroup id="nav" platform="mobileweb"&gt;
            &lt;Window id="win2" title="Red Window" backgroundColor="red"&gt;
                &lt;Button title="Open Blue Window" onClick="openBlueWindow"&gt;
            &lt;/Window&gt;
        &lt;/NavigationGroup&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>navgroup.js:</p></p><pre>function openBlueWindow(){
    var win3 = Alloy.createController('bluewindow').getView();
    $.nav.open(win3, {animated : true});
}
</pre>
 * <p><p>bluewindow.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window title="Blue Window" backgroundColor="blue" /&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.MobileWeb.NavigationGroup = {};






/**
 * @method close
 * <p>Closes a window and removes it from the navigation group.</p>
 * @param {Titanium.UI.Window} window 
 * <p>Window to close.</p>
 * @param {Dictionary} options 
 * <p>Options supporting a single <code>animated</code> boolean property to determine whether the window 
will be animated (default) while being closed.</p>
 * @return void
*/
Titanium.UI.MobileWeb.NavigationGroup.close = function(window, options){};

/**
 * @method getAccessibilityHidden 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getAccessibilityHidden = function(){};

/**
 * @method getAccessibilityHint 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getAccessibilityHint = function(){};

/**
 * @method getAccessibilityLabel 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getAccessibilityLabel = function(){};

/**
 * @method getAccessibilityValue 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getAccessibilityValue = function(){};

/**
 * @method getAnchorPoint 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getAnchorPoint = function(){};

/**
 * @method getAnimatedCenter 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getAnimatedCenter = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundLeftCap 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBackgroundLeftCap = function(){};

/**
 * @method getBackgroundRepeat 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBackgroundRepeat = function(){};

/**
 * @method getBackgroundTopCap 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBackgroundTopCap = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getBubbleParent = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.getKeepScreenOn = function(){};

/**
 * @method getNavBarAtTop
 * <p>Gets the value of the {@link Titanium.UI.MobileWeb.NavigationGroup#property-navBarAtTop navBarAtTop} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.MobileWeb.NavigationGroup.getNavBarAtTop = function(){};

/**
 * @method getWindow
 * <p>Gets the value of the {@link Titanium.UI.MobileWeb.NavigationGroup#property-window window} property.</p>
 * @return {Titanium.UI.Window} 
*/
Titanium.UI.MobileWeb.NavigationGroup.getWindow = function(){};

/**
 * @method open
 * <p>Opens a window within the navigation group.</p>
 * @param {Titanium.UI.Window} window 
 * <p>Window to open.</p>
 * @param {Dictionary} options 
 * <p>Options supporting a single <code>animated</code> boolean property to determine whether the window 
will be animated (default) while being closed.</p>
 * @return void
*/
Titanium.UI.MobileWeb.NavigationGroup.open = function(window, options){};

/**
 * @method removeAllChildren 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.removeAllChildren = function(){};

/**
 * @method setAccessibilityHidden 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setAccessibilityHidden = function(){};

/**
 * @method setAccessibilityHint 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setAccessibilityHint = function(){};

/**
 * @method setAccessibilityLabel 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setAccessibilityLabel = function(){};

/**
 * @method setAccessibilityValue 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setAccessibilityValue = function(){};

/**
 * @method setAnchorPoint 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setAnchorPoint = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundLeftCap 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBackgroundLeftCap = function(){};

/**
 * @method setBackgroundRepeat 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBackgroundRepeat = function(){};

/**
 * @method setBackgroundTopCap 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBackgroundTopCap = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setBubbleParent = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setFocusable = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.setKeepScreenOn = function(){};

/**
 * @method setNavBarAtTop
 * <p>Sets the value of the {@link Titanium.UI.MobileWeb.NavigationGroup#property-navBarAtTop navBarAtTop} property.</p>
 * @param {Boolean} navBarAtTop 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.MobileWeb.NavigationGroup.setNavBarAtTop = function(navBarAtTop){};

/**
 * @property accessibilityHidden 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.accessibilityHidden = null;

/**
 * @property accessibilityHint 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.accessibilityHint = null;

/**
 * @property accessibilityLabel 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.accessibilityLabel = null;

/**
 * @property accessibilityValue 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.accessibilityValue = null;

/**
 * @property anchorPoint 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.anchorPoint = null;

/**
 * @property animatedCenter 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.animatedCenter = null;

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.backgroundFocusedImage = null;

/**
 * @property backgroundLeftCap 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.backgroundLeftCap = null;

/**
 * @property backgroundRepeat 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.backgroundRepeat = null;

/**
 * @property backgroundTopCap 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.backgroundTopCap = null;

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.bubbleParent = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.MobileWeb.NavigationGroup.keepScreenOn = null;

/**
 * @property [navBarAtTop=true]
 * @type Boolean
 * <p>Specifies whether the navigation should be at the top of the screen or the bottom of the screen.</p>
 */
Titanium.UI.MobileWeb.NavigationGroup.navBarAtTop = null;

/**
 * @property window
 * @type Titanium.UI.Window
 * @creationOnly
 * <p>Root window to add to this navigation group.</p>
 */
Titanium.UI.MobileWeb.NavigationGroup.window = null;

/**
 * @class Titanium.UI.MobileWeb.TableViewSeparatorStyle
 * @typestr Object of Titanium.UI.MobileWeb
 * @platform mobileweb 1.8.1
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A set of constants for the style that can be used for the <code>separatorStyle</code> property of 
{@link Titanium.UI.TableView}.</p>
 */
Titanium.UI.MobileWeb.TableViewSeparatorStyle = {};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.TableViewSeparatorStyle.getBubbleParent = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.TableViewSeparatorStyle.setBubbleParent = function(){};

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>The separator cell has no distinct style.</p>
 */
Titanium.UI.MobileWeb.TableViewSeparatorStyle.NONE = null;

/**
 * @property SINGLE_LINE
 * @type Number
 * @readonly
 * <p>The separator cell has a single line running across its width (default.)</p>
 */
Titanium.UI.MobileWeb.TableViewSeparatorStyle.SINGLE_LINE = null;

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.TableViewSeparatorStyle.bubbleParent = null;

/**
 * @method createNavigationGroup
 * <p>Creates and returns an instance of {@link Titanium.UI.MobileWeb.NavigationGroup}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.MobileWeb.NavigationGroup} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.MobileWeb.NavigationGroup} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.MobileWeb.createNavigationGroup = function(parameters){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.getBubbleParent = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.setBubbleParent = function(){};

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.MobileWeb.bubbleParent = null;

/**
 * @class Titanium.UI.Notification
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @extends Titanium.UI.View
 * <p>An Android Toast-style notification.</p>
 * @description <p>A Toast notification is an unobtrusive, pop-up notification that doesn't 
block the UI. Use the {@link Titanium.UI#method-createNotification} method to create a Toast notification.</p>
<p>By default, a Toast notification appears centered on the bottom half of the screen.</p>
<p>This object will be moved to the Android namespace in a future release.</p>
 * <h3>Examples</h3>
 * <h4>Simple Toast Notification</h4>
 * <p><p>The simplest use case is also the most common.</p></p><pre>var toast = Ti.UI.createNotification({
    message:"Please Stand By",
    duration: Ti.UI.NOTIFICATION_DURATION_LONG
});
toast.show();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>index.xml</p></p><pre>&lt;Alloy&gt;
    &lt;Window&gt;
        &lt;Notification id="toast" platform="android" message="Please Stand By" duration="Ti.UI.NOTIFICATION_DURATION_LONG" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>index.js</p></p><pre>$.index.open();
$.toast.show();</pre>
 */
Titanium.UI.Notification = {};


/**
 * @method getAnchorPoint 
 * @hide
*/Titanium.UI.Notification.getAnchorPoint = function(){};

/**
 * @method getBackgroundLeftCap 
 * @hide
*/Titanium.UI.Notification.getBackgroundLeftCap = function(){};

/**
 * @method getBackgroundTopCap 
 * @hide
*/Titanium.UI.Notification.getBackgroundTopCap = function(){};

/**
 * @method getDuration
 * <p>Gets the value of the {@link Titanium.UI.Notification#property-duration duration} property.</p>
 * @return {Number} 
*/
Titanium.UI.Notification.getDuration = function(){};

/**
 * @method getHorizontalMargin
 * <p>Gets the value of the {@link Titanium.UI.Notification#property-horizontalMargin horizontalMargin} property.</p>
 * @return {Number} 
*/
Titanium.UI.Notification.getHorizontalMargin = function(){};

/**
 * @method getMessage
 * <p>Gets the value of the {@link Titanium.UI.Notification#property-message message} property.</p>
 * @return {String} 
*/
Titanium.UI.Notification.getMessage = function(){};

/**
 * @method getVerticalMargin
 * <p>Gets the value of the {@link Titanium.UI.Notification#property-verticalMargin verticalMargin} property.</p>
 * @return {Number} 
*/
Titanium.UI.Notification.getVerticalMargin = function(){};

/**
 * @method getXOffset
 * <p>Gets the value of the {@link Titanium.UI.Notification#property-xOffset xOffset} property.</p>
 * @return {Number} 
*/
Titanium.UI.Notification.getXOffset = function(){};

/**
 * @method getYOffset
 * <p>Gets the value of the {@link Titanium.UI.Notification#property-yOffset yOffset} property.</p>
 * @return {Number} 
*/
Titanium.UI.Notification.getYOffset = function(){};

/**
 * @method setAnchorPoint 
 * @hide
*/Titanium.UI.Notification.setAnchorPoint = function(){};

/**
 * @method setBackgroundLeftCap 
 * @hide
*/Titanium.UI.Notification.setBackgroundLeftCap = function(){};

/**
 * @method setBackgroundTopCap 
 * @hide
*/Titanium.UI.Notification.setBackgroundTopCap = function(){};

/**
 * @method setDuration
 * <p>Sets the value of the {@link Titanium.UI.Notification#property-duration duration} property.</p>
 * @param {Number} duration 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Notification.setDuration = function(duration){};

/**
 * @method setHorizontalMargin
 * <p>Sets the value of the {@link Titanium.UI.Notification#property-horizontalMargin horizontalMargin} property.</p>
 * @param {Number} horizontalMargin 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Notification.setHorizontalMargin = function(horizontalMargin){};

/**
 * @method setMessage
 * <p>Sets the value of the {@link Titanium.UI.Notification#property-message message} property.</p>
 * @param {String} message 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Notification.setMessage = function(message){};

/**
 * @method setVerticalMargin
 * <p>Sets the value of the {@link Titanium.UI.Notification#property-verticalMargin verticalMargin} property.</p>
 * @param {Number} verticalMargin 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Notification.setVerticalMargin = function(verticalMargin){};

/**
 * @method setXOffset
 * <p>Sets the value of the {@link Titanium.UI.Notification#property-xOffset xOffset} property.</p>
 * @param {Number} xOffset 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Notification.setXOffset = function(xOffset){};

/**
 * @method setYOffset
 * <p>Sets the value of the {@link Titanium.UI.Notification#property-yOffset yOffset} property.</p>
 * @param {Number} yOffset 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Notification.setYOffset = function(yOffset){};

/**
 * @method show
 * <p>Show the notification.</p>
 * @return void
*/
Titanium.UI.Notification.show = function(){};

/**
 * @property anchorPoint 
 * @hide
*/Titanium.UI.Notification.anchorPoint = null;

/**
 * @property backgroundLeftCap 
 * @hide
*/Titanium.UI.Notification.backgroundLeftCap = null;

/**
 * @property backgroundTopCap 
 * @hide
*/Titanium.UI.Notification.backgroundTopCap = null;

/**
 * @property [duration={@link Titanium.UI#property-NOTIFICATION_DURATION_SHORT}]
 * @type Number
 * <p>Determines how long the notification stays on screen.</p>
 * @description <p>Specify either {@link Titanium.UI#property-NOTIFICATION_DURATION_SHORT NOTIFICATION_DURATION_SHORT} or 
{@link Titanium.UI#property-NOTIFICATION_DURATION_LONG NOTIFICATION_DURATION_LONG}.</p>
 */
Titanium.UI.Notification.duration = null;

/**
 * @property [horizontalMargin=0]
 * @type Number
 * <p>Horizontal placement of the notification, <em>as a fraction of the screen width</em>.</p>
 * @description <p>Useful values range from -0.5 (far left) to 0.5 (far right). A value of zero indicates default placement.</p>
 */
Titanium.UI.Notification.horizontalMargin = null;

/**
 * @property message
 * @type String
 * <p>Notification text to display.</p>
 */
Titanium.UI.Notification.message = null;

/**
 * @property [verticalMargin=0]
 * @type Number
 * <p>Vertical placement of the notifcation, <em>as a fraction of the screen height</em>.</p>
 * @description <p>Useful values range from -0.5 (top) to 0.5 (bottom). A value of zero indicates default placement.</p>
 */
Titanium.UI.Notification.verticalMargin = null;

/**
 * @property [xOffset=0]
 * @type Number
 * <p>X offset from the default position, in pixels.</p>
 */
Titanium.UI.Notification.xOffset = null;

/**
 * @property [yOffset=0]
 * @type Number
 * <p>Y offset from the default position, in pixels.</p>
 */
Titanium.UI.Notification.yOffset = null;

/**
 * @class Titanium.UI.OptionDialog
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An option dialog is a modal view that includes a message and one or more option items positioned 
in the middle of the display on Android and at the bottom edge on iOS. On Android, buttons may 
be added below the options.</p>
 * @description <p>An option dialog is created using {@link Titanium.UI#method-createOptionDialog}.</p>
<p>This dialog is considerably different on each platform, as described below.</p>
<h4>Android</h4>
<p>On Android, this dialog is shown in the middle of the display (not touching the edges), 
with the option items represented in a picker. The previously-selected, or default, item can be 
set on creation.</p>
<p>Buttons below the picker may be optionally defined. The <code>click</code> event returns a Boolean value 
to indicate whether either an option item or a button was clicked.</p>
<h4>iOS</h4>
<p>The <code>destructive</code> property may be set for an item, to give a visual cue that selecting it 
results in an irreversible action.</p>
<p>On iOS 4, option dialogs are automatically cancelled when the application is paused/suspended.</p>
<h5>iPhone</h5>
<p>On iPhone, this dialog is shown at the bottom edge of the display, with the option items 
represented as vertical buttons. </p>
<h5>iPad</h5>
<p>On iPad, this dialog is shown in the middle of the display, or as a popover-like dialog if 
another view or control is specified via an argument.</p>
<p>Note that on iPad, the cancel button is not displayed -- users can cancel the dialog
by clicking outside of the dialog.</p>
<h4>Caveats</h4>
<p>Care should be taken not to define any properties that are not documented, as this may produce 
unexpected results. For example, setting a <code>message</code> property will prevent the picker of option 
items from being displayed on Android.</p>
 * <h3>Examples</h3>
 * <h4>Dialog with 3 Options</h4>
 * <pre>
Ti.UI.setBackgroundColor('white');
var win = Ti.UI.createWindow({
  title: 'Click window to test',
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false
});

var opts = {
  cancel: 2,
  options: ['Confirm', 'Help', 'Cancel'],
  selectedIndex: 2,
  destructive: 0,
  title: 'Delete File?'
};

win.addEventListener('click', function(e){
  var dialog = Ti.UI.createOptionDialog(opts).show();
});
win.open();</pre>
 * <h4>Dialog with 2 Options and 1 Button on Android and 3 Options on iOS</h4>
 * <pre>
Ti.UI.setBackgroundColor('white');
  var win = Ti.UI.createWindow({
  title: 'Click window to test',
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false
});

var opts = {
  title: 'Delete File?'
};

var isAndroid = Ti.Platform.osname == 'android';

if(isAndroid){
  opts.options = ['Confirm', 'Cancel'];
  opts.buttonNames = ['Confirm'];
} else {
  opts.options = ['Confirm', 'Help', 'Cancel'];
}

win.addEventListener('click', function(e){
  var dialog = Ti.UI.createOptionDialog(opts).show();
});
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>optiondialog.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" onClick="showOptions" title="Click window to test"
        fullscreen="false" onExit="true" backgroundColor="white"&gt;

        &lt;!--
            The OptionDialog tag declares an option dialog,
            which will need to be opened by the controller.
        --&gt;
        &lt;OptionDialog id="dialog" title="Delete File?"&gt;

            &lt;!-- The Options tag sets the options property. --&gt;
            &lt;Options&gt;
                &lt;Option&gt;Confirm&lt;/Option&gt;
                &lt;Option platform="ios"&gt;Help&lt;/Option&gt;
                &lt;Option&gt;Cancel&lt;/Option&gt;
            &lt;/Options&gt;

            &lt;!-- The ButtonNames tag sets the Android-only buttonNames property. --&gt;
            &lt;ButtonNames&gt;
                &lt;ButtonName&gt;Confirm&lt;/ButtonName&gt;
            &lt;/ButtonNames&gt;

            &lt;!-- Add a View for the androidView property here. --&gt;

        &lt;/OptionDialog&gt;

        &lt;!-- Add views here --&gt;

    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>optiondialog.js:</p></p><pre>function showOptions(){
    $.dialog.show();
}</pre>
 */
Titanium.UI.OptionDialog = {};


/**
 * @method getAndroidView
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-androidView androidView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform android 0.8
*/
Titanium.UI.OptionDialog.getAndroidView = function(){};

/**
 * @method getCancel
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-cancel cancel} property.</p>
 * @return {Number} 
*/
Titanium.UI.OptionDialog.getCancel = function(){};

/**
 * @method getDestructive
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-destructive destructive} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.OptionDialog.getDestructive = function(){};

/**
 * @method getOptions
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-options options} property.</p>
 * @return {String[]} 
*/
Titanium.UI.OptionDialog.getOptions = function(){};

/**
 * @method getPersistent
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-persistent persistent} property.</p>
 * @return {Boolean} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.OptionDialog.getPersistent = function(){};

/**
 * @method getSelectedIndex
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-selectedIndex selectedIndex} property.</p>
 * @return {Number} 
 * @platform android 0.8
*/
Titanium.UI.OptionDialog.getSelectedIndex = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.OptionDialog.getTitle = function(){};

/**
 * @method getTitleid
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-titleid titleid} property.</p>
 * @return {String} 
*/
Titanium.UI.OptionDialog.getTitleid = function(){};

/**
 * @method getTizenView
 * <p>Gets the value of the {@link Titanium.UI.OptionDialog#property-tizenView tizenView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform tizen 3.1
*/
Titanium.UI.OptionDialog.getTizenView = function(){};

/**
 * @method hide
 * <p>Hides this dialog.</p>
 * @description <p>This triggers a <code>click</code> event as if cancel was invoked.</p>
 * @param {hideParams} params (optional)
 * <p>Argument containing parameters for this method. Only used on iOS.</p>
 * @return void
*/
Titanium.UI.OptionDialog.hide = function(params){};

/**
 * @method setAndroidView
 * <p>Sets the value of the {@link Titanium.UI.OptionDialog#property-androidView androidView} property.</p>
 * @param {Titanium.UI.View} androidView 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.OptionDialog.setAndroidView = function(androidView){};

/**
 * @method setCancel
 * <p>Sets the value of the {@link Titanium.UI.OptionDialog#property-cancel cancel} property.</p>
 * @param {Number} cancel 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.OptionDialog.setCancel = function(cancel){};

/**
 * @method setPersistent
 * <p>Sets the value of the {@link Titanium.UI.OptionDialog#property-persistent persistent} property.</p>
 * @param {Boolean} persistent 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.OptionDialog.setPersistent = function(persistent){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.OptionDialog#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.OptionDialog.setTitle = function(title){};

/**
 * @method setTitleid
 * <p>Sets the value of the {@link Titanium.UI.OptionDialog#property-titleid titleid} property.</p>
 * @param {String} titleid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.OptionDialog.setTitleid = function(titleid){};

/**
 * @method setTizenView
 * <p>Sets the value of the {@link Titanium.UI.OptionDialog#property-tizenView tizenView} property.</p>
 * @param {Titanium.UI.View} tizenView 
 * <p>New value for the property.</p>
 * @return void
 * @platform tizen 3.1
*/
Titanium.UI.OptionDialog.setTizenView = function(tizenView){};

/**
 * @method show
 * <p>Shows this dialog.</p>
 * @description <p>On iPad, this dialog is shown in the middle of the display or, when specified via the 
<code>params</code> argument, as a popover-like dialog attached to another view or control.</p>
 * @param {showParams} params (optional)
 * <p>Argument containing parameters for this method. Only used on iPad.</p>
 * @return void
*/
Titanium.UI.OptionDialog.show = function(params){};

/**
 * @property androidView
 * @type Titanium.UI.View
 * @platform android 0.8
 * <p>View to load inside the message area, to create a custom layout.</p>
 */
Titanium.UI.OptionDialog.androidView = null;

/**
 * @property [cancel=undefined (Android), -1 (iOS, Mobile Web, Tizen)]
 * @type Number
 * <p>Index to define the cancel option.</p>
 * @description <p>On iOS, set to <code>-1</code> to disable the cancel option.</p>
<p>On iPad, the <code>cancel</code> option must be set to either <code>-1</code> or the index of the last 
option. For example, if there are 3 options and one of them is a cancel button,
the cancel button must be the last option (index 2).  If <code>cancel</code> is set to a 
different value, <em>the last entry in the {@link Titanium.UI.OptionDialog#property-options options} 
array <strong>is not displayed</strong>.</em></p>
<p>Note that the cancel button is never shown on iPad, since the user can cancel the 
dialog by clicking outside of the dialog. </p>
 */
Titanium.UI.OptionDialog.cancel = null;

/**
 * @property [destructive=-1]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @creationOnly
 * <p>Index to define the destructive option, indicated by a visual cue when rendered.</p>
 */
Titanium.UI.OptionDialog.destructive = null;

/**
 * @property options
 * @type String[]
 * @creationOnly
 * <p>List of option names.</p>
 */
Titanium.UI.OptionDialog.options = null;

/**
 * @property [persistent=true]
 * @type Boolean
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Boolean value indicating if the option dialog should only be cancelled by user gesture or by hide method.</p>
 * @description <p>This property is useful to ensure that the option dialog will not be ignored 
by the user when the application is paused/suspended.</p>
 */
Titanium.UI.OptionDialog.persistent = null;

/**
 * @property selectedIndex
 * @type Number
 * @platform android 0.8
 * @creationOnly
 * <p>Defines the default selected option.</p>
 */
Titanium.UI.OptionDialog.selectedIndex = null;

/**
 * @property title
 * @type String
 * <p>Title of the dialog.</p>
 */
Titanium.UI.OptionDialog.title = null;

/**
 * @property titleid
 * @type String
 * <p>Key identifying a string in the locale file to use for the title text.</p>
 */
Titanium.UI.OptionDialog.titleid = null;

/**
 * @property tizenView
 * @type Titanium.UI.View
 * @platform tizen 3.1
 * <p>View to load inside the message area, to create a custom layout.</p>
 */
Titanium.UI.OptionDialog.tizenView = null;

/**
 * @class Titanium.UI.Picker
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A control used to select one or more fixed values.</p>
 * @description <p>Use the {@link Titanium.UI#method-createPicker} method to create a picker control.</p>
<p>On Android, the <code>useSpinner</code> property must be enabled to support multiple columns.
By default, the spinner is automatically sized to fit its content and can overflow
to additional spinner rows. The size of the picker can be adjusted with the <code>width</code>
and <code>height</code> properties, but may omit picker columns or cut off picker rows
if the size is set too small.</p>
<p>On iOS, by default, the size of the picker, including its background, is fixed at the
same size as the iPhone keyboard to respect the
<a href="https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/UIElementGuidelines/UIElementGuidelines.html#//apple_ref/doc/uid/TP40006556-CH13-SW23">iOS Human Interface Guidelines</a>.
The size of the picker should not be modified.
The contents of the picker are sized to fit the picker, which may cut off text
in the picker rows. Adding views to picker rows is also supported on iOS.</p>
<p>On iPad, Apple recommends using a picker only in a popover.  Since the size of the picker
cannot be adjusted, it is not suitable for the main screen.</p>
<p>On Mobile Web and Tizen, by default, the picker fills the entire view it is contained in
but is adjustable using the <code>width</code> and <code>height</code> properties.</p>
 * <h3>Examples</h3>
 * <h4>Basic Single Column Picker</h4>
 * <p><p>Create a one-column, platform-specific style, picker and automatically select a row.</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow({
  exitOnClose: true,
  layout: 'vertical'
});

var picker = Ti.UI.createPicker({
  top:50
});

var data = [];
data[0]=Ti.UI.createPickerRow({title:'Bananas'});
data[1]=Ti.UI.createPickerRow({title:'Strawberries'});
data[2]=Ti.UI.createPickerRow({title:'Mangos'});
data[3]=Ti.UI.createPickerRow({title:'Grapes'});

picker.add(data);
picker.selectionIndicator = true;

win.add(picker);
win.open();

// must be after picker has been displayed
picker.setSelectedRow(0, 2, false); // select Mangos
</pre>
 * <h4>Multi-Column Picker</h4>
 * <p><p>Create a two-column, platform-specific style, picker and automatically select a row in 
each column.</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow({
  exitOnClose: true,
  layout: 'vertical'
});

var picker = Ti.UI.createPicker({
  top:50,
  useSpinner: true
});
picker.selectionIndicator = true;

var fruit = [ 'Bananas', 'Strawberries', 'Mangos', 'Grapes' ];
var color = [ 'red', 'green', 'blue', 'orange' ];

var column1 = Ti.UI.createPickerColumn();

for(var i=0, ilen=fruit.length; i&lt;ilen; i++){
  var row = Ti.UI.createPickerRow({
    title: fruit[i]
  });
  column1.addRow(row);
}

var column2 = Ti.UI.createPickerColumn();

for(var i=0, ilen=color.length; i&lt;ilen; i++){
  var row = Ti.UI.createPickerRow({ title: color[i] });
  column2.addRow(row);
}

picker.add([column1,column2]);

win.add(picker);

win.open();

// must be after picker has been displayed
picker.setSelectedRow(0, 2, false); // select Mangos
picker.setSelectedRow(1, 3, false); // select Orange
</pre>
 * <h4>Date Picker</h4>
 * <p><p>Create a date picker and handle the subsequent user action.</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow({
  exitOnClose: true,
  layout: 'vertical'
});

var picker = Ti.UI.createPicker({
  type:Ti.UI.PICKER_TYPE_DATE,
  minDate:new Date(2009,0,1),
  maxDate:new Date(2014,11,31),
  value:new Date(2014,3,12),
  top:50
});

win.add(picker);
win.open();

picker.addEventListener('change',function(e){
  Ti.API.info("User selected date: " + e.value.toLocaleString());
});
</pre>
 * <h4>Date Picker using showDatePickerDialog() (Android only)</h4>
 * <p><p>Create a date picker that is automatically displayed as a modal dialog and handle the 
subsequent user action.</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow({
  exitOnClose: true,
  layout: 'vertical'
});

var picker = Ti.UI.createPicker({
  type:Ti.UI.PICKER_TYPE_DATE,
  minDate:new Date(2009,0,1),
  maxDate:new Date(2014,11,31),
  value:new Date(2014,3,12)
});

win.open();

picker.showDatePickerDialog({
  value: new Date(2010,8,1),
  callback: function(e) {
    if (e.cancel) {
      Ti.API.info('User canceled dialog');
    } else {
      Ti.API.info('User selected date: ' + e.value);
    }
  }
});
</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous multi-column picker example as an Alloy view.</p>
<p>multicolumnpicker.xml</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white" layout="vertical" exitOnClose="true"&gt;
        &lt;Picker id="picker" top="50" selectionIndicator="true" useSpinner="true"&gt;
            &lt;PickerColumn id="column1"&gt;
                &lt;PickerRow title="Bananas"/&gt;
                &lt;PickerRow title="Strawberries"/&gt;
                &lt;PickerRow title="Mangos"/&gt;
                &lt;PickerRow title="Grapes"/&gt;
            &lt;/PickerColumn&gt;
            &lt;!-- Picker shorthand notation --&gt;
            &lt;Column id="column2"&gt;
                &lt;Row title="red"/&gt;
                &lt;Row title="green"/&gt;
                &lt;Row title="blue"/&gt;
                &lt;Row title="orange"/&gt;
            &lt;/Column&gt;
        &lt;/Picker&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>multicolumnpicker.js:</p></p><pre>$.picker.setSelectedRow(0, 2, false);
$.picker.setSelectedRow(1, 3, false);</pre>
 */
Titanium.UI.Picker = {};



/**
 * @method add
 * <p>Adds rows or columns to the picker.</p>
 * @param {Titanium.UI.PickerRow[]/Titanium.UI.PickerRow/Titanium.UI.PickerColumn[]/Titanium.UI.PickerColumn} data 
 * <p>A row, set of rows, a column of rows or a set of columns of rows. When this method is 
used to add a row or set of rows, a single-column picker is created.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.add = function(data){};

/**
 * @method getColumns
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-columns columns} property.</p>
 * @return {Titanium.UI.PickerColumn[]} 
*/
Titanium.UI.Picker.getColumns = function(){};

/**
 * @method getCountDownDuration
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-countDownDuration countDownDuration} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.getCountDownDuration = function(){};

/**
 * @method getFormat24
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-format24 format24} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.UI.Picker.getFormat24 = function(){};

/**
 * @method getLocale
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-locale locale} property.</p>
 * @return {String} 
 * @platform android 0.8
*/
Titanium.UI.Picker.getLocale = function(){};

/**
 * @method getMaxDate
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-maxDate maxDate} property.</p>
 * @return {Date} 
*/
Titanium.UI.Picker.getMaxDate = function(){};

/**
 * @method getMinDate
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-minDate minDate} property.</p>
 * @return {Date} 
*/
Titanium.UI.Picker.getMinDate = function(){};

/**
 * @method getMinuteInterval
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-minuteInterval minuteInterval} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.getMinuteInterval = function(){};

/**
 * @method getSelectedRow
 * <p>Gets the selected row for a column, or <code>null</code> if none exists.</p>
 * @param {Number} index 
 * <p>A column index.</p>
 * @return {Titanium.UI.PickerRow} 
*/
Titanium.UI.Picker.getSelectedRow = function(index){};

/**
 * @method getSelectionIndicator
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-selectionIndicator selectionIndicator} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.getSelectionIndicator = function(){};

/**
 * @method getType
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-type type} property.</p>
 * @return {Number} 
*/
Titanium.UI.Picker.getType = function(){};

/**
 * @method getUseSpinner
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-useSpinner useSpinner} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.UI.Picker.getUseSpinner = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-value value} property.</p>
 * @return {Date} 
*/
Titanium.UI.Picker.getValue = function(){};

/**
 * @method getVisibleItems
 * <p>Gets the value of the {@link Titanium.UI.Picker#property-visibleItems visibleItems} property.</p>
 * @return {Number} 
 * @platform android 0.8
*/
Titanium.UI.Picker.getVisibleItems = function(){};

/**
 * @method reloadColumn
 * <p>Repopulates values for a column.</p>
 * @param {Titanium.UI.PickerColumn} column 
 * <p>Column to repopulate.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.reloadColumn = function(column){};

/**
 * @method setColumns
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-columns columns} property.</p>
 * @param {Titanium.UI.PickerColumn[]} columns 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Picker.setColumns = function(columns){};

/**
 * @method setCountDownDuration
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-countDownDuration countDownDuration} property.</p>
 * @param {Number} countDownDuration 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.setCountDownDuration = function(countDownDuration){};

/**
 * @method setFormat24
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-format24 format24} property.</p>
 * @param {Boolean} format24 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Picker.setFormat24 = function(format24){};

/**
 * @method setLocale
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-locale locale} property.</p>
 * @param {String} locale 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Picker.setLocale = function(locale){};

/**
 * @method setMaxDate
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-maxDate maxDate} property.</p>
 * @param {Date} maxDate 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Picker.setMaxDate = function(maxDate){};

/**
 * @method setMinDate
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-minDate minDate} property.</p>
 * @param {Date} minDate 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Picker.setMinDate = function(minDate){};

/**
 * @method setMinuteInterval
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-minuteInterval minuteInterval} property.</p>
 * @param {Number} minuteInterval 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.setMinuteInterval = function(minuteInterval){};

/**
 * @method setSelectedRow
 * <p>Selects a column's row.</p>
 * @description <p>On iOS, this method must be called after the picker is rendered.</p>
 * @param {Number} column 
 * <p>A column index.</p>
 * @param {Number} row 
 * <p>A row index.</p>
 * @param {Boolean} [animated=True] (optional)
 * <p>Determines whether the selection should be animated. (iPhone, iPad-only)</p>
 * @return void
*/
Titanium.UI.Picker.setSelectedRow = function(column, row, arg){};

/**
 * @method setSelectionIndicator
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-selectionIndicator selectionIndicator} property.</p>
 * @param {Boolean} selectionIndicator 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.setSelectionIndicator = function(selectionIndicator){};

/**
 * @method setType
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-type type} property.</p>
 * @param {Number} type 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Picker.setType = function(type){};

/**
 * @method setUseSpinner
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-useSpinner useSpinner} property.</p>
 * @param {Boolean} useSpinner 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Picker.setUseSpinner = function(useSpinner){};

/**
 * @method setValue
 * <p>Sets the date and time value property for Date pickers.</p>
 * @description <p>Applicable to the {@link Titanium.UI#property-PICKER_TYPE_DATE} and {@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} 
picker types.</p>
 * @param {Object} date 
 * <p>A Javascript <code>Date</code> object.</p>
 * @param {Boolean} [suppressEvent=True] 
 * <p>Determines whether a <code>change</code> event is fired.</p>
 * @return {Titanium.UI.PickerRow} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Picker.setValue = function(date, arg){};

/**
 * @method setVisibleItems
 * <p>Sets the value of the {@link Titanium.UI.Picker#property-visibleItems visibleItems} property.</p>
 * @param {Number} visibleItems 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Picker.setVisibleItems = function(visibleItems){};

/**
 * @method showDatePickerDialog
 * <p>Shows Date picker as a modal dialog.</p>
 * @description <p>Applicable to the {@link Titanium.UI#property-PICKER_TYPE_DATE} picker type.</p>
<p>See "Date Picker using showDatePickerDialog()" for an example.</p>
 * @param {Object} dictObj 
 * <p>Dictionary object with a subset of <code>Titanium.UI.Picker</code> properties 
and a callback defined. Acceptable object properties are 
<code>callback</code>, <code>okButtonTitle</code>, <code>title</code> and <code>value</code>.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Picker.showDatePickerDialog = function(dictObj){};

/**
 * @method showTimePickerDialog
 * <p>Shows Time picker as a modal dialog.</p>
 * @description <p>Applicable to the {@link Titanium.UI#property-PICKER_TYPE_TIME} picker type.  </p>
<p>See "Date Picker using showDatePickerDialog()" for a similar example.</p>
 * @param {Object} dictObj 
 * <p>Dictionary object with a subset of <code>Titanium.UI.Picker</code> properties 
and a callback defined. Acceptable object properties are 
<code>callback</code>, <code>format24</code>, <code>okButtonTitle</code>, <code>title</code> and <code>value</code>.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Picker.showTimePickerDialog = function(dictObj){};

/**
 * @property columns
 * @type Titanium.UI.PickerColumn[]
 * <p>Columns used for this picker, as an array of {@link Titanium.UI.PickerColumn} objects.</p>
 */
Titanium.UI.Picker.columns = null;

/**
 * @property countDownDuration
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Duration in milliseconds used for a Countdown Timer picker.</p>
 * @description <p>Applicable to {@link Titanium.UI#property-PICKER_TYPE_COUNT_DOWN_TIMER} picker types.</p>
 */
Titanium.UI.Picker.countDownDuration = null;

/**
 * @property [format24=true (spinner enabled), false (otherwise)]
 * @type Boolean
 * @platform android 0.8
 * <p>Determines whether the Time pickers display in 24-hour or 12-hour clock format.</p>
 * @description <p>Applicable to {@link Titanium.UI#property-PICKER_TYPE_TIME} and {@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} 
picker types.</p>
<p>When this property is enabled, a time picker is displayed with hours 0 through 23, 
or with hours 1 through 12 and am/pm controls otherwise.</p>
<p>For backward compatibility, the default value of this property depends on the style of 
picker in use.  </p>
<p>For a spinner picker (when <code>useSpinner</code> is <code>true</code>), this defaults to <code>true</code> (24-hour format.)<br />
For a native picker (when <code>useSpinner</code> is either un-set or <code>false</code>), this defaults to <code>false</code> 
(12-hour format.)</p>
<p>The value of this property may be modified even after a picker is rendered and the UI will be 
updated accordingly.</p>
 */
Titanium.UI.Picker.format24 = null;

/**
 * @property [locale=System Settings]
 * @type String
 * @platform android 0.8
 * <p>Locale used when displaying Date and Time picker values.</p>
 * @description <p>Applicable to {@link Titanium.UI#property-PICKER_TYPE_DATE}, {@link Titanium.UI#property-PICKER_TYPE_TIME} and 
{@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} picker types.</p>
<p>Locale must be represented as a combination of ISO 2-letter language and country codes. 
For example, <code>en-US</code> or <code>en-GB</code>. See the 
<a href="http://en.wikipedia.org/wiki/ISO_639-1">ISO 639-1</a> and 
<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">ISO 3166-1 alpha-2</a> 
sections of wikipedia for reference.</p>
<p>On iOS, the system locale is always used.</p>
 */
Titanium.UI.Picker.locale = null;

/**
 * @property maxDate
 * @type Date
 * <p>Maximum date displayed when a Date picker is in use.</p>
 * @description <p>Applicable to {@link Titanium.UI#property-PICKER_TYPE_DATE} and {@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} 
picker types.</p>
<p>This property is ignored when <code>maxDate</code> is less than <code>minDate</code>.</p>
 */
Titanium.UI.Picker.maxDate = null;

/**
 * @property minDate
 * @type Date
 * <p>Minimum date displayed when a Date picker is in use.</p>
 * @description <p>Applicable to {@link Titanium.UI#property-PICKER_TYPE_DATE} and {@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} 
picker types.</p>
<p>This property is ignored when <code>maxDate</code> is less than <code>minDate</code>.</p>
 */
Titanium.UI.Picker.minDate = null;

/**
 * @property [minuteInterval=1]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Interval in minutes displayed when one of the Time types of pickers is in use.</p>
 * @description <p>Applicable to {@link Titanium.UI#property-PICKER_TYPE_TIME} and {@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} 
picker types.</p>
<p>The minimum permitted value is 1 and maximum is 30. If the value cannot be evenly divided 
into 60, the default value is used. </p>
 */
Titanium.UI.Picker.minuteInterval = null;

/**
 * @property [selectionIndicator=true (Android), false (iPhone, iPad),]
 * @type Boolean
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether the visual selection indicator is shown. On iPhone, this is a blue bar.</p>
 * @description <p>If <code>true</code>, selection indicator is enabled.</p>
 */
Titanium.UI.Picker.selectionIndicator = null;

/**
 * @property [type={@link Titanium.UI#property-PICKER_TYPE_PLAIN}]
 * @type Number
 * <p>Determines the type of picker displayed</p>
 * @description <p>One of {@link Titanium.UI#property-PICKER_TYPE_PLAIN}, 
{@link Titanium.UI#property-PICKER_TYPE_DATE}, {@link Titanium.UI#property-PICKER_TYPE_TIME}, 
{@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} (Mobile Web, Tizen, iPhone, iPad-only) 
and {@link Titanium.UI#property-PICKER_TYPE_COUNT_DOWN_TIMER} (iPhone, iPad-only.). </p>
<p>Mobile Web and Tizen rely on input types for date and time types, but as of Q1 2012 these input types 
are not supported on most browsers, those that do support it support it poorly, and no fall-back 
exists. It is recommended not to use these types on Mobile Web and Tizen until browser support improves.</p>
 */
Titanium.UI.Picker.type = null;

/**
 * @property [useSpinner=false]
 * @type Boolean
 * @platform android 0.8
 * <p>Determines whether the non-native Android control, with a spinning wheel that looks and 
behaves like the iOS picker, is invoked rather than the default native "dropdown" style.</p>
 * @description <p>If <code>true</code>, the spinner is enabled.</p>
<p>This property should be set either at picker creation, i.e. 
<code>Titanium.UI.createPicker({ useSpinner:true });</code>, or before the picker is added to its parent.  </p>
<p>This property must be enabled for multi-column pickers.</p>
 */
Titanium.UI.Picker.useSpinner = null;

/**
 * @property value
 * @type Date
 * <p>Date and time value for Date pickers.</p>
 * @description <p>Applicable to {@link Titanium.UI#property-PICKER_TYPE_DATE} and {@link Titanium.UI#property-PICKER_TYPE_DATE_AND_TIME} 
picker types.</p>
 */
Titanium.UI.Picker.value = null;

/**
 * @property [visibleItems=5]
 * @type Number
 * @platform android 0.8
 * <p>Number of visible rows to display. This is only applicable to a plain picker and when the 
<code>useSpinner</code> is <code>true</code>.</p>
 * @description <p>The spinner-style Android picker shows 5 rows by default; one selected in the middle and 2 
above and below. Set to an odd number to ensure the selected row is in the middle.</p>
 */
Titanium.UI.Picker.visibleItems = null;

/**
 * @class Titanium.UI.PickerColumn
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A picker column, representing a selectable group of items in a {@link Titanium.UI.Picker}.</p>
 * @description <p>Use the {@link Titanium.UI#method-createPickerColumn} method to create a picker column control.</p>
<p>On Android, the <code>useSpinner</code> property must be enabled to support multiple columns.</p>
<p>See {@link Titanium.UI.Picker} for further examples of usage.</p>
 * <h3>Examples</h3>
 * <h4>Multi-Column Picker</h4>
 * <p><p>Create a two-column, platform-specific style, picker and automatically select a row in 
each column.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false,
  title: 'Use picker to make selection'
});

var fruit = [ 'Bananas', 'Grapes', 'Blueberries', 'Strawberries' ];
var color = [ 'blue', 'red', 'yellow', 'white' ];

var column1 = Ti.UI.createPickerColumn();

for(var i=0, ilen=fruit.length; i&lt;ilen; i++){
  var row = Ti.UI.createPickerRow({
    title: fruit[i]
  });
  column1.addRow(row);
}

var column2 = Ti.UI.createPickerColumn();

for(var i=0, ilen=color.length; i&lt;ilen; i++){
  var row = Ti.UI.createPickerRow({
    title: color[i]
  });
  column2.addRow(row);
}

var picker = Ti.UI.createPicker({
  columns: [column1, column2],
  selectionIndicator: true,
  useSpinner: true, // required in order to use multi-column pickers with Android
  top:50
});

function pickerDefaults(obj){
  // on iOS, must be after picker has been rendered
  picker.setSelectedRow(0, 2, false);
  picker.setSelectedRow(1, 3, false);
}

win.add(picker);

var isAndroid = Ti.Platform.osname === 'android';

if(isAndroid){
  pickerDefaults(picker);
}

win.open();

if(!isAndroid){
  setTimeout(function(){
    pickerDefaults(picker);
  }, 1500);
}</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>multicolumnpicker.xml</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white" exitOnClose="true" fullscreen="false"
        title="Use picker to make selection"&gt;

        &lt;Picker id="picker" top="50" selectionIndicator="true" useSpinner="true"&gt;
            &lt;PickerColumn id="column1"&gt;
                &lt;PickerRow title="Bananas"/&gt;
                &lt;PickerRow title="Grapes"/&gt;
                &lt;PickerRow title="Blueberries"/&gt;
                &lt;PickerRow title="Strawberries"/&gt;
            &lt;/PickerColumn&gt;
            &lt;!-- Picker shorthand notation --&gt;
            &lt;Column id="column2"&gt;
                &lt;Row title="blue"/&gt;
                &lt;Row title="red"/&gt;
                &lt;Row title="yellow"/&gt;
                &lt;Row title="white"/&gt;
            &lt;/Column&gt;
        &lt;/Picker&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>multicolumnpicker.js:</p></p><pre>$.picker.setSelectedRow(0, 2, false);
$.picker.setSelectedRow(1, 3, false);</pre>
 */
Titanium.UI.PickerColumn = {};

/**
 * @method addRow
 * <p>Adds a row to this column.</p>
 * @param {Titanium.UI.PickerRow} row 
 * <p>A row to add.</p>
 * @return void
*/
Titanium.UI.PickerColumn.addRow = function(row){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.PickerColumn.getEnabled = function(){};

/**
 * @method getRowCount
 * <p>Gets the value of the {@link Titanium.UI.PickerColumn#property-rowCount rowCount} property.</p>
 * @return {Number} 
*/
Titanium.UI.PickerColumn.getRowCount = function(){};

/**
 * @method getRows
 * <p>Gets the value of the {@link Titanium.UI.PickerColumn#property-rows rows} property.</p>
 * @return {Titanium.UI.PickerRow[]} 
*/
Titanium.UI.PickerColumn.getRows = function(){};

/**
 * @method getSelectedRow
 * <p>Gets the value of the {@link Titanium.UI.PickerColumn#property-selectedRow selectedRow} property.</p>
 * @return {Titanium.UI.PickerRow} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.PickerColumn.getSelectedRow = function(){};

/**
 * @method removeRow
 * <p>Removes a row from this column.</p>
 * @param {Titanium.UI.PickerRow} row 
 * <p>A row to remove.</p>
 * @return void
*/
Titanium.UI.PickerColumn.removeRow = function(row){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.PickerColumn.setEnabled = function(){};

/**
 * @method setSelectedRow
 * <p>Sets the value of the {@link Titanium.UI.PickerColumn#property-selectedRow selectedRow} property.</p>
 * @param {Titanium.UI.PickerRow} selectedRow 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.PickerColumn.setSelectedRow = function(selectedRow){};

/**
 * @property enabled 
 * @hide
*/Titanium.UI.PickerColumn.enabled = null;

/**
 * @property rowCount
 * @type Number
 * @readonly
 * <p>Number of rows in this column.</p>
 */
Titanium.UI.PickerColumn.rowCount = null;

/**
 * @property rows
 * @type Titanium.UI.PickerRow[]
 * @readonly
 * <p>Rows of this column.</p>
 * @description <p>While this property is currently writable on Android, changing its value is strongly 
discouraged.</p>
 */
Titanium.UI.PickerColumn.rows = null;

/**
 * @property selectedRow
 * @type Titanium.UI.PickerRow
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>The selected row in this column.</p>
 */
Titanium.UI.PickerColumn.selectedRow = null;

/**
 * @class Titanium.UI.PickerRow
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A picker row, representing a selectable item in a {@link Titanium.UI.Picker}. </p>
 * @description <p>Use the {@link Titanium.UI#method-createPickerRow} method to create a picker row control.</p>
<p>Views added to picker rows is only supported on iOS.</p>
 * <h3>Examples</h3>
 * <h4>Custom View for Row (iOS only)</h4>
 * <p><p>Create a two-column picker, with the first column containing a child view, and automatically 
select a row in each column.</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow({
  exitOnClose: true,
  layout: 'vertical'
});

var fruit = [ 'Bananas', 'Strawberries', 'Mangos', 'Grapes' ];
var color = [ 'red', 'green', 'blue', 'orange' ];

var column1 = Ti.UI.createPickerColumn();

for(var i=0, ilen=fruit.length; i&lt;ilen; i++){
  var row = Ti.UI.createPickerRow();
    
  var label = Ti.UI.createLabel({
    color:'red',
    font:{fontSize:20,fontWeight:'bold'},
    text: fruit[i],
    textAlign:'left',
    height:'auto',
    width:'126'
  });
  
  row.add(label);
  column1.addRow(row);
}

var column2 = Ti.UI.createPickerColumn();

for(var i=0, ilen=color.length; i&lt;ilen; i++){
  var row = Ti.UI.createPickerRow({
    title: color[i]
  });
  column2.addRow(row);
}

var picker = Ti.UI.createPicker({
  top:50,
  columns: [column1, column2],
  selectionIndicator: true
});

win.add(picker);

win.open();

// must be after picker has been displayed
picker.setSelectedRow(0, 2, false); // select Mangos
picker.setSelectedRow(1, 3, false); // select Orange</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>pickerrowexample.xml</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white" layout="vertical" exitOnClose="true"&gt;
        &lt;Picker id="picker" top="50" selectionIndicator="true"&gt;
            &lt;PickerColumn id="column1"&gt;

                &lt;!-- On iOS, views can be added to picker rows --&gt;
                &lt;PickerRow&gt;
                    &lt;Label color="red" textAlign="left" width="126"&gt;Bananas&lt;/Label&gt;
                &lt;/PickerRow&gt;
                &lt;PickerRow&gt;
                    &lt;Label color="red" textAlign="left" width="126"&gt;Strawberries&lt;/Label&gt;
                &lt;/PickerRow&gt;
                &lt;PickerRow&gt;
                    &lt;Label color="red" textAlign="left" width="126"&gt;Mangos&lt;/Label&gt;
                &lt;/PickerRow&gt;
                &lt;PickerRow&gt;
                    &lt;Label color="red" textAlign="left" width="126"&gt;Grapes&lt;/Label&gt;
                &lt;/PickerRow&gt;
            &lt;/PickerColumn&gt;

            &lt;!-- Picker shorthand notation --&gt;
            &lt;Column id="column2"&gt;
                &lt;Row title="red"/&gt;
                &lt;Row title="green"/&gt;
                &lt;Row title="blue"/&gt;
                &lt;Row title="orange"/&gt;
            &lt;/Column&gt;
        &lt;/Picker&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>pickerrowexample.js:</p></p><pre>$.picker.setSelectedRow(0, 2, false);
$.picker.setSelectedRow(1, 3, false);</pre>
 */
Titanium.UI.PickerRow = {};

/**
 * @method add
 * <p>Adds a child view to this picker row, to provide a custom row.</p>
 * @description <p>The child view is added as the last child in this view's hierarchy. </p>
<p>Although all views inherit from {@link Titanium.UI.View}, not all views are capable of
containing other views. In particular:</p>
<ul>
<li>Some views are not designed to be containers at all.</li>
<li>Some views are special-purpose containers that can only contain certain other
     views.</li>
<li>Some views are top-level containers that cannot (or should not) be added to other views.</li>
</ul>
<h4>Non-Container Views</h4>
<p>The following views are not intended to act as containers that can hold other
views:</p>
<ul>
<li>{@link Titanium.UI.ActivityIndicator ActivityIndicator}</li>
<li>{@link Titanium.UI.Button Button}</li>
<li>{@link Titanium.UI.ImageView ImageView}</li>
<li>{@link Titanium.UI.Label Label}</li>
<li>{@link Titanium.UI.ProgressBar ProgressBar}</li>
<li>{@link Titanium.UI.SearchBar SearchBar}</li>
<li>{@link Titanium.UI.Slider Slider}</li>
<li>{@link Titanium.UI.Switch Switch}</li>
<li>{@link Titanium.UI.TableView TableView}</li>
<li>{@link Titanium.UI.TextArea TextArea}</li>
<li>{@link Titanium.UI.TextField TextField}</li>
<li>{@link Titanium.UI.WebView WebView}</li>
</ul>
<p>Adding children to the these views <em>may</em> be supported on some platforms,
but is not guaranteed to work across platforms. Where it is supported, it may not
work as expected.</p>
<p>For maximum portability, these views should be treated as if they do not support children.<br />
Instead of adding children to these views, applications can positon other views as
siblings. For example, instead of adding a button as a child of a <code>WebView</code>, you can add
the button to the web view's parent such that it appears on top of the web view. </p>
<h4>Special-Purpose  Containers</h4>
<p>A few view objects act as special-purpose containers--that is, they only manage
certain types of children, and many of them support a special means of adding
these children, instead of the general <code>add</code> method. These containers include:</p>
<ul>
<li>
<p>{@link Titanium.UI.ButtonBar ButtonBar} and {@link Titanium.UI.iOS.TabbedBar TabbedBar} are designed 
    to hold their own internally-created buttons, assigned by adding strings to the "labels" array.
    Views added using the <code>add</code> method are displayed on top of these buttons.</p>
</li>
<li>
<p>{@link Titanium.UI.Picker Picker}. Can only hold <code>PickerRows</code> and <code>PickerColumns</code>, which
    are added using the <code>add</code> method. Adding other types of views to a <code>Picker</code> is not
    supported.</p>
</li>
<li>
<p>{@link Titanium.UI.TableView TableView} is a specialized container for
    <code>TableViewSection</code> and <code>TableViewRow</code> objects. These objects must be
    added using the properties and methods that <code>TableView</code> provides 
    for adding and removing sectons and rows.</p>
<p>On some platforms, it is possible to add arbitrary child views to a table view 
using the <code>add</code> method. However, this is not guaranteed to work on all platforms, 
and in general, should be avoided.</p>
</li>
<li>
<p>{@link Titanium.UI.TableViewSection TableViewSection} is a specialized container
    for <code>TableViewRow</code> objects, which <em>are</em> added using the <code>add</code> method. The <code>add</code> method
    on <code>TableViewSection</code> can only be used to add <code>TableViewRow</code> objects.</p>
</li>
<li>
<p>{@link Titanium.UI.iOS.Toolbar Toolbar} is designed to hold buttons and certain
    other controls, added to its <code>items</code> array. Views added using the <code>add</code> method are
    displayed on top of the controls in the <code>items</code> array.</p>
</li>
<li>
<p>The <code>Tab</code>, <code>TabGroup</code>, <code>NavigationGroup</code> and <code>SplitWindow</code> objects are 
    special containers that manage windows. These are discussed in the 
    "Top-Level Containers" section.</p>
</li>
</ul>
<h4>Top-Level Containers</h4>
<p>There are certain top-level containers that are not intended to be added 
as the children of other views. These top-level containers include 
{@link Titanium.UI.Window Window}, {@link Titanium.UI.iPad.SplitWindow SplitWindow},
and {@link Titanium.UI.TabGroup TabGroup}.  Other types of views must be added 
to a top-level container in order to be displayed on screen.</p>
<p>The special containers {@link Titanium.UI.iPhone.NavigationGroup NavigationGroup}, 
{@link Titanium.UI.iPad.SplitWindow SplitWindow}, {@link Titanium.UI.Tab Tab}, and 
{@link Titanium.UI.TabGroup TabGroup}
manage windows. These managed windows may be referred to as <em>children</em> of the 
container, but they are not added using the <code>add</code> method.</p>
<p>Note that although a <code>NavigationGroup</code>
manages windows, it is not itself a top-level container.  It must be added to a
<code>Window</code> or <code>Popover</code> in order to be displayed.</p>
<p><code>Tab</code> is another kind of special container: it is not itself a top-level container, 
but can only be used within a <code>TabGroup</code>. You cannot <code>add</code> a <code>Tab</code> to an arbitrary
container.</p>
 * @param {Titanium.UI.View} view 
 * <p>A view object.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.PickerRow.add = function(view){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.PickerRow#property-color color} property.</p>
 * @return {String} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.PickerRow.getColor = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.PickerRow.getEnabled = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.PickerRow#property-font font} property.</p>
 * @return {Font} 
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.PickerRow.getFont = function(){};

/**
 * @method getFontSize
 * <p>Gets the value of the {@link Titanium.UI.PickerRow#property-fontSize fontSize} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.PickerRow.getFontSize = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.PickerRow#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.PickerRow.getTitle = function(){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.PickerRow#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.PickerRow.setColor = function(color){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.PickerRow.setEnabled = function(){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.PickerRow#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.PickerRow.setFont = function(font){};

/**
 * @method setFontSize
 * <p>Sets the value of the {@link Titanium.UI.PickerRow#property-fontSize fontSize} property.</p>
 * @param {Number} fontSize 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.PickerRow.setFontSize = function(fontSize){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.PickerRow#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.PickerRow.setTitle = function(title){};

/**
 * @property color
 * @type String
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Color of the item text, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.PickerRow.color = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.PickerRow.enabled = null;

/**
 * @property font
 * @type Font
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Font to use for the item text.</p>
 */
Titanium.UI.PickerRow.font = null;

/**
 * @property fontSize
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Font size for displaying item text. Ignored when using a custom view.</p>
 */
Titanium.UI.PickerRow.fontSize = null;

/**
 * @property title
 * @type String
 * <p>Item text.</p>
 */
Titanium.UI.PickerRow.title = null;

/**
 * @class Titanium.UI.ProgressBar
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A progress bar.</p>
 * @description <p>A progress bar is used for displaying an ongoing activity with a defined progression. 
For an activity without a defined progression, you can use {@link Titanium.UI.ActivityIndicator}. </p>
<p>Unlike most views, progress bars are hidden by default, so you must explicitly 
show the progress bar.</p>
<p>Use the {@link Titanium.UI#method-createProgressBar} method to create a progress bar.</p>
<h4>Android Platform Notes</h4>
<p>In SDK 3.0, use {@link Titanium.UI.Android.ProgressIndicator} to display a progress indicator 
in a modal dialog or window title bar. Use <code>ProgressBar</code> to display the progress bar inside
another view.</p>
<h4>iOS Platform Notes</h4>
<p>On iOS, to display the progress bar in the window title bar, assign the progress bar object
to the window's {@link Titanium.UI.Window#property-titleControl titleControl} property.
Make sure the window is modal and not full screen, and that the navigation bar is not hidden.</p>
 * <h3>Examples</h3>
 * <h4>Simple Progress Bar</h4>
 * <p><p>In this example we create a progress bar with the min value of <code>0</code> and the max value 
of <code>10</code> and the current value of <code>0</code>. Changing the <code>value</code> property causes the 
displayed progress bar to update.</p></p><pre>var pb=Titanium.UI.createProgressBar({
    top:10,
width:250,
height:'auto',
min:0,
max:10,
value:0,
color:'#fff',
message:'Downloading 0 of 10',
font:{fontSize:14, fontWeight:'bold'},
style:Titanium.UI.iPhone.ProgressBarStyle.PLAIN,
});
win.add(pb);
pb.show();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>progressbarexample.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;ProgressBar id="pb" top="10" width="250" height="auto" min="0" max="10" value="0" color="#fff" message="Downloading 0 of 10" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>progressbarexample.js:</p></p><pre>$.pb.show();</pre>
 */
Titanium.UI.ProgressBar = {};

/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to a <code>ProgressBar</code> is not supported on all platforms.</p>
<p>If you need to display views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ProgressBar.add = function(view){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.ProgressBar#property-color color} property.</p>
 * @return {String} 
*/
Titanium.UI.ProgressBar.getColor = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.ProgressBar#property-font font} property.</p>
 * @return {Font} 
*/
Titanium.UI.ProgressBar.getFont = function(){};

/**
 * @method getMax
 * <p>Gets the value of the {@link Titanium.UI.ProgressBar#property-max max} property.</p>
 * @return {Number} 
*/
Titanium.UI.ProgressBar.getMax = function(){};

/**
 * @method getMessage
 * <p>Gets the value of the {@link Titanium.UI.ProgressBar#property-message message} property.</p>
 * @return {String} 
*/
Titanium.UI.ProgressBar.getMessage = function(){};

/**
 * @method getMin
 * <p>Gets the value of the {@link Titanium.UI.ProgressBar#property-min min} property.</p>
 * @return {Number} 
*/
Titanium.UI.ProgressBar.getMin = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.ProgressBar#property-style style} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ProgressBar.getStyle = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.ProgressBar#property-value value} property.</p>
 * @return {Number} 
*/
Titanium.UI.ProgressBar.getValue = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.ProgressBar#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ProgressBar.remove = function(view){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.ProgressBar#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ProgressBar.setColor = function(color){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.ProgressBar#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ProgressBar.setFont = function(font){};

/**
 * @method setMax
 * <p>Sets the value of the {@link Titanium.UI.ProgressBar#property-max max} property.</p>
 * @param {Number} max 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ProgressBar.setMax = function(max){};

/**
 * @method setMessage
 * <p>Sets the value of the {@link Titanium.UI.ProgressBar#property-message message} property.</p>
 * @param {String} message 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ProgressBar.setMessage = function(message){};

/**
 * @method setMin
 * <p>Sets the value of the {@link Titanium.UI.ProgressBar#property-min min} property.</p>
 * @param {Number} min 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ProgressBar.setMin = function(min){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.ProgressBar#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ProgressBar.setStyle = function(style){};

/**
 * @method setValue
 * <p>Sets the value of the {@link Titanium.UI.ProgressBar#property-value value} property.</p>
 * @param {Number} value 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ProgressBar.setValue = function(value){};

/**
 * @property color
 * @type String
 * <p>Color of the progress bar text, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.ProgressBar.color = null;

/**
 * @property font
 * @type Font
 * <p>Font for the progress bar text.</p>
 */
Titanium.UI.ProgressBar.font = null;

/**
 * @property max
 * @type Number
 * <p>Maximum value of the progress bar.</p>
 */
Titanium.UI.ProgressBar.max = null;

/**
 * @property message
 * @type String
 * <p>Progress bar text.</p>
 */
Titanium.UI.ProgressBar.message = null;

/**
 * @property min
 * @type Number
 * <p>Minimum value of the progress bar.</p>
 */
Titanium.UI.ProgressBar.min = null;

/**
 * @property style
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Style of the progress bar.</p>
 * @description <p>For iOS, progress bar styles are constants defined in {@link Titanium.UI.iPhone.ProgressBarStyle ProgressBarStyle}.</p>
 */
Titanium.UI.ProgressBar.style = null;

/**
 * @property value
 * @type Number
 * <p>Current value of the progress bar.</p>
 */
Titanium.UI.ProgressBar.value = null;

/**
 * @class Titanium.UI.ScrollView
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A view that contains a horizontally and/or vertically-scrollable region of content.  </p>
 * @description <p>Use the {@link Titanium.UI#method-createScrollView} method to create a scroll view.</p>
<p>Views added to the scroll view will be scrolled based on the size of the scrollable region of 
content. If a scrollable region fits within the size of its scroll view, the view will not 
scroll.</p>
<h4>Android</h4>
<p>On Android, a scroll view can only scroll in one direction, either vertical or horizontal, 
and not both at the same time. Hence, the {@link Titanium.UI.ScrollView#property-scrollType} property may be 
used to set the scroll direction explicitly.</p>
<p>If the <code>scrollType</code> property is not defined, the scroll view attempts to deduce the scroll 
direction based on some of the other properties that have been set. Specifically, if 
<code>contentWidth</code> and <code>width</code> are both set and are equal to each other, or if they are both set 
<em>and</em> <code>showVerticalScrollIndicator</code> is set to <code>true</code>, then the scroll direction is set to 
"vertical".  If <code>contentHeight</code> and <code>height</code> are both set and are equal, or if they are both 
set and <code>showHorizontalScrollIndicator</code> is set to <code>true</code>, then the scroll direction is set 
to "horizontal".  If <code>scrollType</code> is set, it overrides the deduced setting.</p>
 * <h3>Examples</h3>
 * <h4>Simple Scroll View</h4>
 * <p><p>Create a scroll view with content.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false,
  title: 'ScrollView Demo'
});

var scrollView = Ti.UI.createScrollView({
  contentWidth: 'auto',
  contentHeight: 'auto',
  showVerticalScrollIndicator: true,
  showHorizontalScrollIndicator: true,
  height: '80%',
  width: '80%'
});
var view = Ti.UI.createView({
  backgroundColor:'#336699',
  borderRadius: 10,
  top: 10,
  height: 2000,
  width: 1000
});
scrollView.add(view);
win.add(scrollView);
win.open();</pre>
 * <h4>Scroll View as a Table View</h4>
 * <p><p>Create a scroll view that contains a set of views in a layout to resemble a table view with 
rows. This approach can mitigate the native Android issue described in the "TextFields in 
Tables with SOFT_INPUT_ADJUST_PAN" section of {@link Titanium.UI.TableView}. </p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor:'white'
});

if (Ti.UI.Android){
  win.windowSoftInputMode = Ti.UI.Android.SOFT_INPUT_ADJUST_PAN;
}

function createRow(i) {
  var row = Ti.UI.createView({
    backgroundColor: 'white',
    borderColor: '#bbb',
    borderWidth: 1,
    width:'100%', height: 70,
    top: 0, left: 0
  });
  var inputTextField = Ti.UI.createTextField({
    hintText: 'Enter value ' + i,
    keyboardType: Ti.UI.KEYBOARD_NUMBERS_PUNCTUATION,
    top: 10, left: '10%',
    width: '80%', height: 60
  });
  row.add(inputTextField);
  return row;
}

var scrollView = Ti.UI.createScrollView({
  bottom:120,
  contentHeight: 'auto',
  layout: 'vertical'
});

for(var i = 0; i &lt;= 20; i++){
var row = createRow(i);
  scrollView.add(row);
}
win.add(scrollView);

var label = Ti.UI.createLabel({
  backgroundColor:'darkgray',
  text: 'Your advert here',
  textAlign: 'center',
  bottom:0,
  width: Titanium.UI.FILL, height:100
});
win.add(label);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous simple scroll view example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white" exitOnClose="true" fullscreen="false" title="ScrollView Demo"&gt;
        &lt;ScrollView id="scrollView" showVerticalScrollIndicator="true" showHorizontalScrollIndicator="true" height="80%" width="80%"&gt;
            &lt;View id="view" backgroundColor="#336699" borderRaduis="10" top="10" height="2000" width="1000" /&gt;
        &lt;/ScrollView&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.ScrollView = {};









/**
 * @method getCanCancelEvents
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-canCancelEvents canCancelEvents} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.getCanCancelEvents = function(){};

/**
 * @method getContentHeight
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-contentHeight contentHeight} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.ScrollView.getContentHeight = function(){};

/**
 * @method getContentOffset
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-contentOffset contentOffset} property.</p>
 * @return {Dictionary} 
*/
Titanium.UI.ScrollView.getContentOffset = function(){};

/**
 * @method getContentWidth
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-contentWidth contentWidth} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.ScrollView.getContentWidth = function(){};

/**
 * @method getDisableBounce
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-disableBounce disableBounce} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.getDisableBounce = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.ScrollView.getEnabled = function(){};

/**
 * @method getHorizontalBounce
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-horizontalBounce horizontalBounce} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.getHorizontalBounce = function(){};

/**
 * @method getMaxZoomScale
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-maxZoomScale maxZoomScale} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.getMaxZoomScale = function(){};

/**
 * @method getMinZoomScale
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-minZoomScale minZoomScale} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.getMinZoomScale = function(){};

/**
 * @method getOverScrollMode
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-overScrollMode overScrollMode} property.</p>
 * @return {Number} 
 * @platform android 3.1
*/
Titanium.UI.ScrollView.getOverScrollMode = function(){};

/**
 * @method getScrollIndicatorStyle
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-scrollIndicatorStyle scrollIndicatorStyle} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.getScrollIndicatorStyle = function(){};

/**
 * @method getScrollType
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-scrollType scrollType} property.</p>
 * @return {String} 
 * @platform android 0.9
*/
Titanium.UI.ScrollView.getScrollType = function(){};

/**
 * @method getScrollingEnabled
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-scrollingEnabled scrollingEnabled} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.getScrollingEnabled = function(){};

/**
 * @method getScrollsToTop
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-scrollsToTop scrollsToTop} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.UI.ScrollView.getScrollsToTop = function(){};

/**
 * @method getShowHorizontalScrollIndicator
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-showHorizontalScrollIndicator showHorizontalScrollIndicator} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.ScrollView.getShowHorizontalScrollIndicator = function(){};

/**
 * @method getShowVerticalScrollIndicator
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-showVerticalScrollIndicator showVerticalScrollIndicator} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.ScrollView.getShowVerticalScrollIndicator = function(){};

/**
 * @method getVerticalBounce
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-verticalBounce verticalBounce} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.getVerticalBounce = function(){};

/**
 * @method getZoomScale
 * <p>Gets the value of the {@link Titanium.UI.ScrollView#property-zoomScale zoomScale} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.getZoomScale = function(){};

/**
 * @method scrollTo
 * <p>Moves the specified coordinate of the scrollable region into the viewable area.</p>
 * @param {Number} x 
 * <p>X coordinate from the scrollable region's coordinate system.</p>
 * @param {Number} y 
 * <p>Y coordinate from the scrollable region's coordinate system.</p>
 * @return void
*/
Titanium.UI.ScrollView.scrollTo = function(x, y){};

/**
 * @method scrollToBottom
 * <p>Moves the end of the scrollable region into the viewable area.</p>
 * @description <p>On Android the behavior of <code>scrollToBottom</code> depends on whether this scroll view scrolls 
horizontally or vertically. For vertical scroll views, <code>scrollToBottom</code> moves the bottom 
of the scrollable region into the viewable area. For horizontal scroll views,
<code>scrollToBottom</code> moves the rightmost edge of of the scrollable region into the viewable area.</p>
<p>On iOS, <code>scrollToBottom</code> moves the bottom-right corner of the scrollable region into the 
viewable area.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollView.scrollToBottom = function(){};

/**
 * @method setCanCancelEvents
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-canCancelEvents canCancelEvents} property.</p>
 * @param {Boolean} canCancelEvents 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.setCanCancelEvents = function(canCancelEvents){};

/**
 * @method setContentHeight
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-contentHeight contentHeight} property.</p>
 * @param {Number/String} contentHeight 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ScrollView.setContentHeight = function(contentHeight){};

/**
 * @method setContentOffset
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-contentOffset contentOffset} property.</p>
 * @param {Dictionary} contentOffset 
 * <p>X and Y coordinates to which to reposition the top-left point of the scrollable region.</p>
 * @param {contentOffsetOption} animated (optional)
 * <p>Determines whether the scrollable region reposition should be animated</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.setContentOffset = function(contentOffset, animated){};

/**
 * @method setContentWidth
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-contentWidth contentWidth} property.</p>
 * @param {Number/String} contentWidth 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ScrollView.setContentWidth = function(contentWidth){};

/**
 * @method setDisableBounce
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-disableBounce disableBounce} property.</p>
 * @param {Boolean} disableBounce 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.setDisableBounce = function(disableBounce){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.ScrollView.setEnabled = function(){};

/**
 * @method setHorizontalBounce
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-horizontalBounce horizontalBounce} property.</p>
 * @param {Boolean} horizontalBounce 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.setHorizontalBounce = function(horizontalBounce){};

/**
 * @method setMaxZoomScale
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-maxZoomScale maxZoomScale} property.</p>
 * @param {Number} maxZoomScale 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.setMaxZoomScale = function(maxZoomScale){};

/**
 * @method setMinZoomScale
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-minZoomScale minZoomScale} property.</p>
 * @param {Number} minZoomScale 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.setMinZoomScale = function(minZoomScale){};

/**
 * @method setOverScrollMode
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-overScrollMode overScrollMode} property.</p>
 * @param {Number} overScrollMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Titanium.UI.ScrollView.setOverScrollMode = function(overScrollMode){};

/**
 * @method setScrollIndicatorStyle
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-scrollIndicatorStyle scrollIndicatorStyle} property.</p>
 * @param {Number} scrollIndicatorStyle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.setScrollIndicatorStyle = function(scrollIndicatorStyle){};

/**
 * @method setScrollingEnabled
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-scrollingEnabled scrollingEnabled} property.</p>
 * @param {Boolean} scrollingEnabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.setScrollingEnabled = function(scrollingEnabled){};

/**
 * @method setScrollsToTop
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-scrollsToTop scrollsToTop} property.</p>
 * @param {Boolean} scrollsToTop 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.UI.ScrollView.setScrollsToTop = function(scrollsToTop){};

/**
 * @method setShowHorizontalScrollIndicator
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-showHorizontalScrollIndicator showHorizontalScrollIndicator} property.</p>
 * @param {Boolean} showHorizontalScrollIndicator 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ScrollView.setShowHorizontalScrollIndicator = function(showHorizontalScrollIndicator){};

/**
 * @method setShowVerticalScrollIndicator
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-showVerticalScrollIndicator showVerticalScrollIndicator} property.</p>
 * @param {Boolean} showVerticalScrollIndicator 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ScrollView.setShowVerticalScrollIndicator = function(showVerticalScrollIndicator){};

/**
 * @method setVerticalBounce
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-verticalBounce verticalBounce} property.</p>
 * @param {Boolean} verticalBounce 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollView.setVerticalBounce = function(verticalBounce){};

/**
 * @method setZoomScale
 * <p>Sets the value of the {@link Titanium.UI.ScrollView#property-zoomScale zoomScale} property.</p>
 * @param {Number} zoomScale 
 * <p>Scaling factor of the scroll view's content.</p>
 * @param {zoomScaleOption} animated (optional)
 * <p>Determines whether the scrollable region reposition should be animated</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.ScrollView.setZoomScale = function(zoomScale, animated){};

/**
 * @property [canCancelEvents=true]
 * @type Boolean
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Determines whether this scroll view can cancel subview touches in order to scroll instead.</p>
 * @description <p>On iOS, this property maps to the native <code>canCancelContentTouches</code> property which controls 
whether touches in the content view always lead to tracking. See <a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIScrollView_Class/Reference/UIScrollView.html">UIScrollView</a> for more details.</p>
<p>On Android, setting this property to false prevents the scroll view from intercepting 
any touch events from its subviews. Note that this behavior may be slightly different from iOS.</p>
 */
Titanium.UI.ScrollView.canCancelEvents = null;

/**
 * @property contentHeight
 * @type Number/String
 * <p>Height of the scrollable region.</p>
 * @description <p>While <code>auto</code> and absolute dimensions are supported, relative values, such as those provided 
in percentages, are not. The minimum value for contentHeight is the height of the scroll view.</p>
 */
Titanium.UI.ScrollView.contentHeight = null;

/**
 * @property contentOffset
 * @type Dictionary
 * <p>X and Y coordinates to which to reposition the top-left point of the scrollable region.</p>
 * @description <p>On iOS, a new value causes the scroll view to perform an animated scroll to the new offset. 
The {@link Titanium.UI.ScrollView#method-setContentOffset} method can be used to prevent this animation.</p>
 */
Titanium.UI.ScrollView.contentOffset = null;

/**
 * @property contentWidth
 * @type Number/String
 * <p>Width of the scrollable region.</p>
 * @description <p>While <code>auto</code> and absolute dimensions are supported, relative values, such as those provided 
in percentages, are not. The minimum value for contentWidth is the width of the scroll view.</p>
 */
Titanium.UI.ScrollView.contentWidth = null;

/**
 * @property [disableBounce=false]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether scroll bounce of the scrollable region is enabled.</p>
 * @description <p>Set to <code>true</code> to disable horizontal and vertical bounce.</p>
<p>This property takes precedence over the <code>horizontalBounce</code> and <code>verticalBounce</code> properties.</p>
 */
Titanium.UI.ScrollView.disableBounce = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.ScrollView.enabled = null;

/**
 * @property [horizontalBounce=true]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether horizontal scroll bounce of the scrollable region is enabled.</p>
 * @description <p>With the default value of <code>true</code>, dragging in the horizontal direction is always allowed and 
also bounces.</p>
<p>Set to <code>false</code> to disable horizontal scroll bounce if the horizontal content is smaller than 
the scroll view bounds. However, larger content will still bounce when scrolled.</p>
<p>Note that the <code>disableBounce</code> property takes precedence over the <code>horizontalBounce</code> and 
<code>verticalBounce</code> properties.</p>
 */
Titanium.UI.ScrollView.horizontalBounce = null;

/**
 * @property [maxZoomScale=1.0]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Maximum scaling factor of the scrollable region and its content.</p>
 * @description <p>This value determines how large the content can be scaled. 
It must be greater than the {@link Titanium.UI.ScrollView#property-minZoomScale minimum zoom scale} for zooming to be enabled. 
The default value is 1.0 unless otherwise specified.</p>
<p>Note that specifying a value less than or equal to 0 will hide all contents of the scroll view.</p>
 */
Titanium.UI.ScrollView.maxZoomScale = null;

/**
 * @property [minZoomScale=1.0]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Minimum scaling factor of the scrollable region and its content.</p>
 * @description <p>This value determines how small the content can be scaled. 
It must be less than the {@link Titanium.UI.ScrollView#property-maxZoomScale maximum zoom scale} for zooming to be enabled. 
The default value is 1.0 unless otherwise specified.</p>
 */
Titanium.UI.ScrollView.minZoomScale = null;

/**
 * @property [overScrollMode=Titanium.UI.Android.OVER_SCROLL_ALWAYS]
 * @type Number
 * @platform android 3.1
 * <p>One of {@link Titanium.UI.Android#property-OVER_SCROLL_ALWAYS}, {@link Titanium.UI.Android#property-OVER_SCROLL_IF_CONTENT_SCROLLS}, or {@link Titanium.UI.Android#property-OVER_SCROLL_NEVER}. </p>
 */
Titanium.UI.ScrollView.overScrollMode = null;

/**
 * @property [scrollIndicatorStyle={@link Titanium.UI.iPhone.ScrollIndicatorStyle#property-DEFAULT}]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Style of the scrollbar, specified using one of the constants from 
{@link Titanium.UI.iPhone.ScrollIndicatorStyle}.</p>
 */
Titanium.UI.ScrollView.scrollIndicatorStyle = null;

/**
 * @property scrollType
 * @type String
 * @platform android 0.9
 * @creationOnly
 * <p>Limits the direction of the scrollable region, overriding the deduced setting. Set to 
<code>horizontal</code> or <code>vertical</code>.</p>
 * @description <p>See the {@link Titanium.UI.ScrollView scrollView} description for more details about how the 
scroll direction is deduced when this property is not defined.</p>
 */
Titanium.UI.ScrollView.scrollType = null;

/**
 * @property [scrollingEnabled=true]
 * @type Boolean
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * <p>Determines whether scrolling is enabled for the view.</p>
 */
Titanium.UI.ScrollView.scrollingEnabled = null;

/**
 * @property [scrollsToTop=true]
 * @type Boolean
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Controls whether the scroll-to-top gesture is effective.</p>
 * @description <p>The scroll-to-top gesture is a tap on the status bar; The default value of this property is true. 
This gesture works when you have a single visible scroll view.
If there are multiple table views, web views, text areas, and/or scroll views visible,
you will need to disable (set to false) on the above views you DON'T want this
behaviour on. The remaining view will then respond to scroll-to-top gesture. </p>
 */
Titanium.UI.ScrollView.scrollsToTop = null;

/**
 * @property [showHorizontalScrollIndicator=false]
 * @type Boolean
 * <p>Determines whether the horizontal scroll indicator is visible.</p>
 * @description <p>Set to <code>true</code> to show the horizontal scroll indicator.</p>
 */
Titanium.UI.ScrollView.showHorizontalScrollIndicator = null;

/**
 * @property [showVerticalScrollIndicator=false]
 * @type Boolean
 * <p>Determines whether the vertical scroll indicator is visible.</p>
 * @description <p>Set to <code>true</code> to show the vertical scroll indicator.</p>
 */
Titanium.UI.ScrollView.showVerticalScrollIndicator = null;

/**
 * @property [verticalBounce=true]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether vertical scroll bounce of the scrollable region is enabled.</p>
 * @description <p>With the default value of <code>true</code>, dragging in the vertical direction is always allowed and 
also bounces.</p>
<p>Set to <code>false</code> to disable vertical scroll bounce if the vertical content is smaller than 
the scroll view bounds. However, larger content will still bounce when scrolled.</p>
<p>Note that the <code>disableBounce</code> property takes precedence over the <code>horizontalBounce</code> and 
<code>verticalBounce</code> properties.</p>
 */
Titanium.UI.ScrollView.verticalBounce = null;

/**
 * @property [zoomScale=1]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Scaling factor of the scroll view's content.</p>
 * @description <p>This value is bound by the {@link Titanium.UI.ScrollView#property-minZoomScale minZoomScale} and {@link Titanium.UI.ScrollView#property-maxZoomScale maxZoomScale} properties.</p>
 */
Titanium.UI.ScrollView.zoomScale = null;

/**
 * @class Titanium.UI.ScrollableView
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A view that encapsulates a horizontally-scrolling set of child views, known as pages, navigable 
using its built-in horizontal swipe gestures.</p>
 * @description <p>Use the {@link Titanium.UI#method-createScrollableView} method to create a scrollable view.</p>
<p>The <code>ScrollableView</code> supports an on-screen paging control to indicate whether a previous or next 
page exists. When the paging control is enabled on iOS or Mobile Web, by default it appears as 
small dots on the bottom of the screen, whereas Android displays arrows on the left and 
right-hand sides. </p>
<p>Only the <code>scroll</code> event exists for the <code>ScrollableView</code> on Android. To support others, child 
views may be added to pages, and event listeners added to these views instead of the pages 
themselves. </p>
<p>In a previous Titanium version for iOS, the <code>maxZoomScale</code> and <code>minZoomScale</code> properties were 
removed for performance and parity reasons. As they still remain in {@link Titanium.UI.ScrollView}, 
the equivalent functionality may be obtained by adding a <code>ScrollView</code> to <code>ScrollableView</code>. See 
the "Simple Scrollable View with 2 Zoomable Images" example for a demonstration.</p>
 * <h3>Examples</h3>
 * <h4>Simple Scrollable View with 3 Views</h4>
 * <p><p>Create three views and assign them as pages to a scrollable view.</p></p><pre>var win = Ti.UI.createWindow();

var view1 = Ti.UI.createView({ backgroundColor:'#123' });
var view2 = Ti.UI.createView({ backgroundColor:'#246' });
var view3 = Ti.UI.createView({ backgroundColor:'#48b' });

var scrollableView = Ti.UI.createScrollableView({
  views:[view1,view2,view3],
  showPagingControl:true
});

win.add(scrollableView);
win.open();
</pre>
 * <h4>Simple Scrollable View with 2 Zoomable Images</h4>
 * <p><p>Create two scroll views, each containing an image view, and assign them as pages to a 
scrollable view.</p></p><pre>var img1 = Ti.UI.createImageView({
    image:'http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/' +
    'Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg/' +
    '402px-Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg'
});
var img1Wrapper = Ti.UI.createScrollView({
    maxZoomScale:4.0,
});
img1Wrapper.add(img1);

var img2 = Ti.UI.createImageView({
    image:'http://www.nasa.gov/images/content/' + 
    '616903main_rover_comparison1600_1600-1200.jpg'
});
var img2Wrapper = Ti.UI.createScrollView({
    maxZoomScale:4.0,
});
img2Wrapper.add(img2);
var photosView = Ti.UI.createScrollableView({
    showPagingControl:true,
    views:[img1Wrapper, img2Wrapper]
});
win.add(photosView);</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>First example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win"&gt;
        &lt;ScrollableView id="scrollableView" showPagingControl="true"&gt;
            &lt;View id="view1" backgroundColor="#123" /&gt;
            &lt;View id="view2" backgroundColor="#246" /&gt;
            &lt;View id="view3" backgroundColor="#48b" /&gt;
        &lt;/ScrollableView&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.ScrollableView = {};





















/**
 * @method addView
 * <p>Adds a new page to this Scrollable View.</p>
 * @param {Titanium.UI.View} view 
 * <p>The page to add.</p>
 * @return void
*/
Titanium.UI.ScrollableView.addView = function(view){};

/**
 * @method getCacheSize
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-cacheSize cacheSize} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.getCacheSize = function(){};

/**
 * @method getClipViews
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-clipViews clipViews} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.getClipViews = function(){};

/**
 * @method getCurrentPage
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-currentPage currentPage} property.</p>
 * @return {Number} 
*/
Titanium.UI.ScrollableView.getCurrentPage = function(){};

/**
 * @method getDisableBounce
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-disableBounce disableBounce} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.getDisableBounce = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.ScrollableView.getEnabled = function(){};

/**
 * @method getHitRect
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-hitRect hitRect} property.</p>
 * @return {Dimension} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.getHitRect = function(){};

/**
 * @method getOverScrollMode
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-overScrollMode overScrollMode} property.</p>
 * @return {Number} 
 * @platform android 3.1
*/
Titanium.UI.ScrollableView.getOverScrollMode = function(){};

/**
 * @method getOverlayEnabled
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-overlayEnabled overlayEnabled} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.getOverlayEnabled = function(){};

/**
 * @method getPagingControlAlpha
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlAlpha pagingControlAlpha} property.</p>
 * @return {Number} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.getPagingControlAlpha = function(){};

/**
 * @method getPagingControlColor
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlColor pagingControlColor} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.getPagingControlColor = function(){};

/**
 * @method getPagingControlHeight
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlHeight pagingControlHeight} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.getPagingControlHeight = function(){};

/**
 * @method getPagingControlOnTop
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlOnTop pagingControlOnTop} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.getPagingControlOnTop = function(){};

/**
 * @method getPagingControlTimeout
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlTimeout pagingControlTimeout} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollableView.getPagingControlTimeout = function(){};

/**
 * @method getScrollingEnabled
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-scrollingEnabled scrollingEnabled} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollableView.getScrollingEnabled = function(){};

/**
 * @method getShowPagingControl
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-showPagingControl showPagingControl} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.ScrollableView.getShowPagingControl = function(){};

/**
 * @method getViews
 * <p>Gets the value of the {@link Titanium.UI.ScrollableView#property-views views} property.</p>
 * @return {Titanium.UI.View[]} 
*/
Titanium.UI.ScrollableView.getViews = function(){};

/**
 * @method moveNext
 * <p>Sets the current page to the next consecutive page in {@link Titanium.UI.ScrollableView#property-views}.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.ScrollableView.moveNext = function(){};

/**
 * @method movePrevious
 * <p>Sets the current page to the previous consecutive page in {@link Titanium.UI.ScrollableView#property-views}.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.ScrollableView.movePrevious = function(){};

/**
 * @method removeView
 * <p>Removes an existing page from this Scrollable View.</p>
 * @description <p>On Android and Mobile Web, does nothing if the page does not exist in 
{@link Titanium.UI.ScrollableView#property-views}. </p>
<p>On iOS, throws an exception if the page does not exist in {@link Titanium.UI.ScrollableView#property-views} 
or the index is invalid.</p>
 * @param {Number/Titanium.UI.View} view 
 * <p>A {@link Titanium.UI.View} object (all platforms) or integer index (iPhone, iPad only) of 
a page to remove.</p>
 * @return void
*/
Titanium.UI.ScrollableView.removeView = function(view){};

/**
 * @method scrollToView
 * <p>Scrolls to the specified page in {@link Titanium.UI.ScrollableView#property-views}.</p>
 * @param {Number/Titanium.UI.View} view 
 * <p>An integer index or {@link Titanium.UI.View} object to set as the current page.</p>
 * @return void
*/
Titanium.UI.ScrollableView.scrollToView = function(view){};

/**
 * @method setCacheSize
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-cacheSize cacheSize} property.</p>
 * @param {Number} cacheSize 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.setCacheSize = function(cacheSize){};

/**
 * @method setCurrentPage
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-currentPage currentPage} property.</p>
 * @param {Number} currentPage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ScrollableView.setCurrentPage = function(currentPage){};

/**
 * @method setDisableBounce
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-disableBounce disableBounce} property.</p>
 * @param {Boolean} disableBounce 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.setDisableBounce = function(disableBounce){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.ScrollableView.setEnabled = function(){};

/**
 * @method setHitRect
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-hitRect hitRect} property.</p>
 * @param {Dimension} hitRect 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.setHitRect = function(hitRect){};

/**
 * @method setOverScrollMode
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-overScrollMode overScrollMode} property.</p>
 * @param {Number} overScrollMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Titanium.UI.ScrollableView.setOverScrollMode = function(overScrollMode){};

/**
 * @method setOverlayEnabled
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-overlayEnabled overlayEnabled} property.</p>
 * @param {Boolean} overlayEnabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.setOverlayEnabled = function(overlayEnabled){};

/**
 * @method setPagingControlAlpha
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlAlpha pagingControlAlpha} property.</p>
 * @param {Number} pagingControlAlpha 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.setPagingControlAlpha = function(pagingControlAlpha){};

/**
 * @method setPagingControlColor
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlColor pagingControlColor} property.</p>
 * @param {String} pagingControlColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.setPagingControlColor = function(pagingControlColor){};

/**
 * @method setPagingControlHeight
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlHeight pagingControlHeight} property.</p>
 * @param {Number} pagingControlHeight 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.ScrollableView.setPagingControlHeight = function(pagingControlHeight){};

/**
 * @method setPagingControlOnTop
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-pagingControlOnTop pagingControlOnTop} property.</p>
 * @param {Boolean} pagingControlOnTop 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.ScrollableView.setPagingControlOnTop = function(pagingControlOnTop){};

/**
 * @method setScrollingEnabled
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-scrollingEnabled scrollingEnabled} property.</p>
 * @param {Boolean} scrollingEnabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.ScrollableView.setScrollingEnabled = function(scrollingEnabled){};

/**
 * @method setShowPagingControl
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-showPagingControl showPagingControl} property.</p>
 * @param {Boolean} showPagingControl 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ScrollableView.setShowPagingControl = function(showPagingControl){};

/**
 * @method setViews
 * <p>Sets the value of the {@link Titanium.UI.ScrollableView#property-views views} property.</p>
 * @param {Titanium.UI.View[]} views 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.ScrollableView.setViews = function(views){};

/**
 * @property cacheSize
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Number of pages to cache (pre-render).</p>
 * @description <p>Pages are rendered in the range (currentPage +/- (cacheSize - 1)/2), <em>rounded down</em> for even 
values (i.e. cacheSize=4 renders 3 pages into the cache.) Keep in mind that improved 
performance (larger cache) will lead to faster performance, but greater memory usage.</p>
 */
Titanium.UI.ScrollableView.cacheSize = null;

/**
 * @property [clipViews=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @creationOnly
 * <p>Determines whether the previous and next pages are clipped, so that they are not visible 
adjacent to the current page.</p>
 * @description <p>Set to <code>false</code> to allow the previous or next pages to be seen. Note that 
ScrollableView's {@link Titanium.UI.ScrollableView#property-width width} must be smaller than its parent 
view in order to make this property effective.</p>
 */
Titanium.UI.ScrollableView.clipViews = null;

/**
 * @property currentPage
 * @type Number
 * <p>Index of the active page.</p>
 */
Titanium.UI.ScrollableView.currentPage = null;

/**
 * @property [disableBounce=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether page bouncing effect is disabled.</p>
 */
Titanium.UI.ScrollableView.disableBounce = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.ScrollableView.enabled = null;

/**
 * @property [hitRect=undefined (hit against size of view)]
 * @type Dimension
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Sets the region where this view responds to gestures.</p>
 * @description <p>This property is particularly useful when {@link Titanium.UI.ScrollableView#property-clipViews clipViews} 
is set to <code>false</code> and the dimension of this view is small, to create a larger area for the 
user to perform swipe gestures against. </p>
<p>Note that the <code>x</code> and <code>y</code> values specified are relative to the position of the view.</p>
 */
Titanium.UI.ScrollableView.hitRect = null;

/**
 * @property [overScrollMode=Titanium.UI.Android.OVER_SCROLL_ALWAYS]
 * @type Number
 * @platform android 3.1
 * <p>One of {@link Titanium.UI.Android#property-OVER_SCROLL_ALWAYS}, {@link Titanium.UI.Android#property-OVER_SCROLL_IF_CONTENT_SCROLLS}, or {@link Titanium.UI.Android#property-OVER_SCROLL_NEVER}. </p>
 */
Titanium.UI.ScrollableView.overScrollMode = null;

/**
 * @property [overlayEnabled=false]
 * @type Boolean
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Determines whether the paging control is added as an overlay to the view.</p>
 * @description <p>If this property is set to <code>true</code>, the view takes up the entire height available in the 
parent view and the paging control is placed over the view. It is advisable to set an 
appropriate value for {@link Titanium.UI.ScrollableView#property-pagingControlAlpha pagingControlAlpha} 
along with this property, so that the underlying view content may be seen properly.</p>
 */
Titanium.UI.ScrollableView.overlayEnabled = null;

/**
 * @property [pagingControlAlpha=1.0]
 * @type Number
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Alpha value of the paging control.</p>
 */
Titanium.UI.ScrollableView.pagingControlAlpha = null;

/**
 * @property [pagingControlColor=black]
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Color of the paging control, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.ScrollableView.pagingControlColor = null;

/**
 * @property [pagingControlHeight=20]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Height of the paging control, in pixels.</p>
 */
Titanium.UI.ScrollableView.pagingControlHeight = null;

/**
 * @property [pagingControlOnTop=false]
 * @type Boolean
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Determines whether the paging control is displayed at the top or bottom of the view.</p>
 * @description <p>Set to <code>true</code> for the paging control at the top.</p>
 */
Titanium.UI.ScrollableView.pagingControlOnTop = null;

/**
 * @property [pagingControlTimeout=3000]
 * @type Number
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @creationOnly
 * <p>Number of milliseconds to wait before hiding the paging control.</p>
 * @description <p>Set to less than or equal to <code>0</code> to disable timeout, to keep controls displayed.</p>
 */
Titanium.UI.ScrollableView.pagingControlTimeout = null;

/**
 * @property [scrollingEnabled=undefined (scrolling enabled)]
 * @type Boolean
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform android 2.1
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * <p>Determines whether scrolling is enabled for the view.</p>
 * @description <p>If this property is unset or <code>true</code>, scrolling is enabled.</p>
 */
Titanium.UI.ScrollableView.scrollingEnabled = null;

/**
 * @property [showPagingControl=false]
 * @type Boolean
 * <p>Determines whether the paging control is visible.</p>
 * @description <p>Set to <code>true</code> to show paging control.</p>
 */
Titanium.UI.ScrollableView.showPagingControl = null;

/**
 * @property views
 * @type Titanium.UI.View[]
 * <p>Sets the pages within this Scrollable View.</p>
 */
Titanium.UI.ScrollableView.views = null;

/**
 * @class Titanium.UI.SearchBar
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.UI.View
 * <p>A specialized text field for entering search text.</p>
 * @description <p>The <code>SearchBar</code> object is closely modeled on an iOS native search bar.
As such, not all features are supported on other platforms.</p>
<p>Search bars are most commonly used for filtering the rows in a {@link Titanium.UI.TableView TableView}.
You can add a search bar to a table view by setting the table view's 
{@link Titanium.UI.TableView#property-search search} property. </p>
<p>A search bar can also be used without a table view.</p>
<p>Use the {@link Titanium.UI#method-createSearchBar} method to create a search bar.</p>
<h4>Android Platform Implementation Notes</h4>
<p>On Android, there are several issues with the current implementation:</p>
<ul>
<li>
<p>The cancel button does not work. It does not clear the search bar text or 
  close the onscreen keyboard.</p>
</li>
<li>
<p>Calling the <code>blur</code> method on the search bar closes the onscreen keyboard, 
  but the search bar retains its focused appearance.</p>
</li>
<li>
<p>The search bar does not lose focus when the user clicks on a row in the search
  results.</p>
</li>
<li>
<p>The <code>value</code> property cannot be specified in the <code>createSearchBar</code> method.</p>
</li>
</ul>
<p>To use a search bar on Android, you may need to explicitly control the focus and
clearing of the search bar, depending on your desired behavior. For example, to clear
the search bar and dismiss the onscreen keyboard when the user selects a row, you
could add code like this to the <code>click</code> event handler on your table view:</p>
<pre><code>myTableView.addEventListener('click', function(e) {
    if (Ti.Platform.name === 'android') {
        // Clear search bar
        mySearchBar.value ="";
        // hiding and showing the search bar forces it back to its non-focused appearance.
        mySearchBar.hide();
        mySearchBar.show();
    }
    // standard click event handling here
</code></pre>
 * <h3>Examples</h3>
 * <h4>Simple Search Bar</h4>
 * <pre>
var search = Titanium.UI.createSearchBar({
barColor:'#000', 
showCancel:true,
height:43,
top:0,
});</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;SearchBar id="search" barColor="#000" showCancel="true" height="43" top="0" /&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.SearchBar = {};







/**
 * @method add 
 * @hide
*/Titanium.UI.SearchBar.add = function(){};

/**
 * @method blur
 * <p>Causes the search bar to lose focus.</p>
 * @return void
*/
Titanium.UI.SearchBar.blur = function(){};

/**
 * @method focus
 * <p>Causes the search bar to gain focus.</p>
 * @return void
*/
Titanium.UI.SearchBar.focus = function(){};

/**
 * @method getAutocapitalization
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-autocapitalization autocapitalization} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.getAutocapitalization = function(){};

/**
 * @method getAutocorrect
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-autocorrect autocorrect} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.getAutocorrect = function(){};

/**
 * @method getBarColor
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-barColor barColor} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.getBarColor = function(){};

/**
 * @method getHintText
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-hintText hintText} property.</p>
 * @return {String} 
*/
Titanium.UI.SearchBar.getHintText = function(){};

/**
 * @method getHinttextid
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-hinttextid hinttextid} property.</p>
 * @return {String} 
*/
Titanium.UI.SearchBar.getHinttextid = function(){};

/**
 * @method getKeyboardType
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-keyboardType keyboardType} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.getKeyboardType = function(){};

/**
 * @method getPrompt
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-prompt prompt} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.getPrompt = function(){};

/**
 * @method getPromptid
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-promptid promptid} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.getPromptid = function(){};

/**
 * @method getShowBookmark
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-showBookmark showBookmark} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.getShowBookmark = function(){};

/**
 * @method getShowCancel
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-showCancel showCancel} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.SearchBar.getShowCancel = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.SearchBar#property-value value} property.</p>
 * @return {String} 
*/
Titanium.UI.SearchBar.getValue = function(){};

/**
 * @method removeAllChildren 
 * @hide
*/Titanium.UI.SearchBar.removeAllChildren = function(){};

/**
 * @method setAutocapitalization
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-autocapitalization autocapitalization} property.</p>
 * @param {Number} autocapitalization 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.setAutocapitalization = function(autocapitalization){};

/**
 * @method setAutocorrect
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-autocorrect autocorrect} property.</p>
 * @param {Boolean} autocorrect 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.setAutocorrect = function(autocorrect){};

/**
 * @method setBarColor
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-barColor barColor} property.</p>
 * @param {String} barColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.setBarColor = function(barColor){};

/**
 * @method setHintText
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-hintText hintText} property.</p>
 * @param {String} hintText 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.SearchBar.setHintText = function(hintText){};

/**
 * @method setHinttextid
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-hinttextid hinttextid} property.</p>
 * @param {String} hinttextid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.SearchBar.setHinttextid = function(hinttextid){};

/**
 * @method setKeyboardType
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-keyboardType keyboardType} property.</p>
 * @param {Number} keyboardType 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.setKeyboardType = function(keyboardType){};

/**
 * @method setPrompt
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-prompt prompt} property.</p>
 * @param {String} prompt 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.setPrompt = function(prompt){};

/**
 * @method setPromptid
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-promptid promptid} property.</p>
 * @param {String} promptid 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.setPromptid = function(promptid){};

/**
 * @method setShowBookmark
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-showBookmark showBookmark} property.</p>
 * @param {Boolean} showBookmark 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.SearchBar.setShowBookmark = function(showBookmark){};

/**
 * @method setShowCancel
 * <p>Shows or hides the cancel button.</p>
 * @description <p>Sets the value of the {@link Titanium.UI.SearchBar#property-showCancel showCancel} property.</p>
<p>On iOS, this method can be used to specify animation properties when changing the
state of the cancel button. </p>
<pre><code>searchBar.setShowCancel(true, { animated: true });
</code></pre>
 * @param {Boolean} showCancel 
 * <p>New value for {@link Titanium.UI.SearchBar#property-showCancel showCancel}.</p>
 * @param {Dictionary} [animated=No animation.] (optional)
 * <p>Dictionary of animation properties. Currently only a
single boolean property, <code>animated</code> is supported. Only used on iOS.</p>
 * @return void
*/
Titanium.UI.SearchBar.setShowCancel = function(showCancel, arg){};

/**
 * @method setValue
 * <p>Sets the value of the {@link Titanium.UI.SearchBar#property-value value} property.</p>
 * @param {String} value 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.SearchBar.setValue = function(value){};

/**
 * @property [autocapitalization=No autocapitalization.]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines how text is capitalized during typing.</p>
 * @description <p>Specify one of the following constants from {@link Titanium.UI}: 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_NONE TEXT_AUTOCAPITALIZATION_NONE}, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_WORDS TEXT_AUTOCAPITALIZATION_WORDS}, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_SENTENCES TEXT_AUTOCAPITALIZATION_SENTENCES}, or 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_ALL TEXT_AUTOCAPITALIZATION_ALL}.</p>
 */
Titanium.UI.SearchBar.autocapitalization = null;

/**
 * @property [autocorrect=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether the text in the search bar is autocorrected during typing.</p>
 */
Titanium.UI.SearchBar.autocorrect = null;

/**
 * @property [barColor=System default bar color.]
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Bar color of the search bar view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>On iOS, <code>barColor</code> specifies the color of the "frame" around the search text field.</p>
 */
Titanium.UI.SearchBar.barColor = null;

/**
 * @property [hintText=On iOS, "Search"; on Android, no hint text.]
 * @type String
 * <p>Text to show when the search bar field is not focused.</p>
 */
Titanium.UI.SearchBar.hintText = null;

/**
 * @property hinttextid
 * @type String
 * <p>Key identifying a string from the locale file to use for the
{@link Titanium.UI.SearchBar#property-hintText hintText} property.</p>
 * @description <p>Only one of <code>hintText</code> or <code>hinttextid</code> should be specified.</p>
 */
Titanium.UI.SearchBar.hinttextid = null;

/**
 * @property [keyboardType=System default keyboard.]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Keyboard type constant to use when the field is focused.</p>
 */
Titanium.UI.SearchBar.keyboardType = null;

/**
 * @property [prompt=No prompt.]
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Single line of text displayed at the top of the search bar.</p>
 */
Titanium.UI.SearchBar.prompt = null;

/**
 * @property promptid
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Key identifying a string from the locale file to use for the
{@link Titanium.UI.SearchBar#property-prompt prompt} property.</p>
 */
Titanium.UI.SearchBar.promptid = null;

/**
 * @property [showBookmark=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether the bookmark button is displayed.</p>
 */
Titanium.UI.SearchBar.showBookmark = null;

/**
 * @property [showCancel=false]
 * @type Boolean
 * <p>Determines whether the cancel button is displayed.</p>
 * @description <p>On iOS, you can specify that showing and hiding the cancel button should be animated.
The change is not animated by default. To enable animation, call 
{@link Titanium.UI.SearchBar#method-setShowCancel setShowCancel}.</p>
 */
Titanium.UI.SearchBar.showCancel = null;

/**
 * @property value
 * @type String
 * <p>Value of the search bar.</p>
 * @description <p>On Android, the value cannot be set until after the search bar is created.</p>
 */
Titanium.UI.SearchBar.value = null;

/**
 * @class Titanium.UI.Slider
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A slider component with a draggable thumb.</p>
 * @description <p>A slider lets the user select from a range of values by dragging the slider thumb. </p>
<p>Use the {@link Titanium.UI#method-createSlider} method to create a slider.</p>
<h4>Android Platform Implementation Notes</h4>
<p>On Android, the user can also maniuplate the slider using the arrow keys. For this
reason, placing other focusable UI elements to the left or right of
the slider is not recommended.</p>
<p>On Android, both <code>min</code> and <code>max</code> must be specified for the slider to work properly.</p>
 * <h3>Examples</h3>
 * <h4>Simple Slider</h4>
 * <p><p>The following sample demonstrates creating a slider and adding a listener to 
handle the change events.</p></p><pre>var slider = Titanium.UI.createSlider({
    top: 50,
    min: 0,
    max: 100,
    width: '100%',
    value: 50
    });
    
var label = Ti.UI.createLabel({
    text: slider.value,
    width: '100%',
    height: 'auto',
    top: 30,
    left: 0,
    textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER
    });

slider.addEventListener('change', function(e) {
    label.text = String.format("%3.1f", e.value);
});</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p>
<p>Implement the <code>updateLabel</code> callback in the controller to update the label value
and set the initial <code>text</code> value for the label in the TSS file or controller.</p>
<p>sliderexample.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;Slider id="slider" top="50" min="0" max="100" width="100%" value="50" onChange="updateLabel"/&gt;
        &lt;Label id="label" width="100%" top="30" left="0" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>sliderexample.js:</p></p><pre>$.slider.text = $.slider.value;
function updateLabel(e){
    $.label.text = String.format("%3.1f", e.value);
}</pre>
 */
Titanium.UI.Slider = {};






/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to a <code>Slider</code> is not supported on all platforms.</p>
<p>If you need to display views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.add = function(view){};

/**
 * @method getDisabledLeftTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-disabledLeftTrackImage disabledLeftTrackImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getDisabledLeftTrackImage = function(){};

/**
 * @method getDisabledRightTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-disabledRightTrackImage disabledRightTrackImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getDisabledRightTrackImage = function(){};

/**
 * @method getDisabledThumbImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-disabledThumbImage disabledThumbImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getDisabledThumbImage = function(){};

/**
 * @method getEnabled
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-enabled enabled} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.UI.Slider.getEnabled = function(){};

/**
 * @method getHighlightedLeftTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-highlightedLeftTrackImage highlightedLeftTrackImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getHighlightedLeftTrackImage = function(){};

/**
 * @method getHighlightedRightTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-highlightedRightTrackImage highlightedRightTrackImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getHighlightedRightTrackImage = function(){};

/**
 * @method getHighlightedThumbImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-highlightedThumbImage highlightedThumbImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getHighlightedThumbImage = function(){};

/**
 * @method getLeftTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-leftTrackImage leftTrackImage} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getLeftTrackImage = function(){};

/**
 * @method getLeftTrackLeftCap
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-leftTrackLeftCap leftTrackLeftCap} property.</p>
 * @return {Number} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.getLeftTrackLeftCap = function(){};

/**
 * @method getLeftTrackTopCap
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-leftTrackTopCap leftTrackTopCap} property.</p>
 * @return {Number} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.getLeftTrackTopCap = function(){};

/**
 * @method getMax
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-max max} property.</p>
 * @return {Number} 
*/
Titanium.UI.Slider.getMax = function(){};

/**
 * @method getMaxRange
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-maxRange maxRange} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Slider.getMaxRange = function(){};

/**
 * @method getMin
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-min min} property.</p>
 * @return {Number} 
*/
Titanium.UI.Slider.getMin = function(){};

/**
 * @method getMinRange
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-minRange minRange} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Slider.getMinRange = function(){};

/**
 * @method getRightTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-rightTrackImage rightTrackImage} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getRightTrackImage = function(){};

/**
 * @method getRightTrackLeftCap
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-rightTrackLeftCap rightTrackLeftCap} property.</p>
 * @return {Number} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.getRightTrackLeftCap = function(){};

/**
 * @method getRightTrackTopCap
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-rightTrackTopCap rightTrackTopCap} property.</p>
 * @return {Number} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.getRightTrackTopCap = function(){};

/**
 * @method getSelectedLeftTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-selectedLeftTrackImage selectedLeftTrackImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getSelectedLeftTrackImage = function(){};

/**
 * @method getSelectedRightTrackImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-selectedRightTrackImage selectedRightTrackImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getSelectedRightTrackImage = function(){};

/**
 * @method getSelectedThumbImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-selectedThumbImage selectedThumbImage} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getSelectedThumbImage = function(){};

/**
 * @method getThumbImage
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-thumbImage thumbImage} property.</p>
 * @return {String/Titanium.Blob} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.getThumbImage = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.Slider#property-value value} property.</p>
 * @return {String} 
*/
Titanium.UI.Slider.getValue = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.Label#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.remove = function(view){};

/**
 * @method setDisabledLeftTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-disabledLeftTrackImage disabledLeftTrackImage} property.</p>
 * @param {String} disabledLeftTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setDisabledLeftTrackImage = function(disabledLeftTrackImage){};

/**
 * @method setDisabledRightTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-disabledRightTrackImage disabledRightTrackImage} property.</p>
 * @param {String} disabledRightTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setDisabledRightTrackImage = function(disabledRightTrackImage){};

/**
 * @method setDisabledThumbImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-disabledThumbImage disabledThumbImage} property.</p>
 * @param {String} disabledThumbImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setDisabledThumbImage = function(disabledThumbImage){};

/**
 * @method setEnabled
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-enabled enabled} property.</p>
 * @param {Boolean} enabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Slider.setEnabled = function(enabled){};

/**
 * @method setHighlightedLeftTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-highlightedLeftTrackImage highlightedLeftTrackImage} property.</p>
 * @param {String} highlightedLeftTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setHighlightedLeftTrackImage = function(highlightedLeftTrackImage){};

/**
 * @method setHighlightedRightTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-highlightedRightTrackImage highlightedRightTrackImage} property.</p>
 * @param {String} highlightedRightTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setHighlightedRightTrackImage = function(highlightedRightTrackImage){};

/**
 * @method setHighlightedThumbImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-highlightedThumbImage highlightedThumbImage} property.</p>
 * @param {String} highlightedThumbImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setHighlightedThumbImage = function(highlightedThumbImage){};

/**
 * @method setLeftTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-leftTrackImage leftTrackImage} property.</p>
 * @param {String} leftTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setLeftTrackImage = function(leftTrackImage){};

/**
 * @method setLeftTrackLeftCap
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-leftTrackLeftCap leftTrackLeftCap} property.</p>
 * @param {Number} leftTrackLeftCap 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.setLeftTrackLeftCap = function(leftTrackLeftCap){};

/**
 * @method setLeftTrackTopCap
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-leftTrackTopCap leftTrackTopCap} property.</p>
 * @param {Number} leftTrackTopCap 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.setLeftTrackTopCap = function(leftTrackTopCap){};

/**
 * @method setMax
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-max max} property.</p>
 * @param {Number} max 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Slider.setMax = function(max){};

/**
 * @method setMaxRange
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-maxRange maxRange} property.</p>
 * @param {Number} maxRange 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Slider.setMaxRange = function(maxRange){};

/**
 * @method setMin
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-min min} property.</p>
 * @param {Number} min 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Slider.setMin = function(min){};

/**
 * @method setMinRange
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-minRange minRange} property.</p>
 * @param {Number} minRange 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Slider.setMinRange = function(minRange){};

/**
 * @method setRightTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-rightTrackImage rightTrackImage} property.</p>
 * @param {String} rightTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setRightTrackImage = function(rightTrackImage){};

/**
 * @method setRightTrackLeftCap
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-rightTrackLeftCap rightTrackLeftCap} property.</p>
 * @param {Number} rightTrackLeftCap 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.setRightTrackLeftCap = function(rightTrackLeftCap){};

/**
 * @method setRightTrackTopCap
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-rightTrackTopCap rightTrackTopCap} property.</p>
 * @param {Number} rightTrackTopCap 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.Slider.setRightTrackTopCap = function(rightTrackTopCap){};

/**
 * @method setSelectedLeftTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-selectedLeftTrackImage selectedLeftTrackImage} property.</p>
 * @param {String} selectedLeftTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setSelectedLeftTrackImage = function(selectedLeftTrackImage){};

/**
 * @method setSelectedRightTrackImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-selectedRightTrackImage selectedRightTrackImage} property.</p>
 * @param {String} selectedRightTrackImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setSelectedRightTrackImage = function(selectedRightTrackImage){};

/**
 * @method setSelectedThumbImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-selectedThumbImage selectedThumbImage} property.</p>
 * @param {String} selectedThumbImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setSelectedThumbImage = function(selectedThumbImage){};

/**
 * @method setThumbImage
 * <p>Sets the value of the {@link Titanium.UI.Slider#property-thumbImage thumbImage} property.</p>
 * @param {String/Titanium.Blob} thumbImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Slider.setThumbImage = function(thumbImage){};

/**
 * @method setValue
 * <p>Sets the {@link Titanium.UI.Slider#property-value value} property.</p>
 * @description <p>On iOS, you can specify that the value change should be animated by passing the 
optional <code>options</code> parameter. </p>
 * @param {Number} value 
 * <p>New value for the {@link Titanium.UI.Slider#property-value value} property.</p>
 * @param {Dictionary} options (optional)
 * <p>Specifies animation options. The only supported property
for this dictionary is the <code>animated</code> flag, which specifies whether
the value change should be animated. <code>animated</code> is false by default. Only used
on iOS.</p>
 * @return void
*/
Titanium.UI.Slider.setValue = function(value, options){};

/**
 * @property disabledLeftTrackImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider left track when in the disabled state.</p>
 */
Titanium.UI.Slider.disabledLeftTrackImage = null;

/**
 * @property disabledRightTrackImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider right track when in the disabled state.</p>
 */
Titanium.UI.Slider.disabledRightTrackImage = null;

/**
 * @property disabledThumbImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider thumb when in the disabled state.</p>
 */
Titanium.UI.Slider.disabledThumbImage = null;

/**
 * @property [enabled=Slider is enabled by default (property value may be <code>undefined</code>).]
 * @type Boolean
 * @platform android 0.8
 * <p>Boolean to indicate the enabled state of the slider.</p>
 * @description <p>Set to <code>true</code> to enable or <code>false</code> to disable the view.</p>
 */
Titanium.UI.Slider.enabled = null;

/**
 * @property highlightedLeftTrackImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider left track when in the highlighted state.</p>
 */
Titanium.UI.Slider.highlightedLeftTrackImage = null;

/**
 * @property highlightedRightTrackImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider right track when in the highlighted state.</p>
 */
Titanium.UI.Slider.highlightedRightTrackImage = null;

/**
 * @property highlightedThumbImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider thumb when in the highlighted state.</p>
 */
Titanium.UI.Slider.highlightedThumbImage = null;

/**
 * @property leftTrackImage
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider left track.</p>
 */
Titanium.UI.Slider.leftTrackImage = null;

/**
 * @property [leftTrackLeftCap=1.0]
 * @type Number
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Size of the left end cap for the leftTrackImage, disabledLeftTrackImage, highlightedLeftTrackImage and selectedLeftTrackImage properties.</p>
 * @description <p>This property must be set before the track images are loaded. When specified at creation 
this property is loaded before loading any of the track images</p>
<p>End caps specify the portion of an image that should not be resized when an image is 
stretched. This technique is used to implement buttons and other resizable image-based 
interface elements. When an image with end caps is resized, the resizing occurs only in 
the middle of the image, in the region between the end caps. The end caps themselves keep 
their original size and appearance. This property specifies the size of the left end cap. </p>
<p>On iOS 5 and above the endCaps are used to compute a rectangle which is streched in 
the strechable portion. On earlier versions of iOS the strechable portion is assumed to be 
1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap 
and the middle portion together and then subtracting that value from the width of the image</p>
 */
Titanium.UI.Slider.leftTrackLeftCap = null;

/**
 * @property [leftTrackTopCap=1.0]
 * @type Number
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Size of the top end cap for the leftTrackImage, disabledLeftTrackImage, highlightedLeftTrackImage and selectedLeftTrackImage properties.</p>
 * @description <p>This property must be set before the track images are loaded. When specified at creation 
this property is loaded before loading any of the track images</p>
<p>End caps specify the portion of an image that should not be resized when an image is 
stretched. This technique is used to implement buttons and other resizable image-based 
interface elements. When an image with end caps is resized, the resizing occurs only in 
the middle of the image, in the region between the end caps. The end caps themselves keep 
their original size and appearance. This property specifies the size of the top end cap. </p>
<p>On iOS 5 and above the endCaps are used to compute a rectangle which is streched in 
the strechable portion. On earlier versions of iOS the strechable portion is assumed to be 
1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap 
and the middle portion together and then subtracting that value from the height of the image</p>
 */
Titanium.UI.Slider.leftTrackTopCap = null;

/**
 * @property [max=<ol>
<li>(property value might be undefined)</li>
</ol>]
 * @type Number
 * <p>Maximum value of the slider.</p>
 * @description <p>Specifies the value of the slider when the thumb is all the way to the right. This
value is inclusive.</p>
<p>On Android and Mobile Web, the selectable values can be limited using the
{@link Titanium.UI.Slider#property-minRange minRange} and {@link Titanium.UI.Slider#property-maxRange maxRange}
properties.</p>
<p>On Android this must be an integer value.</p>
 */
Titanium.UI.Slider.max = null;

/**
 * @property [maxRange=undefined]
 * @type Number
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Upper limit on the slider value that can be selected.</p>
 * @description <p>If <code>maxRange</code> is specified, value of the slider can't be increased above <code>maxRange</code>.</p>
<p>The total displayed range of the slider is still from <code>min</code> to <code>max</code>.</p>
<p>If <code>undefined</code>, the slider can go all the way to <code>max</code>.</p>
<p>On Android this must be an integer value.</p>
 */
Titanium.UI.Slider.maxRange = null;

/**
 * @property [min=<ol>
<li>(property value might be undefined)</li>
</ol>]
 * @type Number
 * <p>Minimum value of the slider.</p>
 * @description <p>Specifies the value of the slider when the thumb is all the way to the left. This
value is inclusive.</p>
<p>On Android, the selectable values can be limited using the
{@link Titanium.UI.Slider#property-minRange minRange} and {@link Titanium.UI.Slider#property-maxRange maxRange}
properties.</p>
<p>On Android this must be an integer value.</p>
 */
Titanium.UI.Slider.min = null;

/**
 * @property [minRange=undefined]
 * @type Number
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Lower limit on the slider value that can be selected.</p>
 * @description <p>If <code>minRange</code> is specified, value of the slider can't be decreased below <code>minRange</code>.</p>
<p>The total displayed range of the slider is still from <code>min</code> to <code>max</code>.</p>
<p>If <code>undefined</code>, the slider can go all the way to <code>min</code>.</p>
<p>On Android this must be an integer value.</p>
 */
Titanium.UI.Slider.minRange = null;

/**
 * @property rightTrackImage
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider right track.</p>
 */
Titanium.UI.Slider.rightTrackImage = null;

/**
 * @property [rightTrackLeftCap=1.0]
 * @type Number
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Size of the left end cap for the rightTrackImage, disabledRightTrackImage, highlightedRightTrackImage and selectedRightTrackImage properties.</p>
 * @description <p>This property must be set before the track images are loaded. When specified at creation 
this property is loaded before loading any of the track images</p>
<p>End caps specify the portion of an image that should not be resized when an image is 
stretched. This technique is used to implement buttons and other resizable image-based 
interface elements. When an image with end caps is resized, the resizing occurs only in 
the middle of the image, in the region between the end caps. The end caps themselves keep 
their original size and appearance. This property specifies the size of the left end cap. </p>
<p>On iOS 5 and above the endCaps are used to compute a rectangle which is streched in 
the strechable portion. On earlier versions of iOS the strechable portion is assumed to be 
1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap 
and the middle portion together and then subtracting that value from the width of the image</p>
 */
Titanium.UI.Slider.rightTrackLeftCap = null;

/**
 * @property [rightTrackTopCap=1.0]
 * @type Number
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Size of the top end cap for the rightTrackImage, disabledRightTrackImage, highlightedRightTrackImage and selectedRightTrackImage properties.</p>
 * @description <p>This property must be set before the track images are loaded. When specified at creation 
this property is loaded before loading any of the track images</p>
<p>End caps specify the portion of an image that should not be resized when an image is 
stretched. This technique is used to implement buttons and other resizable image-based 
interface elements. When an image with end caps is resized, the resizing occurs only in 
the middle of the image, in the region between the end caps. The end caps themselves keep 
their original size and appearance. This property specifies the size of the top end cap. </p>
<p>On iOS 5 and above the endCaps are used to compute a rectangle which is streched in 
the strechable portion. On earlier versions of iOS the strechable portion is assumed to be 
1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap 
and the middle portion together and then subtracting that value from the height of the image</p>
 */
Titanium.UI.Slider.rightTrackTopCap = null;

/**
 * @property selectedLeftTrackImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider left track when in the selected state.</p>
 */
Titanium.UI.Slider.selectedLeftTrackImage = null;

/**
 * @property selectedRightTrackImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider right track when in the selected state.</p>
 */
Titanium.UI.Slider.selectedRightTrackImage = null;

/**
 * @property selectedThumbImage
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image URL of the slider thumb when in the selected state.</p>
 */
Titanium.UI.Slider.selectedThumbImage = null;

/**
 * @property thumbImage
 * @type String/Titanium.Blob
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Image for the slider thumb.</p>
 * @description <p>The thumb image can be specified as a URL.</p>
<p>Support for using {@link Titanium.Blob} for this property is only available on iOS.</p>
 */
Titanium.UI.Slider.thumbImage = null;

/**
 * @property value
 * @type String
 * <p>Current value of the slider.</p>
 */
Titanium.UI.Slider.value = null;

/**
 * @class Titanium.UI.Switch
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>An on/off switch control.</p>
 * @description <p>On Android, a switch can have text associated with it, and appears as either a checkbox or 
toggle button.</p>
<p>On iOS, the switch appears as an iOS on/off switch and doesn't have any text associated with it. </p>
<p>On Mobile Web and Tizen, a switch always has text associated with it, and appears as a toggle button, 
similar to Android.</p>
<p>Use the {@link Titanium.UI#method-createSwitch} method to create a switch.</p>
 * <h3>Examples</h3>
 * <h4>Simple Switch Example</h4>
 * <p><p>Create a standard switch, using default values, and output value property on each <code>change</code> 
event.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white'
});

var basicSwitch = Ti.UI.createSwitch({
  value:true // mandatory property for iOS 
});
win.add(basicSwitch);

basicSwitch.addEventListener('change',function(e){
  Ti.API.info('Switch value: ' + basicSwitch.value);
});

win.open();

// print initial value
Ti.API.info('Switch value: ' + basicSwitch.value);</pre>
 * <h4>Toggle Button Switch Example (Android)</h4>
 * <p><p>Create a standard (toggle button) switch with a customized title for each on/off state, and 
output value property on each <code>change</code> event.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white'
});

var basicSwitch = Ti.UI.createSwitch({
  titleOn:'Notifications Enabled',
  titleOff:'Notifications Disabled',
  value:true,
  width: 200, height:120
});
win.add(basicSwitch);

basicSwitch.addEventListener('change',function(e){
  Ti.API.info('Switch value: ' + basicSwitch.value);
});

win.open();</pre>
 * <h4>Checkbox Switch Example (Android)</h4>
 * <p><p>Create a checkbox switch, and output value property on each <code>change</code> event.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white'
});

var basicSwitch = Ti.UI.createSwitch({
  style: Ti.UI.Android.SWITCH_STYLE_CHECKBOX,
  textAlign:Ti.UI.TEXT_ALIGNMENT_CENTER,
  title:'Notifications',
  value:true,
  width: 300 // necessary for textAlign to be effective
});
win.add(basicSwitch);

basicSwitch.addEventListener('change',function(e){
  Ti.API.info('Switch value: ' + basicSwitch.value);
});

win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous simple switch example as an Alloy view.</p>
<p>switchexample.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;Switch id="basicSwitch" value="true" onChange="outputState"/&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>switchexample.js:</p></p><pre>function outputState(){
    Ti.API.info('Switch value: ' + $.basicSwitch.value);
}</pre>
 */
Titanium.UI.Switch = {};


/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to a <code>Switch</code> is not supported on all platforms.</p>
<p>If you need to display something on top of this object, consider using 
another view as a container for both this object and views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.add = function(view){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-color color} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.getColor = function(){};

/**
 * @method getEnabled
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-enabled enabled} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.UI.Switch.getEnabled = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-font font} property.</p>
 * @return {Font} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.getFont = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-style style} property.</p>
 * @return {Number} 
 * @platform android 0.8
*/
Titanium.UI.Switch.getStyle = function(){};

/**
 * @method getTextAlign
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-textAlign textAlign} property.</p>
 * @return {String/Number} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.getTextAlign = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-title title} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.getTitle = function(){};

/**
 * @method getTitleOff
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-titleOff titleOff} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.getTitleOff = function(){};

/**
 * @method getTitleOn
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-titleOn titleOn} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.getTitleOn = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-value value} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Switch.getValue = function(){};

/**
 * @method getVerticalAlign
 * <p>Gets the value of the {@link Titanium.UI.Switch#property-verticalAlign verticalAlign} property.</p>
 * @return {Number/String} 
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.getVerticalAlign = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.Switch#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.remove = function(view){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.setColor = function(color){};

/**
 * @method setEnabled
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-enabled enabled} property.</p>
 * @param {Boolean} enabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Switch.setEnabled = function(enabled){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.setFont = function(font){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.Switch.setStyle = function(style){};

/**
 * @method setTextAlign
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-textAlign textAlign} property.</p>
 * @param {String/Number} textAlign 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.setTextAlign = function(textAlign){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.setTitle = function(title){};

/**
 * @method setTitleOff
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-titleOff titleOff} property.</p>
 * @param {String} titleOff 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.setTitleOff = function(titleOff){};

/**
 * @method setTitleOn
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-titleOn titleOn} property.</p>
 * @param {String} titleOn 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.setTitleOn = function(titleOn){};

/**
 * @method setValue
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-value value} property.</p>
 * @param {Boolean} value 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Switch.setValue = function(value){};

/**
 * @method setVerticalAlign
 * <p>Sets the value of the {@link Titanium.UI.Switch#property-verticalAlign verticalAlign} property.</p>
 * @param {Number/String} verticalAlign 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Switch.setVerticalAlign = function(verticalAlign){};

/**
 * @property [color=black]
 * @type String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Color to use for switch text, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
 */
Titanium.UI.Switch.color = null;

/**
 * @property [enabled=undefined (equivalent to enabled)]
 * @type Boolean
 * @platform android 0.8
 * <p>Determines whether the switch is enabled.</p>
 * @description <p>Be careful not to confused this with the {@link Titanium.UI.Switch#property-value value} property, which 
is used to turn the switch on and off. </p>
<p>Set to <code>true</code> to enable or <code>false</code> to disable the switch.</p>
 */
Titanium.UI.Switch.enabled = null;

/**
 * @property font
 * @type Font
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Font to use for the switch text.</p>
 */
Titanium.UI.Switch.font = null;

/**
 * @property [style=Titanium.UI.Android.SWITCH_STYLE_TOGGLEBUTTON]
 * @type Number
 * @platform android 0.8
 * <p>Style of the switch. Enables either the toggle button (default) or checkbox.</p>
 * @description <p>Specify one of {@link Titanium.UI.Android#property-SWITCH_STYLE_CHECKBOX} 
or {@link Titanium.UI.Android#property-SWITCH_STYLE_TOGGLEBUTTON}.</p>
 */
Titanium.UI.Switch.style = null;

/**
 * @property [textAlign={@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER} (toggle button, Android), 
{@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT} (checkbox, Android), 
{@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER} (Mobile Web)
{@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT} (Tizen)]
 * @type String/Number
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Horizontal text alignment of the switch title.</p>
 * @description <p>On Android, when the switch {@link Titanium.UI.Switch#property-style style} property is set to 
{@link Titanium.UI.Android#property-SWITCH_STYLE_CHECKBOX}, this property is only effective if the 
{@link Titanium.UI.Switch#property-width width} property is set to a value greater than the width of the 
{@link Titanium.UI.Switch#property-title title} contents. </p>
<p>On Mobile Web and Tizen this property is always supported, as the <code>style</code> property is not supported. </p>
<p>One of the {@link Titanium.UI} text alignment constants, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT TEXT_ALIGNMENT_LEFT}, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER TEXT_ALIGNMENT_CENTER}, 
or {@link Titanium.UI#property-TEXT_ALIGNMENT_RIGHT TEXT_ALIGNMENT_RIGHT}.</p>
 */
Titanium.UI.Switch.textAlign = null;

/**
 * @property title
 * @type String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Text to display next to the switch, when the checkbox style is in use.</p>
 * @description <p>This property is only effective when the {@link Titanium.UI.Switch#property-style} property is set to 
{@link Titanium.UI.Android#property-SWITCH_STYLE_CHECKBOX}. </p>
<p>Use the {@link Titanium.UI.Switch#property-textAlign textAlign} property to align this text within the 
switch.</p>
 */
Titanium.UI.Switch.title = null;

/**
 * @property [titleOff=false]
 * @type String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Text to display on the switch in its "off" state, when the toggle button style is in use.</p>
 * @description <p>Set to an empty string to remove title text. </p>
<p>It is typically useful to set the <code>width</code> and/or <code>height</code> properties, to prevent the switch 
changing size between its on/off state.</p>
 */
Titanium.UI.Switch.titleOff = null;

/**
 * @property [titleOn=true]
 * @type String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Text to display on the switch in its "on" state, when the toggle button style is in use.</p>
 * @description <p>Set to an empty string to remove title text. </p>
<p>It is typically useful to set the <code>width</code> and/or <code>height</code> properties, to prevent the switch 
changing size between its on/off state.</p>
 */
Titanium.UI.Switch.titleOn = null;

/**
 * @property [value=undefined (visual state off, Android), false (Mobile Web and Tizen)]
 * @type Boolean
 * <p>Indicates whether the switch has been turned on or off by the user. May also be set 
programmatically.</p>
 * @description <p>Set to <code>true</code> to turn on and <code>false</code> to turn off the switch. </p>
<p>On Android, if this property is not defined, the rendered state of the switch is off. </p>
<p>On iOS, be aware that this property must be set when the switch is rendered, otherwise it 
will not be visible. This is a known issue. </p>
 */
Titanium.UI.Switch.value = null;

/**
 * @property [verticalAlign=Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER]
 * @type Number/String
 * @platform android 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Vertical alignment for the text field.</p>
 * @description <p>One of the {@link Titanium.UI} vertical alignment constants, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_BOTTOM TEXT_VERTICAL_ALIGNMENT_BOTTOM}, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_CENTER TEXT_VERTICAL_ALIGNMENT_CENTER}, 
or {@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_TOP TEXT_VERTICAL_ALIGNMENT_TOP}.</p>
 */
Titanium.UI.Switch.verticalAlign = null;

/**
 * @class Titanium.UI.Tab
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A tab instance for a {@link Titanium.UI.TabGroup TabGroup}.</p>
 * @description <p>A <code>TabGroup</code> tab instance. Each tab includes a button and one or more windows, which 
holds the "contents" of the tab. Users can select a tab by clicking on the tab button.</p>
<p>Use {@link Titanium.UI.TabGroup#method-setActiveTab TabGroup.setActiveTab} to switch between tabs 
in a tab group. The {@link Titanium.UI#property-currentTab} property provides a global reference to 
the currently active tab. Use the {@link Titanium.UI#method-createTab} method to create a tab.</p>
<p>The behavior of tabs and tab groups follows the platform's native navigation style, 
which varies significantly between platforms.</p>
<h4>iOS and Mobile Web Platform Implementation Notes</h4>
<p>On iOS, Mobile Web and Tizen, the tab maintains a stack of windows. On Mobile Web and Tizen, the tab is 
really just a {@link Titanium.UI.MobileWeb.NavigationGroup NavigationGroup}. Windows on top 
of the stack can partially or totally obscure windows lower in the stack.  Calling 
{@link Titanium.UI.Tab#method-open open} opens a new window on top of the window stack. When a window 
is closed, either by the user or by code, the window is removed from the stack, making 
the previous window visible. The root tab window cannot be removed. </p>
<p>On iOS, Mobile Web and Tizen the tab controls are generally kept on screen to allow a user to 
navigate inside the app. Tab controls are hidden when the user is performing a modal 
task (for example, composing a message). In this case, the app should provide a button 
in the navigation bar to return to the previous screen. On iOS, the window should also 
be opened as modal. On iOS, The tab controls can also be hidden by opening the new window 
with {@link Titanium.UI.Window#property-tabBarHidden tabBarHidden} set to <code>true</code>.</p>
<p>When closing a tab window in iOS, Mobile Web and Tizen, you should always use the 
{@link Titanium.UI.Tab#method-close Tab.close} method to ensure that the tab group maintains its 
navigation state.</p>
<h4>Android Platform Implementation Notes</h4>
<p>On Android, the tab does not maintain a stack of windows. 
Calling {@link Titanium.UI.Tab#method-open open} opens a new, heavyweight window, which 
by default covers the tab group entirely. This seems quite different from the iOS model,
but it is the standard model for Android applications. Users can use the <strong>Back</strong> button 
to close the window and return to the tab group. </p>
<p>On Android, tab windows can be closed using either
{@link Titanium.UI.Tab#method-close Tab.close} or {@link Titanium.UI.Window#event-close Window.close}. Since 
no window stack is maintained, only a single window opened using
{@link Titanium.UI.Tab#method-open Tab.open} can be closed using <code>Tab.close</code>.</p>
<p>As on iOS, the root tab window cannot be closed.</p>
 * <h3>Examples</h3>
 * <h4>Simple Tab Example</h4>
 * <p><p>In this example, we create a simple tab and add it to a tab group.</p></p><pre>var tab = Titanium.UI.createTab({
window:mywin,
title:'Hello',
icon:'myicon.png'
});
tabGroup.addTab(tab);</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example an an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;TabGroup id="tabGroup"&gt;
        &lt;Tab id="tab"&gt;
            &lt;Window id="mywin" title="Hello" icon="myicon.png"/&gt;
        &lt;/Tab&gt;
     &lt;/TabGroup&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.Tab = {};




/**
 * @method close
 * <p>Closes the top-level window for this tab.</p>
 * @description <p>On iOS, this method should be used when closing a window opened from a tab, to
correctly maintain the iOS tab group's navigation state. Note that the window to 
be closed <strong>must</strong> be passed in as a parameter:</p>
<pre><code>myTab.close(tabWin);
</code></pre>
<p>On Android, this method does <strong>not</strong> take a <code>window</code> parameter.</p>
<pre><code>myTab.close();
</code></pre>
<p>On Mobile Web and Tizen, calling <code>Tab.close</code> is identical to calling <code>close</code> on
the tab's current topmost window.</p>
<p>On Android, if a window has been opened in front of the tab using <code>Tab.open</code>, 
a subsequent call to <code>Tab.close</code> is equivalent to calling <code>close</code> on that window.
No window stack is maintained, so only the most-recently opened window on a given
tab can be closed in this way.</p>
<p>All platforms accept an optional <code>options</code> parameter. The only supported property
for this dictionary is the <code>animated</code> flag, which specifies whether the window
close should be animated. <code>animated</code> is true by default.</p>
 * @param {Titanium.UI.Window} window 
 * <p>Window to close. This parameter <strong>must</strong> be omitted on Android.</p>
 * @param {Object} options (optional)
 * <p>Dictionary of display and animation settings to use when closing the window. 
Identical to the <code>options</code> parameter to {@link Titanium.UI.Window#event-close Window.close}.
iOS only supports the <strong>animated</strong> parameter.</p>
 * @return void
*/
Titanium.UI.Tab.close = function(window, options){};

/**
 * @method getActive
 * <p>Gets the value of the {@link Titanium.UI.Tab#property-active active} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Tab.getActive = function(){};

/**
 * @method getActiveIcon
 * <p>Gets the value of the {@link Titanium.UI.Tab#property-activeIcon activeIcon} property.</p>
 * @return {String} 
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.Tab.getActiveIcon = function(){};

/**
 * @method getBadge
 * <p>Gets the value of the {@link Titanium.UI.Tab#property-badge badge} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Tab.getBadge = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.Tab.getEnabled = function(){};

/**
 * @method getIcon
 * <p>Gets the value of the {@link Titanium.UI.Tab#property-icon icon} property.</p>
 * @return {String} 
*/
Titanium.UI.Tab.getIcon = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.Tab#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.Tab.getTitle = function(){};

/**
 * @method getTitleid
 * <p>Gets the value of the {@link Titanium.UI.Tab#property-titleid titleid} property.</p>
 * @return {String} 
*/
Titanium.UI.Tab.getTitleid = function(){};

/**
 * @method getWindow
 * <p>Gets the value of the {@link Titanium.UI.Tab#property-window window} property.</p>
 * @return {Titanium.UI.Window} 
*/
Titanium.UI.Tab.getWindow = function(){};

/**
 * @method open
 * <p>Opens a new window.</p>
 * @description <p>On iOS, Mobile Web and Tizen, the new window is opened as the top window in the tab's window stack. On Android, the new window is opened as a new, heavyweight window, obscuring the tab group.</p>
 * @param {Titanium.UI.Window} window 
 * <p>Window to open.</p>
 * @param {Object} options 
 * <p>Dictionary of display and animation settings to use when opening the window. 
Identical to the <code>options</code> parameter to {@link Titanium.UI.Window#event-open Window.open}.
iOS only supports the <strong>animated</strong> parameter.</p>
 * @return void
*/
Titanium.UI.Tab.open = function(window, options){};

/**
 * @method removeAllChildren 
 * @hide
*/Titanium.UI.Tab.removeAllChildren = function(){};

/**
 * @method setActive
 * <p>Sets the value of the {@link Titanium.UI.Tab#property-active active} property.</p>
 * @param {Boolean} active 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Tab.setActive = function(active){};

/**
 * @method setActiveIcon
 * <p>Sets the value of the {@link Titanium.UI.Tab#property-activeIcon activeIcon} property.</p>
 * @param {String} activeIcon 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.Tab.setActiveIcon = function(activeIcon){};

/**
 * @method setBadge
 * <p>Sets the value of the {@link Titanium.UI.Tab#property-badge badge} property.</p>
 * @param {String} badge 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.Tab.setBadge = function(badge){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.Tab.setEnabled = function(){};

/**
 * @method setIcon
 * <p>Sets the value of the {@link Titanium.UI.Tab#property-icon icon} property.</p>
 * @param {String} icon 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Tab.setIcon = function(icon){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.Tab#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Tab.setTitle = function(title){};

/**
 * @method setTitleid
 * <p>Sets the value of the {@link Titanium.UI.Tab#property-titleid titleid} property.</p>
 * @param {String} titleid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Tab.setTitleid = function(titleid){};

/**
 * @method setWindow
 * <p>Sets the value of the {@link Titanium.UI.Tab#property-window window} property.</p>
 * @param {Titanium.UI.Window} window 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Tab.setWindow = function(window){};

/**
 * @property active
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p><code>true</code> if this tab is active, <code>false</code> if it is not. </p>
 * @description <p>The tab can be activated by setting the property, but since this property is 
platform-specific, using {@link Titanium.UI.TabGroup#method-setActiveTab TabGroup.setActiveTab} 
is recommended instead.</p>
 */
Titanium.UI.Tab.active = null;

/**
 * @property activeIcon
 * @type String
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Icon URL for this tab when active.</p>
 * @description <p>iOS 5.0 and later only.</p>
<p>If unspecified, iOS uses a tint color to indicate the active tab. See
{@link Titanium.UI.Tab#property-icon icon} for more information.</p>
<p>If the icon provided is larger than [30 pixels (60 pixels in the retina variant)]
(https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/IconsImages/IconsImages.html),
this image will be scaled to fit.</p>
<p>On iOS prior to 5.0, the default tint color is always used and this property
remains unset.</p>
 */
Titanium.UI.Tab.activeIcon = null;

/**
 * @property badge
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Badge value for this tab. <code>null</code> indicates no badge.</p>
 */
Titanium.UI.Tab.badge = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.Tab.enabled = null;

/**
 * @property icon
 * @type String
 * <p>Icon URL for this tab.</p>
 * @description <h4>iOS Tab Icons</h4>
<p>On iOS, tab icons are usually white with a transparent background. The system uses
a transparent tint color to indicate whether the tab is active or inactive. In the
inactive state, the tint color is based on the tab bar's color
{@link Titanium.UI.TabGroup#property-tabsBackgroundColor tabsBackgroundColor}, which defaults
to black. In the active state, the tint color is usually blue. Prior to Titanium
3.1, there was no way to override the default active icon tint.</p>
<p>Titanium 3.1 introduced some new ways to customize tab icons, which are supported
in iOS 5.0 and above:</p>
<ul>
<li>
<p>You can specify the active tab's tint color as
{@link Titanium.UI.TabGroup#property-activeTabIconTint activeTabIconTint}.</p>
</li>
<li>
<p>You can set separate icon images for the active and inactive states. If
{@link Titanium.UI.Tab#property-activeIcon activeIcon} is set, then <code>icon</code> is used in the
inactive state, and <code>activeIcon</code> is used in the active state. <strong>No default tint
is applied to either icon.</strong></p>
</li>
</ul>
<p>If the icon provided is larger than [30 pixels (60 pixels in the retina variant)]
 (https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/IconsImages/IconsImages.html),
 this image will be scaled to fit if used with activeIcon, and cropped at the bottom
 otherwise.</p>
 */
Titanium.UI.Tab.icon = null;

/**
 * @property title
 * @type String
 * <p>Title for this tab.</p>
 */
Titanium.UI.Tab.title = null;

/**
 * @property titleid
 * @type String
 * <p>Key identifying a string from the locale file to use for the tab title. Only one of <code>title</code> or <code>titleid</code> should be specified.</p>
 */
Titanium.UI.Tab.titleid = null;

/**
 * @property window
 * @type Titanium.UI.Window
 * <p>Root level tab window.  All tabs must have at least one root level tab window.</p>
 */
Titanium.UI.Tab.window = null;

/**
 * @class Titanium.UI.TabGroup
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A tabbed group of windows.</p>
 * @description <p>Use the {@link Titanium.UI#method-createTabGroup} method to create a tab group.</p>
<p>A tab group can contain one or more {@link Titanium.UI.Tab Tab} objects, each of which has an 
associated tab control that is used to bring it into focus.</p>
<p>You can add tabs to the group using {@link Titanium.UI.TabGroup#method-addTab addTab}, and programmatically 
switch to a specific tab using {@link Titanium.UI.TabGroup#method-setActiveTab setActiveTab}.</p>
<h4>Platform Implementation Notes</h4>
<p>When using a tab group, note the following differences between platforms.</p>
<p>The tab group controls are positioned at the top of the display on Android and at the bottom 
on iOS.</p>
<p>On Android, only one tab group may exist at one time. A tab group may be closed to allow a new 
one to be opened later, but the root of the application must be a heavyweight window to prevent 
it exiting. Tabs cannot be removed from the tab group once added, and tabs cannot be reordered.</p>
<p>On iOS, more than one tab group may exist, and the may be opened and closed as required. 
Each tab can contain a stack of windows, and the user can switch between them by tapping the 
tab's associated control. Tabs can be removed, and the user may (optionally) be allowed to 
reorder tabs.</p>
<p>On iOS and Mobile Web, it is also possible to add tabs by updating the 
{@link Titanium.UI.TabGroup#property-tabs tabs} property, and to switch active tabs by setting the 
{@link Titanium.UI.Tab#property-active active} property on one of the tabs to <code>true</code>. Since these mechanisms 
are platform-specific, it is recommended that you use <code>addTab</code> and <code>setActiveTab</code> instead.</p>
<p>If you use the iOS/Mobile Web-specific mechanisms, it is possible to add multiple active tabs 
to a tab group. In this case, the result of which tab is initially selected is undefined.</p>
<h4>Further Reading</h4>
<p>If using tab groups on iOS, see the "Tab Bar" section of Apple's official 
<a href="https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/UIElementGuidelines/UIElementGuidelines.html#//apple_ref/doc/uid/TP40006556-CH13-SW52">iOS UI Element Usage Guidelines </a>.</p>
 * <h3>Example</h3>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Default Titanium project as an Alloy view.</p></p><pre>    &lt;Alloy&gt;
        &lt;TabGroup backgroundColor="white" &gt;
            &lt;Tab id="tab1" title="Tab 1" icon="KS_nav_views.png"&gt;
                &lt;Window id="win1" title="Tab 1"&gt;
                   &lt;Label id="label1" color="#999"&gt;I am Window 1&lt;/Label&gt;
                &lt;/Window&gt;
            &lt;/Tab&gt;
            &lt;Tab id="tab2" title="Tab 2" icon="KS_nav_views.png"&gt;
                &lt;Window id="win2" title="Tab 2"&gt;
                    &lt;Label id="label2" color="#999"&gt;I am Window 2&lt;/Label&gt;
                &lt;/Window&gt;
            &lt;/Tab&gt;
            &lt;!-- Use the Require tag to include external Ti.UI.Tab views --&gt;
        &lt;/TabGroup&gt;
    &lt;/Alloy&gt;</pre>
 */
Titanium.UI.TabGroup = {};











/**
 * @method addTab
 * <p>Adds a tab to the tab group.</p>
 * @param {Titanium.UI.Tab} tab 
 * <p>Tab to add.</p>
 * @return void
*/
Titanium.UI.TabGroup.addTab = function(tab){};

/**
 * @method close
 * <p>Closes the tab group and removes it from the UI.</p>
 * @return void
*/
Titanium.UI.TabGroup.close = function(){};

/**
 * @method getActiveTab
 * <p>Gets the currently-active tab.</p>
 * @return {Titanium.UI.Tab} 
*/
Titanium.UI.TabGroup.getActiveTab = function(){};

/**
 * @method getActiveTabBackgroundColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundColor activeTabBackgroundColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundColor = function(){};

/**
 * @method getActiveTabBackgroundDisabledColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundDisabledColor activeTabBackgroundDisabledColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundDisabledColor = function(){};

/**
 * @method getActiveTabBackgroundDisabledImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundDisabledImage activeTabBackgroundDisabledImage} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundDisabledImage = function(){};

/**
 * @method getActiveTabBackgroundFocusedColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundFocusedColor activeTabBackgroundFocusedColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundFocusedColor = function(){};

/**
 * @method getActiveTabBackgroundFocusedImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundFocusedImage activeTabBackgroundFocusedImage} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundFocusedImage = function(){};

/**
 * @method getActiveTabBackgroundImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundImage activeTabBackgroundImage} property.</p>
 * @return {String} 
 * @platform mobileweb 1.8
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundImage = function(){};

/**
 * @method getActiveTabBackgroundSelectedColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundSelectedColor activeTabBackgroundSelectedColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundSelectedColor = function(){};

/**
 * @method getActiveTabBackgroundSelectedImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundSelectedImage activeTabBackgroundSelectedImage} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabBackgroundSelectedImage = function(){};

/**
 * @method getActiveTabIconTint
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-activeTabIconTint activeTabIconTint} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getActiveTabIconTint = function(){};

/**
 * @method getActivity
 * <p>Returns the activity for this tab group.</p>
 * @description <p>The activity is not available until the tab group is open.</p>
<p>Activity will be exposed as a property in a future release.</p>
 * @return {Titanium.Android.Activity} 
 * @platform android 3.0
*/
Titanium.UI.TabGroup.getActivity = function(){};

/**
 * @method getAllowUserCustomization
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-allowUserCustomization allowUserCustomization} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.getAllowUserCustomization = function(){};

/**
 * @method getBarColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-barColor barColor} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.getBarColor = function(){};

/**
 * @method getEditButtonTitle
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-editButtonTitle editButtonTitle} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.getEditButtonTitle = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.TabGroup.getEnabled = function(){};

/**
 * @method getExitOnClose
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-exitOnClose exitOnClose} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
*/
Titanium.UI.TabGroup.getExitOnClose = function(){};

/**
 * @method getNavBarHidden
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-navBarHidden navBarHidden} property.</p>
 * @return {Boolean} 
 * @platform android 3.0
*/
Titanium.UI.TabGroup.getNavBarHidden = function(){};

/**
 * @method getShadowImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-shadowImage shadowImage} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.getShadowImage = function(){};

/**
 * @method getTabDividerColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabDividerColor tabDividerColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabDividerColor = function(){};

/**
 * @method getTabDividerWidth
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabDividerWidth tabDividerWidth} property.</p>
 * @return {Number/String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabDividerWidth = function(){};

/**
 * @method getTabHeight
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabHeight tabHeight} property.</p>
 * @return {Number/String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabHeight = function(){};

/**
 * @method getTabs
 * <p>Gets all tabs that are managed by the tab group.</p>
 * @return {Titanium.UI.Tab[]} 
*/
Titanium.UI.TabGroup.getTabs = function(){};

/**
 * @method getTabsAtBottom
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsAtBottom tabsAtBottom} property.</p>
 * @return {Boolean} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsAtBottom = function(){};

/**
 * @method getTabsBackgroundColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundColor tabsBackgroundColor} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundColor = function(){};

/**
 * @method getTabsBackgroundDisabledColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundDisabledColor tabsBackgroundDisabledColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundDisabledColor = function(){};

/**
 * @method getTabsBackgroundDisabledImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundDisabledImage tabsBackgroundDisabledImage} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundDisabledImage = function(){};

/**
 * @method getTabsBackgroundFocusedColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundFocusedColor tabsBackgroundFocusedColor} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundFocusedColor = function(){};

/**
 * @method getTabsBackgroundFocusedImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundFocusedImage tabsBackgroundFocusedImage} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundFocusedImage = function(){};

/**
 * @method getTabsBackgroundImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundImage tabsBackgroundImage} property.</p>
 * @return {String} 
 * @platform mobileweb 1.8
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundImage = function(){};

/**
 * @method getTabsBackgroundSelectedColor
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundSelectedColor tabsBackgroundSelectedColor} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundSelectedColor = function(){};

/**
 * @method getTabsBackgroundSelectedImage
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundSelectedImage tabsBackgroundSelectedImage} property.</p>
 * @return {String} 
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.getTabsBackgroundSelectedImage = function(){};

/**
 * @method getWindowSoftInputMode
 * <p>Gets the value of the {@link Titanium.UI.TabGroup#property-windowSoftInputMode windowSoftInputMode} property.</p>
 * @return {Number} 
 * @platform android 0.9
*/
Titanium.UI.TabGroup.getWindowSoftInputMode = function(){};

/**
 * @method open
 * <p>Opens the tab group and makes it visible.</p>
 * @return void
*/
Titanium.UI.TabGroup.open = function(){};

/**
 * @method removeAllChildren 
 * @hide
*/Titanium.UI.TabGroup.removeAllChildren = function(){};

/**
 * @method removeTab
 * <p>Removes a tab from the tab group.</p>
 * @param {Titanium.UI.Tab} tab 
 * <p>Tab to remove.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.removeTab = function(tab){};

/**
 * @method setActiveTab
 * <p>Selects the currently active tab in a tab group.</p>
 * @param {Number/Titanium.UI.Tab} indexOrObject 
 * <p>Index or object of the tab to switch to.</p>
 * @return void
*/
Titanium.UI.TabGroup.setActiveTab = function(indexOrObject){};

/**
 * @method setActiveTabBackgroundColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundColor activeTabBackgroundColor} property.</p>
 * @param {String} activeTabBackgroundColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundColor = function(activeTabBackgroundColor){};

/**
 * @method setActiveTabBackgroundDisabledColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundDisabledColor activeTabBackgroundDisabledColor} property.</p>
 * @param {String} activeTabBackgroundDisabledColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundDisabledColor = function(activeTabBackgroundDisabledColor){};

/**
 * @method setActiveTabBackgroundDisabledImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundDisabledImage activeTabBackgroundDisabledImage} property.</p>
 * @param {String} activeTabBackgroundDisabledImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundDisabledImage = function(activeTabBackgroundDisabledImage){};

/**
 * @method setActiveTabBackgroundFocusedColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundFocusedColor activeTabBackgroundFocusedColor} property.</p>
 * @param {String} activeTabBackgroundFocusedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundFocusedColor = function(activeTabBackgroundFocusedColor){};

/**
 * @method setActiveTabBackgroundFocusedImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundFocusedImage activeTabBackgroundFocusedImage} property.</p>
 * @param {String} activeTabBackgroundFocusedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundFocusedImage = function(activeTabBackgroundFocusedImage){};

/**
 * @method setActiveTabBackgroundImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundImage activeTabBackgroundImage} property.</p>
 * @param {String} activeTabBackgroundImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundImage = function(activeTabBackgroundImage){};

/**
 * @method setActiveTabBackgroundSelectedColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundSelectedColor activeTabBackgroundSelectedColor} property.</p>
 * @param {String} activeTabBackgroundSelectedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundSelectedColor = function(activeTabBackgroundSelectedColor){};

/**
 * @method setActiveTabBackgroundSelectedImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabBackgroundSelectedImage activeTabBackgroundSelectedImage} property.</p>
 * @param {String} activeTabBackgroundSelectedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabBackgroundSelectedImage = function(activeTabBackgroundSelectedImage){};

/**
 * @method setActiveTabIconTint
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-activeTabIconTint activeTabIconTint} property.</p>
 * @param {String} activeTabIconTint 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setActiveTabIconTint = function(activeTabIconTint){};

/**
 * @method setAllowUserCustomization
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-allowUserCustomization allowUserCustomization} property.</p>
 * @param {Boolean} allowUserCustomization 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.setAllowUserCustomization = function(allowUserCustomization){};

/**
 * @method setBarColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-barColor barColor} property.</p>
 * @param {String} barColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.setBarColor = function(barColor){};

/**
 * @method setEditButtonTitle
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-editButtonTitle editButtonTitle} property.</p>
 * @param {String} editButtonTitle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.setEditButtonTitle = function(editButtonTitle){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.TabGroup.setEnabled = function(){};

/**
 * @method setNavBarHidden
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-navBarHidden navBarHidden} property.</p>
 * @param {Boolean} navBarHidden 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.TabGroup.setNavBarHidden = function(navBarHidden){};

/**
 * @method setShadowImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-shadowImage shadowImage} property.</p>
 * @param {String} shadowImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TabGroup.setShadowImage = function(shadowImage){};

/**
 * @method setTabDividerColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabDividerColor tabDividerColor} property.</p>
 * @param {String} tabDividerColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabDividerColor = function(tabDividerColor){};

/**
 * @method setTabDividerWidth
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabDividerWidth tabDividerWidth} property.</p>
 * @param {Number/String} tabDividerWidth 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabDividerWidth = function(tabDividerWidth){};

/**
 * @method setTabHeight
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabHeight tabHeight} property.</p>
 * @param {Number/String} tabHeight 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabHeight = function(tabHeight){};

/**
 * @method setTabs
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabs tabs} property.</p>
 * @param {Titanium.UI.Tab[]} tabs 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TabGroup.setTabs = function(tabs){};

/**
 * @method setTabsAtBottom
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsAtBottom tabsAtBottom} property.</p>
 * @param {Boolean} tabsAtBottom 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsAtBottom = function(tabsAtBottom){};

/**
 * @method setTabsBackgroundColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundColor tabsBackgroundColor} property.</p>
 * @param {String} tabsBackgroundColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundColor = function(tabsBackgroundColor){};

/**
 * @method setTabsBackgroundDisabledColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundDisabledColor tabsBackgroundDisabledColor} property.</p>
 * @param {String} tabsBackgroundDisabledColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundDisabledColor = function(tabsBackgroundDisabledColor){};

/**
 * @method setTabsBackgroundDisabledImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundDisabledImage tabsBackgroundDisabledImage} property.</p>
 * @param {String} tabsBackgroundDisabledImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundDisabledImage = function(tabsBackgroundDisabledImage){};

/**
 * @method setTabsBackgroundFocusedColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundFocusedColor tabsBackgroundFocusedColor} property.</p>
 * @param {String} tabsBackgroundFocusedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundFocusedColor = function(tabsBackgroundFocusedColor){};

/**
 * @method setTabsBackgroundFocusedImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundFocusedImage tabsBackgroundFocusedImage} property.</p>
 * @param {String} tabsBackgroundFocusedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundFocusedImage = function(tabsBackgroundFocusedImage){};

/**
 * @method setTabsBackgroundImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundImage tabsBackgroundImage} property.</p>
 * @param {String} tabsBackgroundImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundImage = function(tabsBackgroundImage){};

/**
 * @method setTabsBackgroundSelectedColor
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundSelectedColor tabsBackgroundSelectedColor} property.</p>
 * @param {String} tabsBackgroundSelectedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundSelectedColor = function(tabsBackgroundSelectedColor){};

/**
 * @method setTabsBackgroundSelectedImage
 * <p>Sets the value of the {@link Titanium.UI.TabGroup#property-tabsBackgroundSelectedImage tabsBackgroundSelectedImage} property.</p>
 * @param {String} tabsBackgroundSelectedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.TabGroup.setTabsBackgroundSelectedImage = function(tabsBackgroundSelectedImage){};

/**
 * @property activeTab
 * @type Titanium.UI.Tab
 * <p>Active tab.</p>
 */
Titanium.UI.TabGroup.activeTab = null;

/**
 * @property activeTabBackgroundColor
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background color for the active tab, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundColor backgroundColor}  property takes precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundColor = null;

/**
 * @property activeTabBackgroundDisabledColor
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background disabled color for the active tab, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundDisabledColor backgroundDisabledColor} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundDisabledColor = null;

/**
 * @property activeTabBackgroundDisabledImage
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background disabled image for the active tab.</p>
 * @description <p>A tab's {@link Titanium.UI.Tab#property-backgroundDisabledImage backgroundDisabledImage} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundDisabledImage = null;

/**
 * @property activeTabBackgroundFocusedColor
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background focused color for the active tab, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundFocusedColor backgroundFocusedColor} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundFocusedColor = null;

/**
 * @property activeTabBackgroundFocusedImage
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background focused image for the active tab.</p>
 * @description <p>A tab's {@link Titanium.UI.Tab#property-backgroundFocusedImage backgroundFocusedImage} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundFocusedImage = null;

/**
 * @property activeTabBackgroundImage
 * @type String
 * @platform mobileweb 2.0
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform tizen 3.1
 * <p>Default background image for the active tab.</p>
 * @description <p>On MobileWeb and Tizen, a tab's {@link Titanium.UI.Tab#property-backgroundImage backgroundImage} property takes precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundImage = null;

/**
 * @property activeTabBackgroundSelectedColor
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background selected color for the active tab, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundSelectedColor backgroundSelectedColor} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundSelectedColor = null;

/**
 * @property activeTabBackgroundSelectedImage
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background selected image for the active tab.</p>
 * @description <p>A tab's {@link Titanium.UI.Tab#property-backgroundSelectedImage backgroundSelectedImage} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.activeTabBackgroundSelectedImage = null;

/**
 * @property activeTabIconTint
 * @type String
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform tizen 3.1
 * <p>Color applied to active tabs icons, as a color name or hex triplet, where the tab's activeIcon was not defined.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.
On iOS, requires iOS 5.0 or later; ignored on earlier versions.</p>
 */
Titanium.UI.TabGroup.activeTabIconTint = null;

/**
 * @property [allowUserCustomization=true]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Allow the user to reorder tabs in the tab group using the <strong>Edit</strong> button on the <strong>More</strong> 
tab.</p>
 * @description <p>Set to <code>false</code> to prevent tab reordering.</p>
 */
Titanium.UI.TabGroup.allowUserCustomization = null;

/**
 * @property barColor
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Default navigation bar color (typically for the <strong>More</strong> tab), as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
<p>A value of <code>transparent</code> results in a semi-opaque black bar style.</p>
 */
Titanium.UI.TabGroup.barColor = null;

/**
 * @property editButtonTitle
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Title for the edit button on the <strong>More</strong> tab.</p>
 */
Titanium.UI.TabGroup.editButtonTitle = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.TabGroup.enabled = null;

/**
 * @property [exitOnClose=True if tab group is opened on top of the root activity. False otherwise.]
 * @type Boolean
 * @platform android 0.9
 * @creationOnly
 * <p>Boolean value indicating if the application should exit when closing the tab group, whether via Android
back button or the {@link Titanium.UI.TabGroup#event-close close} method.</p>
 * @description <p>You can only set this as a createTabGroup({...}) option.  Setting it after
tab group creation has no effect.</p>
 */
Titanium.UI.TabGroup.exitOnClose = null;

/**
 * @property [navBarHidden=false]
 * @type Boolean
 * @platform android 3.0
 * <p>Hide the nav bar (<code>true</code>) or show the nav bar (<code>false</code>) for this tab group.</p>
 * @description <p>On other platforms, use {@link Titanium.UI.Window#property-navBarHidden Window.navBarHidden} to
show and hide the nav bar for a tab group. On Android, the nav bar can only be
shown or hidden for the whole tab group.</p>
 */
Titanium.UI.TabGroup.navBarHidden = null;

/**
 * @property shadowImage
 * @type String
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Image of the shadow placed between the tab bar and the content area.</p>
 * @description <p>On iOS, requires iOS 6.0 or later; ignored on earlier versions. TabsBackgroundImage
must also be set in order for this to take effect.</p>
 */
Titanium.UI.TabGroup.shadowImage = null;

/**
 * @property tabDividerColor
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Color of the divider between tabs, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TabGroup.tabDividerColor = null;

/**
 * @property tabDividerWidth
 * @type Number/String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Width of the divider between tabs.</p>
 * @description <p>This width is relative to the tabgroup's parent. Can be either a float value or 
a dimension string (for example, <code>'50%'</code> or <code>'auto'</code>).</p>
 */
Titanium.UI.TabGroup.tabDividerWidth = null;

/**
 * @property tabHeight
 * @type Number/String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Height of the tabs.</p>
 * @description <p>This height is relative to the tabgroup's parent. Can be either a float value or 
a dimension string (for example, <code>'50%'</code> or <code>'auto'</code>).</p>
 */
Titanium.UI.TabGroup.tabHeight = null;

/**
 * @property tabs
 * @type Titanium.UI.Tab[]
 * <p>Tabs managed by the tab group.</p>
 */
Titanium.UI.TabGroup.tabs = null;

/**
 * @property [tabsAtBottom=true]
 * @type Boolean
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Determines whether the tabs should be positioned at the top rather than the bottom of the 
screen.</p>
 * @description <p>Set to <code>false</code> to position tabs at the top of the screen.</p>
 */
Titanium.UI.TabGroup.tabsAtBottom = null;

/**
 * @property tabsBackgroundColor
 * @type String
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background color for inactive tabs, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundColor backgroundColor} property takes precedence if set.</p>
<p>On iOS 5.0 or later, this property applies to all states and tabs, not just inactive
tabs. Furthermore, the inactive tab icons without activeIcon will be tinted this color;
property is ignored on earlier versions of iOS.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundColor = null;

/**
 * @property tabsBackgroundDisabledColor
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background disabled color for tabs, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundDisabledColor backgroundDisabledColor} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundDisabledColor = null;

/**
 * @property tabsBackgroundDisabledImage
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background disabled image for tabs.</p>
 * @description <p>A tab's {@link Titanium.UI.Tab#property-backgroundDisabledImage backgroundDisabledImage} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundDisabledImage = null;

/**
 * @property tabsBackgroundFocusedColor
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background focused color for tabs, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundFocusedColor backgroundFocusedColor} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundFocusedColor = null;

/**
 * @property tabsBackgroundFocusedImage
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background focused image for tabs.</p>
 * @description <p>A tab's {@link Titanium.UI.Tab#property-backgroundFocusedImage backgroundFocusedImage} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundFocusedImage = null;

/**
 * @property tabsBackgroundImage
 * @type String
 * @platform mobileweb 2.0
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform tizen 3.1
 * <p>Default background image for tabs.</p>
 * @description <p>On MobileWeb and Tizen, a tab's {@link Titanium.UI.Tab#property-backgroundImage backgroundImage} property takes precedence if set.</p>
<p>On iOS, requires iOS 5.0 or later; ignored on earlier versions.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundImage = null;

/**
 * @property tabsBackgroundSelectedColor
 * @type String
 * @platform android 3.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background selected color for tabs, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}.</p>
<p>A tab's {@link Titanium.UI.Tab#property-backgroundSelectedColor backgroundSelectedColor} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundSelectedColor = null;

/**
 * @property tabsBackgroundSelectedImage
 * @type String
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Default background selected image for tabs.</p>
 * @description <p>A tab's {@link Titanium.UI.Tab#property-backgroundSelectedImage backgroundSelectedImage} property takes 
precedence if set.</p>
 */
Titanium.UI.TabGroup.tabsBackgroundSelectedImage = null;

/**
 * @property windowSoftInputMode
 * @type Number
 * @platform android 0.9
 * @creationOnly
 * <p>Determines how the tab group is treated when a soft input method (such as a virtual keyboard) 
is displayed.</p>
 * @description <p>One of {@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_PAN SOFT_INPUT_ADJUST_PAN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_RESIZE SOFT_INPUT_ADJUST_RESIZE}, 
or {@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_UNSPECIFIED SOFT_INPUT_ADJUST_UNSPECIFIED}.</p>
<p>For more information see the official Android API Reference, 
<a href="http://developer.android.com/reference/android/view/Window.html#setSoftInputMode(int)">Window.setSoftInputMode</a>.</p>
 */
Titanium.UI.TabGroup.windowSoftInputMode = null;

/**
 * @class Titanium.UI.TabbedBar
 * @typestr Object of Titanium.UI
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.UI.View
 * <p>A button bar that maintains a selected state.</p>
 * @description <p>A tabbed bar is a button bar that
maintains a state (visually distinguished as a pressed or selected look).
It is closely related to the <code>ButtonBar</code> control. See the description of 
{@link Titanium.UI.ButtonBar ButtonBar} for information on styling tabbed bars and buttons
bars.</p>
<p>Use the {@link Titanium.UI#method-createTabbedBar} method to create a Tabbed Bar.</p>
 * <h3>Example</h3>
 * <h4>Simple Tabbed Bar with 3 items</h4>
 * <pre>
var bb1 = Titanium.UI.createTabbedBar({
labels:['One', 'Two', 'Three'],
backgroundColor:'#336699',
top:50,
style:Titanium.UI.iPhone.SystemButtonStyle.BAR,
height:25,
width:200
});
win.add(bb1);</pre>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS.TabbedBar} instead.</p>
 */
Titanium.UI.TabbedBar = {};














/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.TabbedBar.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.TabbedBar.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.TabbedBar.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.TabbedBar.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.TabbedBar.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.TabbedBar.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.TabbedBar.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.TabbedBar.getFocusable = function(){};

/**
 * @method getIndex
 * <p>Gets the value of the {@link Titanium.UI.TabbedBar#property-index index} property.</p>
 * @return {Number} 
*/
Titanium.UI.TabbedBar.getIndex = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.TabbedBar.getKeepScreenOn = function(){};

/**
 * @method getLabels
 * <p>Gets the value of the {@link Titanium.UI.TabbedBar#property-labels labels} property.</p>
 * @return {String[]/BarItemType[]} 
*/
Titanium.UI.TabbedBar.getLabels = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.TabbedBar.getSoftKeyboardOnFocus = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.TabbedBar#property-style style} property.</p>
 * @return {Number} 
*/
Titanium.UI.TabbedBar.getStyle = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.TabbedBar.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.TabbedBar.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.TabbedBar.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.TabbedBar.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.TabbedBar.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.TabbedBar.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.TabbedBar.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.TabbedBar.setFocusable = function(){};

/**
 * @method setIndex
 * <p>Sets the value of the {@link Titanium.UI.TabbedBar#property-index index} property.</p>
 * @param {Number} index 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TabbedBar.setIndex = function(index){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.TabbedBar.setKeepScreenOn = function(){};

/**
 * @method setLabels
 * <p>Sets the value of the {@link Titanium.UI.TabbedBar#property-labels labels} property.</p>
 * @param {String[]/BarItemType[]} labels 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TabbedBar.setLabels = function(labels){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.TabbedBar.setSoftKeyboardOnFocus = function(){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.TabbedBar#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TabbedBar.setStyle = function(style){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.TabbedBar.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.TabbedBar.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.TabbedBar.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.TabbedBar.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.TabbedBar.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.TabbedBar.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.TabbedBar.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.TabbedBar.focusable = null;

/**
 * @property index
 * @type Number
 * <p>Index of the currently selected button.</p>
 */
Titanium.UI.TabbedBar.index = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.TabbedBar.keepScreenOn = null;

/**
 * @property labels
 * @type String[]/BarItemType[]
 * <p>Array of labels for the tabbed bar.</p>
 * @description <p>The labels can be specified either using an array of strings, in which case
each string defines the title for a button, or using an array of simple
dictionary objects, {@link BarItemType}, which can specify title, image, width and 
enabled state for each button.</p>
 */
Titanium.UI.TabbedBar.labels = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.TabbedBar.softKeyboardOnFocus = null;

/**
 * @property [style=Titanium.UI.iPhone.SystemButtonStyle.PLAIN]
 * @type Number
 * <p>Style of the tabbed bar.</p>
 * @description <p>Specify one of the constants defined in 
{@link Titanium.UI.iPhone.SystemButtonStyle Titanium.UI.iPhone.SystemButtonStyle},
either <code>PLAIN</code>, <code>BORDERED</code>, or <code>BAR</code>.</p>
<p>The <code>BAR</code> style specifies a more compact style and allows the bar's background
color or gradient to show through.</p>
 */
Titanium.UI.TabbedBar.style = null;

/**
 * @class Titanium.UI.TableView
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A table view is used to present information, organized in sections and rows, in a 
vertically-scrolling view.</p>
 * @description <p>Use the {@link Titanium.UI#method-createTableView} method to create a <code>TableView</code>.</p>
<p>A <code>TableView</code> object is a container for {@link Titanium.UI.TableViewSection TableViewSection} 
objects that are, in turn, containers for {@link Titanium.UI.TableViewRow TableViewRow} objects. </p>
<h4>Creating Tables</h4>
<p>Tables may be created in the following ways.</p>
<p>The simplest approach is to pass dictionaries of <code>TableViewRow</code> properties, such as 
{@link Titanium.UI.TableViewRow#property-backgroundColor backgroundColor}, 
{@link Titanium.UI.TableViewRow#property-color color}, and {@link Titanium.UI.TableViewRow#property-title title}, to the 
{@link Titanium.UI#method-createTableView createTableView} method, which causes the rows to be implictly 
created, added to a single {@link Titanium.UI.TableViewSection TableViewSection}, and then added to 
the <code>TableView</code>. Refer to the "Simple Table View with Basic Rows" example.</p>
<p>For more control over the layout of each row, however, {@link Titanium.UI.TableViewRow TableViewRow} 
objects can be created explicitly using the {@link Titanium.UI#method-createTableViewRow} method. Child views, 
such as {@link Titanium.UI.Label labels}, {@link Titanium.UI.ImageView images}, and 
{@link Titanium.UI.Button buttons}, may be added to each row. When passed passed to the table view, a 
single {@link Titanium.UI.TableViewSection TableViewSection} is automatically created to hold the 
rows. See the "Table View with Composite Layout" example.</p>
<p>Lastly, sets of rows may be explicitly created and added to a their own 
{@link Titanium.UI.TableViewSection TableViewSection} objects, which are then added to a <code>TableView</code>, 
to enable the rows to be organized. Headers and footers titles or views must be configured 
in order for the sections to be visible.</p>
<h4>Tables and Scroll Views</h4>
<p>As a table view inherently scrolls, it creates a very poor user experience when one contains 
other scrolling views, such as a {@link Titanium.UI.ScrollableView ScrollableView} or 
{@link Titanium.UI.TextArea TextArea}. Thus, this layout is strongly discouraged. </p>
<h4>TextFields in Tables with SOFT_INPUT_ADJUST_PAN (Android)</h4>
<p>When a {@link Titanium.UI.TextField TextField} is placed in a row near the bottom of a <code>TableView</code>, 
in a window that is configured with 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_PAN SOFT_INPUT_ADJUST_PAN}, it is expected for the 
text field to automatically move to a visible position after it is focused and the software 
keyboard displayed. However, due to a known problem caused by native Android's ListView behavior, 
the keyboard is likely to completely obscure the text field. </p>
<p>To mitigate this, a <code>ScrollView</code> may be used instead of a table view, as demonstrated in the 
{@link Titanium.UI.ScrollView ScrollView}, "Scroll View as a Table View", example. </p>
<h4>Known Issues</h4>
<p>There are known issues with the <code>sections</code> property and associated methods added in
Release 3.0:</p>
<ul>
<li>
<p>On iOS, event listeners do not fire correctly when table view sections are added or
    updated using the <code>sections</code> property or <code>appendSection</code>, <code>insertSectionBefore</code>,
    <code>insertSectionAfter</code>, or <code>updateSection</code> methods. Adding sections using the <code>data</code> 
    property is recommended for Release 3.0.x.  This issue has been fixed as of Release
    3.1.0.
    (<a href="https://jira.appcelerator.org/browse/TIMOB-12616">TIMOB-12616</a>)</p>
</li>
<li>
<p>On iOS, the first two arguments to the <code>updateSection</code> method are reversed.
    (<a href="https://jira.appcelerator.org/browse/TIMOB-12625">TIMOB-12625</a>)</p>
</li>
<li>
<p>On Android, the <code>sections</code> property is a read-only property.
    (<a href="https://jira.appcelerator.org/browse/TIMOB-12620">TIMOB-12620</a>)</p>
</li>
<li>
<p>On Mobile Web, click events fail to fire after calling the <code>updateSection</code> method.
    (<a href="https://jira.appcelerator.org/browse/TIMOB-12630">TIMOB-12630</a>)</p>
</li>
</ul>
<h4>Row Editing and Moving Modes (iOS only)</h4>
<p>On iOS, table views have an <code>editing</code> and a <code>moving</code> mode that may be activated to using their 
respective {@link Titanium.UI.TableView#property-editing editing} and {@link Titanium.UI.TableView#property-moving moving} 
properties. These allow rows to be deleted or re-ordered by the user, depending on each row's 
{@link Titanium.UI.TableViewRow#property-editable editable} and {@link Titanium.UI.TableViewRow#property-moveable moveable} 
property that are either explicitly set or inherited from the table.</p>
<p>There are two UI controls available for deleting table view rows, depending on the combination 
of editing and moving modes enabled:</p>
<ul>
<li>"red icon delete" - a circular red icon is displayed on the left-hand side of a row, which 
reveals a delete button on the right-hand side of that row when clicked.</li>
<li>"swipe delete" - without either of the table editing or moving modes enabled, a left or right 
swipe gesture on a row reveals a delete button on the right-hand side of the row.</li>
</ul>
<p>When <code>editable</code> and <code>moveable</code> properties are set on the table view, they are known as <code>inherited</code>, 
whereas when set on a row, they are known as <code>explicit</code>. As their resulting behavior may not 
follow their literal meaning, depending on the combination of <code>editing</code> and <code>moving</code> modes that 
are enabled, a detailed description of the behavior follows.</p>
<p>With <code>editing:false</code> and <code>moving:true</code>:</p>
<ul>
<li>For red icon delete and swipe delete, inherited and explicit <code>editable</code> properties may be set.</li>
<li>Inherited <code>moveable</code> property is always <code>true</code>. Explicit <code>moveable</code> property may be set.</li>
</ul>
<p>With <code>editing:true</code> and <code>moving:false</code>:</p>
<ul>
<li>For red icon delete and swipe delete, inherited <code>editable</code> property is always <code>true</code>. Explicit 
<code>editable</code> property may be set.</li>
<li>Inherited and explicit <code>moveable</code> properties may be set.</li>
</ul>
<p>With <code>editing:false</code> and <code>moving: false</code>:</p>
<ul>
<li>For red icon delete, inherited and explicit <code>editable</code> properties always <code>false</code>. For 
swipe delete, inherited and explicit <code>editable</code> properties may be set.</li>
<li>Inherited <code>moveable</code> property is always <code>false</code>.</li>
</ul>
<p>With <code>editing:true</code> and <code>moving:true</code>:</p>
<ul>
<li>For red icon delete and swipe delete, inherited and explicit <code>editable</code> properties may be set.</li>
<li>Inherited <code>moveable</code> property is always <code>true</code>. Explicit <code>moveable</code> property may be set.</li>
</ul>
 * <h3>Examples</h3>
 * <h4>Simple Table View</h4>
 * <p><p>Create a basic table view.</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow();

var tableData = [ {title: 'Apples'}, {title: 'Bananas'}, {title: 'Carrots'}, {title: 'Potatoes'} ];

var table = Ti.UI.createTableView({
  data: tableData
});
win.add(table);
win.open();</pre>
 * <h4>Table View Sections</h4>
 * <p><p>Create a table with three sections, each with two rows. Add two sections to the table 
before and one after it is rendered. This sample only works on Release 3.0 and later.</p></p><pre>Ti.UI.backgroundColor = 'white';
var win = Ti.UI.createWindow();

var sectionFruit = Ti.UI.createTableViewSection({ headerTitle: 'Fruit' });
sectionFruit.add(Ti.UI.createTableViewRow({ title: 'Apples' }));
sectionFruit.add(Ti.UI.createTableViewRow({ title: 'Bananas' }));

var sectionVeg = Ti.UI.createTableViewSection({ headerTitle: 'Vegetables' });
sectionVeg.add(Ti.UI.createTableViewRow({ title: 'Carrots' }));
sectionVeg.add(Ti.UI.createTableViewRow({ title: 'Potatoes' }));

var table = Ti.UI.createTableView({
  data: [sectionFruit, sectionVeg]
});

win.add(table);
win.open();

var sectionFish = Ti.UI.createTableViewSection({ headerTitle: 'Fish' });
sectionFish.add(Ti.UI.createTableViewRow({ title: 'Cod' }));
sectionFish.add(Ti.UI.createTableViewRow({ title: 'Haddock' }));

// Prior to Release 3.0, you can only add and remove sections by setting the data property
// table.data = [ sectionFish, sectionFruit, sectionVeg ];
// Due to a known issue, TIMOB-12616, the section access methods and sections
// property should not be used on iOS with Release 3.0.x.
table.insertSectionBefore(0, sectionFish);</pre>
 * <h4>Table View with Composite Layout</h4>
 * <p><p>Create a table of rows that contain a custom child-view layout.</p></p><pre>Ti.UI.setBackgroundColor('#000');
var win = Ti.UI.createWindow({
  backgroundColor: 'black',
  exitOnClose: true,
  fullscreen: false,
  title: 'TableView Demo'
});

// generate random number, used to make each row appear distinct for this example
function randomInt(max){
  return Math.floor(Math.random() * max) + 1;
}

var IMG_BASE = 'https://github.com/appcelerator/titanium_mobile/raw/master/demos/KitchenSink/Resources/images/';
var defaultFontSize = Ti.Platform.name === 'android' ? 16 : 14;

var tableData = [];

for (var i=1; i&lt;=20; i++){
  var row = Ti.UI.createTableViewRow({
    className:'forumEvent', // used to improve table performance
    selectedBackgroundColor:'white',
    rowIndex:i, // custom property, useful for determining the row during events
    height:110
  });
  
  var imageAvatar = Ti.UI.createImageView({
    image: IMG_BASE + 'custom_tableview/user.png',
    left:10, top:5,
    width:50, height:50
  });
  row.add(imageAvatar);
  
  var labelUserName = Ti.UI.createLabel({
    color:'#576996',
    font:{fontFamily:'Arial', fontSize:defaultFontSize+6, fontWeight:'bold'},
    text:'Fred Smith ' + i,
    left:70, top: 6,
    width:200, height: 30
  });
  row.add(labelUserName);
  
  var labelDetails = Ti.UI.createLabel({
    color:'#222',
    font:{fontFamily:'Arial', fontSize:defaultFontSize+2, fontWeight:'normal'},
    text:'Replied to post with id ' + randomInt(1000) + '.',
    left:70, top:44,
    width:360
  });
  row.add(labelDetails);
  
  var imageCalendar = Ti.UI.createImageView({
    image:IMG_BASE + 'custom_tableview/eventsButton.png',
    left:70, bottom: 2,
    width:32, height: 32
  });
  row.add(imageCalendar);
  
  var labelDate = Ti.UI.createLabel({
    color:'#999',
    font:{fontFamily:'Arial', fontSize:defaultFontSize, fontWeight:'normal'},
    text:'on ' + randomInt(30) + ' Nov 2012',
    left:105, bottom:10,
    width:200, height:20
  });
  row.add(labelDate);
  
  tableData.push(row);
}

var tableView = Ti.UI.createTableView({
  backgroundColor:'white',
  data:tableData
});

win.add(tableView);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous table view sections example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;TableView id="table"&gt;
            &lt;TableViewSection id="sectionFruit" headerTitle="Fruit"&gt;
                &lt;TableViewRow title="Apple"/&gt;
                &lt;TableViewRow title="Bananas"/&gt;
            &lt;/TableViewSection&gt;
            &lt;TableViewSection id="sectionVeg" headerTitle="Vegetables"&gt;
                &lt;TableViewRow title="Carrots"/&gt;
                &lt;TableViewRow title="Potatoes"/&gt;
            &lt;/TableViewSection&gt;
            &lt;TableViewSection id="sectionFish" headerTitle="Fish"&gt;
                &lt;TableViewRow title="Cod"/&gt;
                &lt;TableViewRow title="Haddock"/&gt;
            &lt;/TableViewSection&gt;
        &lt;/TableView&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.TableView = {};























/**
 * @method appendRow
 * <p>Appends a single row or an array of rows to the end of the table.</p>
 * @description <p>Each row can be passed as a {@link Titanium.UI.TableViewRow TableViewRow} object, or as 
dictionary specifying the properties for a table row, in which case this <code>TableView</code> will 
create <code>TableViewRow</code> objects as needed. </p>
<p>On iOS, the row(s) can be inserted with animation by specifying a <code>properties</code> parameter.</p>
 * @param {Titanium.UI.TableViewRow/Object[]} row 
 * <p>Row or rows to add to the table.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.appendRow = function(row, animation){};

/**
 * @method appendSection
 * <p>Appends a single section or an array of sections to the end of the table.</p>
 * @description <p>Each section can be passed as a {@link Titanium.UI.TableViewSection TableViewSection} object, or as
dictionary specifying the properties for a table section, in which case this <code>TableView</code> will 
create <code>TableViewSection</code> objects as needed. </p>
<p>On iOS, the section(s) can be inserted with animation by specifying a <code>properties</code> parameter.</p>
<p>Due to a known issue, TIMOB-12616, this method should not be used for adding sections on iOS.</p>
 * @param {Titanium.UI.TableViewSection/Object[]} section 
 * <p>Section or section to add to the table.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
 * @platform android 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TableView.appendSection = function(section, animation){};

/**
 * @method deleteRow
 * <p>Deletes an existing row.</p>
 * @description <p>On iOS, the row can be deleted with animation by specifying a <code>properties</code> parameter.
Starting in SDK 3.1.0, the row can be specified using {@link Titanium.UI.TableViewRow} on Android and iOS.</p>
 * @param {Number/Titanium.UI.TableViewRow} row 
 * <p>Index of the row to delete, or the row object to delete.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.deleteRow = function(row, animation){};

/**
 * @method deleteSection
 * <p>Deletes an existing section.</p>
 * @description <p>On iOS, the section can be deleted with animation by specifying a <code>properties</code> parameter.</p>
 * @param {Number} section 
 * <p>Index of the section to delete.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
 * @platform android 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TableView.deleteSection = function(section, animation){};

/**
 * @method deselectRow
 * <p>Programmatically deselects a row.</p>
 * @param {Number} row 
 * <p>Row index to deselect.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.deselectRow = function(row){};

/**
 * @method getAllowsSelection
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-allowsSelection allowsSelection} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getAllowsSelection = function(){};

/**
 * @method getAllowsSelectionDuringEditing
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-allowsSelectionDuringEditing allowsSelectionDuringEditing} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getAllowsSelectionDuringEditing = function(){};

/**
 * @method getBackgroundColor
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-backgroundColor backgroundColor} property.</p>
 * @return {String} 
*/
Titanium.UI.TableView.getBackgroundColor = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.TableView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.TableView.getBackgroundSelectedImage = function(){};

/**
 * @method getData
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-data data} property.</p>
 * @return {Dictionary/Titanium.UI.TableViewRow[]/Titanium.UI.TableViewSection[]} 
*/
Titanium.UI.TableView.getData = function(){};

/**
 * @method getEditable
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-editable editable} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getEditable = function(){};

/**
 * @method getEditing
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-editing editing} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getEditing = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.TableView.getEnabled = function(){};

/**
 * @method getFilterAttribute
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-filterAttribute filterAttribute} property.</p>
 * @return {String} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getFilterAttribute = function(){};

/**
 * @method getFilterCaseInsensitive
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-filterCaseInsensitive filterCaseInsensitive} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getFilterCaseInsensitive = function(){};

/**
 * @method getFooterTitle
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-footerTitle footerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.TableView.getFooterTitle = function(){};

/**
 * @method getFooterView
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-footerView footerView} property.</p>
 * @return {Titanium.UI.View} 
*/
Titanium.UI.TableView.getFooterView = function(){};

/**
 * @method getHeaderPullView
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-headerPullView headerPullView} property.</p>
 * @return {Titanium.UI.View} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.TableView.getHeaderPullView = function(){};

/**
 * @method getHeaderTitle
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-headerTitle headerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.TableView.getHeaderTitle = function(){};

/**
 * @method getHeaderView
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-headerView headerView} property.</p>
 * @return {Titanium.UI.View} 
*/
Titanium.UI.TableView.getHeaderView = function(){};

/**
 * @method getHideSearchOnSelection
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-hideSearchOnSelection hideSearchOnSelection} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getHideSearchOnSelection = function(){};

/**
 * @method getIndex
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-index index} property.</p>
 * @return {TableViewIndexEntry[]} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getIndex = function(){};

/**
 * @method getMaxRowHeight
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-maxRowHeight maxRowHeight} property.</p>
 * @return {Number} 
*/
Titanium.UI.TableView.getMaxRowHeight = function(){};

/**
 * @method getMinRowHeight
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-minRowHeight minRowHeight} property.</p>
 * @return {Number} 
*/
Titanium.UI.TableView.getMinRowHeight = function(){};

/**
 * @method getMoveable
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-moveable moveable} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getMoveable = function(){};

/**
 * @method getMoving
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-moving moving} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getMoving = function(){};

/**
 * @method getOverScrollMode
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-overScrollMode overScrollMode} property.</p>
 * @return {Number} 
 * @platform android 3.1
*/
Titanium.UI.TableView.getOverScrollMode = function(){};

/**
 * @method getRowHeight
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-rowHeight rowHeight} property.</p>
 * @return {Number} 
*/
Titanium.UI.TableView.getRowHeight = function(){};

/**
 * @method getScrollIndicatorStyle
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-scrollIndicatorStyle scrollIndicatorStyle} property.</p>
 * @return {Number} 
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.TableView.getScrollIndicatorStyle = function(){};

/**
 * @method getScrollable
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-scrollable scrollable} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getScrollable = function(){};

/**
 * @method getScrollsToTop
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-scrollsToTop scrollsToTop} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.UI.TableView.getScrollsToTop = function(){};

/**
 * @method getSearch
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-search search} property.</p>
 * @return {Titanium.UI.SearchBar/Titanium.UI.Android.SearchView} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getSearch = function(){};

/**
 * @method getSearchAsChild
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-searchAsChild searchAsChild} property.</p>
 * @return {Boolean} 
 * @platform android 3.0.2
*/
Titanium.UI.TableView.getSearchAsChild = function(){};

/**
 * @method getSearchHidden
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-searchHidden searchHidden} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getSearchHidden = function(){};

/**
 * @method getSectionCount
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-sectionCount sectionCount} property.</p>
 * @return {Number} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
*/
Titanium.UI.TableView.getSectionCount = function(){};

/**
 * @method getSections
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-sections sections} property.</p>
 * @return {Titanium.UI.TableViewSection[]} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TableView.getSections = function(){};

/**
 * @method getSeparatorColor
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-separatorColor separatorColor} property.</p>
 * @return {String} 
*/
Titanium.UI.TableView.getSeparatorColor = function(){};

/**
 * @method getSeparatorStyle
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-separatorStyle separatorStyle} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TableView.getSeparatorStyle = function(){};

/**
 * @method getShowVerticalScrollIndicator
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-showVerticalScrollIndicator showVerticalScrollIndicator} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getShowVerticalScrollIndicator = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.TableView#property-style style} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.getStyle = function(){};

/**
 * @method insertRowAfter
 * <p>Inserts a row after another row.</p>
 * @description <p>Each row can be passed as a {@link Titanium.UI.TableViewRow TableViewRow} object, or as 
dictionary specifying the properties for a table row, in which case this <code>TableView</code> will 
create <code>TableViewRow</code> objects as needed. </p>
<p>On iOS, the row(s) may be inserted with animation by setting the <code>animation</code> parameter.</p>
 * @param {Number} index 
 * <p>Index of the row to insert after.</p>
 * @param {Titanium.UI.TableViewRow/Object} row 
 * <p>Row to insert.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.insertRowAfter = function(index, row, animation){};

/**
 * @method insertRowBefore
 * <p>Inserts a row before another row.</p>
 * @description <p>Each row can be passed as a {@link Titanium.UI.TableViewRow TableViewRow} object, or as 
dictionary specifying the properties for a table row, in which case this <code>TableView</code> will 
create <code>TableViewRow</code> objects as needed. </p>
<p>On iOS, the row(s) may be inserted with animation by setting the <code>animation</code> parameter.</p>
 * @param {Number} index 
 * <p>Index of the row to insert before.</p>
 * @param {Titanium.UI.TableViewRow/Object} row 
 * <p>Row to insert.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.insertRowBefore = function(index, row, animation){};

/**
 * @method insertSectionAfter
 * <p>Inserts a section after another section.</p>
 * @description <p>Each section can be passed as a {@link Titanium.UI.TableViewSection TableViewSection} object, or as 
dictionary specifying the properties for a table section, in which case this <code>TableView</code> will 
create <code>TableViewSection</code> objects as needed. </p>
<p>On iOS, the section(s) may be inserted with animation by setting the <code>animation</code> parameter.</p>
<p>Due to a known issue, TIMOB-12616, this method should not be used for adding sections on iOS.</p>
 * @param {Number} index 
 * <p>Index of the section to insert after.</p>
 * @param {Titanium.UI.TableViewSection/Object} section 
 * <p>section to insert.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
 * @platform android 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TableView.insertSectionAfter = function(index, section, animation){};

/**
 * @method insertSectionBefore
 * <p>Inserts a section before another section.</p>
 * @description <p>Each section can be passed as a {@link Titanium.UI.TableViewSection TableViewSection} object, or as 
dictionary specifying the properties for a table section, in which case this <code>TableViewSection</code> will 
create <code>TableViewSection</code> objects as needed. </p>
<p>On iOS, the section(s) may be inserted with animation by setting the <code>animation</code> parameter.</p>
<p>Due to a known issue, TIMOB-12616, this method should not be used for adding sections on iOS.</p>
 * @param {Number} index 
 * <p>Index of the section to insert before.</p>
 * @param {Titanium.UI.TableViewSection/Object} section 
 * <p>section to insert.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
 * @platform android 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TableView.insertSectionBefore = function(index, section, animation){};

/**
 * @method scrollToIndex
 * <p>Scrolls the table view to ensure that the specified row is on screen.</p>
 * @description <p>On iOS, specify a {@link TableViewAnimationProperties} object to control the position that
the selected row is scrolled to, and whether scrolling is animated.</p>
 * @param {Number} index 
 * <p>Row index to scroll to.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.scrollToIndex = function(index, animation){};

/**
 * @method scrollToTop
 * <p>Scrolls the table to a specific top position where 0 is the topmost y position in the 
table view.</p>
 * @description <p>The behavior of this method is platform-specific.</p>
<p>On Android, the <code>top</code> value is interpreted as a row index that should be scrolled 
to the top of the screen. The table will not scroll the last row of data higher than
the bottom of the screen. If there is less than one screenful of data below the 
specified row, the table doesn't scroll the specified row all the way to the top.
If the table has less than one screenful of data total, it does not scroll at all.</p>
<p>On iOS, the <code>top</code> value is interpreted as a pixel offset between the top of the top
row of data and the top of the table view. So a <code>top</code> value of 0 scrolls the list to
the top. A positive value scrolls it down, and a negative value scrolls the list up
above the first item.</p>
<p>On Mobile Web and Tizen, the <code>top</code> value is interpreted as a pixel offset between the top of the top
row of data and the top of the table view. So a <code>top</code> value of 0 scrolls the list to
the top. A positive value scrolls it down. Values outside the scrollable range are clipped
so that negative numbers scroll the list to the top, and large positive values scroll the
list to the bottom.</p>
<p>On iOS, specify a {@link TableViewAnimationProperties} object with <code>animated</code> set to <code>false</code> to 
disable the scrolling animation.</p>
 * @param {Number} top 
 * <p>Y position for the top of the table view.</p>
 * @param {TableViewAnimationProperties} animation (optional)
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.scrollToTop = function(top, animation){};

/**
 * @method selectRow
 * <p>Programmatically selects a row. In Android, it sets the currently selected item. If in touch mode,
the item will not be selected but it will still be positioned appropriately. If the specified 
selection position is less than 0, then the item at position 0 will be selected.</p>
 * @param {Number} row 
 * <p>Row index to select.</p>
 * @return void
 * @platform iphone 1.8.2
 * @platform ipad 1.8.2
 * @platform android 3.0
*/
Titanium.UI.TableView.selectRow = function(row){};

/**
 * @method setAllowsSelection
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-allowsSelection allowsSelection} property.</p>
 * @param {Boolean} allowsSelection 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setAllowsSelection = function(allowsSelection){};

/**
 * @method setAllowsSelectionDuringEditing
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-allowsSelectionDuringEditing allowsSelectionDuringEditing} property.</p>
 * @param {Boolean} allowsSelectionDuringEditing 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setAllowsSelectionDuringEditing = function(allowsSelectionDuringEditing){};

/**
 * @method setBackgroundColor
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-backgroundColor backgroundColor} property.</p>
 * @param {String} backgroundColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setBackgroundColor = function(backgroundColor){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.TableView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.TableView.setBackgroundSelectedImage = function(){};

/**
 * @method setContentInsets
 * <p>Sets this tableview's content insets.</p>
 * @description <p>A table view is essentially a scroll view that contains a set of static row views that 
represents the content. Thus, the <code>setContentInsets</code> method facilitates a margin, or inset, 
distance between the content and the container scroll view.</p>
<p>Typically used with the {@link Titanium.UI.TableView#property-headerPullView headerPullView} property.</p>
 * @param {TableViewEdgeInsets} edgeInsets 
 * <p>Dictionary to describe the insets.</p>
 * @param {TableViewContentInsetOption} animated (optional)
 * <p>Determines whether, and how, the content inset change should be animated.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.TableView.setContentInsets = function(edgeInsets, animated){};

/**
 * @method setData
 * <p>Sets the data in the table.</p>
 * @description <p>Each row can be passed as a {@link Titanium.UI.TableViewRow TableViewRow} object, or as 
dictionary specifying the properties for a table row, in which case this <code>TableView</code> will 
create <code>TableViewRow</code> objects as needed. </p>
<p><code>setData</code> can also be used to add {@link Titanium.UI.TableViewSection TableViewSection}s to a 
table view.</p>
 * @param {Titanium.UI.TableViewRow[]/Object[]/Titanium.UI.TableViewSection[]} data 
 * <p>Rows or sections to add to this table.</p>
 * @param {TableViewAnimationProperties} animation 
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.setData = function(data, animation){};

/**
 * @method setEditable
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-editable editable} property.</p>
 * @param {Boolean} editable 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setEditable = function(editable){};

/**
 * @method setEditing
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-editing editing} property.</p>
 * @param {Boolean} editing 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setEditing = function(editing){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.TableView.setEnabled = function(){};

/**
 * @method setFilterAttribute
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-filterAttribute filterAttribute} property.</p>
 * @param {String} filterAttribute 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setFilterAttribute = function(filterAttribute){};

/**
 * @method setFilterCaseInsensitive
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-filterCaseInsensitive filterCaseInsensitive} property.</p>
 * @param {Boolean} filterCaseInsensitive 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setFilterCaseInsensitive = function(filterCaseInsensitive){};

/**
 * @method setFooterTitle
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-footerTitle footerTitle} property.</p>
 * @param {String} footerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setFooterTitle = function(footerTitle){};

/**
 * @method setFooterView
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-footerView footerView} property.</p>
 * @param {Titanium.UI.View} footerView 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setFooterView = function(footerView){};

/**
 * @method setHeaderPullView
 * <p>Sets the value of the [Titanium.UI.TableView.headerPullView] property.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to display.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.TableView.setHeaderPullView = function(view){};

/**
 * @method setHeaderTitle
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-headerTitle headerTitle} property.</p>
 * @param {String} headerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setHeaderTitle = function(headerTitle){};

/**
 * @method setHeaderView
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-headerView headerView} property.</p>
 * @param {Titanium.UI.View} headerView 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setHeaderView = function(headerView){};

/**
 * @method setHideSearchOnSelection
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-hideSearchOnSelection hideSearchOnSelection} property.</p>
 * @param {Boolean} hideSearchOnSelection 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setHideSearchOnSelection = function(hideSearchOnSelection){};

/**
 * @method setIndex
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-index index} property.</p>
 * @param {TableViewIndexEntry[]} index 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setIndex = function(index){};

/**
 * @method setMaxRowHeight
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-maxRowHeight maxRowHeight} property.</p>
 * @param {Number} maxRowHeight 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setMaxRowHeight = function(maxRowHeight){};

/**
 * @method setMinRowHeight
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-minRowHeight minRowHeight} property.</p>
 * @param {Number} minRowHeight 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setMinRowHeight = function(minRowHeight){};

/**
 * @method setMoveable
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-moveable moveable} property.</p>
 * @param {Boolean} moveable 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setMoveable = function(moveable){};

/**
 * @method setMoving
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-moving moving} property.</p>
 * @param {Boolean} moving 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setMoving = function(moving){};

/**
 * @method setOverScrollMode
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-overScrollMode overScrollMode} property.</p>
 * @param {Number} overScrollMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Titanium.UI.TableView.setOverScrollMode = function(overScrollMode){};

/**
 * @method setRowHeight
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-rowHeight rowHeight} property.</p>
 * @param {Number} rowHeight 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setRowHeight = function(rowHeight){};

/**
 * @method setScrollIndicatorStyle
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-scrollIndicatorStyle scrollIndicatorStyle} property.</p>
 * @param {Number} scrollIndicatorStyle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1
 * @platform ipad 2.1
*/
Titanium.UI.TableView.setScrollIndicatorStyle = function(scrollIndicatorStyle){};

/**
 * @method setScrollable
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-scrollable scrollable} property.</p>
 * @param {Boolean} scrollable 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setScrollable = function(scrollable){};

/**
 * @method setScrollsToTop
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-scrollsToTop scrollsToTop} property.</p>
 * @param {Boolean} scrollsToTop 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.UI.TableView.setScrollsToTop = function(scrollsToTop){};

/**
 * @method setSearch
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-search search} property.</p>
 * @param {Titanium.UI.SearchBar/Titanium.UI.Android.SearchView} search 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setSearch = function(search){};

/**
 * @method setSearchAsChild
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-searchAsChild searchAsChild} property.</p>
 * @param {Boolean} searchAsChild 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0.2
*/
Titanium.UI.TableView.setSearchAsChild = function(searchAsChild){};

/**
 * @method setSearchHidden
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-searchHidden searchHidden} property.</p>
 * @param {Boolean} searchHidden 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setSearchHidden = function(searchHidden){};

/**
 * @method setSections
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-sections sections} property.</p>
 * @param {Titanium.UI.TableViewSection[]} sections 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TableView.setSections = function(sections){};

/**
 * @method setSeparatorColor
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-separatorColor separatorColor} property.</p>
 * @param {String} separatorColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableView.setSeparatorColor = function(separatorColor){};

/**
 * @method setSeparatorStyle
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-separatorStyle separatorStyle} property.</p>
 * @param {Number} separatorStyle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TableView.setSeparatorStyle = function(separatorStyle){};

/**
 * @method setShowVerticalScrollIndicator
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-showVerticalScrollIndicator showVerticalScrollIndicator} property.</p>
 * @param {Boolean} showVerticalScrollIndicator 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setShowVerticalScrollIndicator = function(showVerticalScrollIndicator){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.TableView#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TableView.setStyle = function(style){};

/**
 * @method updateRow
 * <p>Updates an existing row, optionally with animation.</p>
 * @param {Number} index 
 * <p>Index of the row to update.</p>
 * @param {Titanium.UI.TableViewRow} row 
 * <p>Row data to update.</p>
 * @param {TableViewAnimationProperties} animation 
 * <p>Animation properties. (iOS only.)</p>
 * @return void
*/
Titanium.UI.TableView.updateRow = function(index, row, animation){};

/**
 * @method updateSection
 * <p>Updates an existing section, optionally with animation.</p>
 * @description <p>Known issues:</p>
<ul>
<li>
<p>On iOS, Mobile Web and Tizen, event listeners do not fire correctly after table view sections are 
    updated using the <code>updateSection</code> methods. 
    (<a href="https://jira.appcelerator.org/browse/TIMOB-12616">TIMOB-12616</a>,
    <a href="https://jira.appcelerator.org/browse/TIMOB-12630">TIMOB-12630</a>)</p>
</li>
<li>
<p>On iOS, the first two arguments to the <code>updateSection</code> method are reversed.
    (<a href="https://jira.appcelerator.org/browse/TIMOB-12625">TIMOB-12625</a>)</p>
</li>
</ul>
 * @param {Number} index 
 * <p>Index of the section to update.</p>
 * @param {Titanium.UI.TableViewSection} section 
 * <p>section data to update.</p>
 * @param {TableViewAnimationProperties} animation 
 * <p>Animation properties. (iOS only.)</p>
 * @return void
 * @platform android 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TableView.updateSection = function(index, section, animation){};

/**
 * @property [allowsSelection=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether this table's rows can be selected.</p>
 * @description <p>Set to <code>false</code> to prevent rows from being selected.</p>
 */
Titanium.UI.TableView.allowsSelection = null;

/**
 * @property [allowsSelectionDuringEditing=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether this table's rows can be selected while editing the table.</p>
 * @description <p>Set to <code>true</code> to allow rows to be selected.</p>
 */
Titanium.UI.TableView.allowsSelectionDuringEditing = null;

/**
 * @property [backgroundColor=Transparent]
 * @type String
 * <p>Background color of the view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>Prior to iOS 6, it was possible to explicitly specify a color value of
{@link Titanium.UI.iOS#property-COLOR_GROUP_TABLEVIEW_BACKGROUND} or 'stripped' (sic) to select the iOS group
tableview background texture. On iPhone and iPod Touch, this produces a pinstriped texture; on iPad,
it is transparent.</p>
<p>In iOS 6, there is no way to explicitly specify the group tableview background texture. The color
values {@link Titanium.UI.iOS#property-COLOR_GROUP_TABLEVIEW_BACKGROUND} or 'stripped' are interpreted as black.</p>
 */
Titanium.UI.TableView.backgroundColor = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.TableView.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.TableView.backgroundSelectedImage = null;

/**
 * @property data
 * @type Dictionary/Titanium.UI.TableViewRow[]/Titanium.UI.TableViewSection[]
 * <p>Rows of the table view.</p>
 * @description 
 */
Titanium.UI.TableView.data = null;

/**
 * @property [editable=Depends on <code>editing</code> and <code>moving</code> mode]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines the rows' default editable behavior, which allows them to be deleted by the user 
when the table is in <code>editing</code> or <code>moving</code> mode.</p>
 * @description <p>This property determines the default behavior of child rows, but may be overridden by 
a row's {@link Titanium.UI.TableViewRow#property-editable editable} property.</p>
<p>See the {@link Titanium.UI.TableView} description section for a full explanation of the TableView's 
<code>editing</code> and <code>moving</code> modes.</p>
 */
Titanium.UI.TableView.editable = null;

/**
 * @property [editing=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether row editing mode is active.</p>
 * @description <p>The <code>editing</code> mode allows rows to be deleted or re-ordered, depending on their 
{@link Titanium.UI.TableViewRow#property-editable editable} and {@link Titanium.UI.TableViewRow#property-moveable moveable} 
settings.</p>
<p>See the {@link Titanium.UI.TableView} description section for a full explanation of the TableView's 
<code>editing</code> and <code>moving</code> modes.</p>
 */
Titanium.UI.TableView.editing = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.TableView.enabled = null;

/**
 * @property filterAttribute
 * @type String
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Filter attribute to be used when searching.</p>
 * @description <p>This property maps to your data object or a property on the row object. For example,
if you set <code>filterAttribute</code> to <code>'title'</code>, the table view shows only those rows that
contain the current search text in the <code>title</code> property.</p>
<p>Note that the filter is not anchored to the beginning of the string. So typing "ha"
in the text box will include rows titled 'Harold' and 'Harvard', but also 'Sharon'
and 'Jonathan'.</p>
 */
Titanium.UI.TableView.filterAttribute = null;

/**
 * @property [filterCaseInsensitive=true]
 * @type Boolean
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether the search is case insensitive.</p>
 * @description <p>Set to <code>false</code> to enable case sensitive search.</p>
 */
Titanium.UI.TableView.filterCaseInsensitive = null;

/**
 * @property footerTitle
 * @type String
 * <p>Table view footer title.</p>
 */
Titanium.UI.TableView.footerTitle = null;

/**
 * @property footerView
 * @type Titanium.UI.View
 * <p>Table view footer as a view that will be rendered instead of a label.</p>
 */
Titanium.UI.TableView.footerView = null;

/**
 * @property headerPullView
 * @type Titanium.UI.View
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>View positioned above the first row that is only revealed when the user drags the table 
contents down.</p>
 * @description <p>A <code>headerPullView</code> is a UI control that is often used to provide a convenient way for the 
user to refresh a table's data.  Typically used with the 
{@link Titanium.UI.TableView#method-setContentInsets setContentInsets} method.</p>
<p>The <a href="#!/guide/TableView_Refresh_with_headerPullView">TableView Refresh with headerPullView</a>
guide describes one way a <code>headerPullView</code> may be untilized.</p>
 */
Titanium.UI.TableView.headerPullView = null;

/**
 * @property headerTitle
 * @type String
 * <p>Table view header title.</p>
 */
Titanium.UI.TableView.headerTitle = null;

/**
 * @property headerView
 * @type Titanium.UI.View
 * <p>Table view header as a view that will be rendered instead of a label.</p>
 */
Titanium.UI.TableView.headerView = null;

/**
 * @property [hideSearchOnSelection=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether the search field should hide on completion.</p>
 * @description <p>Set to <code>false</code> to prevent the search field from being hidden when an item in the search 
results is clicked.</p>
<p>Many standard applications (such as Contacts) have a behavior equivalent to <code>false</code> for this 
value, but the default is <code>true</code> for legacy reasons.</p>
<p>The Android platform behaves as though this value were <code>false</code>.</p>
 */
Titanium.UI.TableView.hideSearchOnSelection = null;

/**
 * @property index
 * @type TableViewIndexEntry[]
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Array of objects (with <code>title</code> and <code>index</code> properties) to control the table view index.</p>
 * @description <p>If an index array is specified, an index bar is displayed on the right-hand side of the 
table view. Clicking on a title in the index bar scrolls the table view to the row 
index associated with that title.</p>
 */
Titanium.UI.TableView.index = null;

/**
 * @property maxRowHeight
 * @type Number
 * <p>Maximum row height for table view rows.</p>
 */
Titanium.UI.TableView.maxRowHeight = null;

/**
 * @property minRowHeight
 * @type Number
 * <p>Minimum row height for table view rows.</p>
 */
Titanium.UI.TableView.minRowHeight = null;

/**
 * @property [moveable=Depends on <code>editing</code> and <code>moving</code> mode]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines the rows' default moveable behavior, which allows them to be re-ordered by the 
user when the table is in <code>editing</code> or <code>moving</code> mode.</p>
 * @description <p>This property determines the default behavior of child rows, but may be overridden by a 
row's {@link Titanium.UI.TableViewRow#property-moveable moveable} property.</p>
<p>See the {@link Titanium.UI.TableView} description section for a full explanation of the TableView's 
<code>editing</code> and <code>moving</code> modes.</p>
 */
Titanium.UI.TableView.moveable = null;

/**
 * @property [moving=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether row moving mode is active.</p>
 * @description <p>The <code>moving</code> mode allows rows to be deleted or re-ordered, depending on their 
{@link Titanium.UI.TableViewRow#property-editable editable} and {@link Titanium.UI.TableViewRow#property-moveable moveable} 
settings.</p>
<p>See the {@link Titanium.UI.TableView} description section for a full explanation of the TableView's 
<code>editing</code> and <code>moving</code> modes.</p>
 */
Titanium.UI.TableView.moving = null;

/**
 * @property [overScrollMode=Titanium.UI.Android.OVER_SCROLL_ALWAYS]
 * @type Number
 * @platform android 3.1
 * <p>One of {@link Titanium.UI.Android#property-OVER_SCROLL_ALWAYS}, {@link Titanium.UI.Android#property-OVER_SCROLL_IF_CONTENT_SCROLLS}, or {@link Titanium.UI.Android#property-OVER_SCROLL_NEVER}. </p>
 */
Titanium.UI.TableView.overScrollMode = null;

/**
 * @property rowHeight
 * @type Number
 * <p>Default row height for table view rows.</p>
 */
Titanium.UI.TableView.rowHeight = null;

/**
 * @property [scrollIndicatorStyle={@link Titanium.UI.iPhone.ScrollIndicatorStyle#property-DEFAULT}]
 * @type Number
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Style of the scrollbar, specified using one of the constants from 
{@link Titanium.UI.iPhone.ScrollIndicatorStyle}.</p>
 */
Titanium.UI.TableView.scrollIndicatorStyle = null;

/**
 * @property [scrollable=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>If <code>true</code>, the tableview can be scrolled.</p>
 */
Titanium.UI.TableView.scrollable = null;

/**
 * @property [scrollsToTop=true]
 * @type Boolean
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
 * <p>Controls whether the scroll-to-top gesture is effective.</p>
 * @description <p>The scroll-to-top gesture is a tap on the status bar; The default value of this property is true. 
This gesture works when you have a single visible table view.
If there are multiple table views, web views, text areas, and/or scroll views visible,
you will need to disable (set to false) on the above views you DON'T want this
behaviour on. The remaining view will then respond to scroll-to-top gesture. </p>
 */
Titanium.UI.TableView.scrollsToTop = null;

/**
 * @property search
 * @type Titanium.UI.SearchBar/Titanium.UI.Android.SearchView
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Search field to use for the table view.</p>
 */
Titanium.UI.TableView.search = null;

/**
 * @property [searchAsChild=true]
 * @type Boolean
 * @platform android 3.0.2
 * <p>Determines whether the {@link Titanium.UI.SearchBar SearchBar} or {@link Titanium.UI.Android.SearchView SearchView} appears as part of the TableView.</p>
 * @description <p>Set to false if the search view will be displayed in the action bar.</p>
 */
Titanium.UI.TableView.searchAsChild = null;

/**
 * @property [searchHidden=false (search field visible)]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether the search field is visible.</p>
 * @description <p>Set to <code>true</code> to hide the search field.</p>
 */
Titanium.UI.TableView.searchHidden = null;

/**
 * @property sectionCount
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * <p>Number of sections in this table view.</p>
 */
Titanium.UI.TableView.sectionCount = null;

/**
 * @property sections
 * @type Titanium.UI.TableViewSection[]
 * @platform android 3.1
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @platform mobileweb 3.0
 * @platform tizen 3.1
 * <p>Sections of this table.</p>
 * @description <p>In Release 3.0, this property is read-only on Android.</p>
<p>Due to a known issue, TIMOB-12616, the <code>sections</code> property should not be used
for adding sections on iOS.</p>
 */
Titanium.UI.TableView.sections = null;

/**
 * @property [separatorColor=platform-specific default color]
 * @type String
 * <p>Separator line color between rows, as a color name or hex triplet.</p>
 * @description <p>To make the line invisible, set this property to <code>transparent</code>, or the same value as the 
{@link Titanium.UI.TableView#property-backgroundColor backgroundColor} property. </p>
<p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TableView.separatorColor = null;

/**
 * @property separatorStyle
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Separator style constant.</p>
 * @description <p>For iOS specify one of the 
{@link Titanium.UI.iPhone.TableViewSeparatorStyle TableViewSeparatorStyle} constants.</p>
<p>For Mobile Web and Tizen specify one of the 
{@link Titanium.UI.MobileWeb.TableViewSeparatorStyle TableViewSeparatorStyle} constants.</p>
 */
Titanium.UI.TableView.separatorStyle = null;

/**
 * @property [showVerticalScrollIndicator=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether this table view displays a vertical scroll indicator.</p>
 * @description <p>Set to <code>false</code> to hide the vertical scroll indicator.</p>
 */
Titanium.UI.TableView.showVerticalScrollIndicator = null;

/**
 * @property style
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Style of the table view, specified using one of the constants from 
{@link Titanium.UI.iPhone.TableViewStyle}.</p>
 * @description <p>Style should always be set before setting the <code>data</code> on table view.</p>
 */
Titanium.UI.TableView.style = null;

/**
 * @class Titanium.UI.TableViewRow
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A table view row is an individual item in a table, organized into table view sections.</p>
 * @description <p>Use the {@link Titanium.UI#method-createTableViewRow} method to create a table view row. These may be 
explicitly added to {@link Titanium.UI.TableViewSection TableViewSection} objects, which are applied 
to a {@link Titanium.UI.TableView TableView}. If a table section is not specified, one will be 
automatically created. </p>
<p>A row's contents can be as simple as a single line of text, or comprised of a completely 
customized layout of child views. </p>
<h4>Creating Table View Rows</h4>
<p>Rows may be created using the properties directly available on the <code>TableViewRow</code> object, to 
achieve the following:</p>
<ul>
<li>Row title to display the text content in the row.</li>
<li>Background color and background image.</li>
<li>Images on the left and right sides of the row.</li>
<li>System decorations, such as checkboxes.</li>
</ul>
<p>Alternatively, custom layouts of multiple lines of text, different fonts, and additional 
images or controls can be created by adding child views to the row. In this case, the row's 
<code>title</code> property should not be set.</p>
<p>As events automatically bubble/propogate to parent views, a listener may be placed on the table 
view to detect events fired from the rows. The benefit is that it is not necessary to 
explicitly create a listener for every individual row.</p>
<p>See the {@link Titanium.UI.TableView TableView} description and examples section for more information 
about creating table rows.</p>
<h4>Improved Table Performance (Android)</h4>
<p>If you are experiencing performance issues on Android when using custom rows, you can
try setting the {@link Titanium.UI.TableViewRow#property-className className} property. The class name serves as a 
cue for reusing the underlying views used to display the rows.</p>
<p>A given <code>className</code> value indicates a row with a particular set of child views.
All rows that share a class name must have the same set of children -- for example, the class 
name "myCustomRow" could identify a row containing two labels and an image view. </p>
<p>The properties of the child controls may be different. For example, each instance of 
"myCustomRow" could have a different image and different text on the labels.</p>
<p>Note that <code>className</code> is no longer used on iOS, and was never used on Mobile Web; on
these platforms, <code>className</code> is ignored.</p>
<h4>Platform Implementation Notes</h4>
<p>The <code>top</code>, <code>left</code> and other positional parameters are not used for their usual purposes, because 
the table view row is automatically positioned by its parent.</p>
<p>On Android, these properties are used to position the content (title) inside the row. For example, 
setting <code>top</code> to 20 moves the title down from the top of the row.  </p>
<p>On iOS, these values have no effect.</p>
<p>On Mobile Web and Tizen, they are used to relatively position the row, treating the <code>TableView</code> as if it 
were a horizontal layout.</p>
<p>Also, note that the selected text color, <code>selectedColor</code>, can only be set on iOS,
Mobile Web and Tizen. On Android, the text color does not change when the row is selected.</p>
<h4>Row Swipe Gestures (Android and iOS)</h4>
<p>A common requirement is to enable the user to interact with table rows using swipe gestures. 
As this event is not available for the <code>TableViewRow</code> object, it will not "bubble up" to the 
<code>TableView</code>, where a {@link Titanium.UI.TableView#event-swipe} is recognized. </p>
<p>A typical solution is to use a standard view as a container, or wrapper, for all each row's child 
views, because it recognizes {@link Titanium.UI.View#event-swipe} events and allows them to pass to the table. 
Each child view should have touch events disabled, so that the container view provides a reliable 
source for these events. Refer to the "Row Swipe Gestures" example for a demonstration. </p>
 * <h3>Examples</h3>
 * <h4>Simple Table View Row example</h4>
 * <p><p>Create a table view row containing a red square view.</p></p><pre>var row = Titanium.UI.createTableViewRow();
var view = Titanium.UI.createView({
  backgroundColor:'red',
  width: 20, height: 20
});
row.height = 'auto';
row.add(view);</pre>
 * <h4>Row Swipe Gestures</h4>
 * <p><p>Create a table of rows. When a row is swiped, output its ID to the log. </p></p><pre>var tableData = [];

var win = Ti.UI.createWindow({ backgroundColor: 'white' });

var table = Ti.UI.createTableView({ objName: 'table' });

for (var i = 0; i &lt;= 20; i++){
  var row = Ti.UI.createTableViewRow({
    className: 'row',
    objName: 'row',
    touchEnabled: true,
    height: 100
  });
  
  var enabledWrapperView = Ti.UI.createView({
    backgroundColor:'#008FD5',
    objName: 'enabledWrapperView',
    rowID: i,
    width: Ti.UI.FILL, height: '100%'
  });
  
  var disabledWrapperView = Ti.UI.createView({
    backgroundColor:'#A2E0FF',
    objName: 'disabledWarpperView',
    touchEnabled: false,
    width: 300, height: '80%'
  });
  enabledWrapperView.add(disabledWrapperView);
  
  var label = Ti.UI.createLabel({
    backgroundColor:'#313F48',
    color: 'white',
    objName: 'label',
    text: i,
    touchEnabled: false,
    left: 0,
    width: 200
  });
  disabledWrapperView.add(label);
  
  row.add(enabledWrapperView);
  tableData.push(row);
}

table.setData(tableData);

table.addEventListener('swipe', function(e){
  if (e.source &amp;&amp; e.source.objName !== 'table'){
    Ti.API.info('Row swiped: ' + e.source);
    Ti.API.info('Row swiped: ' + e.source.objName);
    Ti.API.info('Row ID : ' + e.source.rowID);
  }
});

win.add(table);
win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous simple table view row example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;TableViewRow id="row"&gt;
        &lt;View id="view" backgroundColor="red" width="20" height="20"/&gt;
    &lt;/TableViewRow&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.TableViewRow = {};















/**
 * @method animate 
 * @hide
*/Titanium.UI.TableViewRow.animate = function(){};

/**
 * @method getAccessibilityLabel
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-accessibilityLabel accessibilityLabel} property.</p>
 * @return {String} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TableViewRow.getAccessibilityLabel = function(){};

/**
 * @method getClassName
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-className className} property.</p>
 * @return {String} 
 * @platform android 0.9
*/
Titanium.UI.TableViewRow.getClassName = function(){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-color color} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewRow.getColor = function(){};

/**
 * @method getEditable
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-editable editable} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.getEditable = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.TableViewRow.getEnabled = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-font font} property.</p>
 * @return {Font} 
*/
Titanium.UI.TableViewRow.getFont = function(){};

/**
 * @method getHasCheck
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-hasCheck hasCheck} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TableViewRow.getHasCheck = function(){};

/**
 * @method getHasChild
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-hasChild hasChild} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TableViewRow.getHasChild = function(){};

/**
 * @method getHasDetail
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-hasDetail hasDetail} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.getHasDetail = function(){};

/**
 * @method getIndentionLevel
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-indentionLevel indentionLevel} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.getIndentionLevel = function(){};

/**
 * @method getLeftImage
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-leftImage leftImage} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewRow.getLeftImage = function(){};

/**
 * @method getMoveable
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-moveable moveable} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.getMoveable = function(){};

/**
 * @method getRightImage
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-rightImage rightImage} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewRow.getRightImage = function(){};

/**
 * @method getSelectedBackgroundColor
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-selectedBackgroundColor selectedBackgroundColor} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewRow.getSelectedBackgroundColor = function(){};

/**
 * @method getSelectedBackgroundImage
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-selectedBackgroundImage selectedBackgroundImage} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewRow.getSelectedBackgroundImage = function(){};

/**
 * @method getSelectedColor
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-selectedColor selectedColor} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.getSelectedColor = function(){};

/**
 * @method getSelectionStyle
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-selectionStyle selectionStyle} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.getSelectionStyle = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.TableViewRow#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewRow.getTitle = function(){};

/**
 * @method setAccessibilityLabel
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-accessibilityLabel accessibilityLabel} property.</p>
 * @param {String} accessibilityLabel 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TableViewRow.setAccessibilityLabel = function(accessibilityLabel){};

/**
 * @method setClassName
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-className className} property.</p>
 * @param {String} className 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.TableViewRow.setClassName = function(className){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setColor = function(color){};

/**
 * @method setEditable
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-editable editable} property.</p>
 * @param {Boolean} editable 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.setEditable = function(editable){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.TableViewRow.setEnabled = function(){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setFont = function(font){};

/**
 * @method setHasCheck
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-hasCheck hasCheck} property.</p>
 * @param {Boolean} hasCheck 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setHasCheck = function(hasCheck){};

/**
 * @method setHasChild
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-hasChild hasChild} property.</p>
 * @param {Boolean} hasChild 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setHasChild = function(hasChild){};

/**
 * @method setHasDetail
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-hasDetail hasDetail} property.</p>
 * @param {Boolean} hasDetail 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.setHasDetail = function(hasDetail){};

/**
 * @method setIndentionLevel
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-indentionLevel indentionLevel} property.</p>
 * @param {Number} indentionLevel 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.setIndentionLevel = function(indentionLevel){};

/**
 * @method setLeftImage
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-leftImage leftImage} property.</p>
 * @param {String} leftImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setLeftImage = function(leftImage){};

/**
 * @method setMoveable
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-moveable moveable} property.</p>
 * @param {Boolean} moveable 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.setMoveable = function(moveable){};

/**
 * @method setRightImage
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-rightImage rightImage} property.</p>
 * @param {String} rightImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setRightImage = function(rightImage){};

/**
 * @method setSelectedBackgroundColor
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-selectedBackgroundColor selectedBackgroundColor} property.</p>
 * @param {String} selectedBackgroundColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setSelectedBackgroundColor = function(selectedBackgroundColor){};

/**
 * @method setSelectedBackgroundImage
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-selectedBackgroundImage selectedBackgroundImage} property.</p>
 * @param {String} selectedBackgroundImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setSelectedBackgroundImage = function(selectedBackgroundImage){};

/**
 * @method setSelectedColor
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-selectedColor selectedColor} property.</p>
 * @param {String} selectedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.setSelectedColor = function(selectedColor){};

/**
 * @method setSelectionStyle
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-selectionStyle selectionStyle} property.</p>
 * @param {Number} selectionStyle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.TableViewRow.setSelectionStyle = function(selectionStyle){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.TableViewRow#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewRow.setTitle = function(title){};

/**
 * @property [accessibilityLabel=Title or label of the control.]
 * @type String
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>A succint label associated with the table row for the device's accessibility service.</p>
 * @description <p>See {@link Titanium.UI.View#property-accessibilityLabel} description.</p>
 */
Titanium.UI.TableViewRow.accessibilityLabel = null;

/**
 * @property className
 * @type String
 * @platform android 0.9
 * <p>Class name for the row.</p>
 * @description <p>A class name represents a unique row layout. </p>
<p>A table view row must have a unique class name if the row layout is unique. However, 
use the same name for rows that have the same structural layout (even if the content is 
different) to provide maximum rendering performance.</p>
<p>For example, if some rows include images and some rows do not, you would have two class
names, one for image rows and one for plain rows.</p>
<p>This property exists on iOS, Tizen and Mobile Web, but is ignored.</p>
 */
Titanium.UI.TableViewRow.className = null;

/**
 * @property color
 * @type String
 * <p>Default text color of the row when not selected, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>On Android, <code>selectedColor</code> is not supported, so the text is always displayed in this color.</p>
 */
Titanium.UI.TableViewRow.color = null;

/**
 * @property [editable=undefined]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Determines the rows' editable behavior, which allows them to be deleted by the user when the 
table is in <code>editing</code> or <code>moving</code> mode.</p>
 * @description <p>If this property is not explicitly set, it will return <code>undefined</code> and the row's editable 
behavior will be determined by its parent table's {@link Titanium.UI.TableView#property-editable editable} 
property.</p>
<p>See the {@link Titanium.UI.TableView} description section for a full explanation of the TableView's 
row <code>editing</code> and <code>moving</code> modes.</p>
 */
Titanium.UI.TableViewRow.editable = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.TableViewRow.enabled = null;

/**
 * @property [font=System default font.]
 * @type Font
 * <p>Font to use for the row title.</p>
 */
Titanium.UI.TableViewRow.font = null;

/**
 * @property [hasCheck=false]
 * @type Boolean
 * <p>Determines whether a system-provided checkmark is displayed on the right-hand side of 
the row.</p>
 */
Titanium.UI.TableViewRow.hasCheck = null;

/**
 * @property [hasChild=false]
 * @type Boolean
 * <p>Determines whether a system-provided arrow is displayed on the right-hand side of the row.</p>
 * @description <p>The <code>hasChild</code> flag is used to indicate to the user that clicking on the row displays more 
detailed information.  </p>
<p>On iOS, this is specifically used when clicking on the row navigates to the next table view 
in a heirarchy of table views.</p>
 */
Titanium.UI.TableViewRow.hasChild = null;

/**
 * @property [hasDetail=false]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Determines whether a system-provided detail disclosure button is displayed on the right-hand 
side of the row.</p>
 * @description <p>The <code>hasDetail</code> flag is used to indicate to the user that more details are
available on the row.  </p>
<p>Specifically on iOS the detail disclosure button indicates that clicking on the row results 
in a detail view of that item. </p>
<p>The <code>detail</code> property in the click event is set to <code>true</code> if the click occurred on
the detail button itself, <code>false</code> if the click occurs anywhere else in the row.</p>
<p>For rows that have <code>hasDetail</code> set to false, the <code>detail</code> flag is always <code>false</code>.</p>
 */
Titanium.UI.TableViewRow.hasDetail = null;

/**
 * @property [indentionLevel=0]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Indention level for the row.</p>
 * @description <p>Indentation values greater than 0 indent the row text.</p>
 */
Titanium.UI.TableViewRow.indentionLevel = null;

/**
 * @property leftImage
 * @type String
 * <p>Image to render in the left image area of the row, specified as a local path or URL.</p>
 */
Titanium.UI.TableViewRow.leftImage = null;

/**
 * @property [moveable=undefined]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Determines the rows' moveable behavior, which allows them to be re-ordered by the user when 
the table is in <code>editing</code> or <code>moving</code> mode.</p>
 * @description <p>If this property is not explicitly set, it will return <code>undefined</code> and the row's moveable 
behavior will be determined by its parent table's {@link Titanium.UI.TableView#property-moveable moveable} 
property.</p>
<p>See the {@link Titanium.UI.TableView} description section for a full explanation of the TableView's 
row <code>editing</code> and <code>moving</code> modes.</p>
 */
Titanium.UI.TableViewRow.moveable = null;

/**
 * @property rightImage
 * @type String
 * <p>Image to render in the right image area of the row, specified as a local path or URL.</p>
 */
Titanium.UI.TableViewRow.rightImage = null;

/**
 * @property selectedBackgroundColor
 * @type String
 * <p>Background color to render when the row is selected, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TableViewRow.selectedBackgroundColor = null;

/**
 * @property selectedBackgroundImage
 * @type String
 * <p>Background image to render when the row is selected.</p>
 */
Titanium.UI.TableViewRow.selectedBackgroundImage = null;

/**
 * @property selectedColor
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Color of the row text when the row is selected, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TableViewRow.selectedColor = null;

/**
 * @property selectionStyle
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Selection style constant to control the selection color.</p>
 * @description <p>Specify one of the constants from {@link Titanium.UI.iPhone.TableViewCellSelectionStyle}.</p>
 */
Titanium.UI.TableViewRow.selectionStyle = null;

/**
 * @property title
 * @type String
 * <p>Text to display on the row.</p>
 * @description <p>Do not specify if using views as children of the row.</p>
 */
Titanium.UI.TableViewRow.title = null;

/**
 * @class Titanium.UI.TableViewSection
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A table view section is a container within a table used to organize table view rows.</p>
 * @description <p>Use the {@link Titanium.UI#method-createTableViewSection} method to create a <code>TableViewSection</code>.</p>
<p>Before the table is rendered, the <code>TableViewSection</code> {@link Titanium.UI.TableViewSection#method-add add} 
method may be used to add {@link Titanium.UI.TableViewRow TableViewRow} objects to a section. After 
it is rendered, one of the <code>TableView</code> {@link Titanium.UI.TableView#method-insertRowBefore insertRowBefore}, 
{@link Titanium.UI.TableView#method-insertRowAfter insertRowAfter}, or 
{@link Titanium.UI.TableView#method-appendRow appendRow} methods must be used instead. </p>
<p>To remove a row from a section after the table is rendered, use the <code>TableView</code> 
{@link Titanium.UI.TableView#method-deleteRow deleteRow} method. </p>
<p>In order for a section to be visible, either its <code>headerTitle</code> or <code>headerView</code> property must be 
configured. </p>
<p>Starting in Release 3.0, you can directly manipulate the sections in a table using the
following <code>TableView</code> APIs:</p>
<ul>
<li>To set all sections in a table view at one time, use the <code>TableView</code>
{@link Titanium.UI.TableView#property-sections sections} property.</li>
<li>To add an individual section after a table view is rendered, use either the <code>TableView</code>
{@link Titanium.UI.TableView#method-insertSectionBefore insertSectionBefore}
or {@link Titanium.UI.TableView#method-insertSectionAfter insertSectionAfter} method.</li>
<li>To add one or more sections to the end of a table view after it is rendered, use the <code>TableView</code>
{@link Titanium.UI.TableView#method-appendSection appendSection} method.</li>
<li>To remove an individual section after a table view is rendered, use the <code>TableView</code>
{@link Titanium.UI.TableView#method-deleteSection deleteSection} method.</li>
</ul>
<p>Prior to Release 3.0, adding or removing sections individually is not supported. Instead, use the
<code>TableView</code> {@link Titanium.UI.TableView#property-data data} property to refresh the whole table with a
new section layout. </p>
<p>See the description and examples sections of {@link Titanium.UI.TableView TableView} for more details 
about how to use <code>TableViewSection</code>.</p>
<p><strong>Note</strong>: On some platforms, <code>TableViewSection</code> may be implemented as a type of view
(that is, an object that inherits from {@link Titanium.UI.View View}). However, this is an
implementation detail. For portability, you should only use the documented APIs on 
table view sections.</p>
 */
Titanium.UI.TableViewSection = {};

/**
 * @method add
 * <p>Adds a table view row to this section.</p>
 * @description <p>Should be called before adding the section to a table. Calling <code>add</code> on a section
that's already been added to a table does not update the table.</p>
<p>To add a row to a section after it's been added to a table, call one of the
<code>TableView</code> methods, {@link Titanium.UI.TableView#method-insertRowBefore insertRowBefore},
{@link Titanium.UI.TableView#method-insertRowAfter insertRowAfter}, or
{@link Titanium.UI.TableView#method-appendRow appendRow}.</p>
<p>On Android, it is possible to update a section by adding or removing rows and then 
resetting the table view's <code>data</code> property. However, this approach is not
portable and is not recommended.</p>
 * @param {Titanium.UI.TableViewRow} row 
 * <p>Row to add.</p>
 * @return void
*/
Titanium.UI.TableViewSection.add = function(row){};

/**
 * @method getFooterTitle
 * <p>Gets the value of the {@link Titanium.UI.TableViewSection#property-footerTitle footerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewSection.getFooterTitle = function(){};

/**
 * @method getFooterView
 * <p>Gets the value of the {@link Titanium.UI.TableViewSection#property-footerView footerView} property.</p>
 * @return {Titanium.UI.View} 
*/
Titanium.UI.TableViewSection.getFooterView = function(){};

/**
 * @method getHeaderTitle
 * <p>Gets the value of the {@link Titanium.UI.TableViewSection#property-headerTitle headerTitle} property.</p>
 * @return {String} 
*/
Titanium.UI.TableViewSection.getHeaderTitle = function(){};

/**
 * @method getHeaderView
 * <p>Gets the value of the {@link Titanium.UI.TableViewSection#property-headerView headerView} property.</p>
 * @return {Titanium.UI.View} 
*/
Titanium.UI.TableViewSection.getHeaderView = function(){};

/**
 * @method getRowCount
 * <p>Gets the value of the {@link Titanium.UI.TableViewSection#property-rowCount rowCount} property.</p>
 * @return {Number} 
*/
Titanium.UI.TableViewSection.getRowCount = function(){};

/**
 * @method getRows
 * <p>Gets the value of the {@link Titanium.UI.TableViewSection#property-rows rows} property.</p>
 * @return {Titanium.UI.TableViewRow[]} 
*/
Titanium.UI.TableViewSection.getRows = function(){};

/**
 * @method remove
 * <p>Removes a table view row from this section.</p>
 * @description <p>Should be called before a section is added to a table. Calling <code>remove</code> on
a section that's already been added to a table may throw an exception.</p>
<p>To delete a row once the section is added to a table, use the <code>TableView</code>
{@link Titanium.UI.TableView#method-deleteRow deleteRow} method.</p>
<p>On Android, it is possible to update a section by adding or removing rows and then 
resetting the table view's <code>data</code> property. However, this approach is not
portable and is not recommended.</p>
 * @param {Titanium.UI.TableViewRow} row 
 * <p>Row to remove.</p>
 * @return void
*/
Titanium.UI.TableViewSection.remove = function(row){};

/**
 * @method rowAtIndex
 * <p>Returns a row in this section.</p>
 * @param {Number} index 
 * <p>Section index of a row.</p>
 * @return {Titanium.UI.TableViewRow} 
 * @platform android 0.9
*/
Titanium.UI.TableViewSection.rowAtIndex = function(index){};

/**
 * @method setFooterTitle
 * <p>Sets the value of the {@link Titanium.UI.TableViewSection#property-footerTitle footerTitle} property.</p>
 * @param {String} footerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewSection.setFooterTitle = function(footerTitle){};

/**
 * @method setFooterView
 * <p>Sets the value of the {@link Titanium.UI.TableViewSection#property-footerView footerView} property.</p>
 * @param {Titanium.UI.View} footerView 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewSection.setFooterView = function(footerView){};

/**
 * @method setHeaderTitle
 * <p>Sets the value of the {@link Titanium.UI.TableViewSection#property-headerTitle headerTitle} property.</p>
 * @param {String} headerTitle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewSection.setHeaderTitle = function(headerTitle){};

/**
 * @method setHeaderView
 * <p>Sets the value of the {@link Titanium.UI.TableViewSection#property-headerView headerView} property.</p>
 * @param {Titanium.UI.View} headerView 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TableViewSection.setHeaderView = function(headerView){};

/**
 * @property footerTitle
 * @type String
 * <p>Title of this section footer.</p>
 * @description <p>Using this property and <code>footerView</code> together is not supported. Use one or the other. </p>
<p>On Android, must be set at creation.</p>
 */
Titanium.UI.TableViewSection.footerTitle = null;

/**
 * @property footerView
 * @type Titanium.UI.View
 * <p>View to use for this section footer.</p>
 * @description <p>Using this property and <code>footerTitle</code> together is not supported. Use one or the other. </p>
<p>On Android, must be set at creation. </p>
 */
Titanium.UI.TableViewSection.footerView = null;

/**
 * @property headerTitle
 * @type String
 * <p>Title of this section header.</p>
 * @description <p>Using this property and <code>headerView</code> together is not supported. Use one or the other. </p>
<p>On Android, must be set at creation.</p>
 */
Titanium.UI.TableViewSection.headerTitle = null;

/**
 * @property headerView
 * @type Titanium.UI.View
 * <p>View to use for this section header.</p>
 * @description <p>Using this property and <code>headerTitle</code> together is not supported. Use one or the other. </p>
<p>On Android, must be set at creation.</p>
 */
Titanium.UI.TableViewSection.headerView = null;

/**
 * @property rowCount
 * @type Number
 * @readonly
 * <p>Number of rows in this section.</p>
 */
Titanium.UI.TableViewSection.rowCount = null;

/**
 * @property rows
 * @type Titanium.UI.TableViewRow[]
 * @readonly
 * <p>Rows in this section.</p>
 */
Titanium.UI.TableViewSection.rows = null;

/**
 * @class Titanium.UI.TextArea
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A multiline text field that supports editing and scrolling.</p>
 * @description <p>Use the {@link Titanium.UI#method-createTextArea} method to create a text area.</p>
 * <h3>Examples</h3>
 * <h4>Basic Text Area with Customizations</h4>
 * <p><p>This example creates a highly customized text area.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white'
});
var textArea = Ti.UI.createTextArea({
  borderWidth: 2,
  borderColor: '#bbb',
  borderRadius: 5,
  color: '#888',
  font: {fontSize:20, fontWeight:'bold'},
  keyboardType: Ti.UI.KEYBOARD_NUMBER_PAD,
  returnKeyType: Ti.UI.RETURNKEY_GO,
  textAlign: 'left',
  value: 'I am a textarea',
  top: 60,
  width: 300, height : 70
});
win.add(textArea);
win.open();</pre>
 * <h4>Text Area with Custom Keyboard Toolbar (iOS)</h4>
 * <p><p>On iOS, a configurable toolbar can be displayed above the virtual keyboard. 
Toolbars can be used with both text areas and text fields. See {@link Titanium.UI.iOS.Toolbar}
for more information.</p>
<p>This code excerpt creates a text area with a toolbar:</p>
<p>Example using a custom keyboard toolbar:</p></p><pre>var send = Ti.UI.createButton({
    style : Ti.UI.iPhone.SystemButtonStyle.DONE,
    title : 'Send'
});

var camera = Ti.UI.createButton({
    systemButton : Ti.UI.iPhone.SystemButton.CAMERA
});

var cancel = Ti.UI.createButton({
    systemButton : Ti.UI.iPhone.SystemButton.CANCEL
});

var flexSpace = Ti.UI.createButton({
    systemButton : Ti.UI.iPhone.SystemButton.FLEXIBLE_SPACE
});

var textarea = Ti.UI.createTextArea({
    borderColor : '#000',
    color : '#000',
    keyboardToolbar : [cancel, flexSpace, camera, flexSpace, send],
    keyboardToolbarColor : '#999',
    keyboardToolbarHeight : 40,
    value : 'Focus to see keyboard with toolbar',
    top : 10,
    width : 300, height : 120
});</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous basic text area with customizations example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;TextArea id="textArea"
            borderWidth="2" borderColor="#bbb" borderRadius="5"
            color="#888" textAlign="left" value="I am a textarea"
            top="60" width="300" height="70" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.TextArea = {};






/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to a <code>TextArea</code> is not supported on all platforms.</p>
<p>If you need to display views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.add = function(view){};

/**
 * @method blur
 * <p>Forces this text area to lose focus.</p>
 * @return void
*/
Titanium.UI.TextArea.blur = function(){};

/**
 * @method focus
 * <p>Forces this text area to gain focus.</p>
 * @return void
*/
Titanium.UI.TextArea.focus = function(){};

/**
 * @method getAppearance
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-appearance appearance} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getAppearance = function(){};

/**
 * @method getAutoLink
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-autoLink autoLink} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getAutoLink = function(){};

/**
 * @method getAutocapitalization
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-autocapitalization autocapitalization} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getAutocapitalization = function(){};

/**
 * @method getAutocorrect
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-autocorrect autocorrect} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextArea.getAutocorrect = function(){};

/**
 * @method getClearOnEdit
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-clearOnEdit clearOnEdit} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.UI.TextArea.getClearOnEdit = function(){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-color color} property.</p>
 * @return {String} 
*/
Titanium.UI.TextArea.getColor = function(){};

/**
 * @method getEditable
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-editable editable} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TextArea.getEditable = function(){};

/**
 * @method getEllipsize
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-ellipsize ellipsize} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.UI.TextArea.getEllipsize = function(){};

/**
 * @method getEnableReturnKey
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-enableReturnKey enableReturnKey} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TextArea.getEnableReturnKey = function(){};

/**
 * @method getEnabled
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-enabled enabled} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextArea.getEnabled = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-font font} property.</p>
 * @return {Font} 
*/
Titanium.UI.TextArea.getFont = function(){};

/**
 * @method getHintText
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-hintText hintText} property.</p>
 * @return {String} 
 * @platform android 0.8
*/
Titanium.UI.TextArea.getHintText = function(){};

/**
 * @method getKeyboardToolbar
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-keyboardToolbar keyboardToolbar} property.</p>
 * @return {Titanium.UI.View[]/Titanium.UI.iOS.Toolbar} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getKeyboardToolbar = function(){};

/**
 * @method getKeyboardToolbarColor
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-keyboardToolbarColor keyboardToolbarColor} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getKeyboardToolbarColor = function(){};

/**
 * @method getKeyboardToolbarHeight
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-keyboardToolbarHeight keyboardToolbarHeight} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getKeyboardToolbarHeight = function(){};

/**
 * @method getKeyboardType
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-keyboardType keyboardType} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getKeyboardType = function(){};

/**
 * @method getMaxLength
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-maxLength maxLength} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getMaxLength = function(){};

/**
 * @method getReturnKeyType
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-returnKeyType returnKeyType} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getReturnKeyType = function(){};

/**
 * @method getScrollable
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-scrollable scrollable} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.getScrollable = function(){};

/**
 * @method getScrollsToTop
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-scrollsToTop scrollsToTop} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.UI.TextArea.getScrollsToTop = function(){};

/**
 * @method getSuppressReturn
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-suppressReturn suppressReturn} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextArea.getSuppressReturn = function(){};

/**
 * @method getTextAlign
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-textAlign textAlign} property.</p>
 * @return {String/Number} 
*/
Titanium.UI.TextArea.getTextAlign = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-value value} property.</p>
 * @return {String} 
*/
Titanium.UI.TextArea.getValue = function(){};

/**
 * @method getVerticalAlign
 * <p>Gets the value of the {@link Titanium.UI.TextArea#property-verticalAlign verticalAlign} property.</p>
 * @return {Number/String} 
 * @platform android 0.8
*/
Titanium.UI.TextArea.getVerticalAlign = function(){};

/**
 * @method hasText
 * <p>Returns <code>true</code> if this text area contains text.</p>
 * @return {Boolean} <p>True if this text area contains text.</p>
 * @platform android 2.1
 * @platform blackberry 3.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.TextArea.hasText = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.TextArea#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.remove = function(view){};

/**
 * @method setAppearance
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-appearance appearance} property.</p>
 * @param {Number} appearance 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setAppearance = function(appearance){};

/**
 * @method setAutoLink
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-autoLink autoLink} property.</p>
 * @param {Number} autoLink 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setAutoLink = function(autoLink){};

/**
 * @method setAutocapitalization
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-autocapitalization autocapitalization} property.</p>
 * @param {Number} autocapitalization 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setAutocapitalization = function(autocapitalization){};

/**
 * @method setAutocorrect
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-autocorrect autocorrect} property.</p>
 * @param {Boolean} autocorrect 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextArea.setAutocorrect = function(autocorrect){};

/**
 * @method setClearOnEdit
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-clearOnEdit clearOnEdit} property.</p>
 * @param {Boolean} clearOnEdit 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.TextArea.setClearOnEdit = function(clearOnEdit){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextArea.setColor = function(color){};

/**
 * @method setEditable
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-editable editable} property.</p>
 * @param {Boolean} editable 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextArea.setEditable = function(editable){};

/**
 * @method setEllipsize
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-ellipsize ellipsize} property.</p>
 * @param {Boolean} ellipsize 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.TextArea.setEllipsize = function(ellipsize){};

/**
 * @method setEnableReturnKey
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-enableReturnKey enableReturnKey} property.</p>
 * @param {Boolean} enableReturnKey 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextArea.setEnableReturnKey = function(enableReturnKey){};

/**
 * @method setEnabled
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-enabled enabled} property.</p>
 * @param {Boolean} enabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextArea.setEnabled = function(enabled){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextArea.setFont = function(font){};

/**
 * @method setHintText
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-hintText hintText} property.</p>
 * @param {String} hintText 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.TextArea.setHintText = function(hintText){};

/**
 * @method setKeyboardToolbar
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-keyboardToolbar keyboardToolbar} property.</p>
 * @param {Titanium.UI.View[]/Titanium.UI.iOS.Toolbar} keyboardToolbar 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setKeyboardToolbar = function(keyboardToolbar){};

/**
 * @method setKeyboardToolbarColor
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-keyboardToolbarColor keyboardToolbarColor} property.</p>
 * @param {String} keyboardToolbarColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setKeyboardToolbarColor = function(keyboardToolbarColor){};

/**
 * @method setKeyboardToolbarHeight
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-keyboardToolbarHeight keyboardToolbarHeight} property.</p>
 * @param {Number} keyboardToolbarHeight 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setKeyboardToolbarHeight = function(keyboardToolbarHeight){};

/**
 * @method setKeyboardType
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-keyboardType keyboardType} property.</p>
 * @param {Number} keyboardType 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setKeyboardType = function(keyboardType){};

/**
 * @method setMaxLength
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-maxLength maxLength} property.</p>
 * @param {Number} maxLength 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setMaxLength = function(maxLength){};

/**
 * @method setReturnKeyType
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-returnKeyType returnKeyType} property.</p>
 * @param {Number} returnKeyType 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setReturnKeyType = function(returnKeyType){};

/**
 * @method setScrollable
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-scrollable scrollable} property.</p>
 * @param {Boolean} scrollable 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextArea.setScrollable = function(scrollable){};

/**
 * @method setScrollsToTop
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-scrollsToTop scrollsToTop} property.</p>
 * @param {Boolean} scrollsToTop 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
*/
Titanium.UI.TextArea.setScrollsToTop = function(scrollsToTop){};

/**
 * @method setSelection
 * <p>Selects the text in range (start, end).</p>
 * @description <p>Selects the text in range (start, end). If start equals end, no text will be selected, 
and the cursor will move to the start position. End is not inclusive, meaning setSelection(0,0) 
will not select the first character, but will move the cursor to the position before the first character.</p>
<p>On iOS, soft keyboard would show when text is selected.</p>
 * @param {Number} start 
 * <p>Start index for selection. Value ranges from 0 to the text's length.</p>
 * @param {Number} end 
 * <p>End index for selection, not inclusive. Value ranges from 0 to the text's length.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TextArea.setSelection = function(start, end){};

/**
 * @method setSuppressReturn
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-suppressReturn suppressReturn} property.</p>
 * @param {Boolean} suppressReturn 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextArea.setSuppressReturn = function(suppressReturn){};

/**
 * @method setTextAlign
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-textAlign textAlign} property.</p>
 * @param {String/Number} textAlign 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextArea.setTextAlign = function(textAlign){};

/**
 * @method setValue
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-value value} property.</p>
 * @param {String} value 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextArea.setValue = function(value){};

/**
 * @method setVerticalAlign
 * <p>Sets the value of the {@link Titanium.UI.TextArea#property-verticalAlign verticalAlign} property.</p>
 * @param {Number/String} verticalAlign 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.TextArea.setVerticalAlign = function(verticalAlign){};

/**
 * @property [appearance={@link Titanium.UI#property-KEYBOARD_APPEARANCE_DEFAULT}]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines the appearance of the keyboard displayed when this text area is focused.</p>
 * @description <p>One of the {@link Titanium.UI} keyboard appearance constants, 
{@link Titanium.UI#property-KEYBOARD_APPEARANCE_ALERT KEYBOARD_APPEARANCE_ALERT},
or {@link Titanium.UI#property-KEYBOARD_APPEARANCE_DEFAULT KEYBOARD_APPEARANCE_DEFAULT}.</p>
 */
Titanium.UI.TextArea.appearance = null;

/**
 * @property [autoLink={@link Titanium.UI.iOS#property-AUTODETECT_NONE} in iOS, undefined in Android]
 * @type Number
 * @platform android 3.0
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Automatically convert text to clickable links.</p>
 * @description <p>Specify which types of items to convert by setting <code>autoLink</code> to one of the 
{@link Titanium.UI} <code>AUTOLINK</code> constants: 
{@link Titanium.UI#property-AUTOLINK_ALL AUTOLINK_ALL},
{@link Titanium.UI#property-AUTOLINK_EMAIL_ADDRESSES AUTOLINK_EMAIL_ADDRESSES},
{@link Titanium.UI#property-AUTOLINK_MAP_ADDRESSES AUTOLINK_MAP_ADDRESSES},
{@link Titanium.UI#property-AUTOLINK_NONE AUTOLINK_NONE},
{@link Titanium.UI#property-AUTOLINK_PHONE_NUMBERS AUTOLINK_PHONE_NUMBERS},
or {@link Titanium.UI#property-AUTOLINK_URLS AUTOLINK_URLS}.</p>
<p>iOS supports an additional autolink type, {@link Titanium.UI#property-AUTOLINK_CALENDAR AUTOLINK_CALENDAR}.</p>
<p>Multiple autolink values can be combined with a bitwise OR. For example:</p>
<pre><code>textArea.autoLink = AUTOLINK_MAP_ADDRESSES|AUTOLINK_PHONE_NUMBERS;
</code></pre>
<p>Prior to Release 3.0, this field used platform-specific constants. These are now
deprecated in favor of the <code>AUTOLINK</code> constants listed above.</p>
<p>On iOS, the legacy constants are defined in {@link Titanium.UI.iOS}: 
{@link Titanium.UI.iOS#property-AUTODETECT_ADDRESS AUTODETECT_ADDRESS}, 
{@link Titanium.UI.iOS#property-AUTODETECT_ALL AUTODETECT_ALL}, 
{@link Titanium.UI.iOS#property-AUTODETECT_CALENDAR AUTODETECT_CALENDAR}, 
{@link Titanium.UI.iOS#property-AUTODETECT_LINK AUTODETECT_LINK}, 
{@link Titanium.UI.iOS#property-AUTODETECT_NONE AUTODETECT_NONE}, 
and {@link Titanium.UI.iOS#property-AUTODETECT_PHONE AUTODETECT_PHONE}.</p>
<p>On Android, the legacy constants are defined in {@link Titanium.UI.Android}:
{@link Titanium.UI.Android#property-LINKIFY_ALL LINKIFY_ALL},
{@link Titanium.UI.Android#property-LINKIFY_EMAIL_ADDRESSES LINKIFY_EMAIL_ADDRESSES},
{@link Titanium.UI.Android#property-LINKIFY_MAP_ADDRESSES LINKIFY_MAP_ADDRESSES},
{@link Titanium.UI.Android#property-LINKIFY_PHONE_NUMBERS LINKIFY_PHONE_NUMBERS},
and {@link Titanium.UI.Android#property-LINKIFY_WEB_URLS LINKIFY_WEB_URLS}.</p>
 */
Titanium.UI.TextArea.autoLink = null;

/**
 * @property [autocapitalization={@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_NONE}]
 * @type Number
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines how text is capitalized during typing.</p>
 * @description <p>One of the {@link Titanium.UI} auto-capitalization constants, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_NONE TEXT_AUTOCAPITALIZATION_NONE}, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_WORDS TEXT_AUTOCAPITALIZATION_WORDS}, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_SENTENCES TEXT_AUTOCAPITALIZATION_SENTENCES},
or {@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_ALL TEXT_AUTOCAPITALIZATION_ALL}.</p>
 */
Titanium.UI.TextArea.autocapitalization = null;

/**
 * @property autocorrect
 * @type Boolean
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether to automatically correct text entered into this text area.</p>
 * @description <p>Set to <code>true</code> to enable automatic spelling correction.</p>
<p>If this property is not explicitly defined, it behaves as though it were set to <code>true</code>.</p>
<p>On Android and iOS, the returned default value is undefined, and on Mobile Web, the returned
default value is <code>false</code>, but all behave as if the value is <code>true</code>.</p>
 */
Titanium.UI.TextArea.autocorrect = null;

/**
 * @property [clearOnEdit=false]
 * @type Boolean
 * @platform android 0.8
 * <p>Determines whether the value of this text area should be cleared when it is focused.</p>
 */
Titanium.UI.TextArea.clearOnEdit = null;

/**
 * @property color
 * @type String
 * <p>Color of the text in this text area, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TextArea.color = null;

/**
 * @property [editable=true]
 * @type Boolean
 * <p>Determines whether this field can be edited.</p>
 */
Titanium.UI.TextArea.editable = null;

/**
 * @property [ellipsize=false]
 * @type Boolean
 * @platform android 0.8
 * <p>Determines whether an ellipsis (<code>...</code>) should be used to indicate truncated text.</p>
 */
Titanium.UI.TextArea.ellipsize = null;

/**
 * @property [enableReturnKey=false]
 * @type Boolean
 * <p>Determines whether the return key is enabled automatically when there is text in this text 
area.</p>
 * @description <p>If <code>true</code>, the return key is <strong>disabled</strong> when this text area is empty, and
automatically enabled as soon as the user types any text in the area.</p>
 */
Titanium.UI.TextArea.enableReturnKey = null;

/**
 * @property [enabled=true]
 * @type Boolean
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether this field is enabled.</p>
 * @description <p>Set to <code>true</code> to enable or <code>false</code> to disable the view.</p>
 */
Titanium.UI.TextArea.enabled = null;

/**
 * @property font
 * @type Font
 * <p>Font to use for text.</p>
 */
Titanium.UI.TextArea.font = null;

/**
 * @property [hintText=No hint text.]
 * @type String
 * @platform android 0.8
 * <p>Hint text to display when the field is empty.</p>
 * @description <p>Hint text is hidden when the user enters text into this text area.</p>
<p>Use the backslash and letter <code>n</code> line feed character combination, ie <code>\n</code>, to force a new 
line. </p>
<p>Use unicode characters, such as those included in (but not limited to) the 
<a href="http://en.wikibooks.org/w/index.php?title=Unicode/List_of_useful_symbols">Unicode List of Useful Symbols</a> 
section of wikipedia, to insert special characters and symbols.</p>
 */
Titanium.UI.TextArea.hintText = null;

/**
 * @property keyboardToolbar
 * @type Titanium.UI.View[]/Titanium.UI.iOS.Toolbar
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Array of toolbar button objects or a {@link Titanium.UI.iOS.Toolbar toolbar} to be used when the 
keyboard is displayed.</p>
 * @description <p>As of Release 2.0, because iOS disallows a view (including toolbar buttons) to be in two places at
once, developers desiring textAreas or {@link Titanium.UI.TextField textFields} to share a toolbar
can instead use a single {@link Titanium.UI.iOS.Toolbar toolbar} instead of having arrays sharing
toolbar buttons.</p>
 */
Titanium.UI.TextArea.keyboardToolbar = null;

/**
 * @property keyboardToolbarColor
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Color of the keyboard toolbar if keyboardToolbar is an array, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TextArea.keyboardToolbarColor = null;

/**
 * @property keyboardToolbarHeight
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Height of the keyboard toolbar if keyboardToolbar is an array.</p>
 */
Titanium.UI.TextArea.keyboardToolbarHeight = null;

/**
 * @property [keyboardType={@link Titanium.UI#property-KEYBOARD_DEFAULT}]
 * @type Number
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Keyboard type to display when this text area is focused.</p>
 * @description <p>One of the <code>KEYBOARD</code> constants from {@link Titanium.UI}, 
{@link Titanium.UI#property-KEYBOARD_ASCII KEYBOARD_ASCII},
{@link Titanium.UI#property-KEYBOARD_DECIMAL_PAD KEYBOARD_DECIMAL_PAD},
{@link Titanium.UI#property-KEYBOARD_DEFAULT KEYBOARD_DEFAULT},
{@link Titanium.UI#property-KEYBOARD_EMAIL KEYBOARD_EMAIL},
{@link Titanium.UI#property-KEYBOARD_NAMEPHONE_PAD KEYBOARD_NAMEPHONE_PAD},
{@link Titanium.UI#property-KEYBOARD_NUMBERS_PUNCTUATION KEYBOARD_NUMBERS_PUNCTUATION},
{@link Titanium.UI#property-KEYBOARD_NUMBER_PAD KEYBOARD_NUMBER_PAD},
{@link Titanium.UI#property-KEYBOARD_PHONE_PAD KEYBOARD_PHONE_PAD},
or {@link Titanium.UI#property-KEYBOARD_URL KEYBOARD_URL}.</p>
<p>When asking for a specific kind of user input, such as a phone number or email 
address, you should always specify the appropriate keyboard type.</p>
 */
Titanium.UI.TextArea.keyboardType = null;

/**
 * @property [maxLength=-1]
 * @type Number
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Maximum length of text field input.</p>
 * @description <p>Any attempt to input text beyond this length (including pasting a string larger than <code>maxLength</code>) will not edit the field's contents. A value of -1 indicates unlimited length.</p>
 */
Titanium.UI.TextArea.maxLength = null;

/**
 * @property [returnKeyType={@link Titanium.UI#property-RETURNKEY_DEFAULT}]
 * @type Number
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Specifies the text to display on the keyboard <code>Return</code> key when this text area is focused.</p>
 * @description <p>One of the {@link Titanium.UI} return key constants, 
{@link Titanium.UI#property-RETURNKEY_DEFAULT RETURNKEY_DEFAULT}, 
{@link Titanium.UI#property-RETURNKEY_DONE RETURNKEY_DONE}, 
{@link Titanium.UI#property-RETURNKEY_EMERGENCY_CALL RETURNKEY_EMERGENCY_CALL}, 
{@link Titanium.UI#property-RETURNKEY_GO RETURNKEY_GO}, 
{@link Titanium.UI#property-RETURNKEY_GOOGLE RETURNKEY_GOOGLE}, 
{@link Titanium.UI#property-RETURNKEY_JOIN RETURNKEY_JOIN}, 
{@link Titanium.UI#property-RETURNKEY_NEXT RETURNKEY_NEXT}, 
{@link Titanium.UI#property-RETURNKEY_ROUTE RETURNKEY_ROUTE}, 
{@link Titanium.UI#property-RETURNKEY_SEARCH RETURNKEY_SEARCH}, 
{@link Titanium.UI#property-RETURNKEY_SEND RETURNKEY_SEND}, 
or {@link Titanium.UI#property-RETURNKEY_YAHOO RETURNKEY_YAHOO}.</p>
 */
Titanium.UI.TextArea.returnKeyType = null;

/**
 * @property [scrollable=true]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether this text area can be scrolled.</p>
 */
Titanium.UI.TextArea.scrollable = null;

/**
 * @property [scrollsToTop=true]
 * @type Boolean
 * @platform iphone 2.1.2
 * @platform ipad 2.1.2
 * <p>Controls whether the scroll-to-top gesture is effective.</p>
 * @description <p>The scroll-to-top gesture is a tap on the status bar; The default value of this property is true. 
This gesture works when you have a single visible text area.
If there are multiple table views, web views, text areas, and/or scroll views visible,
you will need to disable (set to false) on the above views you DON'T want this
behaviour on. The remaining view will then respond to scroll-to-top gesture. </p>
 */
Titanium.UI.TextArea.scrollsToTop = null;

/**
 * @property suppressReturn
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines if the return key should be suppressed during text entry.</p>
 */
Titanium.UI.TextArea.suppressReturn = null;

/**
 * @property [textAlign={@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT}]
 * @type String/Number
 * <p>Text alignment within this text area.</p>
 * @description <p>One of the {@link Titanium.UI} text alignment constants, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT TEXT_ALIGNMENT_LEFT}, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER TEXT_ALIGNMENT_CENTER}, 
or {@link Titanium.UI#property-TEXT_ALIGNMENT_RIGHT TEXT_ALIGNMENT_RIGHT}.</p>
 */
Titanium.UI.TextArea.textAlign = null;

/**
 * @property value
 * @type String
 * <p>Value of this text area, which may be set programmatically and modified by the user.</p>
 * @description <p>Use the backslash and letter <code>n</code> line feed character combination, ie <code>\n</code>, to force a new 
line. </p>
<p>Use unicode characters, such as those included in (but not limited to) the 
<a href="http://en.wikibooks.org/w/index.php?title=Unicode/List_of_useful_symbols">Unicode List of Useful Symbols</a> 
section of wikipedia, to insert special characters and symbols.</p>
 */
Titanium.UI.TextArea.value = null;

/**
 * @property [verticalAlign={@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_TOP}]
 * @type Number/String
 * @platform android 0.8
 * <p>Vertical alignment within this text area.</p>
 * @description <p>One of the {@link Titanium.UI} vertical alignment constants, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_BOTTOM TEXT_VERTICAL_ALIGNMENT_BOTTOM}, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_CENTER TEXT_VERTICAL_ALIGNMENT_CENTER},
or {@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_TOP TEXT_VERTICAL_ALIGNMENT_TOP}.</p>
 */
Titanium.UI.TextArea.verticalAlign = null;

/**
 * @class Titanium.UI.TextField
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>A single line text field.</p>
 * @description <p>Use the {@link Titanium.UI#method-createTextField} method to create a text field.</p>
 * <h3>Examples</h3>
 * <h4>Basic Text Field with rounded border</h4>
 * <p><p>Create a simple text field with a round border style.</p></p><pre>var win = Ti.UI.createWindow({
  backgroundColor: 'white'
});

var textField = Ti.UI.createTextField({
  borderStyle: Ti.UI.INPUT_BORDERSTYLE_ROUNDED,
  color: '#336699',
  top: 10, left: 10,
  width: 250, height: 60
});

win.add(textField);
win.open();</pre>
 * <h4>Custom Keyboard Toolbar (iOS)</h4>
 * <p><p>On iOS, a configurable toolbar can be displayed above the virtual keyboard. 
Toolbars can be used with both text areas and text fields. See {@link Titanium.UI.iOS.Toolbar}
for more information.</p>
<p>This code excerpt creates a text field with a toolbar:</p></p><pre>var send = Titanium.UI.createButton({
    title : 'Send',
    style : Titanium.UI.iPhone.SystemButtonStyle.DONE,
});

var camera = Titanium.UI.createButton({
    systemButton : Titanium.UI.iPhone.SystemButton.CAMERA,
});

var cancel = Titanium.UI.createButton({
    systemButton : Titanium.UI.iPhone.SystemButton.CANCEL
});

var flexSpace = Titanium.UI.createButton({
    systemButton : Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE
});

var textfield = Titanium.UI.createTextField({
    borderStyle : Titanium.UI.INPUT_BORDERSTYLE_BEZEL,
    hintText : 'Focus to see keyboard with toolbar',
    keyboardToolbar : [cancel, flexSpace, camera, flexSpace, send],
    keyboardToolbarColor : '#999',
    keyboardToolbarHeight : 40,
    top : 10,
    width : 300, height : 35
});</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous basic text field with rounded border example as an Alloy view.</p>
<p>Define the <code>borderStyle</code> property in the TSS file.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="white"&gt;
        &lt;TextField id="textField" borderStyle="Ti.UI.INPUT_BORDERSTYLE_ROUNDED" color="#336699" top="10" left="10" width="250" height="60" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.TextField = {};





/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>Adding children to a <code>TextField</code> is not supported on all platforms.</p>
<p>If you need to display views on top of this object, consider using 
another view as a container for both this object and the views you want 
to appear on top of it.</p>
<p>See also: {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.add = function(view){};

/**
 * @method blur
 * <p>Forces the field to lose focus.</p>
 * @return void
*/
Titanium.UI.TextField.blur = function(){};

/**
 * @method focus
 * <p>Forces the field to gain focus.</p>
 * @return void
*/
Titanium.UI.TextField.focus = function(){};

/**
 * @method getAppearance
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-appearance appearance} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getAppearance = function(){};

/**
 * @method getAutoLink
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-autoLink autoLink} property.</p>
 * @return {Number} 
 * @platform android 3.0
*/
Titanium.UI.TextField.getAutoLink = function(){};

/**
 * @method getAutocapitalization
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-autocapitalization autocapitalization} property.</p>
 * @return {Number} 
*/
Titanium.UI.TextField.getAutocapitalization = function(){};

/**
 * @method getAutocorrect
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-autocorrect autocorrect} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TextField.getAutocorrect = function(){};

/**
 * @method getBorderStyle
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-borderStyle borderStyle} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.getBorderStyle = function(){};

/**
 * @method getClearButtonMode
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-clearButtonMode clearButtonMode} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getClearButtonMode = function(){};

/**
 * @method getClearOnEdit
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-clearOnEdit clearOnEdit} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TextField.getClearOnEdit = function(){};

/**
 * @method getColor
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-color color} property.</p>
 * @return {String} 
*/
Titanium.UI.TextField.getColor = function(){};

/**
 * @method getEditable
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-editable editable} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TextField.getEditable = function(){};

/**
 * @method getEllipsize
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-ellipsize ellipsize} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
*/
Titanium.UI.TextField.getEllipsize = function(){};

/**
 * @method getEnableReturnKey
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-enableReturnKey enableReturnKey} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TextField.getEnableReturnKey = function(){};

/**
 * @method getEnabled
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-enabled enabled} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.getEnabled = function(){};

/**
 * @method getFont
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-font font} property.</p>
 * @return {Font} 
*/
Titanium.UI.TextField.getFont = function(){};

/**
 * @method getHintText
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-hintText hintText} property.</p>
 * @return {String} 
*/
Titanium.UI.TextField.getHintText = function(){};

/**
 * @method getKeyboardToolbar
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-keyboardToolbar keyboardToolbar} property.</p>
 * @return {Titanium.UI.View[]/Titanium.UI.iOS.Toolbar} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getKeyboardToolbar = function(){};

/**
 * @method getKeyboardToolbarColor
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-keyboardToolbarColor keyboardToolbarColor} property.</p>
 * @return {String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getKeyboardToolbarColor = function(){};

/**
 * @method getKeyboardToolbarHeight
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-keyboardToolbarHeight keyboardToolbarHeight} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getKeyboardToolbarHeight = function(){};

/**
 * @method getKeyboardType
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-keyboardType keyboardType} property.</p>
 * @return {Number} 
*/
Titanium.UI.TextField.getKeyboardType = function(){};

/**
 * @method getLeftButton
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-leftButton leftButton} property.</p>
 * @return {Object} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getLeftButton = function(){};

/**
 * @method getLeftButtonMode
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-leftButtonMode leftButtonMode} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getLeftButtonMode = function(){};

/**
 * @method getLeftButtonPadding
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-leftButtonPadding leftButtonPadding} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getLeftButtonPadding = function(){};

/**
 * @method getMaxLength
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-maxLength maxLength} property.</p>
 * @return {Number} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.getMaxLength = function(){};

/**
 * @method getMinimumFontSize
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-minimumFontSize minimumFontSize} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getMinimumFontSize = function(){};

/**
 * @method getPaddingLeft
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-paddingLeft paddingLeft} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getPaddingLeft = function(){};

/**
 * @method getPaddingRight
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-paddingRight paddingRight} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getPaddingRight = function(){};

/**
 * @method getPasswordMask
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-passwordMask passwordMask} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.TextField.getPasswordMask = function(){};

/**
 * @method getReturnKeyType
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-returnKeyType returnKeyType} property.</p>
 * @return {Number} 
*/
Titanium.UI.TextField.getReturnKeyType = function(){};

/**
 * @method getRightButton
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-rightButton rightButton} property.</p>
 * @return {Object} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getRightButton = function(){};

/**
 * @method getRightButtonMode
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-rightButtonMode rightButtonMode} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getRightButtonMode = function(){};

/**
 * @method getRightButtonPadding
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-rightButtonPadding rightButtonPadding} property.</p>
 * @return {Number} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.getRightButtonPadding = function(){};

/**
 * @method getSuppressReturn
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-suppressReturn suppressReturn} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.getSuppressReturn = function(){};

/**
 * @method getTextAlign
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-textAlign textAlign} property.</p>
 * @return {String/Number} 
*/
Titanium.UI.TextField.getTextAlign = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-value value} property.</p>
 * @return {String} 
*/
Titanium.UI.TextField.getValue = function(){};

/**
 * @method getVerticalAlign
 * <p>Gets the value of the {@link Titanium.UI.TextField#property-verticalAlign verticalAlign} property.</p>
 * @return {Number/String} 
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
*/
Titanium.UI.TextField.getVerticalAlign = function(){};

/**
 * @method hasText
 * <p>Returns <code>true</code> if this text field contains text.</p>
 * @return {Boolean} <p>True if this text field contains text.</p>
 * @platform android 2.1
 * @platform blackberry 3.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.TextField.hasText = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @description <p>See also: {@link Titanium.UI.TextField#method-add add}, {@link Titanium.UI.View#method-add}.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.remove = function(view){};

/**
 * @method setAppearance
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-appearance appearance} property.</p>
 * @param {Number} appearance 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setAppearance = function(appearance){};

/**
 * @method setAutoLink
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-autoLink autoLink} property.</p>
 * @param {Number} autoLink 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.TextField.setAutoLink = function(autoLink){};

/**
 * @method setAutocapitalization
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-autocapitalization autocapitalization} property.</p>
 * @param {Number} autocapitalization 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setAutocapitalization = function(autocapitalization){};

/**
 * @method setAutocorrect
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-autocorrect autocorrect} property.</p>
 * @param {Boolean} autocorrect 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setAutocorrect = function(autocorrect){};

/**
 * @method setBorderStyle
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-borderStyle borderStyle} property.</p>
 * @param {Number} borderStyle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.setBorderStyle = function(borderStyle){};

/**
 * @method setClearButtonMode
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-clearButtonMode clearButtonMode} property.</p>
 * @param {Number} clearButtonMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setClearButtonMode = function(clearButtonMode){};

/**
 * @method setClearOnEdit
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-clearOnEdit clearOnEdit} property.</p>
 * @param {Boolean} clearOnEdit 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setClearOnEdit = function(clearOnEdit){};

/**
 * @method setColor
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-color color} property.</p>
 * @param {String} color 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setColor = function(color){};

/**
 * @method setEditable
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-editable editable} property.</p>
 * @param {Boolean} editable 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setEditable = function(editable){};

/**
 * @method setEllipsize
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-ellipsize ellipsize} property.</p>
 * @param {Boolean} ellipsize 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.TextField.setEllipsize = function(ellipsize){};

/**
 * @method setEnableReturnKey
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-enableReturnKey enableReturnKey} property.</p>
 * @param {Boolean} enableReturnKey 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setEnableReturnKey = function(enableReturnKey){};

/**
 * @method setEnabled
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-enabled enabled} property.</p>
 * @param {Boolean} enabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.setEnabled = function(enabled){};

/**
 * @method setFont
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-font font} property.</p>
 * @param {Font} font 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setFont = function(font){};

/**
 * @method setHintText
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-hintText hintText} property.</p>
 * @param {String} hintText 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setHintText = function(hintText){};

/**
 * @method setKeyboardToolbar
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-keyboardToolbar keyboardToolbar} property.</p>
 * @param {Titanium.UI.View[]/Titanium.UI.iOS.Toolbar} keyboardToolbar 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setKeyboardToolbar = function(keyboardToolbar){};

/**
 * @method setKeyboardToolbarColor
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-keyboardToolbarColor keyboardToolbarColor} property.</p>
 * @param {String} keyboardToolbarColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setKeyboardToolbarColor = function(keyboardToolbarColor){};

/**
 * @method setKeyboardToolbarHeight
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-keyboardToolbarHeight keyboardToolbarHeight} property.</p>
 * @param {Number} keyboardToolbarHeight 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setKeyboardToolbarHeight = function(keyboardToolbarHeight){};

/**
 * @method setKeyboardType
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-keyboardType keyboardType} property.</p>
 * @param {Number} keyboardType 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setKeyboardType = function(keyboardType){};

/**
 * @method setLeftButton
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-leftButton leftButton} property.</p>
 * @param {Object} leftButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setLeftButton = function(leftButton){};

/**
 * @method setLeftButtonMode
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-leftButtonMode leftButtonMode} property.</p>
 * @param {Number} leftButtonMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setLeftButtonMode = function(leftButtonMode){};

/**
 * @method setLeftButtonPadding
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-leftButtonPadding leftButtonPadding} property.</p>
 * @param {Number} leftButtonPadding 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setLeftButtonPadding = function(leftButtonPadding){};

/**
 * @method setMaxLength
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-maxLength maxLength} property.</p>
 * @param {Number} maxLength 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.setMaxLength = function(maxLength){};

/**
 * @method setMinimumFontSize
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-minimumFontSize minimumFontSize} property.</p>
 * @param {Number} minimumFontSize 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setMinimumFontSize = function(minimumFontSize){};

/**
 * @method setPaddingLeft
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-paddingLeft paddingLeft} property.</p>
 * @param {Number} paddingLeft 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setPaddingLeft = function(paddingLeft){};

/**
 * @method setPaddingRight
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-paddingRight paddingRight} property.</p>
 * @param {Number} paddingRight 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setPaddingRight = function(paddingRight){};

/**
 * @method setPasswordMask
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-passwordMask passwordMask} property.</p>
 * @param {Boolean} passwordMask 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setPasswordMask = function(passwordMask){};

/**
 * @method setReturnKeyType
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-returnKeyType returnKeyType} property.</p>
 * @param {Number} returnKeyType 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setReturnKeyType = function(returnKeyType){};

/**
 * @method setRightButton
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-rightButton rightButton} property.</p>
 * @param {Object} rightButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setRightButton = function(rightButton){};

/**
 * @method setRightButtonMode
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-rightButtonMode rightButtonMode} property.</p>
 * @param {Number} rightButtonMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setRightButtonMode = function(rightButtonMode){};

/**
 * @method setRightButtonPadding
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-rightButtonPadding rightButtonPadding} property.</p>
 * @param {Number} rightButtonPadding 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.TextField.setRightButtonPadding = function(rightButtonPadding){};

/**
 * @method setSelection
 * <p>Selects the text in range (start, end).</p>
 * @description <p>Selects the text in range (start, end). If start equals end, no text will be selected, 
and the cursor will move to the start position. End is not inclusive, meaning setSelection(0,0) 
will not select the first character, but will move the cursor to the position before the first character.</p>
<p>On iOS, soft keyboard would show when text is selected.</p>
 * @param {Number} start 
 * <p>Start index for selection. Value ranges from 0 to the text's length.</p>
 * @param {Number} end 
 * <p>End index for selection, not inclusive. Value ranges from 0 to the text's length.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.TextField.setSelection = function(start, end){};

/**
 * @method setSuppressReturn
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-suppressReturn suppressReturn} property.</p>
 * @param {Boolean} suppressReturn 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.TextField.setSuppressReturn = function(suppressReturn){};

/**
 * @method setTextAlign
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-textAlign textAlign} property.</p>
 * @param {String/Number} textAlign 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setTextAlign = function(textAlign){};

/**
 * @method setValue
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-value value} property.</p>
 * @param {String} value 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.TextField.setValue = function(value){};

/**
 * @method setVerticalAlign
 * <p>Sets the value of the {@link Titanium.UI.TextField#property-verticalAlign verticalAlign} property.</p>
 * @param {Number/String} verticalAlign 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
*/
Titanium.UI.TextField.setVerticalAlign = function(verticalAlign){};

/**
 * @property [appearance={@link Titanium.UI#property-KEYBOARD_APPEARANCE_DEFAULT}]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines the appearance of the keyboard displayed when this field is focused.</p>
 * @description <p>One of the {@link Titanium.UI} keyboard appearance constants, 
{@link Titanium.UI#property-KEYBOARD_APPEARANCE_ALERT KEYBOARD_APPEARANCE_ALERT},
or {@link Titanium.UI#property-KEYBOARD_APPEARANCE_DEFAULT KEYBOARD_APPEARANCE_DEFAULT}.</p>
 */
Titanium.UI.TextField.appearance = null;

/**
 * @property [autoLink=undefined]
 * @type Number
 * @platform android 3.0
 * <p>Automatically convert text to clickable links.</p>
 * @description <p>Specify which types of items to convert by setting <code>autoLink</code> to one of the 
{@link Titanium.UI} <code>AUTOLINK</code> constants: 
{@link Titanium.UI#property-AUTOLINK_ALL AUTOLINK_ALL},
{@link Titanium.UI#property-AUTOLINK_EMAIL_ADDRESSES AUTOLINK_EMAIL_ADDRESSES},
{@link Titanium.UI#property-AUTOLINK_MAP_ADDRESSES AUTOLINK_MAP_ADDRESSES},
{@link Titanium.UI#property-AUTOLINK_NONE AUTOLINK_NONE},
{@link Titanium.UI#property-AUTOLINK_PHONE_NUMBERS AUTOLINK_PHONE_NUMBERS},
or {@link Titanium.UI#property-AUTOLINK_URLS AUTOLINK_URLS}.</p>
<p>Multiple autolink values can be combined with a bitwise OR. For example:</p>
<pre><code>textField.autoLink = AUTOLINK_MAP_ADDRESSES|AUTOLINK_PHONE_NUMBERS;
</code></pre>
<p>Prior to Release 3.0, this field used platform-specific constants. These are now
deprecated in favor of the <code>AUTOLINK</code> constants listed above.</p>
<p>The Android-specific legacy constants are defined in {@link Titanium.UI.Android}:
{@link Titanium.UI.Android#property-LINKIFY_ALL LINKIFY_ALL},
{@link Titanium.UI.Android#property-LINKIFY_EMAIL_ADDRESSES LINKIFY_EMAIL_ADDRESSES},
{@link Titanium.UI.Android#property-LINKIFY_MAP_ADDRESSES LINKIFY_MAP_ADDRESSES},
{@link Titanium.UI.Android#property-LINKIFY_PHONE_NUMBERS LINKIFY_PHONE_NUMBERS},
and {@link Titanium.UI.Android#property-LINKIFY_WEB_URLS LINKIFY_WEB_URLS}.</p>
 */
Titanium.UI.TextField.autoLink = null;

/**
 * @property [autocapitalization={@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_NONE}]
 * @type Number
 * <p>Determines how text is capitalized during typing.</p>
 * @description <p>One of the {@link Titanium.UI} auto-capitalization constants, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_NONE TEXT_AUTOCAPITALIZATION_NONE}, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_WORDS TEXT_AUTOCAPITALIZATION_WORDS}, 
{@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_SENTENCES TEXT_AUTOCAPITALIZATION_SENTENCES},
or {@link Titanium.UI#property-TEXT_AUTOCAPITALIZATION_ALL TEXT_AUTOCAPITALIZATION_ALL}.</p>
 */
Titanium.UI.TextField.autocapitalization = null;

/**
 * @property autocorrect
 * @type Boolean
 * <p>Determines whether to automatically correct text entered into this text field.</p>
 * @description <p>Set to <code>true</code> to enable automatic spelling correction.</p>
<p>If this property is not explicitly defined, it behaves as though it were set to <code>true</code>.</p>
<p>On iOS and Mobile Web, the returned default value is <code>false</code>, and on Android, the returned
default value is undefined, but all behave as if the value is <code>true</code>.</p>
 */
Titanium.UI.TextField.autocorrect = null;

/**
 * @property [borderStyle={@link Titanium.UI#property-INPUT_BORDERSTYLE_NONE}]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Border style for the field.</p>
 * @description <p>One of the {@link Titanium.UI} border style constants, 
{@link Titanium.UI#property-INPUT_BORDERSTYLE_BEZEL INPUT_BORDERSTYLE_BEZEL}, 
{@link Titanium.UI#property-INPUT_BORDERSTYLE_LINE INPUT_BORDERSTYLE_LINE}, 
{@link Titanium.UI#property-INPUT_BORDERSTYLE_NONE INPUT_BORDERSTYLE_NONE}, 
or {@link Titanium.UI#property-INPUT_BORDERSTYLE_ROUNDED INPUT_BORDERSTYLE_ROUNDED}.</p>
 */
Titanium.UI.TextField.borderStyle = null;

/**
 * @property [clearButtonMode=Titanium.UI.INPUT_BUTTONMODE_NEVER]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines when the clear button is displayed.</p>
 * @description <p>One of the {@link Titanium.UI} button mode constants, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_ALWAYS INPUT_BUTTONMODE_ALWAYS}, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_NEVER INPUT_BUTTONMODE_NEVER}, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_ONBLUR INPUT_BUTTONMODE_ONBLUR},
or {@link Titanium.UI#property-INPUT_BUTTONMODE_ONFOCUS INPUT_BUTTONMODE_ONFOCUS}.</p>
 */
Titanium.UI.TextField.clearButtonMode = null;

/**
 * @property [clearOnEdit=false]
 * @type Boolean
 * <p>Determines whether the value of this text field should be cleared when it is focused.</p>
 */
Titanium.UI.TextField.clearOnEdit = null;

/**
 * @property color
 * @type String
 * <p>Color of the text in this text field, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TextField.color = null;

/**
 * @property [editable=true]
 * @type Boolean
 * <p>Determines whether this field can be edited.</p>
 */
Titanium.UI.TextField.editable = null;

/**
 * @property [ellipsize=false]
 * @type Boolean
 * @platform android 0.8
 * <p>Determines whether an ellipsis (<code>...</code>) should be used to indicate truncated text.</p>
 */
Titanium.UI.TextField.ellipsize = null;

/**
 * @property [enableReturnKey=false]
 * @type Boolean
 * <p>Determines whether the return key is enabled automatically when there is text in this text 
field.</p>
 * @description <p>If <code>true</code>, the return key is <strong>disabled</strong> when this text field is empty, and
automatically enabled as soon as the user types any text in the field.</p>
 */
Titanium.UI.TextField.enableReturnKey = null;

/**
 * @property [enabled=true]
 * @type Boolean
 * @platform android 0.8
 * @platform ipad 0.8
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether the field is enabled.</p>
 * @description <p>Set to <code>true</code> to enable or <code>false</code> to disable the view.</p>
 */
Titanium.UI.TextField.enabled = null;

/**
 * @property font
 * @type Font
 * <p>Font to use for text.</p>
 */
Titanium.UI.TextField.font = null;

/**
 * @property [hintText=No hint text.]
 * @type String
 * <p>Hint text to display when the field is empty.</p>
 * @description <p>Hint text is hidden when the user enters text into this text field.</p>
<p>Use the backslash and letter <code>n</code> line feed character combination, ie <code>\n</code>, to force a new 
line. </p>
<p>Use unicode characters, such as those included in (but not limited to) the 
<a href="http://en.wikibooks.org/w/index.php?title=Unicode/List_of_useful_symbols">Unicode List of Useful Symbols</a> 
section of wikipedia, to insert special characters and symbols.</p>
 */
Titanium.UI.TextField.hintText = null;

/**
 * @property keyboardToolbar
 * @type Titanium.UI.View[]/Titanium.UI.iOS.Toolbar
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Array of toolbar button objects or a {@link Titanium.UI.iOS.Toolbar toolbar} to be used when the 
keyboard is displayed.</p>
 * @description <p>As of Release 2.0, because iOS disallows a view (including toolbar buttons) to be in two places at
once, developers desiring textAreas or {@link Titanium.UI.TextField textFields} to share a toolbar
can instead use a single {@link Titanium.UI.iOS.Toolbar toolbar} instead of having arrays sharing
toolbar buttons.</p>
 */
Titanium.UI.TextField.keyboardToolbar = null;

/**
 * @property keyboardToolbarColor
 * @type String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Color of the keyboard toolbar if keyboardToolbar is an array, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.TextField.keyboardToolbarColor = null;

/**
 * @property keyboardToolbarHeight
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Height of the keyboard toolbar if keyboardToolbar is an array.</p>
 */
Titanium.UI.TextField.keyboardToolbarHeight = null;

/**
 * @property [keyboardType={@link Titanium.UI#property-KEYBOARD_DEFAULT}]
 * @type Number
 * <p>Keyboard type to display when this text field is focused.</p>
 * @description <p>One of the <code>KEYBOARD</code> constants from {@link Titanium.UI}, 
{@link Titanium.UI#property-KEYBOARD_ASCII KEYBOARD_ASCII},
{@link Titanium.UI#property-KEYBOARD_DECIMAL_PAD KEYBOARD_DECIMAL_PAD},
{@link Titanium.UI#property-KEYBOARD_DEFAULT KEYBOARD_DEFAULT},
{@link Titanium.UI#property-KEYBOARD_EMAIL KEYBOARD_EMAIL},
{@link Titanium.UI#property-KEYBOARD_NAMEPHONE_PAD KEYBOARD_NAMEPHONE_PAD},
{@link Titanium.UI#property-KEYBOARD_NUMBERS_PUNCTUATION KEYBOARD_NUMBERS_PUNCTUATION},
{@link Titanium.UI#property-KEYBOARD_NUMBER_PAD KEYBOARD_NUMBER_PAD},
{@link Titanium.UI#property-KEYBOARD_PHONE_PAD KEYBOARD_PHONE_PAD},
or {@link Titanium.UI#property-KEYBOARD_URL KEYBOARD_URL}.</p>
<p>When asking for a specific kind of user input, such as a phone number or email 
address, you should always specify the appropriate keyboard type.</p>
 */
Titanium.UI.TextField.keyboardType = null;

/**
 * @property leftButton
 * @type Object
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Left button view.</p>
 * @description <p>Using an object other than a {@link Titanium.UI.Button Button} may have unpredictable results.</p>
 */
Titanium.UI.TextField.leftButton = null;

/**
 * @property [leftButtonMode={@link Titanium.UI#property-INPUT_BUTTONMODE_NEVER}]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines when to display the left button view.</p>
 * @description <p>One of the {@link Titanium.UI} button mode constants, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_ALWAYS INPUT_BUTTONMODE_ALWAYS}, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_NEVER INPUT_BUTTONMODE_NEVER}, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_ONBLUR INPUT_BUTTONMODE_ONBLUR},
or {@link Titanium.UI#property-INPUT_BUTTONMODE_ONFOCUS INPUT_BUTTONMODE_ONFOCUS}.</p>
 */
Titanium.UI.TextField.leftButtonMode = null;

/**
 * @property leftButtonPadding
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Padding between the left button and the edge of the field.</p>
 */
Titanium.UI.TextField.leftButtonPadding = null;

/**
 * @property [maxLength=-1]
 * @type Number
 * @platform android 3.0
 * @platform iphone 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Maximum length of text field input.</p>
 * @description <p>Any attempt to input text beyond this length (including pasting a string larger than <code>maxLength</code>) will not edit the field's contents. A value of -1 indicates unlimited length.</p>
 */
Titanium.UI.TextField.maxLength = null;

/**
 * @property minimumFontSize
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Minimum size of the font when the font is sized based on the contents.  Enables font 
scaling to fit.</p>
 */
Titanium.UI.TextField.minimumFontSize = null;

/**
 * @property paddingLeft
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Left padding of this text field.</p>
 */
Titanium.UI.TextField.paddingLeft = null;

/**
 * @property paddingRight
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Right padding of this text field.</p>
 */
Titanium.UI.TextField.paddingRight = null;

/**
 * @property [passwordMask=false]
 * @type Boolean
 * <p>Obscure the input text from the user.</p>
 * @description <p>Set to <code>true</code> to hide entered characters.</p>
<p>On Mobile Web, if you set a <code>keyboardType</code> and enable the <code>passwordMask</code>, the <code>passwordMask</code> 
will always take precedence and the default keyboard will be used.</p>
<p>Note: on iOS, <code>passwordMask</code> <em>must</em> be specified when this text field is created.</p>
 */
Titanium.UI.TextField.passwordMask = null;

/**
 * @property [returnKeyType={@link Titanium.UI#property-RETURNKEY_DEFAULT}]
 * @type Number
 * <p>Specifies the text to display on the keyboard <code>Return</code> key when this field is focused.</p>
 * @description <p>One of the {@link Titanium.UI} return key constants, 
{@link Titanium.UI#property-RETURNKEY_DEFAULT RETURNKEY_DEFAULT}, 
{@link Titanium.UI#property-RETURNKEY_DONE RETURNKEY_DONE}, 
{@link Titanium.UI#property-RETURNKEY_EMERGENCY_CALL RETURNKEY_EMERGENCY_CALL}, 
{@link Titanium.UI#property-RETURNKEY_GO RETURNKEY_GO}, 
{@link Titanium.UI#property-RETURNKEY_GOOGLE RETURNKEY_GOOGLE}, 
{@link Titanium.UI#property-RETURNKEY_JOIN RETURNKEY_JOIN}, 
{@link Titanium.UI#property-RETURNKEY_NEXT RETURNKEY_NEXT}, 
{@link Titanium.UI#property-RETURNKEY_ROUTE RETURNKEY_ROUTE}, 
{@link Titanium.UI#property-RETURNKEY_SEARCH RETURNKEY_SEARCH}, 
{@link Titanium.UI#property-RETURNKEY_SEND RETURNKEY_SEND}, 
or {@link Titanium.UI#property-RETURNKEY_YAHOO RETURNKEY_YAHOO}.</p>
<p>Mobile Web on iOS devices only supports <code>RETURNKEY_DEFAULT</code>, <code>RETURNKEY_DEFAULT</code>, 
<code>RETURNKEY_GO</code>, <code>RETURNKEY_GOOGLE</code>, <code>RETURNKEY_SEARCH</code>, <code>RETURNKEY_YAHOO</code>. Note that 
<code>RETURNKEY_GOOGLE</code>, <code>RETURNKEY_SEARCH</code>, and <code>RETURNKEY_YAHOO</code> all display the word "Search".</p>
<p>Mobile Web on Android devices will only display "Go" regardless of this property's value.</p>
 */
Titanium.UI.TextField.returnKeyType = null;

/**
 * @property rightButton
 * @type Object
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Right button view.</p>
 * @description <p>Using an object other than a {@link Titanium.UI.Button Button} may have unpredictable results.</p>
 */
Titanium.UI.TextField.rightButton = null;

/**
 * @property [rightButtonMode=Titanium.UI.INPUT_BUTTONMODE_NEVER]
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines when to display the right button view.</p>
 * @description <p>One of the {@link Titanium.UI} button mode constants, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_ALWAYS INPUT_BUTTONMODE_ALWAYS}, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_NEVER INPUT_BUTTONMODE_NEVER}, 
{@link Titanium.UI#property-INPUT_BUTTONMODE_ONBLUR INPUT_BUTTONMODE_ONBLUR},
or {@link Titanium.UI#property-INPUT_BUTTONMODE_ONFOCUS INPUT_BUTTONMODE_ONFOCUS}.</p>
 */
Titanium.UI.TextField.rightButtonMode = null;

/**
 * @property rightButtonPadding
 * @type Number
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Padding between the right button and the edge of the field.</p>
 */
Titanium.UI.TextField.rightButtonPadding = null;

/**
 * @property suppressReturn
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Determines whether the return key should be suppressed during entry.</p>
 */
Titanium.UI.TextField.suppressReturn = null;

/**
 * @property [textAlign={@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT}]
 * @type String/Number
 * <p>Text alignment within this text field.</p>
 * @description <p>One of the {@link Titanium.UI} text alignment constants, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_LEFT TEXT_ALIGNMENT_LEFT}, 
{@link Titanium.UI#property-TEXT_ALIGNMENT_CENTER TEXT_ALIGNMENT_CENTER}, 
or {@link Titanium.UI#property-TEXT_ALIGNMENT_RIGHT TEXT_ALIGNMENT_RIGHT}.</p>
 */
Titanium.UI.TextField.textAlign = null;

/**
 * @property value
 * @type String
 * <p>Value of this text field, which may be set programmatically and modified by the user.</p>
 * @description <p>Use the backslash and letter <code>n</code> line feed character combination, ie <code>\n</code>, to force a new 
line. </p>
<p>Use unicode characters, such as those included in (but not limited to) the 
<a href="http://en.wikibooks.org/w/index.php?title=Unicode/List_of_useful_symbols">Unicode List of Useful Symbols</a> 
section of wikipedia, to insert special characters and symbols.</p>
 */
Titanium.UI.TextField.value = null;

/**
 * @property [verticalAlign={@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_CENTER}]
 * @type Number/String
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform android 0.8
 * <p>Vertical alignment within this text field.</p>
 * @description <p>One of the {@link Titanium.UI} vertical alignment constants, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_BOTTOM TEXT_VERTICAL_ALIGNMENT_BOTTOM}, 
{@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_CENTER TEXT_VERTICAL_ALIGNMENT_CENTER},
or {@link Titanium.UI#property-TEXT_VERTICAL_ALIGNMENT_TOP TEXT_VERTICAL_ALIGNMENT_TOP}.</p>
 */
Titanium.UI.TextField.verticalAlign = null;

/**
 * @class Titanium.UI.Toolbar
 * @typestr Object of Titanium.UI
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.UI.View
 * <p>An iOS toolbar, which can contain buttons and other controls.</p>
 * @description <p>The toolbar is created by the {@link Titanium.UI#method-createToolbar} method. </p>
<p>A toolbar can contain buttons, as well as certain other widgets, including text fields and 
labels. </p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS.Toolbar} instead.</p>
 */
Titanium.UI.Toolbar = {};





/**
 * @method getBackgroundColor 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundColor = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundLeftCap 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundLeftCap = function(){};

/**
 * @method getBackgroundRepeat 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundRepeat = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundSelectedImage = function(){};

/**
 * @method getBackgroundTopCap 
 * @hide
*/Titanium.UI.Toolbar.getBackgroundTopCap = function(){};

/**
 * @method getBarColor
 * <p>Gets the value of the {@link Titanium.UI.Toolbar#property-barColor barColor} property.</p>
 * @return {String} 
*/
Titanium.UI.Toolbar.getBarColor = function(){};

/**
 * @method getBorderBottom
 * <p>Gets the value of the {@link Titanium.UI.Toolbar#property-borderBottom borderBottom} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Toolbar.getBorderBottom = function(){};

/**
 * @method getBorderTop
 * <p>Gets the value of the {@link Titanium.UI.Toolbar#property-borderTop borderTop} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Toolbar.getBorderTop = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.Toolbar.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.Toolbar.getFocusable = function(){};

/**
 * @method getItems
 * <p>Gets the value of the {@link Titanium.UI.Toolbar#property-items items} property.</p>
 * @return {Titanium.UI.View[]} 
*/
Titanium.UI.Toolbar.getItems = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.Toolbar.getKeepScreenOn = function(){};

/**
 * @method getLayout 
 * @hide
*/Titanium.UI.Toolbar.getLayout = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.Toolbar.getSoftKeyboardOnFocus = function(){};

/**
 * @method getTranslucent
 * <p>Gets the value of the {@link Titanium.UI.Toolbar#property-translucent translucent} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Toolbar.getTranslucent = function(){};

/**
 * @method setBackgroundColor 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundColor = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundLeftCap 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundLeftCap = function(){};

/**
 * @method setBackgroundRepeat 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundRepeat = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundSelectedImage = function(){};

/**
 * @method setBackgroundTopCap 
 * @hide
*/Titanium.UI.Toolbar.setBackgroundTopCap = function(){};

/**
 * @method setBarColor
 * <p>Sets the value of the {@link Titanium.UI.Toolbar#property-barColor barColor} property.</p>
 * @param {String} barColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Toolbar.setBarColor = function(barColor){};

/**
 * @method setBorderBottom
 * <p>Sets the value of the {@link Titanium.UI.Toolbar#property-borderBottom borderBottom} property.</p>
 * @param {Boolean} borderBottom 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Toolbar.setBorderBottom = function(borderBottom){};

/**
 * @method setBorderTop
 * <p>Sets the value of the {@link Titanium.UI.Toolbar#property-borderTop borderTop} property.</p>
 * @param {Boolean} borderTop 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Toolbar.setBorderTop = function(borderTop){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.Toolbar.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.Toolbar.setFocusable = function(){};

/**
 * @method setItems
 * <p>Sets the value of the {@link Titanium.UI.Toolbar#property-items items} property.</p>
 * @param {Titanium.UI.View[]} items 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Toolbar.setItems = function(items){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.Toolbar.setKeepScreenOn = function(){};

/**
 * @method setLayout 
 * @hide
*/Titanium.UI.Toolbar.setLayout = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.Toolbar.setSoftKeyboardOnFocus = function(){};

/**
 * @method setTranslucent
 * <p>Sets the value of the {@link Titanium.UI.Toolbar#property-translucent translucent} property.</p>
 * @param {Boolean} translucent 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Toolbar.setTranslucent = function(translucent){};

/**
 * @property backgroundColor 
 * @hide
*/Titanium.UI.Toolbar.backgroundColor = null;

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.Toolbar.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.Toolbar.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.Toolbar.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.Toolbar.backgroundFocusedImage = null;

/**
 * @property backgroundLeftCap 
 * @hide
*/Titanium.UI.Toolbar.backgroundLeftCap = null;

/**
 * @property backgroundRepeat 
 * @hide
*/Titanium.UI.Toolbar.backgroundRepeat = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.Toolbar.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.Toolbar.backgroundSelectedImage = null;

/**
 * @property backgroundTopCap 
 * @hide
*/Titanium.UI.Toolbar.backgroundTopCap = null;

/**
 * @property barColor
 * @type String
 * <p>Background color for the toolbar, as a color name or hex triplet.</p>
 * @description <p>To use a background image on the toolbar, either <code>barColor</code> must be a fully or
partially transparent color, 
or the {@link Titanium.UI.Toolbar#property-translucent translucent} property must be <code>true</code>.</p>
<p>To use a background gradient on a toolbar, <code>barColor</code> must be <code>'transparent'</code>
<em>and</em> the the {@link Titanium.UI.Toolbar#property-translucent translucent} property must be <code>true</code>.</p>
<p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Toolbar.barColor = null;

/**
 * @property [borderBottom=true]
 * @type Boolean
 * <p>If <code>true</code>, a border is drawn on the bottom of the toolbar.</p>
 */
Titanium.UI.Toolbar.borderBottom = null;

/**
 * @property [borderTop=true]
 * @type Boolean
 * <p>If <code>true</code>, a border is drawn on the top of the toolbar.</p>
 */
Titanium.UI.Toolbar.borderTop = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.Toolbar.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.Toolbar.focusable = null;

/**
 * @property items
 * @type Titanium.UI.View[]
 * <p>An array of buttons (or other widgets) contained in the toolbar.</p>
 */
Titanium.UI.Toolbar.items = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.Toolbar.keepScreenOn = null;

/**
 * @property layout 
 * @hide
*/Titanium.UI.Toolbar.layout = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.Toolbar.softKeyboardOnFocus = null;

/**
 * @property [translucent=false]
 * @type Boolean
 * <p>If <code>true</code>, a translucent background color is used for the toolbar.</p>
 * @description <p>Note that if <code>translucent</code> is <code>false</code>, views under the toolbar are hidden, even
if {@link Titanium.UI.Toolbar#property-barColor barColor} is set to a semi-transparent or 
transparent color.</p>
 */
Titanium.UI.Toolbar.translucent = null;

/**
 * @class Titanium.UI.View
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>An empty drawing surface or container created by the method {@link Titanium.UI#method-createView}.</p>
 * @description <p>The <code>View</code> is the base type for all UI widgets in Titanium.</p>
<h4>Units and Coordinates</h4>
<p>Sizes and coordinates can be specified using a variety of units. If a value is
specified as a number, it is interpreted as a value in the default unit for the
current system and/or the current project.</p>
<p>When a value is specified as string, the value can consist of:</p>
<ul>
<li>A number.</li>
<li>A percentage, such as "10%", interpreted as a percentage of the parent's total size
   in that dimension.</li>
<li>A number plus a unit specifier, such as "10px" or "1in". </li>
</ul>
<p>The following units are supported:</p>
<table cellpadding="6px" border="1" rules="all">
<tr>
<th align="left">Unit</th> <th align="left">Specifier</th> <th align="left">Note</th>
</tr>
<tr> <td>pixels</td> <td>px</td> <td></td> </tr>
<tr> <td>density-independent pixels</td> <td>dip</td> <td>Equivalent to Apple "points."</td> </tr>
<tr> <td>inches</td> <td>in</td> <td></td> </tr>
<tr> <td>millimeters</td> <td>mm</td> <td>Android, iOS only</td>  </tr>
<tr> <td>centimeters</td> <td>cm</td> <td>Android, iOS only</td>  </tr>
<tr> <td>points</td> <td>pt</td> 
     <td>Typographical points of 1/72 of an inch. On Android, you can specify sizes and 
     coordinates in typographical points. On other platforms, this unit is only used
     to specify font sizes.  Not to be confused with Apple "points."</td> </tr>
</table>

<p>The interpretation of the density-independent pixel (DIP) varies by platform:</p>
<ul>
<li>
<p>On Android, one DIP corresponds to one pixel on a 160DPI
    display.</p>
</li>
<li>
<p>On iOS, one DIP corresponds to one pixel on a non-Retina display, which
    is 163DPI for iPhone/iPod touch and 132DPI for the iPad. A DIP
    corresponds to 2 pixels of width or height on a Retina display.</p>
</li>
<li>
<p>On Mobile Web and Tizen, both DIP and pixel are equal to one browser pixel, which may
    not correspond to a pixel on the display. From testing, most browsers seem to
    report a DPI value of 96DPI, regardless of the actual display density.</p>
</li>
</ul>
<p>The absolute measures, such as inches, are dependent on the device correctly reporting
its density. On Mobile Web and Tizen, in particular, these values are unlikely to be exact.</p>
<p>If no units are specified, a system-default unit is assumed. The system default unit is:</p>
<ul>
<li>Pixels on Android.</li>
<li>DIPs on iOS.</li>
<li>DIPs on Mobile Web and Tizen(as described above, DIPs and pixels are interchangable on
     Mobile Web and Tizen).</li>
</ul>
<p>On Android and iOS, the default unit can be overriden on a per-application level by setting the
<code>ti.ui.defaultunit</code> property in <code>tiapp.xml</code>. For example, to use DIPs as the 
default on all platforms, set <code>defaultunit</code> to <code>dip</code>:</p>
<pre><code>&lt;property name="ti.ui.defaultunit" type="string"&gt;dip&lt;/property&gt;
</code></pre>
<p>(This property is not supported on Mobile Web and Tizen.)</p>
<p>The value for <code>ti.ui.defaultunit</code> can be any of the unit specifiers defined above, or 
<code>system</code> to specify that the platform's default unit should be used.</p>
<p>Note that prior to Release 2.0, iOS ignored any specified unit, so code that specifies
a unit may operate differently on iOS in Release 2.0. If you set the
<code>ti.ui.defaultunit</code> property to anything other than <code>system</code> or <code>dip</code>, your
application should detect and handle Retina displays manually.</p>
<p>Font sizes on iOS are treated differently than other sizes: font sizes are always 
specified in typographical points. </p>
<p>For more details see: </p>
<ul>
<li><a href="#!/guide/UI_Composite_Layout_Behavior_Spec">UI Composite Layout Spec</a></li>
</ul>
<h4>Size and Position</h4>
<p>Titanium views are positioned using the <code>left</code>, <code>right</code>, <code>top,</code> <code>bottom</code> and <code>center</code> 
properties, and sized using the <code>width</code> and <code>height</code> properties. These are
input properties, set by the user to specify layout, and not modified by the 
system to indicate actual calculated positions and sizes. </p>
<p>The {@link Titanium.UI.View#property-height height} and {@link Titanium.UI.View#property-width width} properties 
accept several special values:</p>
<ul>
<li>{@link Titanium.UI#property-FILL} specifies that the view should fill the parent in this
    dimension.</li>
<li>{@link Titanium.UI#property-SIZE} specifies that the view should adjust this size to fit its
    contents, such as a label's text or a view's children.</li>
<li>
<p>'auto' specifies that the view should choose either <code>FILL</code> or <code>SIZE</code> behavior.
    In 2.0, the behavior of the 'auto' value is specified by the UI Composite Layout
    Spec. This value is not recommended for new development and will be deprecated in
    the future.</p>
<p>On Mobile Web and Tizen, 'auto' always selects <code>SIZE</code> behavior.</p>
</li>
</ul>
<p>Sizes and positions can also be specified as a percentage of the parent's size, for 
example, '50%'.</p>
<p>How these properties are interpreted depends on the value of the view's <code>layout</code> 
property. See the description of the {@link Titanium.UI.View#property-layout layout} property 
for details.</p>
<p>The {@link Titanium.UI.View#property-rect rect} property is a read-only dictionary
with the properties <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>. It provides the <em>rendered</em>
size and position of the  view, and is only available once both it and its ancestors have been
fully drawn.</p>
<p>The {@link Titanium.UI.View#property-size size} property is a read-only dictionary
with the properties <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code>. It provides the <em>rendered</em> size
 of the  view, and is only available once both it and its ancestors have been
fully drawn. </p>
<p>To determine whether the <code>size</code> and <code>rect</code> values are available, add an event listener
for the {@link Titanium.UI.View#event-postlayout postlayout} event, which is fired at the end of
a layout cycle.</p>
<h4>Accessibility</h4>
<p>Four accessibility-related view properties became available in Titanium Mobile 3.0.0 for iOS
and Android:</p>
<ul>
<li>{@link Titanium.UI.View#property-accessibilityLabel}</li>
<li>{@link Titanium.UI.View#property-accessibilityValue}</li>
<li>{@link Titanium.UI.View#property-accessibilityHint}</li>
<li>{@link Titanium.UI.View#property-accessibilityHidden}</li>
</ul>
<p>The first three, <code>accessibilityLabel</code>, <code>accessibilityValue</code> and <code>accessibilityHint</code>, are for setting text
that will be relayed to the user by the assistive service (such as TalkBack on Android or VoiceOver
on iOS). On iOS, Titanium will then take these values and set the native properties
of the same name which are defined in the <a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html">UIAccessibilityProtocol</a>.
On Android, Titanium takes the three values and concatenates them in the order <code>accessibilityLabel</code>,
<code>accessibilityValue</code>, and <code>accessibilityHint</code>, and then uses the result to set the native view's
<a href="http://developer.android.com/reference/android/view/View.html#setContentDescription%28java.lang.CharSequence%29"><code>contentDescription</code></a>
property.</p>
<p>You are not required to set all three properties: feel free to set just one or two as needed and
experiment with the results by turning on VoiceOver (iOS) or TalkBack (Android) on your test device.</p>
<p>The fourth property, <code>accessibilityHidden</code>, when set to <code>true</code>, indicates that the view can be ignored
by the assistive service. In iOS this sets the similarly-named
<a href="http://developer.apple.com/library/ios/documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html#//apple_ref/occ/instp/NSObject/accessibilityElementsHidden">accessibilityElementsHidden</a>
native property, which is only available in iOS 5.0 and later. On earlier versions of
iOS, this property is ignored.</p>
<p>In Android <code>accessibilityHidden</code> calls the native <a href="http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility%28int%29">View.setImportantForAccessibility(boolean)</a> method, passing <code>false</code> when
this property is set to <code>true</code> (i.e., "hidden" means it's not important). However, the
native <code>setImportantForAccessibility</code> method is available only on devices running
Android 4.1 (API level 16/Jelly Bean) or later. On earlier versions of Android, this
property is ignored.</p>
<p>No error will occur on older devices if you set <code>accessibilityHidden</code>; the value will simply be ignored. </p>
 * <h3>Examples</h3>
 * <h4>Round View Example</h4>
 * <p><p>Create a rounded view.</p></p><pre>var view = Titanium.UI.createView({
   borderRadius:10,
   backgroundColor:'red',
   width:50,
   height:50
});
window.add(view);</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;View id="view" borderRadius="10" backgroundColor="red" width="50" height="50" /&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.View = {};

















/**
 * @method add
 * <p>Adds a child to this view's hierarchy.</p>
 * @description <p>The child view is added as the last child in this view's hierarchy. </p>
<p>Although all views inherit from {@link Titanium.UI.View}, not all views are capable of
containing other views. In particular:</p>
<ul>
<li>Some views are not designed to be containers at all.</li>
<li>Some views are special-purpose containers that can only contain certain other
     views.</li>
<li>Some views are top-level containers that cannot (or should not) be added to other views.</li>
</ul>
<h4>Non-Container Views</h4>
<p>The following views are not intended to act as containers that can hold other
views:</p>
<ul>
<li>{@link Titanium.UI.ActivityIndicator ActivityIndicator}</li>
<li>{@link Titanium.UI.Button Button}</li>
<li>{@link Titanium.UI.ImageView ImageView}</li>
<li>{@link Titanium.UI.Label Label}</li>
<li>{@link Titanium.UI.ProgressBar ProgressBar}</li>
<li>{@link Titanium.UI.SearchBar SearchBar}</li>
<li>{@link Titanium.UI.Slider Slider}</li>
<li>{@link Titanium.UI.Switch Switch}</li>
<li>{@link Titanium.UI.TableView TableView}</li>
<li>{@link Titanium.UI.TextArea TextArea}</li>
<li>{@link Titanium.UI.TextField TextField}</li>
<li>{@link Titanium.UI.WebView WebView}</li>
</ul>
<p>Adding children to the these views <em>may</em> be supported on some platforms,
but is not guaranteed to work across platforms. Where it is supported, it may not
work as expected.</p>
<p>For maximum portability, these views should be treated as if they do not support children.<br />
Instead of adding children to these views, applications can positon other views as
siblings. For example, instead of adding a button as a child of a <code>WebView</code>, you can add
the button to the web view's parent such that it appears on top of the web view. </p>
<h4>Special-Purpose  Containers</h4>
<p>A few view objects act as special-purpose containers--that is, they only manage
certain types of children, and many of them support a special means of adding
these children, instead of the general <code>add</code> method. These containers include:</p>
<ul>
<li>
<p>{@link Titanium.UI.ButtonBar ButtonBar} and {@link Titanium.UI.iOS.TabbedBar TabbedBar} are designed 
    to hold their own internally-created buttons, assigned by adding strings to the "labels" array.
    Views added using the <code>add</code> method are displayed on top of these buttons.</p>
</li>
<li>
<p>{@link Titanium.UI.Picker Picker}. Can only hold <code>PickerRows</code> and <code>PickerColumns</code>, which
    are added using the <code>add</code> method. Adding other types of views to a <code>Picker</code> is not
    supported.</p>
</li>
<li>
<p>{@link Titanium.UI.TableView TableView} is a specialized container for
    <code>TableViewSection</code> and <code>TableViewRow</code> objects. These objects must be
    added using the properties and methods that <code>TableView</code> provides 
    for adding and removing sectons and rows.</p>
<p>On some platforms, it is possible to add arbitrary child views to a table view 
using the <code>add</code> method. However, this is not guaranteed to work on all platforms, 
and in general, should be avoided.</p>
</li>
<li>
<p>{@link Titanium.UI.TableViewSection TableViewSection} is a specialized container
    for <code>TableViewRow</code> objects, which <em>are</em> added using the <code>add</code> method. The <code>add</code> method
    on <code>TableViewSection</code> can only be used to add <code>TableViewRow</code> objects.</p>
</li>
<li>
<p>{@link Titanium.UI.iOS.Toolbar Toolbar} is designed to hold buttons and certain
    other controls, added to its <code>items</code> array. Views added using the <code>add</code> method are
    displayed on top of the controls in the <code>items</code> array.</p>
</li>
<li>
<p>The <code>Tab</code>, <code>TabGroup</code>, <code>NavigationGroup</code> and <code>SplitWindow</code> objects are 
    special containers that manage windows. These are discussed in the 
    "Top-Level Containers" section.</p>
</li>
</ul>
<h4>Top-Level Containers</h4>
<p>There are certain top-level containers that are not intended to be added 
as the children of other views. These top-level containers include 
{@link Titanium.UI.Window Window}, {@link Titanium.UI.iPad.SplitWindow SplitWindow},
and {@link Titanium.UI.TabGroup TabGroup}.  Other types of views must be added 
to a top-level container in order to be displayed on screen.</p>
<p>The special containers {@link Titanium.UI.iPhone.NavigationGroup NavigationGroup}, 
{@link Titanium.UI.iPad.SplitWindow SplitWindow}, {@link Titanium.UI.Tab Tab}, and 
{@link Titanium.UI.TabGroup TabGroup}
manage windows. These managed windows may be referred to as <em>children</em> of the 
container, but they are not added using the <code>add</code> method.</p>
<p>Note that although a <code>NavigationGroup</code>
manages windows, it is not itself a top-level container.  It must be added to a
<code>Window</code> or <code>Popover</code> in order to be displayed.</p>
<p><code>Tab</code> is another kind of special container: it is not itself a top-level container, 
but can only be used within a <code>TabGroup</code>. You cannot <code>add</code> a <code>Tab</code> to an arbitrary
container.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to add to this view's hierarchy.</p>
 * @return void
*/
Titanium.UI.View.add = function(view){};

/**
 * @method animate
 * <p>Animates this view.</p>
 * @description <p>The {@link Titanium.UI.Animation Animation} object or dictionary passed to this method defines 
the end state for the animation, the duration of the animation, and other properties.</p>
<p>Note that if you use <code>animate</code> to move a view, the view's actual <em>position</em> is changed, but 
its layout properties, such as <code>top</code>, <code>left</code>, <code>center</code> and so on are not changed--these 
reflect the original values set by the user, not the actual position of the view.</p>
<p>The {@link Titanium.UI.View#property-rect rect} property can be used to determine the actual size and 
position of the view. Note that on Mobile Web and Tizen, the <code>rect</code> property is not updated after 
animation. This is a known issue <a href="https://jira.appcelerator.org/browse/TIMOB-8930">TIMOB-8930</a>.</p>
 * @param {Titanium.UI.Animation/Object} animation 
 * <p>Either a dictionary of animation properties or an 
{@link Titanium.UI.Animation Animation} object.</p>
 * @param {Function} callback 
 * <p>Function to be invoked upon completion of the animation.</p>
 * @return void
*/
Titanium.UI.View.animate = function(animation, callback){};

/**
 * @method convertPointToView
 * <p>Translates a point from this view's coordinate system to another view's coordinate system.</p>
 * @description <p>Returns <code>null</code> if either view is not in the view hierarchy. </p>
<p>Keep in mind that views may be removed from the view hierarchy if their window is blurred 
or if the view is offscreen (such as in some situations with {@link Titanium.UI.ScrollableView}).</p>
<p>If this view is a {@link Titanium.UI.ScrollView}, the view's x and y offsets are subtracted from 
the return value.</p>
 * @param {Point} point 
 * <p>A point in this view's coordinate system. </p>
<p>If this argument is missing an <code>x</code> or <code>y</code> property, or the properties can not be 
converted into numbers, an exception will be raised.</p>
 * @param {Titanium.UI.View} destinationView 
 * <p>View that specifies the destination coordinate system to convert to. If this argument 
is not a view, an exception will be raised.</p>
 * @return {Point} 
 * @platform android 1.8
 * @platform iphone 1.8
 * @platform ipad 1.8
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.View.convertPointToView = function(point, destinationView){};

/**
 * @method finishLayout
 * <p>Finishes a batch update of the View's layout properties and schedules a layout pass of the 
view tree.</p>
 * @description <p>Since the layout pass scheduled is asynchronous, the {@link Titanium.UI.View#property-rect rect}
and {@link Titanium.UI.View#property-size size} values may not be available immediately after 
<code>finishLayout</code> is called. </p>
<p>To be notified when the layout pass completes, add a listener for the
{@link Titanium.UI.View#event-postlayout postlayout} event.</p>
<p>On Mobile Web and Tizen, this method has no effect, but is included for parity.</p>
 * @deprecated 3.0.0 <p>Use the {@link Titanium.Proxy#method-applyProperties applyProperties} method to batch-update layout properties.</p>
 * @return void
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.View.finishLayout = function(){};

/**
 * @method getAccessibilityHidden
 * <p>Gets the value of the {@link Titanium.UI.View#property-accessibilityHidden accessibilityHidden} property.</p>
 * @return {Boolean} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.getAccessibilityHidden = function(){};

/**
 * @method getAccessibilityHint
 * <p>Gets the value of the {@link Titanium.UI.View#property-accessibilityHint accessibilityHint} property.</p>
 * @return {String} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.getAccessibilityHint = function(){};

/**
 * @method getAccessibilityLabel
 * <p>Gets the value of the {@link Titanium.UI.View#property-accessibilityLabel accessibilityLabel} property.</p>
 * @return {String} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.getAccessibilityLabel = function(){};

/**
 * @method getAccessibilityValue
 * <p>Gets the value of the {@link Titanium.UI.View#property-accessibilityValue accessibilityValue} property.</p>
 * @return {String} 
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.getAccessibilityValue = function(){};

/**
 * @method getAnchorPoint
 * <p>Gets the value of the {@link Titanium.UI.View#property-anchorPoint anchorPoint} property.</p>
 * @return {Point} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.getAnchorPoint = function(){};

/**
 * @method getAnimatedCenter
 * <p>Gets the value of the {@link Titanium.UI.View#property-animatedCenter animatedCenter} property.</p>
 * @return {Point} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.getAnimatedCenter = function(){};

/**
 * @method getBackgroundColor
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundColor backgroundColor} property.</p>
 * @return {String} 
*/
Titanium.UI.View.getBackgroundColor = function(){};

/**
 * @method getBackgroundDisabledColor
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundDisabledColor backgroundDisabledColor} property.</p>
 * @return {String} 
 * @platform android 0.9
*/
Titanium.UI.View.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundDisabledImage backgroundDisabledImage} property.</p>
 * @return {String} 
 * @platform android 0.9
*/
Titanium.UI.View.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundFocusedColor backgroundFocusedColor} property.</p>
 * @return {String} 
 * @platform android 0.9
*/
Titanium.UI.View.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundFocusedImage backgroundFocusedImage} property.</p>
 * @return {String} 
 * @platform android 0.9
*/
Titanium.UI.View.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundGradient
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundGradient backgroundGradient} property.</p>
 * @return {Gradient} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @platform android 0.9
*/
Titanium.UI.View.getBackgroundGradient = function(){};

/**
 * @method getBackgroundImage
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundImage backgroundImage} property.</p>
 * @return {String} 
*/
Titanium.UI.View.getBackgroundImage = function(){};

/**
 * @method getBackgroundLeftCap
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundLeftCap backgroundLeftCap} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.getBackgroundLeftCap = function(){};

/**
 * @method getBackgroundRepeat
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundRepeat backgroundRepeat} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.getBackgroundRepeat = function(){};

/**
 * @method getBackgroundSelectedColor
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundSelectedColor backgroundSelectedColor} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.View.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundSelectedImage backgroundSelectedImage} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.View.getBackgroundSelectedImage = function(){};

/**
 * @method getBackgroundTopCap
 * <p>Gets the value of the {@link Titanium.UI.View#property-backgroundTopCap backgroundTopCap} property.</p>
 * @return {Number} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.getBackgroundTopCap = function(){};

/**
 * @method getBorderColor
 * <p>Gets the value of the {@link Titanium.UI.View#property-borderColor borderColor} property.</p>
 * @return {String} 
*/
Titanium.UI.View.getBorderColor = function(){};

/**
 * @method getBorderRadius
 * <p>Gets the value of the {@link Titanium.UI.View#property-borderRadius borderRadius} property.</p>
 * @return {Number} 
*/
Titanium.UI.View.getBorderRadius = function(){};

/**
 * @method getBorderWidth
 * <p>Gets the value of the {@link Titanium.UI.View#property-borderWidth borderWidth} property.</p>
 * @return {Number} 
*/
Titanium.UI.View.getBorderWidth = function(){};

/**
 * @method getBottom
 * <p>Gets the value of the {@link Titanium.UI.View#property-bottom bottom} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.View.getBottom = function(){};

/**
 * @method getCenter
 * <p>Gets the value of the {@link Titanium.UI.View#property-center center} property.</p>
 * @return {Point} 
*/
Titanium.UI.View.getCenter = function(){};

/**
 * @method getChildren
 * <p>Gets the value of the {@link Titanium.UI.View#property-children children} property.</p>
 * @return {Titanium.UI.View[]} 
*/
Titanium.UI.View.getChildren = function(){};

/**
 * @method getEnabled
 * <p>Gets the value of the {@link Titanium.UI.View#property-enabled enabled} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
*/
Titanium.UI.View.getEnabled = function(){};

/**
 * @method getFocusable
 * <p>Gets the value of the {@link Titanium.UI.View#property-focusable focusable} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
*/
Titanium.UI.View.getFocusable = function(){};

/**
 * @method getHeight
 * <p>Gets the value of the {@link Titanium.UI.View#property-height height} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.View.getHeight = function(){};

/**
 * @method getHorizontalWrap
 * <p>Gets the value of the {@link Titanium.UI.View#property-horizontalWrap horizontalWrap} property.</p>
 * @return {Boolean} 
 * @platform android 2.1
 * @platform blackberry 3.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.View.getHorizontalWrap = function(){};

/**
 * @method getKeepScreenOn
 * <p>Gets the value of the {@link Titanium.UI.View#property-keepScreenOn keepScreenOn} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
*/
Titanium.UI.View.getKeepScreenOn = function(){};

/**
 * @method getLayout
 * <p>Gets the value of the {@link Titanium.UI.View#property-layout layout} property.</p>
 * @return {String} 
*/
Titanium.UI.View.getLayout = function(){};

/**
 * @method getLeft
 * <p>Gets the value of the {@link Titanium.UI.View#property-left left} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.View.getLeft = function(){};

/**
 * @method getOpacity
 * <p>Gets the value of the {@link Titanium.UI.View#property-opacity opacity} property.</p>
 * @return {Number} 
*/
Titanium.UI.View.getOpacity = function(){};

/**
 * @method getRect
 * <p>Gets the value of the {@link Titanium.UI.View#property-rect rect} property.</p>
 * @return {Dimension} 
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.View.getRect = function(){};

/**
 * @method getRight
 * <p>Gets the value of the {@link Titanium.UI.View#property-right right} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.View.getRight = function(){};

/**
 * @method getSize
 * <p>Gets the value of the {@link Titanium.UI.View#property-size size} property.</p>
 * @return {Dimension} 
*/
Titanium.UI.View.getSize = function(){};

/**
 * @method getSoftKeyboardOnFocus
 * <p>Gets the value of the {@link Titanium.UI.View#property-softKeyboardOnFocus softKeyboardOnFocus} property.</p>
 * @return {Number} 
 * @platform android 0.9
 * @platform tizen 3.1
*/
Titanium.UI.View.getSoftKeyboardOnFocus = function(){};

/**
 * @method getTop
 * <p>Gets the value of the {@link Titanium.UI.View#property-top top} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.View.getTop = function(){};

/**
 * @method getTouchEnabled
 * <p>Gets the value of the {@link Titanium.UI.View#property-touchEnabled touchEnabled} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.View.getTouchEnabled = function(){};

/**
 * @method getTransform
 * <p>Gets the value of the {@link Titanium.UI.View#property-transform transform} property.</p>
 * @return {Titanium.UI.2DMatrix/Titanium.UI.3DMatrix} 
*/
Titanium.UI.View.getTransform = function(){};

/**
 * @method getVisible
 * <p>Gets the value of the {@link Titanium.UI.View#property-visible visible} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.View.getVisible = function(){};

/**
 * @method getWidth
 * <p>Gets the value of the {@link Titanium.UI.View#property-width width} property.</p>
 * @return {Number/String} 
*/
Titanium.UI.View.getWidth = function(){};

/**
 * @method getZIndex
 * <p>Gets the value of the {@link Titanium.UI.View#property-zIndex zIndex} property.</p>
 * @return {Number} 
*/
Titanium.UI.View.getZIndex = function(){};

/**
 * @method hide
 * <p>Hides this view.</p>
 * @return void
*/
Titanium.UI.View.hide = function(){};

/**
 * @method remove
 * <p>Removes a child view from this view's hierarchy.</p>
 * @param {Titanium.UI.View} view 
 * <p>View to remove from this view's hierarchy.</p>
 * @return void
*/
Titanium.UI.View.remove = function(view){};

/**
 * @method removeAllChildren
 * <p>Removes all child views from this view's hierarchy.</p>
 * @return void
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
*/
Titanium.UI.View.removeAllChildren = function(){};

/**
 * @method setAccessibilityHidden
 * <p>Sets the value of the {@link Titanium.UI.View#property-accessibilityHidden accessibilityHidden} property.</p>
 * @param {Boolean} accessibilityHidden 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.setAccessibilityHidden = function(accessibilityHidden){};

/**
 * @method setAccessibilityHint
 * <p>Sets the value of the {@link Titanium.UI.View#property-accessibilityHint accessibilityHint} property.</p>
 * @param {String} accessibilityHint 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.setAccessibilityHint = function(accessibilityHint){};

/**
 * @method setAccessibilityLabel
 * <p>Sets the value of the {@link Titanium.UI.View#property-accessibilityLabel accessibilityLabel} property.</p>
 * @param {String} accessibilityLabel 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.setAccessibilityLabel = function(accessibilityLabel){};

/**
 * @method setAccessibilityValue
 * <p>Sets the value of the {@link Titanium.UI.View#property-accessibilityValue accessibilityValue} property.</p>
 * @param {String} accessibilityValue 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.View.setAccessibilityValue = function(accessibilityValue){};

/**
 * @method setAnchorPoint
 * <p>Sets the value of the {@link Titanium.UI.View#property-anchorPoint anchorPoint} property.</p>
 * @param {Point} anchorPoint 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.setAnchorPoint = function(anchorPoint){};

/**
 * @method setBackgroundColor
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundColor backgroundColor} property.</p>
 * @param {String} backgroundColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setBackgroundColor = function(backgroundColor){};

/**
 * @method setBackgroundDisabledColor
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundDisabledColor backgroundDisabledColor} property.</p>
 * @param {String} backgroundDisabledColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.View.setBackgroundDisabledColor = function(backgroundDisabledColor){};

/**
 * @method setBackgroundDisabledImage
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundDisabledImage backgroundDisabledImage} property.</p>
 * @param {String} backgroundDisabledImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.View.setBackgroundDisabledImage = function(backgroundDisabledImage){};

/**
 * @method setBackgroundFocusedColor
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundFocusedColor backgroundFocusedColor} property.</p>
 * @param {String} backgroundFocusedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.View.setBackgroundFocusedColor = function(backgroundFocusedColor){};

/**
 * @method setBackgroundFocusedImage
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundFocusedImage backgroundFocusedImage} property.</p>
 * @param {String} backgroundFocusedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.View.setBackgroundFocusedImage = function(backgroundFocusedImage){};

/**
 * @method setBackgroundGradient
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundGradient backgroundGradient} property.</p>
 * @param {Gradient} backgroundGradient 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @platform android 0.9
*/
Titanium.UI.View.setBackgroundGradient = function(backgroundGradient){};

/**
 * @method setBackgroundImage
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundImage backgroundImage} property.</p>
 * @param {String} backgroundImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setBackgroundImage = function(backgroundImage){};

/**
 * @method setBackgroundLeftCap
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundLeftCap backgroundLeftCap} property.</p>
 * @param {Number} backgroundLeftCap 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.setBackgroundLeftCap = function(backgroundLeftCap){};

/**
 * @method setBackgroundRepeat
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundRepeat backgroundRepeat} property.</p>
 * @param {Boolean} backgroundRepeat 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.setBackgroundRepeat = function(backgroundRepeat){};

/**
 * @method setBackgroundSelectedColor
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundSelectedColor backgroundSelectedColor} property.</p>
 * @param {String} backgroundSelectedColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.View.setBackgroundSelectedColor = function(backgroundSelectedColor){};

/**
 * @method setBackgroundSelectedImage
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundSelectedImage backgroundSelectedImage} property.</p>
 * @param {String} backgroundSelectedImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.View.setBackgroundSelectedImage = function(backgroundSelectedImage){};

/**
 * @method setBackgroundTopCap
 * <p>Sets the value of the {@link Titanium.UI.View#property-backgroundTopCap backgroundTopCap} property.</p>
 * @param {Number} backgroundTopCap 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.View.setBackgroundTopCap = function(backgroundTopCap){};

/**
 * @method setBorderColor
 * <p>Sets the value of the {@link Titanium.UI.View#property-borderColor borderColor} property.</p>
 * @param {String} borderColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setBorderColor = function(borderColor){};

/**
 * @method setBorderRadius
 * <p>Sets the value of the {@link Titanium.UI.View#property-borderRadius borderRadius} property.</p>
 * @param {Number} borderRadius 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setBorderRadius = function(borderRadius){};

/**
 * @method setBorderWidth
 * <p>Sets the value of the {@link Titanium.UI.View#property-borderWidth borderWidth} property.</p>
 * @param {Number} borderWidth 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setBorderWidth = function(borderWidth){};

/**
 * @method setBottom
 * <p>Sets the value of the {@link Titanium.UI.View#property-bottom bottom} property.</p>
 * @param {Number/String} bottom 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setBottom = function(bottom){};

/**
 * @method setCenter
 * <p>Sets the value of the {@link Titanium.UI.View#property-center center} property.</p>
 * @param {Point} center 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setCenter = function(center){};

/**
 * @method setEnabled
 * <p>Sets the value of the {@link Titanium.UI.View#property-enabled enabled} property.</p>
 * @param {Boolean} enabled 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.View.setEnabled = function(enabled){};

/**
 * @method setFocusable
 * <p>Sets the value of the {@link Titanium.UI.View#property-focusable focusable} property.</p>
 * @param {Boolean} focusable 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.View.setFocusable = function(focusable){};

/**
 * @method setHeight
 * <p>Sets the value of the {@link Titanium.UI.View#property-height height} property.</p>
 * @param {Number/String} height 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setHeight = function(height){};

/**
 * @method setHorizontalWrap
 * <p>Sets the value of the {@link Titanium.UI.View#property-horizontalWrap horizontalWrap} property.</p>
 * @param {Boolean} horizontalWrap 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 2.1
 * @platform blackberry 3.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform mobileweb 2.1
 * @platform tizen 3.1
*/
Titanium.UI.View.setHorizontalWrap = function(horizontalWrap){};

/**
 * @method setKeepScreenOn
 * <p>Sets the value of the {@link Titanium.UI.View#property-keepScreenOn keepScreenOn} property.</p>
 * @param {Boolean} keepScreenOn 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.View.setKeepScreenOn = function(keepScreenOn){};

/**
 * @method setLayout
 * <p>Sets the value of the {@link Titanium.UI.View#property-layout layout} property.</p>
 * @param {String} layout 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setLayout = function(layout){};

/**
 * @method setLeft
 * <p>Sets the value of the {@link Titanium.UI.View#property-left left} property.</p>
 * @param {Number/String} left 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setLeft = function(left){};

/**
 * @method setOpacity
 * <p>Sets the value of the {@link Titanium.UI.View#property-opacity opacity} property.</p>
 * @param {Number} opacity 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setOpacity = function(opacity){};

/**
 * @method setRight
 * <p>Sets the value of the {@link Titanium.UI.View#property-right right} property.</p>
 * @param {Number/String} right 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setRight = function(right){};

/**
 * @method setSoftKeyboardOnFocus
 * <p>Sets the value of the {@link Titanium.UI.View#property-softKeyboardOnFocus softKeyboardOnFocus} property.</p>
 * @param {Number} softKeyboardOnFocus 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform tizen 3.1
*/
Titanium.UI.View.setSoftKeyboardOnFocus = function(softKeyboardOnFocus){};

/**
 * @method setTop
 * <p>Sets the value of the {@link Titanium.UI.View#property-top top} property.</p>
 * @param {Number/String} top 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setTop = function(top){};

/**
 * @method setTouchEnabled
 * <p>Sets the value of the {@link Titanium.UI.View#property-touchEnabled touchEnabled} property.</p>
 * @param {Boolean} touchEnabled 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setTouchEnabled = function(touchEnabled){};

/**
 * @method setTransform
 * <p>Sets the value of the {@link Titanium.UI.View#property-transform transform} property.</p>
 * @param {Titanium.UI.2DMatrix/Titanium.UI.3DMatrix} transform 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setTransform = function(transform){};

/**
 * @method setVisible
 * <p>Sets the value of the {@link Titanium.UI.View#property-visible visible} property.</p>
 * @param {Boolean} visible 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setVisible = function(visible){};

/**
 * @method setWidth
 * <p>Sets the value of the {@link Titanium.UI.View#property-width width} property.</p>
 * @param {Number/String} width 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setWidth = function(width){};

/**
 * @method setZIndex
 * <p>Sets the value of the {@link Titanium.UI.View#property-zIndex zIndex} property.</p>
 * @param {Number} zIndex 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.View.setZIndex = function(zIndex){};

/**
 * @method show
 * <p>Makes this view visible.</p>
 * @return void
*/
Titanium.UI.View.show = function(){};

/**
 * @method startLayout
 * <p>Starts a batch update of this view's layout properties.</p>
 * @description <p>To prevent a layout pass each time a property is modified, call <code>startLayout</code> before 
changing any properties that may change this view's layout. This initiates a batch update 
mode where layout changes are deferred.</p>
<p>Call {@link Titanium.UI.View#method-finishLayout finishLayout} to end batch update mode and trigger a 
layout pass. For example:</p>
<pre><code>view.startLayout();
view.top = 50;
view.left = 50;
view.finishLayout();
</code></pre>
<p>Note that <em>any</em> property changes made during the batch update <em>may</em> be deferred until
<code>finishLayout</code> is called. This may vary somewhat by platform. For example, changing the
text of a label may trigger a layout pass. In iOS, updating the label text is
deferred, while on Mobile Web and Tizen, the label text is updated immediately but the control is 
not resized until <code>finishLayout</code> is called.</p>
<p>See also: {@link Titanium.UI.View#method-updateLayout updateLayout}, 
{@link Titanium.UI.View#method-finishLayout finishLayout}, 
{@link Titanium.UI.View#event-postlayout postlayout} event.</p>
<p>On Mobile Web and Tizen, this method is included for parity only, and thus has no effect.</p>
 * @deprecated 3.0.0 <p>Use the {@link Titanium.Proxy#method-applyProperties applyProperties} method to batch-update layout properties.</p>
 * @return void
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.View.startLayout = function(){};

/**
 * @method toImage
 * <p>Returns an image of the rendered view, as a Blob.</p>
 * @description <p>The <code>honorScaleFactor</code> method is only supported on iOS.</p>
 * @param {Function} callback (optional)
 * <p>Function to be invoked upon completion. If non-null, this method will be performed 
asynchronously. If null, it will be performed immediately.
On Tizen, this function is asynchronous only. The callback is mandatory and function always returns "undefined".</p>
 * @param {Boolean} [honorScaleFactor=False] (optional)
 * <p>Determines whether the image is scaled based on scale factor of main screen. (iOS only) </p>
<p>When set to true, image is scale factor is honored. When set to false, the image in the 
blob has the same dimensions for retina and non-retina devices.</p>
 * @return {Titanium.Blob} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform tizen 3.1
*/
Titanium.UI.View.toImage = function(callback, arg){};

/**
 * @method updateLayout
 * <p>Performs a batch update of all supplied layout properties and schedules a layout pass after 
they have been updated.</p>
 * @description <p>This is another way to perform a batch update.  The <code>updateLayout</code> method is called with a 
dictionary of layout properties to perform the batch update. For example:</p>
<pre><code>view.updateLayout({top:50, left:50});
</code></pre>
<p>This is equivalent to the following:</p>
<pre><code>view.startLayout();
view.top = 50;
view.left = 50;
view.finishLayout();
</code></pre>
<p>See also: {@link Titanium.UI.View#method-startLayout startLayout}, 
{@link Titanium.UI.View#method-finishLayout finishLayout}, 
{@link Titanium.UI.View#event-postlayout postlayout} event.</p>
<p>On Mobile Web and Tizen, this method is included for parity only, and thus has no effect.</p>
 * @deprecated 3.0.0 <p>Use the {@link Titanium.Proxy#method-applyProperties applyProperties} method to batch-update layout properties.</p>
 * @param {Dictionary} params 
 * <p>Layout properties to be updated.</p>
 * @return void
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.View.updateLayout = function(params){};

/**
 * @property [accessibilityHidden=false]
 * @type Boolean
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Whether the view should be "hidden" from (i.e., ignored by) the accessibility service.</p>
 * @description <p>On iOS this is a direct analog of the <code>accessibilityElementsHidden</code> property defined in the
<a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html">UIAccessibility
Protocol</a>.
The native property is only available in iOS 5.0 and later; if
<code>accessibilityHidden</code> is specified on earlier versions of iOS, it is ignored.</p>
<p>On Android, setting <code>accessibilityHidden</code> calls the native
<a href="http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility%28int%29">View.setImportantForAccessibility</a>
method. The native method is only available in Android 4.1 (API level 16/Jelly Bean) and
later; if this property is specified on earlier versions of Android, it is ignored.</p>
 */
Titanium.UI.View.accessibilityHidden = null;

/**
 * @property accessibilityHint
 * @type String
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Briefly describes what performing an action (such as a click) on the view will do.</p>
 * @description <p>On iOS this is a direct analog of the <code>accessibilityHint</code> property defined in the
<a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html">UIAccessibility Protocol</a>. On Android, it is concatenated together with
{@link Titanium.UI.View#property-accessibilityLabel} and {@link Titanium.UI.View#property-accessibilityValue} in the order: <code>accessibilityLabel</code>,
<code>accessibilityValue</code>, <code>accessibilityHint</code>. The concatenated value is then passed as the
argument to the native <a href="http://developer.android.com/reference/android/view/View.html#setContentDescription%28java.lang.CharSequence%29">View.setContentDescription</a> method.</p>
 */
Titanium.UI.View.accessibilityHint = null;

/**
 * @property [accessibilityLabel=Title or label of the control.]
 * @type String
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>A succint label identifying the view for the device's accessibility service.</p>
 * @description <p>On iOS this is a direct analog of the <code>accessibilityLabel</code> property defined in the
<a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html">UIAccessibility Protocol</a>. On Android, it is concatenated together with
{@link Titanium.UI.View#property-accessibilityValue} and {@link Titanium.UI.View#property-accessibilityHint} in the order: <code>accessibilityLabel</code>,
<code>accessibilityValue</code>, <code>accessibilityHint</code>. The concatenated value is then passed as the
argument to the native <a href="http://developer.android.com/reference/android/view/View.html#setContentDescription%28java.lang.CharSequence%29">View.setContentDescription</a> method.</p>
 */
Titanium.UI.View.accessibilityLabel = null;

/**
 * @property [accessibilityValue=State or value of the control.]
 * @type String
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>A string describing the value (if any) of the view for the device's accessibility service.</p>
 * @description <p>On iOS this is a direct analog of the <code>accessibilityValue</code> property defined in the
<a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIAccessibility_Protocol/Introduction/Introduction.html">UIAccessibility Protocol</a>. On Android, it is concatenated together with
{@link Titanium.UI.View#property-accessibilityLabel} and {@link Titanium.UI.View#property-accessibilityHint} in the order: <code>accessibilityLabel</code>,
<code>accessibilityValue</code>, <code>accessibilityHint</code>. The concatenated value is then passed as the
argument to the native <a href="http://developer.android.com/reference/android/view/View.html#setContentDescription%28java.lang.CharSequence%29">View.setContentDescription</a> method.</p>
 */
Titanium.UI.View.accessibilityValue = null;

/**
 * @property [anchorPoint=Center of this view.]
 * @type Point
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Coordinate of the view about which to pivot an animation.</p>
 * @description <p>Used on iOS only. For Android, use {@link Titanium.UI.Animation#property-anchorPoint}. </p>
<p>Anchor point is specified as a fraction of the view's size.  For example, <code>{0, 0}</code> is at 
the view's top-left corner, <code>{0.5, 0.5}</code> at its center and <code>{1, 1}</code> at its bottom-right 
corner. </p>
<p>See the "Using an anchorPoint" example in {@link Titanium.UI.Animation} for a demonstration.</p>
 */
Titanium.UI.View.anchorPoint = null;

/**
 * @property animatedCenter
 * @type Point
 * @readonly
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Current position of the view during an animation.</p>
 */
Titanium.UI.View.animatedCenter = null;

/**
 * @property [backgroundColor=Transparent]
 * @type String
 * <p>Background color of the view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.View.backgroundColor = null;

/**
 * @property [backgroundDisabledColor=Same as the normal background color of this view.]
 * @type String
 * @platform android 0.9
 * <p>Disabled background color of the view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.View.backgroundDisabledColor = null;

/**
 * @property [backgroundDisabledImage=If <code>backgroundDisabledImage</code> is undefined, and the normal background image
<code>backgroundImage</code> is set, the normal image is used when this view is disabled.]
 * @type String
 * @platform android 0.9
 * <p>Disabled background image for the view, specified as a local file path or URL.</p>
 */
Titanium.UI.View.backgroundDisabledImage = null;

/**
 * @property [backgroundFocusedColor=Same as the normal background color of this view.]
 * @type String
 * @platform android 0.9
 * <p>Focused background color of the view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p>For normal views, the focused color is only used if <code>focusable</code> is <code>true</code>.</p>
 */
Titanium.UI.View.backgroundFocusedColor = null;

/**
 * @property [backgroundFocusedImage=If <code>backgroundFocusedImage</code> is undefined, and the normal background image
<code>backgroundImage</code> is set, the normal image is used when this view is focused.]
 * @type String
 * @platform android 0.9
 * <p>Focused background image for the view, specified as a local file path or URL.</p>
 * @description <p>For normal views, the focused background is only used if <code>focusable</code> is <code>true</code>.</p>
 */
Titanium.UI.View.backgroundFocusedImage = null;

/**
 * @property [backgroundGradient=No gradient]
 * @type Gradient
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @platform android 0.9
 * <p>A background gradient for the view.</p>
 * @description <p>A gradient can be defined as either linear or radial. A linear gradient varies continuously 
along a line between the <code>startPoint</code> and <code>endPoint</code>.</p>
<p>A radial gradient is interpolated between two circles, defined by <code>startPoint</code> and 
<code>startRadius</code> and <code>endPoint</code> and <code>endRadius</code> respectively.</p>
<p>The start and end points and radius values can be defined in device units, in the view's 
coordinates, or as percentages of the view's size. Thus, if a view is 60 x 60, the center 
point of the view can be specified as:</p>
<pre><code>{ x: 30, y: 30 }
</code></pre>
<p>Or:
    { x: '50%', y: '50%' }</p>
<p>When specifying multiple colors, you can specify an <em>offset</em> value for each color, defining 
how far into the gradient it takes effect. For example, the following color array specifies 
a gradient that goes from red to blue back to red: </p>
<pre><code>colors: [ { color: 'red', offset: 0.0}, { color: 'blue', offset: 0.25 }, { color: 'red', offset: 1.0 } ]
</code></pre>
<p>Mobile Web and Tizen have two limitations: backfillStart and backfillEnd are ignored and the system 
behaves as if they are true, and endPoint is not supported for radial gradients. </p>
<p>Android currently only supports linear gradients. It also ignores backfillStart and backfillEnd
treating them as if they are true.</p>
 * <h3>Example</h3>
 * <h4>Linear and Radial Gradients</h4>
 * <p><p>The following code excerpt creates two views, one with a linear gradient and one with
a radial gradient.</p></p><pre>var win1 = Titanium.UI.createWindow({
    title:'Tab 1',
    backgroundColor:'#fff',
    layout: 'vertical'
});

var radialGradient = Ti.UI.createView({
    top: 10,
    width: 100,
    height: 100,
    backgroundGradient: {
        type: 'radial',
        startPoint: { x: 50, y: 50 },
        endPoint: { x: 50, y: 50 },
        colors: [ 'red', 'blue'],
        startRadius: '90%',
        endRadius: 0,
        backfillStart: true
    }
});
var linearGradient = Ti.UI.createView({
    top: 10,
    width: 100,
    height: 100,
    backgroundGradient: {
        type: 'linear',
        startPoint: { x: '0%', y: '50%' },
        endPoint: { x: '100%', y: '50%' },
        colors: [ { color: 'red', offset: 0.0}, { color: 'blue', offset: 0.25 }, { color: 'red', offset: 1.0 } ],
    }
});
win1.add(radialGradient);
win1.add(linearGradient);
win1.open();</pre>
 */
Titanium.UI.View.backgroundGradient = null;

/**
 * @property [backgroundImage=Default behavior when <code>backgroundImage</code> is unspecified depends on the type of view and
the platform. For generic views, no image is used. For most controls (buttons, text
fields, and so on), platform-specific default images are used.]
 * @type String
 * <p>Background image for the view, specified as a local file path or URL.</p>
 */
Titanium.UI.View.backgroundImage = null;

/**
 * @property [backgroundLeftCap=0]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Size of the left end cap.</p>
 * @description <p>End caps specify the portion of an image that should not be resized when an image is 
stretched. This technique is used to implement buttons and other resizable image-based 
interface elements. When a button with end caps is resized, the resizing occurs only in 
the middle of the button, in the region between the end caps. The end caps themselves keep 
their original size and appearance. This property specifies the size of the left end cap. 
The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is 
therefore computed by adding the size of the left end cap and the middle portion together 
and then subtracting that value from the width of the image.
If this property is set to <code>0</code>, the image is scaled uniformly.</p>
 */
Titanium.UI.View.backgroundLeftCap = null;

/**
 * @property [backgroundRepeat=false]
 * @type Boolean
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Determines whether to tile a background across a view.</p>
 * @description <p>Setting this to <code>true</code> makes the set <code>backgroundImage</code> repeat across the view as a series 
of tiles. The tiling begins in the upper-left corner, where the upper-left corner of the 
background image is rendered. The image is then tiled to fill the available space of the 
view.</p>
<p>Note that setting this to <code>true</code> may incur performance penalties for large views or 
background images, as the tiling must be redone whenever a view is resized.</p>
<p>On iOS, the following views do not currently support tiled backgrounds:</p>
<ul>
<li>{@link Titanium.UI.Button}</li>
<li>{@link Titanium.UI.TextField}</li>
<li>{@link Titanium.UI.Label}</li>
</ul>
 */
Titanium.UI.View.backgroundRepeat = null;

/**
 * @property [backgroundSelectedColor=Background color of this view.]
 * @type String
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Selected background color of the view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
<p><code>focusable</code> must be true for normal views.</p>
 */
Titanium.UI.View.backgroundSelectedColor = null;

/**
 * @property [backgroundSelectedImage=If <code>backgroundSelectedImage</code> is undefined, and the normal background image
<code>backgroundImage</code> is set, the normal image is used when this view is selected.]
 * @type String
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Selected background image url for the view, specified as a local file path or URL.</p>
 * @description <p>For normal views, the selected background is only used if <code>focusable</code> is <code>true</code>.</p>
 */
Titanium.UI.View.backgroundSelectedImage = null;

/**
 * @property [backgroundTopCap=0]
 * @type Number
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Size of the top end cap.</p>
 * @description <p>End caps specify the portion of an image that should not be resized when an image 
is stretched. This technique is used to implement buttons and other resizable 
image-based interface elements. When a button with end caps is resized, the resizing 
occurs only in the middle of the button, in the region between the end caps. The end 
caps themselves keep their original size and appearance. This property specifies the 
size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. 
The bottom end cap is therefore computed by adding the size of the top end cap and the
middle portion together and then subtracting that value from the height of the image.
If this property is set to <code>0</code>, the image is scaled uniformly.</p>
 */
Titanium.UI.View.backgroundTopCap = null;

/**
 * @property [borderColor=Same as the normal background color of this view (Android, Mobile Web, Tizen), black (iOS).]
 * @type String
 * <p>Border color of the view, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.View.borderColor = null;

/**
 * @property [borderRadius=0]
 * @type Number
 * <p>Radius for the rounded corners of the view's border.</p>
 * @description <p>Each corner is rounded using an arc of a circle.</p>
 */
Titanium.UI.View.borderRadius = null;

/**
 * @property [borderWidth=0]
 * @type Number
 * <p>Border width of the view.</p>
 */
Titanium.UI.View.borderWidth = null;

/**
 * @property [bottom=undefined]
 * @type Number/String
 * <p>View's bottom position, in platform-specific units.</p>
 * @description <p>This position is relative to the view's parent. Exact interpretation depends on the parent 
view's {@link Titanium.UI.View#property-layout layout} property. Can be either a float value or a 
dimension string (for example, '50%' or '10px'). </p>
<p>This is an input property for specifying where the view should be positioned, and does not
represent the view's calculated position.</p>
 */
Titanium.UI.View.bottom = null;

/**
 * @property [center=undefined]
 * @type Point
 * <p>View's center position, in the parent view's coordinates.</p>
 * @description <p>This is an input property for specifying where the view should be positioned, and does not
represent the view's calculated position.</p>
 */
Titanium.UI.View.center = null;

/**
 * @property children
 * @type Titanium.UI.View[]
 * @readonly
 * <p>Array of this view's child views.</p>
 */
Titanium.UI.View.children = null;

/**
 * @property [enabled=Enabled by default. (Property value may be undefined.)]
 * @type Boolean
 * @platform android 0.9
 * <p>Determines if the view is enabled or disabled.</p>
 * @description <p>Set to <code>true</code> to enable or <code>false</code> to disable the view.</p>
 */
Titanium.UI.View.enabled = null;

/**
 * @property [focusable=false]
 * @type Boolean
 * @platform android 0.9
 * <p>Whether view should be focusable while navigating with the trackball.</p>
 */
Titanium.UI.View.focusable = null;

/**
 * @property height
 * @type Number/String
 * <p>View height, in platform-specific units.</p>
 * @description <p>Defaults to: If undefined, defaults to either {@link Titanium.UI#property-FILL} or {@link Titanium.UI#property-SIZE}
depending on the view. See "View Types and Default Layout Behavior" in
<a href="#!/guide/Transitioning_to_the_New_UI_Layout_System">Transitioning to the New UI Layout System</a>.</p>
<p>Can be either a float value or a dimension string (for example, '50%' or '40dp'). 
Can also be one of the following special values:</p>
<ul>
<li>{@link Titanium.UI#property-SIZE}. The view should size itself to fit its contents.</li>
<li>{@link Titanium.UI#property-FILL}. The view should size itself to fill its parent. </li>
<li>
<p>'auto'.  Represents the default sizing behavior for a given type of
     view. The use of 'auto' is deprecated, and should be replaced with the <code>SIZE</code> or
     <code>FILL</code> constants if it is necessary to set the view's behavior explicitly.</p>
<p>On Mobile Web and Tizen, 'auto' always selects <code>SIZE</code> behavior.</p>
</li>
</ul>
<p>This is an input property for specifying the view's height dimension. To determine the 
view's size once rendered, use the {@link Titanium.UI.View#property-rect rect} or 
{@link Titanium.UI.View#property-size size} properties.</p>
 */
Titanium.UI.View.height = null;

/**
 * @property [horizontalWrap=true]
 * @type Boolean
 * @platform android 2.1
 * @platform blackberry 3.1
 * @platform iphone 2.1
 * @platform ipad 2.1
 * @platform mobileweb 2.1
 * @platform tizen 3.1
 * <p>Determines whether the layout has wrapping behavior.</p>
 * @description <p>For more information, see the discussion of horizontal layout mode in the description of 
the {@link Titanium.UI.View#property-layout layout} property.</p>
 */
Titanium.UI.View.horizontalWrap = null;

/**
 * @property [keepScreenOn=false]
 * @type Boolean
 * @platform android 0.9
 * <p>Determines whether to keep the device screen on.</p>
 * @description <p>When <code>true</code> the screen will not power down. Note: enabling this feature will use more 
power, thereby adversely affecting run time when on battery.</p>
 */
Titanium.UI.View.keepScreenOn = null;

/**
 * @property [layout=Composite layout]
 * @type String
 * <p>Specifies how the view positions its children. 
One of: 'composite', 'vertical', or 'horizontal'.</p>
 * @description <p>There are three layout options:</p>
<ul>
<li>
<p><code>composite</code> (or <code>absolute</code>). Default layout. A child view is positioned based on its 
    positioning properties or "pins"  (<code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> and <code>center</code>). 
    If no positioning  properties are specified, the child is centered. </p>
<p>The child is always sized based on its <code>width</code> and <code>height</code> properties, if these are
specified.  If the child's height or width is <em>not</em> specified explicitly, it may be 
calculated implicitly from the positioning properties. For example, if both <code>left</code> and
<code>center.x</code> are specified, they can be used to calculate the width of the child control. </p>
<p>Because the size and position properties can conflict, there is a specific precedence
order for the layout properties.  For vertical positioning, the precedence
order is: <code>height</code>, <code>top</code>, <code>center.y</code>, <code>bottom</code>.</p>
<p>The following table summarizes the various combinations of properties that can
be used for vertical positioning, in order from highest precedence to lowest.
(For example, if <code>height</code>, <code>center.y</code> and <code>bottom</code> are all specified, the
<code>height</code> and <code>center.y</code> values take precedence.)</p>
<p><table cellpadding="6px" border="1" rules="all">
<tr>
<th>Scenario</th><th>Behavior</th>
</tr>
<tr>
<td><code>height</code> &amp; <code>top</code> specified</td><td>Child positioned <code>top</code> unit from
parent's top, using specified <code>height</code>; 
any <code>center.y</code> and <code>bottom</code> values are ignored.</td>
</tr>
<tr>
<td><code>height</code> &amp; <code>center.y</code> specified</td><td>Child positioned with center at
<code>center.y</code>, using specified <code>height</code>; any <code>bottom</code> value is ignored.</td>
</tr>
<tr>
<td><code>height</code> &amp; <code>bottom</code> specified</td><td>Child positioned <code>bottom</code> units from
parent's bottom, using specified <code>height</code>.</td>
</tr>
<tr>
<td><code>top</code> &amp; <code>center.y</code> specified</td><td>Child positioned with top edge <code>top</code> units from
parent's top and center at <code>center.y</code>. Height is determined implicitly; 
any <code>bottom</code> value is ignored.</td>
</tr>
<tr>
<td><code>top</code> &amp; <code>bottom</code> specified</td><td>Child positioned with top edge <code>top</code> units from
parent's top and bottom edge <code>bottom</code> units from parent's bottom. Height is determined 
implicitly. </td>
</tr>
<tr>
<td>Only <code>top</code> specified</td><td>Child positioned <code>top</code> units from parent's
top, and uses the default height calculation for the view type.</td>
</tr>
<tr>
<td><code>center.y</code> and <code>bottom</code> specified</td><td>Child positioned with center at 
<code>center.y</code> and bottom edge <code>bottom</code> units from parent's bottom. Height is determined 
implicitly.</td>
</tr>
<tr>
<td>Only <code>center.y</code> specified</td><td>Child positioned with center at
<code>center.y</code>, and uses the default height calculation for the view type.</td>
</tr>
<tr>
<td>Only <code>bottom</code> specified</td><td>Child positioned with bottom edge <code>bottom</code>
units from parent's bottom, and uses the default height calculation for the view type.</td>
</tr>
<tr>
<td><code>height</code>, <code>top</code>, <code>center.y</code>, and <code>bottom</code> unspecified</td><td>Child
centered vertically in the parent and uses the default height calculation 
for the child view type.</td>
</tr>
</table></p>
<p>Horizontal positioning works like vertical positioning, except that the
precedence is <code>width</code>, <code>left</code>, <code>center.x</code>, <code>right</code>. </p>
<p>For complete details on composite layout rules, see
<a href="#!/guide/Transitioning_to_the_New_UI_Layout_System">Transitioning to the New UI Layout System</a>
in the Titanium Mobile Guides. </p>
</li>
<li>
<p><code>vertical</code>. Children are laid out vertically from top to bottom. The first child 
    is laid out <code>top</code> units from its parent's bounding box. Each subsequent child is 
    laid out below the previous child. The space between children is equal to the 
    upper child's <code>bottom</code> value plus the lower child's <code>top</code> value. </p>
<p>Each child is positioned horizontally as in the composite layout mode. </p>
</li>
<li>
<p><code>horizontal</code>. Horizontal layouts have different behavior depending on whether wrapping 
    is enabled. Wrapping is enabled by default (the <code>horizontalWrap</code> property is <code>true</code>).</p>
<p>With wrapping behavior, the children are laid out horizontally from left to right,
<em>in rows</em>. If a child requires more horizontal space than exists in the current row,
it is wrapped to a new row. The height of each row is equal to the maximum height of
the children in that row.</p>
<p>Wrapping behavior is available on iOS, Android, Tizen and Mobile Web (Release 2.1.0 and later).
When the <code>horizontalWrap</code> property is set to true, the first row is placed at the top of the 
parent view, and successive rows are placed below the first row. Each child is 
positioned vertically <em>within its row</em> somewhat like composite layout mode. 
In particular: </p>
<ul>
<li>If neither <code>top</code> or <code>bottom</code> is specified, the child is centered in the
    row.</li>
<li>If either <code>top</code> or <code>bottom</code> is specified, the child is aligned to either
    the top or bottom of the row, with the specified amount of padding.</li>
<li>If <em>both</em> <code>top</code> and <code>bottom</code> is specified for a given child, the properties
    are both treated as padding.</li>
</ul>
<p>If the <code>horizontalWrap</code> property is false, the behavior is more equivalent to a vertical layout. 
Children are laid or horizontally from left to right in a single row. The <code>left</code> and 
<code>right</code> properties are used as padding between the children, and the <code>top</code> and <code>bottom</code> 
properties are used to position the children vertically.</p>
<p>On Mobile Web <em>prior to</em> Release 2.1.0, the horizontal layout does not wrap by default, 
and does not support the <code>horizontalWrap</code> property. On Android and iOS <em>prior to</em> Release 
2.1.0, the horizontal layout always wraps and the <code>horizontalWrap</code> property is not supported.</p>
</li>
</ul>
 */
Titanium.UI.View.layout = null;

/**
 * @property [left=undefined]
 * @type Number/String
 * <p>View's left position, in platform-specific units.</p>
 * @description <p>This position is relative to the view's parent. Exact interpretation depends on the 
parent view's {@link Titanium.UI.View#property-layout layout} property. Can be either a float value or 
a dimension string (for example, '50%' or '10px').</p>
<p>This is an input property for specifying where the view should be positioned, and does not
represent the view's calculated position.</p>
 */
Titanium.UI.View.left = null;

/**
 * @property [opacity=1.0 (opaque)]
 * @type Number
 * <p>Opacity of this view, from 0.0 (transparent) to 1.0 (opaque).</p>
 */
Titanium.UI.View.opacity = null;

/**
 * @property rect
 * @type Dimension
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>The bounding box of the view relative to its parent, in system units.</p>
 * @description <p>The view's bounding box is defined by its size and position. </p>
<p>The view's size is <code>rect.width</code> x <code>rect.height</code>. The view's top-left position relative to 
its parent is (<code>rect.x</code> , <code>rect.y</code>). </p>
<p>The correct values will only be available when layout is complete.
To determine when layout is complete, add a listener for the 
{@link Titanium.UI.View#event-postlayout postlayout} event.</p>
 */
Titanium.UI.View.rect = null;

/**
 * @property [right=undefined]
 * @type Number/String
 * <p>View's right position, in platform-specific units.</p>
 * @description <p>This position is relative to the view's parent. Exact interpretation depends on the 
parent view's {@link Titanium.UI.View#property-layout layout} property. Can be either a float value or 
a dimension string (for example, '50%' or '10px').</p>
<p>This is an input property for specifying where the view should be positioned, and does not
represent the view's calculated position.</p>
 */
Titanium.UI.View.right = null;

/**
 * @property size
 * @type Dimension
 * @readonly
 * <p>The size of the view in system units. </p>
 * @description <p>Although property returns a {@link Dimension} dictionary, only the <code>width</code> and <code>height</code> 
properties are valid. The position properties--<code>x</code> and <code>y</code>--are always 0.</p>
<p>To find the position <em>and</em> size of the view, use the {@link Titanium.UI.View#property-rect rect} 
property instead.</p>
<p>The correct values will only be available when layout is complete. 
To determine when layout is complete, add a listener for the 
{@link Titanium.UI.View#event-postlayout postlayout} event.</p>
 */
Titanium.UI.View.size = null;

/**
 * @property [softKeyboardOnFocus={@link Titanium.UI.Android#property-SOFT_KEYBOARD_DEFAULT_ON_FOCUS}]
 * @type Number
 * @platform android 0.9
 * @platform tizen 3.1
 * <p>Determines keyboard behavior when this view is focused.</p>
 * @description <p>One of {@link Titanium.UI.Android#property-SOFT_KEYBOARD_DEFAULT_ON_FOCUS}, 
{@link Titanium.UI.Android#property-SOFT_KEYBOARD_HIDE_ON_FOCUS}, or 
{@link Titanium.UI.Android#property-SOFT_KEYBOARD_SHOW_ON_FOCUS}.</p>
 */
Titanium.UI.View.softKeyboardOnFocus = null;

/**
 * @property top
 * @type Number/String
 * <p>The view's top position.</p>
 * @description <p>This position is relative to the view's parent. Exact interpretation depends on the 
parent view's {@link Titanium.UI.View#property-layout layout} property. Can be either a float value or 
a dimension string (for example, '50%' or '10px'). </p>
<p>This is an input property for specifying where the view should be positioned, and does not
represent the view's calculated position.</p>
 */
Titanium.UI.View.top = null;

/**
 * @property [touchEnabled=true]
 * @type Boolean
 * <p>Determines whether view should receive touch events.</p>
 * @description <p>If false, will forward the events to peers.</p>
 */
Titanium.UI.View.touchEnabled = null;

/**
 * @property [transform=Identity matrix]
 * @type Titanium.UI.2DMatrix/Titanium.UI.3DMatrix
 * <p>Transformation matrix to apply to the view.</p>
 * @description <p>Android, Tizen and Mobile Web only support 2DMatrix transforms.</p>
 */
Titanium.UI.View.transform = null;

/**
 * @property [visible=true]
 * @type Boolean
 * <p>Determines whether the view is visible.</p>
 */
Titanium.UI.View.visible = null;

/**
 * @property width
 * @type Number/String
 * <p>View's width, in platform-specific units.</p>
 * @description <p>Defaults to: If undefined, defaults to either {@link Titanium.UI#property-FILL} or {@link Titanium.UI#property-SIZE}
depending on the view. See "View Types and Default Layout Behavior" in
<a href="#!/guide/Transitioning_to_the_New_UI_Layout_System">Transitioning to the New UI Layout System</a>.</p>
<p>Can be either a float value or a dimension string (for example, '50%' or '40dp').
Can also be one of the following special values: </p>
<ul>
<li>{@link Titanium.UI#property-SIZE}. The view should size itself to fit its contents.</li>
<li>{@link Titanium.UI#property-FILL}. The view should size itself to fill its parent. </li>
<li>'auto'.  Represents the default sizing behavior for a given type of
     view. The use of 'auto' is deprecated, and should be replaced with the <code>SIZE</code> or
     <code>FILL</code> constants if it is necessary to set the view's behavior explicitly.</li>
</ul>
<p>On Mobile Web and Tizen, 'auto' always selects <code>SIZE</code> behavior.</p>
<p>This is an input property for specifying the view's width dimension. To determine 
the view's size once rendered, use the {@link Titanium.UI.View#property-rect rect} or
{@link Titanium.UI.View#property-size size} properties.</p>
 */
Titanium.UI.View.width = null;

/**
 * @property [zIndex=undefined]
 * @type Number
 * <p>Z-index stack order position, relative to other sibling views.</p>
 * @description <p>A view does not have a default z-index value, meaning that it is undefined by default. 
When this property is explicitly set, regardless of its value, it causes the view to be 
positioned in front of any sibling that has an undefined z-index.</p>
 */
Titanium.UI.View.zIndex = null;

/**
 * @class Titanium.UI.WebView
 * @typestr Object of Titanium.UI
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>The web view allows you to open an HTML5 based view which can load either local or remote content. </p>
 * @description <p>The web view content can be any valid web content such as HTML, PDF, SVG or other WebKit supported 
content types. </p>
<p>JavaScript in the web view executes in its own context. When running local web content
(that is, content that is included in the application's resources), scripts have
access to the Titanium namespace. In particular, when running local web content:</p>
<ul>
<li>
<p>You can use {@link Titanium.App#method-addEventListener} and
  {@link Titanium.App#method-fireEvent} to receive and send application-level events.</p>
</li>
<li>
<p>Events can be logged using the {@link Titanium.API} logging methods. </p>
</li>
</ul>
<p>Scripts downloaded from remote web servers cannot access the Titanium namespace,
however, you can use the web view {@link Titanium.UI.WebView#method-evalJS evalJS} method 
to execute a JavaScript expression inside the web view, and retrieve the value 
of an expression.</p>
<p>Use the {@link Titanium.UI#method-createWebView} method to create a web view.</p>
<p>Web views are more expensive to create than other native views because of the requirement to
load the HTML browser into memory.</p>
<h4>iOS Platform Implementation Notes</h4>
<p>On the iOS platform, the native web view handles scrolling and other related touch
events internally. If you add event listeners on the web view <strong>or its parent views</strong>
for any of the standard touch events (<code>touchstart</code>, <code>click</code>, and so on), these events
do not reach the native web view, and the user will not be able to scroll, zoom, click
on links, and so on. To prevent this default behavior, set
{@link Titanium.UI.WebView#property-willHandleTouches willHandleTouches} to <code>false</code>.</p>
<p>In other words, you can have either Titanium-style events against the 
web view instance, or internal JavaScript events in the DOM, but not both.</p>
<h4>Android Platform Implementation Notes</h4>
<p>The Android web view supports native plugins such as Flash Player. To use plugin
content, you must set the {@link Titanium.UI.WebView#property-pluginState pluginState} property to
either {@link Titanium.UI.Android#property-WEBVIEW_PLUGINS_ON WEBVIEW_PLUGINS_ON} or 
{@link Titanium.UI.Android#property-WEBVIEW_PLUGINS_ON_DEMAND WEBVIEW_PLUGINS_ON_DEMAND}.</p>
<p>You must also call {@link Titanium.UI.WebView#method-pause pause} when the current activity is
paused, to prevent plugin content from continuing to run in the background. Call
{@link Titanium.UI.WebView#method-resume resume} when the current activity is resumed. You can
do this by adding listeners for the {@link Titanium.Android.Activity#event-pause Activity.pause}
and {@link Titanium.Android.Activity#event-resume Activity.resume} events.</p>
<h4>For More Information</h4>
<p>See <a href="#!/guide/Integrating_Web_Content">Integrating Web
Content</a>
in the Titanium Mobile Guides for more information on using web views, including use
cases, more code examples, and best practices for web view content.</p>
 * <h3>Examples</h3>
 * <h4>Basic Web View to External URL</h4>
 * <p><p>Create a web view to a remote URL and open the window as modal.</p></p><pre>  var webview = Titanium.UI.createWebView({url:'http://www.appcelerator.com'});
var window = Titanium.UI.createWindow();
window.add(webview);
window.open({modal:true});</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" modal="true"&gt;
        &lt;WebView id="webview" url="http://www.appcelerator.com" /&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.WebView = {};




/**
 * @method add 
 * @hide
*/Titanium.UI.WebView.add = function(){};

/**
 * @method canGoBack
 * <p>Returns <code>true</code> if the web view can go back in its history list.</p>
 * @description <p>For Mobile Web and Tizen, returns true if <code>url</code> is set.</p>
 * @return {Boolean} 
*/
Titanium.UI.WebView.canGoBack = function(){};

/**
 * @method canGoForward
 * <p>Returns <code>true</code> if the web view can go forward in its history list.</p>
 * @description <p>For Mobile Web and Tizen, returns true if <code>url</code> is set.</p>
 * @return {Boolean} 
*/
Titanium.UI.WebView.canGoForward = function(){};

/**
 * @method evalJS
 * <p>Evaluates a JavaScript expression inside the context of the web view and
optionally, returns a result.</p>
 * @description <p>The JavaScript expression must be passed in as a string. If you are passing in any objects,
you must serialize them to strings using {@link Global stringify}.</p>
<p>The <code>evalJS</code> method returns a string representing the value of the expression. For
example, the following call retrieves the <code>document.title</code> element from the
document currently loaded into the web view.</p>
<pre><code>var docTitle = myWebView.evalJS('document.title');
</code></pre>
<p>It is not necessary to include <code>return</code> in the JavaScript. In fact, the following
call returns the empty string:</p>
<pre><code>myWebView.evalJS('return document.title');
</code></pre>
<p>For Mobile Web, you can only execute JavaScript when the contents are on the same domain.</p>
 * @param {String} code 
 * <p>JavaScript code as a string. The code will be evaluated inside the web view context.</p>
 * @return {String} 
*/
Titanium.UI.WebView.evalJS = function(code){};

/**
 * @method getData
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-data data} property.</p>
 * @return {Titanium.Blob/Titanium.Filesystem.File} 
*/
Titanium.UI.WebView.getData = function(){};

/**
 * @method getDisableBounce
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-disableBounce disableBounce} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.WebView.getDisableBounce = function(){};

/**
 * @method getEnableZoomControls
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-enableZoomControls enableZoomControls} property.</p>
 * @return {Boolean} 
 * @platform android 1.8
*/
Titanium.UI.WebView.getEnableZoomControls = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.WebView.getEnabled = function(){};

/**
 * @method getHideLoadIndicator
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-hideLoadIndicator hideLoadIndicator} property.</p>
 * @return {Boolean} 
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.WebView.getHideLoadIndicator = function(){};

/**
 * @method getHtml
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-html html} property.</p>
 * @return {String} 
*/
Titanium.UI.WebView.getHtml = function(){};

/**
 * @method getIgnoreSslError
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-ignoreSslError ignoreSslError} property.</p>
 * @return {Boolean} 
 * @platform android 3.0
*/
Titanium.UI.WebView.getIgnoreSslError = function(){};

/**
 * @method getLoading
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-loading loading} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.WebView.getLoading = function(){};

/**
 * @method getOverScrollMode
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-overScrollMode overScrollMode} property.</p>
 * @return {Number} 
 * @platform android 3.1
*/
Titanium.UI.WebView.getOverScrollMode = function(){};

/**
 * @method getPluginState
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-pluginState pluginState} property.</p>
 * @return {Number} 
 * @platform android 1.8
*/
Titanium.UI.WebView.getPluginState = function(){};

/**
 * @method getScalesPageToFit
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-scalesPageToFit scalesPageToFit} property.</p>
 * @return {Boolean} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.WebView.getScalesPageToFit = function(){};

/**
 * @method getScrollsToTop
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-scrollsToTop scrollsToTop} property.</p>
 * @return {Boolean} 
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.UI.WebView.getScrollsToTop = function(){};

/**
 * @method getShowScrollbars
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-showScrollbars showScrollbars} property.</p>
 * @return {Boolean} 
 * @platform mobileweb 1.8.2
 * @platform tizen 3.1
*/
Titanium.UI.WebView.getShowScrollbars = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-url url} property.</p>
 * @return {String} 
*/
Titanium.UI.WebView.getUrl = function(){};

/**
 * @method getUserAgent
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-userAgent userAgent} property.</p>
 * @return {String} 
 * @platform android 0.8
*/
Titanium.UI.WebView.getUserAgent = function(){};

/**
 * @method getWillHandleTouches
 * <p>Gets the value of the {@link Titanium.UI.WebView#property-willHandleTouches willHandleTouches} property.</p>
 * @return {Boolean} 
 * @platform iphone 1.8.2
 * @platform ipad 1.8.2
*/
Titanium.UI.WebView.getWillHandleTouches = function(){};

/**
 * @method goBack
 * <p>Goes back one entry in the web view's history list, to the previous page.</p>
 * @description <p>For Mobile Web, you can only go back for same domain pages. If you set the initial <code>url</code> to a 
remote page, the back function will not work. If you load a local page, then the user navigates 
away to a remote page, you cannot go back.</p>
 * @return void
*/
Titanium.UI.WebView.goBack = function(){};

/**
 * @method goForward
 * <p>Goes forward one entry in this web view's history list, if possible.</p>
 * @description <p>For Mobile Web, you can only go forward for same domain pages. If you set the initial <code>url</code> 
to a remote page, the forward function will not work.</p>
 * @return void
*/
Titanium.UI.WebView.goForward = function(){};

/**
 * @method pause
 * <p>Pauses native webview plugins.</p>
 * @description <p>Add a <code>pause</code> handler to your {@link Titanium.Android.Activity} and invoke
this method to pause native plugins. This is important with Flash content 
as it will continue in the background unless this method is invoked.</p>
<p>Call {@link Titanium.UI.WebView#method-resume resume} to unpause native plugins.</p>
 * @return void
 * @platform android 1.8
*/
Titanium.UI.WebView.pause = function(){};

/**
 * @method release
 * <p>Releases memory when the web view is no longer needed.</p>
 * @return void
 * @platform android 2.0
*/
Titanium.UI.WebView.release = function(){};

/**
 * @method reload
 * <p>Reloads the current webpage.</p>
 * @description <p>For Mobile Web and Tizen, when you reload, the last visited same domain page or the original <code>url</code> 
is the page that is reloaded.</p>
<p>You may need to simply reset the <code>url</code> property to reinitialize the WebView's iframe. 
Reloading the web view will reset the history.</p>
 * @return void
*/
Titanium.UI.WebView.reload = function(){};

/**
 * @method removeAllChildren 
 * @hide
*/Titanium.UI.WebView.removeAllChildren = function(){};

/**
 * @method repaint
 * <p>Forces the web view to repaint its contents.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.WebView.repaint = function(){};

/**
 * @method resume
 * <p>Resume native webview plugins.</p>
 * @description <p>Used to unpause native plugins after calling {@link Titanium.UI.WebView#method-pause pause}.</p>
<p>Add a <code>resume</code> handler to your {@link Titanium.Android.Activity} and invoke
this method to resume native plugins.</p>
 * @return void
 * @platform android 1.8
*/
Titanium.UI.WebView.resume = function(){};

/**
 * @method setBasicAuthentication
 * <p>Sets the basic authentication for this web view to use on subsequent URl requests.</p>
 * @param {String} username 
 * <p>Basic auth username.</p>
 * @param {String} password 
 * <p>Basic auth password.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
*/
Titanium.UI.WebView.setBasicAuthentication = function(username, password){};

/**
 * @method setData
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-data data} property.</p>
 * @param {Titanium.Blob/Titanium.Filesystem.File} data 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.WebView.setData = function(data){};

/**
 * @method setDisableBounce
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-disableBounce disableBounce} property.</p>
 * @param {Boolean} disableBounce 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.WebView.setDisableBounce = function(disableBounce){};

/**
 * @method setEnableZoomControls
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-enableZoomControls enableZoomControls} property.</p>
 * @param {Boolean} enableZoomControls 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.8
*/
Titanium.UI.WebView.setEnableZoomControls = function(enableZoomControls){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.WebView.setEnabled = function(){};

/**
 * @method setHideLoadIndicator
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-hideLoadIndicator hideLoadIndicator} property.</p>
 * @param {Boolean} hideLoadIndicator 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 3.0
 * @platform ipad 3.0
*/
Titanium.UI.WebView.setHideLoadIndicator = function(hideLoadIndicator){};

/**
 * @method setHtml
 * <p>Sets the value of {@link Titanium.UI.WebView#property-html html} property.</p>
 * @description <p>The <code>options</code> parameter can be used to specify two options that affect 
the WebView main content presentation:</p>
<ul>
<li><code>baseURL</code>. Sets the base URL for the content.</li>
<li><code>mimeType</code>. Sets the MIME type for the content. Defaults to "text/html" if not specified.</li>
</ul>
<p>For example:</p>
<pre><code>setHtml('&lt;html&gt;&lt;body&gt;Hello, &lt;a href="/documentation"&gt;Titanium&lt;/a&gt;!&lt;/body&gt;&lt;/html&gt;',
        {baseURL:'http://developer.appcelerator.com/'});
</code></pre>
 * @param {Object} html 
 * <p>New HTML to display in the web view.</p>
 * @param {Dictionary} options (optional)
 * <p>Optional parameters for the content. Only used by iOS and Android.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.WebView.setHtml = function(html, options){};

/**
 * @method setIgnoreSslError
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-ignoreSslError ignoreSslError} property.</p>
 * @param {Boolean} ignoreSslError 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.0
*/
Titanium.UI.WebView.setIgnoreSslError = function(ignoreSslError){};

/**
 * @method setLoading
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-loading loading} property.</p>
 * @param {Boolean} loading 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.WebView.setLoading = function(loading){};

/**
 * @method setOverScrollMode
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-overScrollMode overScrollMode} property.</p>
 * @param {Number} overScrollMode 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 3.1
*/
Titanium.UI.WebView.setOverScrollMode = function(overScrollMode){};

/**
 * @method setPluginState
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-pluginState pluginState} property.</p>
 * @param {Number} pluginState 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.8
*/
Titanium.UI.WebView.setPluginState = function(pluginState){};

/**
 * @method setScalesPageToFit
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-scalesPageToFit scalesPageToFit} property.</p>
 * @param {Boolean} scalesPageToFit 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.WebView.setScalesPageToFit = function(scalesPageToFit){};

/**
 * @method setScrollsToTop
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-scrollsToTop scrollsToTop} property.</p>
 * @param {Boolean} scrollsToTop 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.UI.WebView.setScrollsToTop = function(scrollsToTop){};

/**
 * @method setShowScrollbars
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-showScrollbars showScrollbars} property.</p>
 * @param {Boolean} showScrollbars 
 * <p>New value for the property.</p>
 * @return void
 * @platform mobileweb 1.8.2
 * @platform tizen 3.1
*/
Titanium.UI.WebView.setShowScrollbars = function(showScrollbars){};

/**
 * @method setUrl
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-url url} property.</p>
 * @param {String} url 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.WebView.setUrl = function(url){};

/**
 * @method setUserAgent
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-userAgent userAgent} property.</p>
 * @param {String} userAgent 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.8
*/
Titanium.UI.WebView.setUserAgent = function(userAgent){};

/**
 * @method setWillHandleTouches
 * <p>Sets the value of the {@link Titanium.UI.WebView#property-willHandleTouches willHandleTouches} property.</p>
 * @param {Boolean} willHandleTouches 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 1.8.2
 * @platform ipad 1.8.2
*/
Titanium.UI.WebView.setWillHandleTouches = function(willHandleTouches){};

/**
 * @method stopLoading
 * <p>Stops loading a currently loading page.</p>
 * @description <p>For Mobile Web, due to browser permissions, this will issue a stop on all windows including 
the parent and all other web views.  Generally, this feature does not work reliably and instead 
you may choose to set the <code>hardStop</code> argument to true.</p>
<p>When <code>hardStop</code> is set to <code>true</code>, the Mobile Web and Tizen platforms will destroy the iFrame
used to display the content, so nothing is displayed where the web view used to
be. The actual web view component is <em>not</em> destroyed, and you can redisplay it by
calling {@link Titanium.UI.WebView#method-reload reload}, or by specifying new content.</p>
 * @param {Boolean} hardStop 
 * <p>Forces the web view to destroy the iFrame (Mobile Web and Tizen only).</p>
 * @return void
*/
Titanium.UI.WebView.stopLoading = function(hardStop){};

/**
 * @property data
 * @type Titanium.Blob/Titanium.Filesystem.File
 * <p>Web content to load.</p>
 * @description <p>Android only supports loading data from a <code>Blob</code>, not a <code>File</code>.</p>
<p>For Mobile Web and Tizen, setting new content will reset the <code>url</code> and the WebView's history. The WebView's
"onload" event will have already fired prior to the data being set inside the WebView.</p>
<p>See also: {@link Titanium.UI.WebView#property-url url} and {@link Titanium.UI.WebView#property-html html}.</p>
 */
Titanium.UI.WebView.data = null;

/**
 * @property [disableBounce=false]
 * @type Boolean
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Determines whether the view will bounce when scrolling to the edge of the scrollable region.</p>
 * @description <p>Set to <code>true</code> to disable the bounce effect.</p>
 */
Titanium.UI.WebView.disableBounce = null;

/**
 * @property [enableZoomControls=true]
 * @type Boolean
 * @platform android 1.8
 * <p>If <code>true</code>, zoom controls are enabled.</p>
 */
Titanium.UI.WebView.enableZoomControls = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.WebView.enabled = null;

/**
 * @property [hideLoadIndicator=false]
 * @type Boolean
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Hides activity indicator when loading remote URL.</p>
 */
Titanium.UI.WebView.hideLoadIndicator = null;

/**
 * @property html
 * @type String
 * <p>HTML content of this web view.</p>
 * @description <p>See {@link Titanium.UI.WebView#method-setHtml setHtml} for additional parameters that can be
specified when setting HTML content.</p>
<p>The web view's content can also be set using the {@link Titanium.UI.WebView#property-data data} or 
{@link Titanium.UI.WebView#property-url url} properties.</p>
<h4>Mobile Web and Tizen Platform Notes</h4>
<p>For Mobile Web and Tizen, setting new content will reset the <code>url</code> and the WebView's
history. </p>
<p>Content added using the <code>html</code> property (or the <code>setHtml</code> method) will never
receive an "onload" DOM event. </p>
<p>When querying this the <code>html</code> property, Mobile Web and Tizen return a modified version of the original html. 
The <code>&lt;html&gt;</code> tag is stripped off, along with any comments outside of the <code>&lt;html&gt;</code> tag. Some default 
attributes may be added as well. For example, a web page with the code:</p>
<pre><code>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;hello&lt;/body&gt;&lt;/html&gt;
</code></pre>
<p>returns:</p>
<pre><code>&lt;head&gt;&lt;/head&gt;&lt;body marginwidth="0" marginheight="0"&gt;hello&lt;/body&gt;
</code></pre>
<p>in Safari.</p>
<p>See also: {@link Titanium.UI.WebView#property-data data} and {@link Titanium.UI.WebView#property-url url}.</p>
 */
Titanium.UI.WebView.html = null;

/**
 * @property [ignoreSslError=undefined but behaves as false]
 * @type Boolean
 * @platform android 3.0
 * <p>Controls whether to ignore invalid SSL certificates or not.</p>
 * @description <p>If set to <code>true</code>, the web page loads despite having an invalid SSL certificate.</p>
<p>If set to <code>false</code>, a web page with an invalid SSL certificate does not load.</p>
 */
Titanium.UI.WebView.ignoreSslError = null;

/**
 * @property loading
 * @type Boolean
 * <p>Indicates if the webview is loading content.</p>
 */
Titanium.UI.WebView.loading = null;

/**
 * @property [overScrollMode=Titanium.UI.Android.OVER_SCROLL_ALWAYS]
 * @type Number
 * @platform android 3.1
 * <p>One of {@link Titanium.UI.Android#property-OVER_SCROLL_ALWAYS}, {@link Titanium.UI.Android#property-OVER_SCROLL_IF_CONTENT_SCROLLS}, or {@link Titanium.UI.Android#property-OVER_SCROLL_NEVER}. </p>
 */
Titanium.UI.WebView.overScrollMode = null;

/**
 * @property [pluginState={@link Titanium.UI.Android#property-WEBVIEW_PLUGINS_OFF}]
 * @type Number
 * @platform android 1.8
 * <p>Determines how to treat content that requires plugins in this web view.</p>
 * @description <p>This setting affects the loading of content that requires web plugins, such as
Flash Player.</p>
<p>Accepts one of {@link Titanium.UI.Android#property-WEBVIEW_PLUGINS_OFF}, 
{@link Titanium.UI.Android#property-WEBVIEW_PLUGINS_ON}, or {@link Titanium.UI.Android#property-WEBVIEW_PLUGINS_ON_DEMAND}.</p>
<p>To use the Flash Player plugin, hardware acceleration must be enabled for your
application. To enable hardware acceleration, add the <code>tool-api-level</code> and
<code>manifest</code> elements shown below inside the <code>android</code> element in your <code>tiapp.xml</code> file.</p>
<pre><code>&lt;android xmlns:android="http://schemas.android.com/apk/res/android"&gt;
    &lt;tool-api-level&gt;11&lt;/tool-api-level&gt;
    &lt;manifest&gt;
        &lt;application android:hardwareAccelerated="true"/&gt;
    &lt;/manifest&gt;
&lt;/android&gt;
</code></pre>
<p>See Android documentation for 
<a href="http://developer.android.com/reference/android/webkit/WebSettings.PluginState.html">WebSettings.PluginState</a>. </p>
<p>This property only works on Android devices at API Level 8 or greater.</p>
 */
Titanium.UI.WebView.pluginState = null;

/**
 * @property [scalesPageToFit=<code>false</code> on iOS. On Android, <code>false</code> when content is specified as a local URL, 
<code>true</code> for any other kind of content (remote URL, <code>Blob</code>, or <code>File</code>).]
 * @type Boolean
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>If <code>true</code>, scale contents to fit the web view.</p>
 * @description <p>On iOS, setting this to <code>true</code> sets the initial zoom level to show the entire
page, and enables the user to zoom the web view in and out. Setting this to 
<code>false</code> prevents the user from zooming the web view.</p>
<p>On Android, only controls the initial zoom level.</p>
 */
Titanium.UI.WebView.scalesPageToFit = null;

/**
 * @property [scrollsToTop=true]
 * @type Boolean
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Controls whether the scroll-to-top gesture is effective.</p>
 * @description <p>The scroll-to-top gesture is a tap on the status bar; The default value of this property is true. 
This gesture works when you have a single visible web view.
If there are multiple table views, web views, text areas, and/or scroll views visible,
you will need to disable (set to false) on the above views you DON'T want this
behaviour on. The remaining view will then respond to scroll-to-top gesture. </p>
 */
Titanium.UI.WebView.scrollsToTop = null;

/**
 * @property [showScrollbars=true]
 * @type Boolean
 * @platform mobileweb 1.8.2
 * @platform tizen 3.1
 * <p>If <code>true</code>, scrollbars are displayed if content is larger than the web view.</p>
 */
Titanium.UI.WebView.showScrollbars = null;

/**
 * @property url
 * @type String
 * <p>URL to the web document.</p>
 * @description <p>This property changes as the content of the webview changes (such as when the user
clicks a hyperlink inside the web view).</p>
<p>See also: {@link Titanium.UI.WebView#property-data data} and {@link Titanium.UI.WebView#property-html html}.</p>
<p>On Tizen, the URL cannot refer to a {@link Titanium.Filesystem.File File} object. 
<code>Ti.Filesystem</code> uses web storage, which can't be accessed directly from a web view. 
The URL can be a string that points to a physical file on Tizen's file system (e.g. /opt/apps/kitchensink/index.html), or a remote location.</p>
 */
Titanium.UI.WebView.url = null;

/**
 * @property [userAgent=System default user-agent value.]
 * @type String
 * @platform android 0.8
 * <p>The User-Agent header used by the web view when requesting content.</p>
 */
Titanium.UI.WebView.userAgent = null;

/**
 * @property [willHandleTouches=true]
 * @type Boolean
 * @platform iphone 1.8.2
 * @platform ipad 1.8.2
 * <p>Explicitly specifies if this web view handles touches.</p>
 * @description <p>On the iOS platform, if this web view <strong>or any of its parent views</strong> have touch
listeners, the Titanium component intercepts <strong>all</strong> touch events. This 
prevents the user from interacting with the native web view components.</p>
<p>Set this flag to <code>false</code> to disable the default behavior. Setting this property to <code>false</code> 
allows the user to interact with the native web view and still honor any <code>touch</code> events sent to 
its parents. No <code>touch</code> events will be generated when the user interacts with the web view itself.</p>
<p>Set this flag to <code>true</code> if you want to receive touch events from the web view and
the user does not need to interact with the web content directly.</p>
<p>This flag is <code>true</code> by default to retain backwards compatibility with previous
behavior.</p>
 */
Titanium.UI.WebView.willHandleTouches = null;

/**
 * @class Titanium.UI.Window
 * @typestr Object of Titanium.UI
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.UI.View
 * <p>The Window is an empty drawing surface or container.</p>
 * @description <p>A window is a top-level container which can contain other views. Windows can
be <em>opened</em> and <em>closed</em>.  Opening a window causes the window and its child 
views to be added to the application's render stack, on top of any previously opened 
windows. Closing a window removes the window and its children from the render stack.</p>
<p>Windows <em>contain</em> other views, but in general they are not <em>contained</em> inside
other views. There are a few specialized top-level views that manage windows,
including:</p>
<ul>
<li>{@link Titanium.UI.iPhone.NavigationGroup NavigationGroup}</li>
<li>{@link Titanium.UI.iPad.SplitWindow SplitWindow}</li>
<li>{@link Titanium.UI.TabGroup TabGroup}. </li>
</ul>
<p>By default, windows occupy the entire screen except for the navigation bar, 
status bar, and in the case of windows contained in tab groups, the tab bar.
To take up the entire screen, covering any other UI, specify <code>fullscreen:true</code>
when creating the window.</p>
<p>Use the {@link Titanium.UI#method-createWindow} method to create a window.</p>
<h4>Sub-contexts</h4>
<p>Windows can be loaded from another JavaScript file by specifying the property <code>url</code>,
referencing a file relative to your application <code>Resources</code> folder.  It's important
to note that Titanium will refuse to load JavaScript files from a remote URL. Loading
remote JavaScript from a URL and providing it with the full capabilities of the Titanium
API would be very dangerous.</p>
<p>When your Window is loaded from a separate JavaScript file, the code will be executed in
a separate JavaScript context (called a "sub-context") than your <code>app.js</code> global context.
It will also execute in its own separate thread.</p>
<p>On Android, a new context is also created when you create a heavyweight window. See the
section, "Android Heavyweight and Lightweight Windows," for more information.</p>
<p>The special property {@link Titanium.UI#property-currentWindow} is available inside a sub-context that
points to the JavaScript instance by reference in the global context.</p>
<h4>Passing Data Between Contexts</h4>
<p>By default, sub-context variables cannot access JavaScript references in the global context.
There are two ways to pass data between the global context and the sub-context:</p>
<ul>
<li>Shared references</li>
<li>Events</li>
</ul>
<p><strong>Note that in both cases, you cannot pass functions between contexts, only serializable data.</strong>
<em>Serializable data</em> includes any JavaScript primitive or simple object composed
of JavaScript primitives.</p>
<h5>Passing Data with Shared References</h5>
<p>You can allow a sub-context access to
properties in the global context by reference assignment.  An example best illustrates
how to do this.</p>
<p>In <code>app.js</code>, you could define a property:</p>
<pre><code>var message = "Hi world!";
</code></pre>
<p>Now, you can create a new Window - let's call it <code>foo.js</code> - in your <code>app.js</code>.</p>
<pre><code>var w = Titanium.UI.createWindow({
  url:'foo.js'
});
</code></pre>
<p>To <em>give</em> your new window access to <code>message</code>, you would need to assign it to a
property on the new window reference, <code>w</code>.</p>
<pre><code>w.myAlertMessage = message;
</code></pre>
<p>This creates a new <code>myAlertMessage</code> property on the new window that holds a reference to the
<code>message</code> property in the global context.  Now, let's look at the code for <code>foo.js</code>.</p>
<pre><code>alert(Titanium.UI.currentWindow.myAlertMessage);
</code></pre>
<p>In the above code, the <code>foo.js</code> will show an alert containing the text from the <code>message</code>
property in the global context.</p>
<p><strong>Note:</strong> You should use caution when adding a custom property to a Titanium object.
Your property might overwrite an existing property or conflict with a future Titanium 
property.  If you do this, try to choose a property name unlikely to be used by the Titanium SDK
in the future. </p>
<h5>Passing Data with Events</h5>
<p>If you'd like to send events to a window from the global context and vice versa, you could
use the built-in event mechanism.  For example, you could define a custom event called <code>foo</code>.
The window could listen for this event and then respond with some action. For example, in
your sub-context you might define:</p>
<pre><code>Titanium.UI.currentWindow.addEventListener('foo',function(e)
{
  Titanium.API.info("foo event received = "+JSON.stringify(e));
});
</code></pre>
<p>You could now fire the event from <code>app.js</code> like this:</p>
<pre><code>var window = Titanium.UI.createWindow({
  url:'bar.js'
});
window.open();
window.fireEvent('foo',{a:'b'});
</code></pre>
<p>It's worth noting two important limitations of the example above:</p>
<ul>
<li>
<p>You must open the window before you can send events to it. You also may have to fire
  the event after a specified amount of time if you intend to immediately send data to
  the window. This is because windows are opened asynchronously and on a separate thread
  than the caller thread.</p>
</li>
<li>
<p>You can only send JSON-serializable data in <code>fireEvent</code>. If you attempt to send objects
  that have function references, they will be null.</p>
</li>
</ul>
<h4>Animations</h4>
<p>Windows can be animated like any normal {@link Titanium.UI.View View}. To transition between
2 windows, you can use the <code>transition</code> property on an animation (not supported on Android).
For example, to flip right-to-left between two windows, you could do the following:</p>
<pre><code>var window2 = Titanium.UI.createWindow({url:'foo.js'});
var t = Ti.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT;
window1.animate({view:window2,transition:t});
</code></pre>
<p>In the above example, the <code>window2</code> view will be animated from the right-to-left over <code>window1</code>.</p>
<p>Windows can be opened or closed with animation.  In the example below, we create a window
that will open from small to large with a bounce effect.  This is done by applying a
transformation at initialization time that scales the original size of the window to 0.
When the window is opened, a new 2D transformation is applied that will scale the window
size from 0 to 110% of it's original size and then, after 1/20th of a second, will scale it
back to it's original size at 100%. This gives the bounce effect during animation.</p>
<pre><code>var t = Titanium.UI.create2DMatrix().scale(0);

// create a window with the initial transform scaled to 0
var w = Titanium.UI.createWindow({
  backgroundColor:'#336699',
  borderWidth:8,
  borderColor:'#999',
  height:400,
  width:300,
  borderRadius:10,
  opacity:0.92,
  transform:t
});

// create first transform to go beyond normal size
var t1 = Titanium.UI.create2DMatrix().scale(1.1);

var a = Titanium.UI.createAnimation();
a.transform = t1;
a.duration = 200;

// when this animation completes, scale to normal size
a.addEventListener('complete', function()
{
    // we can use the identity transform to take it back to it's real size
  var t2 = Titanium.UI.create2DMatrix();
  w.animate({transform:t2, duration:200});
});
</code></pre>
<p>Note that to animate an Android heavyweight window while you open it, you need
to follow a specific procedure which is explained below in "Heavyweight
Window Transitions in Android".</p>
<h4>iPad Modal Windows</h4>
<p>For iPad, iPhone SDK 3.2 and Titanium 1.2 introduced several new ways of presenting
modal windows. In addition to full-screen modal windows, the iPad supports "Page sheet"
and "Form sheet" style windows:</p>
<ul>
<li>
<p><strong>Page sheet</strong> style windows have a fixed width, equal to the width of the screen 
  in portait mode, and a height equal to the <em>current</em> height of the screen. This means
  that in portrait mode, the window covers the entire screen. In landscape mode, 
  the window is centered on the screen horizontally.</p>
</li>
<li>
<p><strong>Form sheet</strong> style windows are smaller than the screen size, and centered on the screen.</p>
</li>
</ul>
<p>The example below is a modal window using the Form sheet style:</p>
<p><img alt="modal" src="http://img.skitch.com/20100406-bqb3f8pb6e4ger7wkcdcw5mbar.png" /></p>
<p>You can create this type of modal window on iPad with the following code snippet:</p>
<pre><code>var window = Titanium.UI.createWindow();
window.open({
  modal:true,
  modalTransitionStyle: Ti.UI.iPhone.MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL,
  modalStyle: Ti.UI.iPhone.MODAL_PRESENTATION_FORMSHEET
})
</code></pre>
<h4>Android Heavyweight and Lightweight Windows</h4>
<p>In Android, Titanium windows can be heavyweight or lightweight:</p>
<ul>
<li>
<p>A <em>heavyweight</em> window is associated with a new Android 
  {@link Titanium.Android.Activity Activity}. Creating a heavyweight window always 
  creates a new JavaScript context.</p>
</li>
<li>
<p>A <em>lightweight</em> window is a fullscreen view, and runs in the same Android Activity 
  as the code that created it. Creating a lightweight window creates a new 
  JavaScript context if it was created with the 'url' property set.</p>
</li>
</ul>
<p>The {@link Titanium.UI#method-createWindow createWindow} call creates a heavyweight window 
if any of the following properties are defined (set to either <code>true</code> or <code>false</code>)
on creation:</p>
<ul>
<li><code>fullscreen</code></li>
<li><code>navBarHidden</code></li>
<li><code>modal</code></li>
<li><code>windowSoftInputMode</code></li>
</ul>
<p>A heavyweight window is always created when you open a new window from inside a 
{@link Titanium.UI.TabGroup TabGroup}.</p>
<h4>Heavyweight Window Transitions in Android</h4>
<p>As explained above, heavyweight windows are their own Android Activity. The only way
to animate the opening of an Activity in Android is to apply an animation <em>resource</em> to
it.  Passing a {@link Titanium.UI.Animation} object as a parameter to {@link Titanium.UI.Window#event-open}
will have no effect if the window being opened is heavyweight and thus opens its own Activity.</p>
<p>Instead, in the parameter dictionary you pass to {@link Titanium.UI.Window#event-open}, you should set the
{@link openWindowParams#property-activityEnterAnimation activityEnterAnimation} and
{@link openWindowParams#property-activityExitAnimation activityExitAnimation} keys to
animation resources. <code>activityEnterAnimation</code> should be set to the animation you want to run
on the new window (activity), while <code>activityExitAnimation</code> should be set to the animation you
want to run on the window (activity) that you are leaving as you open the new heavyweight window
above it.</p>
<p>Animation resources are available through the <code>R</code> object. Use either {@link Titanium.Android.R} for
built-in resources or {@link Titanium.App.Android.R} for resources that you package in your application.</p>
<p>As an example, you may wish for the window that you are opening to fade in while the window
you are leaving should fade out:</p>
<pre><code>var win2 = Ti.UI.createWindow({
    fullscreen: false // Makes it heavyweight
});

win2.open({
    activityEnterAnimation: Ti.Android.R.anim.fade_in,
    activityExitAnimation: Ti.Android.R.anim.fade_out
});
</code></pre>
<p>See the official Android <a href="http://developer.android.com/reference/android/R.anim.html">R.anim</a> documentation
for information about built-in animations.</p>
<p>For information on creating your own animation resource XML files, see "<a href="http://developer.android.com/guide/topics/resources/animation-resource.html#View">View Animation</a>"
in Android's Resources documentation. After creating an animation resource file, you can place it under
<code>platform/android/res/anim</code> in your Titanium project folder and it will be packaged in your app's APK
and then available via {@link Titanium.App.Android.R}.</p>
<h4>Android "root" Windows</h4>
<p>In Android, you may wish to specify that a window which you create (such as the first
window) should be considered the root window and that the application should exit when
the back button is pressed from that window.  This is particularly useful if your application
is not using a Tab Group and therefore the splash screen window is appearing whenever you
press the back button from your lowest window on the stack.</p>
<p>To indicate that a particular window should cause an application to exit when the back
button is pressed, pass <code>exitOnClose: true</code> as one of the creation arguments, as shown here:</p>
<pre><code>var win = Titanium.UI.createWindow({
  title: 'My Root Window',
  exitOnClose: true
});
</code></pre>
 * <h3>Examples</h3>
 * <h4>Full Screen Window example</h4>
 * <p><p>Create a fullscreen window with a red background.</p></p><pre>var window = Titanium.UI.createWindow({
   backgroundColor:'red'
});
window.open({fullscreen:true});</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win" backgroundColor="red" fullscreen="true" /&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.Window = {};

















/**
 * @method close
 * <p>Closes the window.</p>
 * @param {Object} params (optional)
 * <p>Animation or display properties to use when closing the window.</p>
 * @return void
*/
Titanium.UI.Window.close = function(params){};

/**
 * @method getActivity
 * <p>Gets the value of the {@link Titanium.UI.Window#property-activity activity} property.</p>
 * @return {Titanium.Android.Activity} 
 * @platform android 0.9
*/
Titanium.UI.Window.getActivity = function(){};

/**
 * @method getBackButtonTitle
 * <p>Gets the value of the {@link Titanium.UI.Window#property-backButtonTitle backButtonTitle} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getBackButtonTitle = function(){};

/**
 * @method getBackButtonTitleImage
 * <p>Gets the value of the {@link Titanium.UI.Window#property-backButtonTitleImage backButtonTitleImage} property.</p>
 * @return {String/Titanium.Blob} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getBackButtonTitleImage = function(){};

/**
 * @method getBarColor
 * <p>Gets the value of the {@link Titanium.UI.Window#property-barColor barColor} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getBarColor = function(){};

/**
 * @method getBarImage
 * <p>Gets the value of the {@link Titanium.UI.Window#property-barImage barImage} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getBarImage = function(){};

/**
 * @method getExitOnClose
 * <p>Gets the value of the {@link Titanium.UI.Window#property-exitOnClose exitOnClose} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
*/
Titanium.UI.Window.getExitOnClose = function(){};

/**
 * @method getFullscreen
 * <p>Gets the value of the {@link Titanium.UI.Window#property-fullscreen fullscreen} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getFullscreen = function(){};

/**
 * @method getLeftNavButton
 * <p>Gets the value of the {@link Titanium.UI.Window#property-leftNavButton leftNavButton} property.</p>
 * @return {Titanium.UI.View} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getLeftNavButton = function(){};

/**
 * @method getModal
 * <p>Gets the value of the {@link Titanium.UI.Window#property-modal modal} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.Window.getModal = function(){};

/**
 * @method getNavBarHidden
 * <p>Gets the value of the {@link Titanium.UI.Window#property-navBarHidden navBarHidden} property.</p>
 * @return {Boolean} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getNavBarHidden = function(){};

/**
 * @method getOpacity
 * <p>Gets the value of the {@link Titanium.UI.Window#property-opacity opacity} property.</p>
 * @return {Number} 
*/
Titanium.UI.Window.getOpacity = function(){};

/**
 * @method getOrientation
 * <p>Gets the value of the {@link Titanium.UI.Window#property-orientation orientation} property.</p>
 * @return {Number} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getOrientation = function(){};

/**
 * @method getOrientationModes
 * <p>Gets the value of the {@link Titanium.UI.Window#property-orientationModes orientationModes} property.</p>
 * @return {Number[]} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getOrientationModes = function(){};

/**
 * @method getRightNavButton
 * <p>Gets the value of the {@link Titanium.UI.Window#property-rightNavButton rightNavButton} property.</p>
 * @return {Titanium.UI.View} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getRightNavButton = function(){};

/**
 * @method getTabBarHidden
 * <p>Gets the value of the {@link Titanium.UI.Window#property-tabBarHidden tabBarHidden} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getTabBarHidden = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.Window#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.Window.getTitle = function(){};

/**
 * @method getTitleControl
 * <p>Gets the value of the {@link Titanium.UI.Window#property-titleControl titleControl} property.</p>
 * @return {Titanium.UI.View} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getTitleControl = function(){};

/**
 * @method getTitleImage
 * <p>Gets the value of the {@link Titanium.UI.Window#property-titleImage titleImage} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getTitleImage = function(){};

/**
 * @method getTitlePrompt
 * <p>Gets the value of the {@link Titanium.UI.Window#property-titlePrompt titlePrompt} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getTitlePrompt = function(){};

/**
 * @method getTitleid
 * <p>Gets the value of the {@link Titanium.UI.Window#property-titleid titleid} property.</p>
 * @return {String} 
*/
Titanium.UI.Window.getTitleid = function(){};

/**
 * @method getTitlepromptid
 * <p>Gets the value of the {@link Titanium.UI.Window#property-titlepromptid titlepromptid} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getTitlepromptid = function(){};

/**
 * @method getToolbar
 * <p>Gets the value of the {@link Titanium.UI.Window#property-toolbar toolbar} property.</p>
 * @return {Object[]} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.getToolbar = function(){};

/**
 * @method getTranslucent
 * <p>Gets the value of the {@link Titanium.UI.Window#property-translucent translucent} property.</p>
 * @return {Boolean} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.getTranslucent = function(){};

/**
 * @method getUrl
 * <p>Gets the value of the {@link Titanium.UI.Window#property-url url} property.</p>
 * @return {String} 
*/
Titanium.UI.Window.getUrl = function(){};

/**
 * @method getWindowPixelFormat
 * <p>Gets the value of the {@link Titanium.UI.Window#property-windowPixelFormat windowPixelFormat} property.</p>
 * @return {Number} 
 * @platform android 1.8
*/
Titanium.UI.Window.getWindowPixelFormat = function(){};

/**
 * @method getWindowSoftInputMode
 * <p>Gets the value of the {@link Titanium.UI.Window#property-windowSoftInputMode windowSoftInputMode} property.</p>
 * @return {Number} 
 * @platform android 0.9
*/
Titanium.UI.Window.getWindowSoftInputMode = function(){};

/**
 * @method hideTabBar
 * <p>Hides the tab bar. Must be called before opening the window.</p>
 * @description <p>To hide the tab bar when opening a window as a child of a tab, call
<code>hideTabBar</code> or set <code>tabBarHidden</code> to <code>true</code> <strong>before</strong> opening the window.</p>
<p>If the window is not a child of a tab, this method has no effect.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.hideTabBar = function(){};

/**
 * @method open
 * <p>Opens the window.</p>
 * @param {openWindowParams} params (optional)
 * <p>Animation or display properties to use when opening the window.</p>
 * @return void
*/
Titanium.UI.Window.open = function(params){};

/**
 * @method removeAllChildren 
 * @hide
*/Titanium.UI.Window.removeAllChildren = function(){};

/**
 * @method setActivity
 * <p>Sets the value of the {@link Titanium.UI.Window#property-activity activity} property.</p>
 * @param {Titanium.Android.Activity} activity 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
*/
Titanium.UI.Window.setActivity = function(activity){};

/**
 * @method setBackButtonTitle
 * <p>Sets the value of the {@link Titanium.UI.Window#property-backButtonTitle backButtonTitle} property.</p>
 * @param {String} backButtonTitle 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setBackButtonTitle = function(backButtonTitle){};

/**
 * @method setBackButtonTitleImage
 * <p>Sets the value of the {@link Titanium.UI.Window#property-backButtonTitleImage backButtonTitleImage} property.</p>
 * @param {String/Titanium.Blob} backButtonTitleImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setBackButtonTitleImage = function(backButtonTitleImage){};

/**
 * @method setBarColor
 * <p>Sets the value of the {@link Titanium.UI.Window#property-barColor barColor} property.</p>
 * @param {String} barColor 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setBarColor = function(barColor){};

/**
 * @method setBarImage
 * <p>Sets the value of the {@link Titanium.UI.Window#property-barImage barImage} property.</p>
 * @param {String} barImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setBarImage = function(barImage){};

/**
 * @method setFullscreen
 * <p>Sets the value of the {@link Titanium.UI.Window#property-fullscreen fullscreen} property.</p>
 * @param {Boolean} fullscreen 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setFullscreen = function(fullscreen){};

/**
 * @method setLeftNavButton
 * <p>Sets the value of the {@link Titanium.UI.Window#property-leftNavButton leftNavButton} property.</p>
 * @param {Titanium.UI.View} leftNavButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setLeftNavButton = function(leftNavButton){};

/**
 * @method setModal
 * <p>Sets the value of the {@link Titanium.UI.Window#property-modal modal} property.</p>
 * @param {Boolean} modal 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Window.setModal = function(modal){};

/**
 * @method setNavBarHidden
 * <p>Sets the value of the {@link Titanium.UI.Window#property-navBarHidden navBarHidden} property.</p>
 * @param {Boolean} navBarHidden 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setNavBarHidden = function(navBarHidden){};

/**
 * @method setOpacity
 * <p>Sets the value of the {@link Titanium.UI.Window#property-opacity opacity} property.</p>
 * @param {Number} opacity 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Window.setOpacity = function(opacity){};

/**
 * @method setOrientationModes
 * <p>Sets the value of the {@link Titanium.UI.Window#property-orientationModes orientationModes} property.</p>
 * @param {Number[]} orientationModes 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setOrientationModes = function(orientationModes){};

/**
 * @method setRightNavButton
 * <p>Sets the value of the {@link Titanium.UI.Window#property-rightNavButton rightNavButton} property.</p>
 * @param {Titanium.UI.View} rightNavButton 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setRightNavButton = function(rightNavButton){};

/**
 * @method setTabBarHidden
 * <p>Sets the value of the {@link Titanium.UI.Window#property-tabBarHidden tabBarHidden} property.</p>
 * @param {Boolean} tabBarHidden 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setTabBarHidden = function(tabBarHidden){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.Window#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Window.setTitle = function(title){};

/**
 * @method setTitleControl
 * <p>Sets the value of the {@link Titanium.UI.Window#property-titleControl titleControl} property.</p>
 * @param {Titanium.UI.View} titleControl 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setTitleControl = function(titleControl){};

/**
 * @method setTitleImage
 * <p>Sets the value of the {@link Titanium.UI.Window#property-titleImage titleImage} property.</p>
 * @param {String} titleImage 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setTitleImage = function(titleImage){};

/**
 * @method setTitlePrompt
 * <p>Sets the value of the {@link Titanium.UI.Window#property-titlePrompt titlePrompt} property.</p>
 * @param {String} titlePrompt 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setTitlePrompt = function(titlePrompt){};

/**
 * @method setTitleid
 * <p>Sets the value of the {@link Titanium.UI.Window#property-titleid titleid} property.</p>
 * @param {String} titleid 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.Window.setTitleid = function(titleid){};

/**
 * @method setTitlepromptid
 * <p>Sets the value of the {@link Titanium.UI.Window#property-titlepromptid titlepromptid} property.</p>
 * @param {String} titlepromptid 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setTitlepromptid = function(titlepromptid){};

/**
 * @method setToolbar
 * <p>Sets the value of the {@link Titanium.UI.Window#property-toolbar toolbar} property.</p>
 * @param {Object[]} toolbar 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.Window.setToolbar = function(toolbar){};

/**
 * @method setTranslucent
 * <p>Sets the value of the {@link Titanium.UI.Window#property-translucent translucent} property.</p>
 * @param {Boolean} translucent 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.Window.setTranslucent = function(translucent){};

/**
 * @method setWindowPixelFormat
 * <p>Sets the value of the {@link Titanium.UI.Window#property-windowPixelFormat windowPixelFormat} property.</p>
 * @param {Number} windowPixelFormat 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 1.8
*/
Titanium.UI.Window.setWindowPixelFormat = function(windowPixelFormat){};

/**
 * @property activity
 * @type Titanium.Android.Activity
 * @platform android 0.9
 * <p>For heavyweight windows, this property contains a reference to the
Android Activity object associated with this window.</p>
 * @description <p>An Activity object is not created until the window is opened.
Before the window is opened, <code>activity</code> refers to an empty JavaScript object.
You can be set properties on this object, but cannot invoke any Activity methods on it.
Once the window is opened, the actual Activity object is created,
using any properties set on the JavaScript object. At this point, you can call methods
on the activity and access any properties that are set when the activity is created,
for example, {@link Titanium.Android.Activity#property-actionBar actionBar}.</p>
 */
Titanium.UI.Window.activity = null;

/**
 * @property backButtonTitle
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Title for the back button. This is only valid when the window is a child of a tab.</p>
 */
Titanium.UI.Window.backButtonTitle = null;

/**
 * @property backButtonTitleImage
 * @type String/Titanium.Blob
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>The image to show as the back button. This is only valid when the window is a child of a tab.</p>
 */
Titanium.UI.Window.backButtonTitleImage = null;

/**
 * @property barColor
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Background color for the nav bar, as a color name or hex triplet.</p>
 * @description <p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.Window.barColor = null;

/**
 * @property barImage
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Background image for the nav bar, specified as a URL to a local image.</p>
 */
Titanium.UI.Window.barImage = null;

/**
 * @property [exitOnClose=false]
 * @type Boolean
 * @platform android 0.9
 * @creationOnly
 * <p>Boolean value indicating if the application should exit when the Android
Back button is pressed while the window is being shown.</p>
 * @description <p>You can only set this as a createWindow({...}) option.  Setting it after
window creation has no effect.</p>
 */
Titanium.UI.Window.exitOnClose = null;

/**
 * @property [fullscreen=false]
 * @type Boolean
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Boolean value indicating if the window is fullscreen.</p>
 * @description <p>A fullscreen window occupies all of the screen space, hiding elements
such as the iOS nav bar or the Android status bar. Must be specified
at creation time or in the <code>options</code> dictionary passed to the 
{@link Titanium.UI.Window#event-open Window.open} method.</p>
<p>On Android, setting this property forces the creation of a heavyweight window. See "Android
Heavyweight and Lightweight Windows" in the main description of this class for more
information.</p>
 */
Titanium.UI.Window.fullscreen = null;

/**
 * @property leftNavButton
 * @type Titanium.UI.View
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>View to show in the left nav bar area.</p>
 */
Titanium.UI.Window.leftNavButton = null;

/**
 * @property [modal=false]
 * @type Boolean
 * <p>Boolean to indicate if the window should be opened modal in front of other windows.</p>
 * @description <p>Android note: the combination of <code>fullscreen:true</code> and <code>modal:true</code> will not work as
expected.  Android modal windows are translucent, and, in Android, the contents of
a translucent window cannot appear above the status bar.  I.e., even though
you set <code>fullscreen:true</code>, the status bar will still be visible <em>if</em> it was visible
in the previous window.  <code>navBarHidden</code> and <code>modal</code> do work fine together, however.</p>
<p>On Android, setting this property forces the creation of a heavyweight window. See "Android
Heavyweight and Lightweight Windows" in the main description of this class for more
information.</p>
<p>iOS note: modal windows should not support orientation modes that the
window they are opened over do not support. Doing otherwise <em>may</em> cause
bad visual/redraw behavior after the modal is dismissed, due to how
iOS manages modal transitions.</p>
<p>Mobile Web and Tizen note: On Mobile Web and Tizen, windows are always modal, blocking input to underlying 
windows. If the window does not occupy the full screen, setting <code>modal</code> to <code>true</code> provides 
a visual cue by dimming any background windows. If the window occupies the full screen, 
<code>modal</code> has no effect.</p>
<p>On Mobile Web, Tizen and iOS, the modal property has no effect on whether the window is 
translucent or opaque.</p>
 */
Titanium.UI.Window.modal = null;

/**
 * @property [navBarHidden=false]
 * @type Boolean
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>For modal windows, hide the nav bar (<code>true</code>) or show the nav bar (<code>false</code>).</p>
 * @description <p>On Android, setting this property forces the creation of a heavyweight window. See "Android
Heavyweight and Lightweight Windows" in the main description of this class for more
information.</p>
 */
Titanium.UI.Window.navBarHidden = null;

/**
 * @property [opacity=1.0 (opaque)]
 * @type Number
 * <p>The opacity from 0.0-1.0.</p>
 * @description <p>iOS Notes: For modal windows that cover the previous window, the previous window is 
removed from the render stack after the modal window finishes opening. If the 
modal window is semi-transparent, the underlying window will be visible during the 
transition animation, but disappear as soon as the animation is completed. (In general 
all modal windows cover the previous window, except for iPad modal windows using the 
Page sheet or Form sheet style.)</p>
<p>Android Notes: If you set any of <code>windowSoftInputMode</code>, <code>fullscreen</code>, or <code>navBarHidden</code>,
<em>and</em> you wish to use the <code>opacity</code> property at any time during the window's lifetime,
be sure to set an <code>opacity</code> value <strong>before</strong> opening the window.  You can later change that
value -- and you can set it to 1 for full opacity if you wish -- but the important thing
is that you set it to a value before opening the window if you will want to set it at
any time during the window's lifetime.</p>
<p>The technical reason for this is that if the opacity property is present (i.e., has
been set to something) and a new Android Activity is created for the window,
then a translucent theme will be used for the Activity.  Window transparency (opacity
values below 1) will only work in Android if the Activity's theme is translucent, and
Titanium only uses a translucent theme for an Activity if you set an opacity property
before opening the window.  Additionally, do not use <code>opacity</code> and <code>fullscreen: true</code>
together, because translucent themes in Android cannot hide the status bar.  Finally,
if you do set the <code>opacity</code> property, be sure to also set a <code>backgroundImage</code> or
<code>backgroundColor</code> property as well, unless you want the window to be completely
transparent.</p>
 */
Titanium.UI.Window.opacity = null;

/**
 * @property orientation
 * @type Number
 * @readonly
 * @platform android 0.9
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Current orientation of the window.</p>
 * @description <p>Value will be one of the orientation constants defined in {@link Titanium.UI}. </p>
<p>To determine the current orientation of the <em>device</em>, see
{@link Titanium.Gesture#property-orientation Gesture.orientation}, instead.</p>
<p>See
the discussion of the {@link Titanium.UI.Window#property-orientationModes orientationModes}
property for more information on how the screen orientation is determined.</p>
 */
Titanium.UI.Window.orientation = null;

/**
 * @property [orientationModes=empty array]
 * @type Number[]
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Array of supported orientation modes, specified using the orientation
constants defined in {@link Titanium.UI}.</p>
 * @description <p>To restrict this window to a certain set of orientations, specify one or more
of the orientation constants {@link Titanium.UI#property-LANDSCAPE_LEFT LANDSCAPE_LEFT},
{@link Titanium.UI#property-LANDSCAPE_RIGHT LANDSCAPE_RIGHT}, {@link Titanium.UI#property-PORTRAIT PORTRAIT},
{@link Titanium.UI#property-UPSIDE_PORTRAIT UPSIDE_PORTRAIT}.</p>
<p><code>orientationModes</code> must be set <strong>before</strong> opening the window.</p>
<p>To determine the current orientation of the <em>window</em>, see
{@link Titanium.UI.Window#property-orientation Window.orientation}.
To determine the current orientation of the <em>device</em>, see
{@link Titanium.Gesture#property-orientation Gesture.orientation}. 
To be notified when the device's current orientation changes, add a listener for the 
{@link Titanium.Gesture#event-orientationchange} event.</p>
<h4>Android Orientation Modes</h4>
<p>On Android, <code>orientationModes</code> only takes effect when specified on a heavyweight
window.</p>
<p>On Android, orientation behavior is dependent on the Android SDK level
of the device itself. Devices running Android 2.3 and above support "sensor portait
mode" and "sensor landscape mode," in these modes, the device is locked into
either a portrait or landscape orientation, but can switch between the normal and reverse
orientations (for example, between PORTRAIT and UPSIDE_PORTRAIT).</p>
<p>In addition, the definition of portrait or
landscape mode can vary based on the physical design of the device. For example,
on some devices {@link Titanium.UI#property-LANDSCAPE_LEFT} represents the top of the device being at
the 270 degree position but other devices may (based on camera position for example)
treat this position as {@link Titanium.UI#property-LANDSCAPE_RIGHT}. In general, applications for
Android that need to be aware of orientation should try and limit their orientation
logic to handling either portrait or landscape rather than worrying about the reverse
modes. This approach will allow the orientation modes to adopt a more natural feel for
the specific device.</p>
<p>The following list breaks down the orientation behavior on Android based on the contents
of the <code>orientationModes</code> array:</p>
<ol>
<li>
<p>Empty array. Enables orientation to be fully controlled by the device sensor.</p>
</li>
<li>
<p>Array includes one or both portrait modes <strong>and</strong> one or both landscape modes.
    Enables full sensor control (identical to an empty array).</p>
</li>
<li>
<p>Array contains PORTRAIT <strong>and</strong> UPSIDE_PORTRAIT. On Android 2.3 and above,
    enables sensor portrait mode. This means the screen will shift between
    both portrait modes according to the sensor inside the device.</p>
<p>On Android versions below 2.3, locks screen orientation in normal portrait mode.</p>
</li>
<li>
<p>Array contains LANDSCAPE_LEFT <strong>and</strong> LANDSCAPE_RIGHT. On Android 2.3 and above,
    enables sensor landscape mode. This means the screen will shift between both
    landscape modes according to the sensor inside the device.</p>
<p>On Android versions below 2.3, locks screen orientation in normal landscape mode.</p>
</li>
<li>
<p>Array contains <strong>only</strong> {@link Titanium.UI#property-PORTRAIT PORTRAIT}. Locks screen orientation
    to normal portrait mode.</p>
</li>
<li>
<p>Array contains <strong>only</strong> {@link Titanium.UI#property-LANDSCAPE_LEFT LANDSCAPE_LEFT}. Locks screen
    orientation to normal landscape mode.</p>
</li>
<li>
<p>Array contains <strong>only</strong> {@link Titanium.UI#property-UPSIDE_PORTRAIT UPSIDE_PORTRAIT}. On
    Android 2.3 and above, locks screen in reverse portrait mode. </p>
<p>On Android versions below 2.3, results are undefined.</p>
</li>
<li>
<p>Array contains <strong>only</strong>  {@link Titanium.UI#property-LANDSCAPE_RIGHT LANDSCAPE_RIGHT}. On
    Android 2.3 and above, locks screen in reverse landscape mode. </p>
<p>On Android versions below 2.3, results are undefined.</p>
</li>
</ol>
 */
Titanium.UI.Window.orientationModes = null;

/**
 * @property rightNavButton
 * @type Titanium.UI.View
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>View to show in the right nav bar area.</p>
 */
Titanium.UI.Window.rightNavButton = null;

/**
 * @property tabBarHidden
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Boolean value indicating if the tab bar should be hidden. </p>
 * @description <p><code>tabBarHidden</code> must be set <strong>before</strong> opening the window.</p>
<p>This property is only valid when the window is the child of a tab.</p>
 */
Titanium.UI.Window.tabBarHidden = null;

/**
 * @property title
 * @type String
 * <p>Title of the window.</p>
 */
Titanium.UI.Window.title = null;

/**
 * @property titleControl
 * @type Titanium.UI.View
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>View to show in the title area of the nav bar.</p>
 */
Titanium.UI.Window.titleControl = null;

/**
 * @property titleImage
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Image to show in the title area of the nav bar, specified as a local file path or URL.</p>
 */
Titanium.UI.Window.titleImage = null;

/**
 * @property titlePrompt
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Title prompt for the window.</p>
 */
Titanium.UI.Window.titlePrompt = null;

/**
 * @property titleid
 * @type String
 * <p>Key identifying a string from the locale file to use for the window title.</p>
 * @description <p>Only one of <code>title</code> or <code>titleid</code> should be specified.</p>
 */
Titanium.UI.Window.titleid = null;

/**
 * @property titlepromptid
 * @type String
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Key identifying a string from the locale file to use for the window title prompt.</p>
 * @description <p>Only one of <code>titlePrompt</code> or <code>titlepromptid</code> should be specified.</p>
 */
Titanium.UI.Window.titlepromptid = null;

/**
 * @property toolbar
 * @type Object[]
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Array of button objects to show in the window's toolbar. This is only valid when
the window is the child of a tab.</p>
 */
Titanium.UI.Window.toolbar = null;

/**
 * @property [translucent=false]
 * @type Boolean
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Boolean value indicating if the nav bar is translucent.</p>
 */
Titanium.UI.Window.translucent = null;

/**
 * @property url
 * @type String
 * @creationOnly
 * <p>Local URL to a JavaScript file with the windows instructions.</p>
 * @description <p>This window will create a new JavaScript sub-context that will run
in its own thread and global variable space. See the "Sub-contexts" section
in the main description for {@link Titanium.UI.Window Window}.</p>
 */
Titanium.UI.Window.url = null;

/**
 * @property windowPixelFormat
 * @type Number
 * @platform android 1.8
 * <p>Set the pixel format for the Activity's Window.</p>
 * @description <p>The property is ignored on a Titanium "lightweight" Window. Use one of the
{@link Titanium.UI.Android}.PIXEL_FORMAT constants to set the format.</p>
<p>For more information on pixel formats, see 
<a href="http://developer.android.com/reference/android/view/Window.html#setFormat(int)">Android SDK Window.setFormat</a></p>
 */
Titanium.UI.Window.windowPixelFormat = null;

/**
 * @property windowSoftInputMode
 * @type Number
 * @platform android 0.9
 * @creationOnly
 * <p>Determines whether a heavyweight window's soft input area (ie software keyboard) is visible 
as it receives focus and how the window behaves in order to accomodate it while keeping its 
contents in view.</p>
 * @description <p>In order for this property to take effect on an emulator, its Android Virtual Device (AVD) 
must be configured with the <code>Keyboard Support</code> setting set to <code>No</code>. Note that it is always 
recommended to test an application on a physical device to understand its true behavior.</p>
<p>Setting this property forces the creation of a heavyweight window. See "Android Heavyweight
and Lightweight Windows" in the main description of this class for more information.</p>
<p>This property is capable of representing two settings from the following two groups of 
settings using the <a href="http://en.wikipedia.org/wiki/Bitwise_operation#OR">bitwise OR</a> operation. </p>
<p>One of the group of soft input <em>visibility</em> constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_HIDDEN SOFT_INPUT_STATE_ALWAYS_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_ALWAYS_VISIBLE SOFT_INPUT_STATE_ALWAYS_VISIBLE}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_HIDDEN SOFT_INPUT_STATE_HIDDEN}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_STATE_UNSPECIFIED SOFT_INPUT_STATE_UNSPECIFIED}, 
or {@link Titanium.UI.Android#property-SOFT_INPUT_STATE_VISIBLE SOFT_INPUT_STATE_VISIBLE}.</p>
<p>One of the group of soft input <em>adjustment</em> constants, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_UNSPECIFIED SOFT_INPUT_ADJUST_UNSPECIFIED}, 
{@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_RESIZE SOFT_INPUT_ADJUST_RESIZE}, 
or {@link Titanium.UI.Android#property-SOFT_INPUT_ADJUST_PAN SOFT_INPUT_ADJUST_PAN}.</p>
<p>Note that in Javascript, bitwise OR is achieved using the single pipe operand. See the 
example for a demonstration.</p>
<p>For more information, see the official Android Developers website API Reference for 
<a href="http://developer.android.com/reference/android/view/Window.html#setSoftInputMode(int)">Window.setSoftInputMode</a>.</p>
 * <h3>Example</h3>
 * <h4>Soft Input Visibility and Adjustment</h4>
 * <p><p>Create a white window and respond to a click of it to open a red window containing a 
text area. Show the software keyboard automatically as the red window opens.</p></p><pre>var win1 = Ti.UI.createWindow({
  backgroundColor: 'white',
  exitOnClose: true,
  fullscreen: false,
  title: 'Click window to test'
});

// use bitwise OR to combine two settings for the windowSoftInputMode property
var softInput = Ti.UI.Android.SOFT_INPUT_STATE_ALWAYS_VISIBLE | Ti.UI.Android.SOFT_INPUT_ADJUST_PAN;

win1.addEventListener('click', function(){
var win2 = Ti.UI.createWindow({
  backgroundColor: 'red',
  fullscreen: false,
  windowSoftInputMode: softInput
});

var textArea = Ti.UI.createTextArea({
  value : 'I am a textarea',
  height : 200,
  width : 300,
  top : 200
});
win2.add(textArea);
win2.open();
});

win1.open();</pre>
 */
Titanium.UI.Window.windowSoftInputMode = null;

/**
 * @class Titanium.UI.iOS
 * @typestr Submodule of Titanium.UI
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.Module
 * <p>Apple iOS specific UI capabilities.  All properties, methods and events in this namespace will 
only work on Apple iOS devices.</p>
 */
Titanium.UI.iOS = {};

/**
 * @class Titanium.UI.iOS.3DMatrix
 * @typestr Object of Titanium.UI.iOS
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.Proxy
 * <p>The 3D Matrix is an object for holding values for a 3D affine transform.</p>
 * @description <p>The 3DMatrix is created by {@link Titanium.UI.iOS#method-create3DMatrix}. A 3D transform is
used to rotate, scale, translate, or skew the objects in three-dimensional
space. A 3D transform  is represented by a 4 by 4 matrix. </p>
<p>You create an <code>identity matrix</code> by creating a 3D Matrix with an empty
constructor.</p>
<p>See {@link Titanium.UI.3DMatrix} for sample usage.</p>
 * @deprecated 2.1.0 <p>Use {@link Titanium.UI.3DMatrix} instead.</p>
 */
Titanium.UI.iOS.3DMatrix = {};

/**
 * @method getM11
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m11 m11} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM11 = function(){};

/**
 * @method getM12
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m12 m12} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM12 = function(){};

/**
 * @method getM13
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m13 m13} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM13 = function(){};

/**
 * @method getM14
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m14 m14} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM14 = function(){};

/**
 * @method getM21
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m21 m21} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM21 = function(){};

/**
 * @method getM22
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m22 m22} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM22 = function(){};

/**
 * @method getM23
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m23 m23} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM23 = function(){};

/**
 * @method getM24
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m24 m24} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM24 = function(){};

/**
 * @method getM31
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m31 m31} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM31 = function(){};

/**
 * @method getM32
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m32 m32} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM32 = function(){};

/**
 * @method getM33
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m33 m33} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM33 = function(){};

/**
 * @method getM34
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m34 m34} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM34 = function(){};

/**
 * @method getM41
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m41 m41} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM41 = function(){};

/**
 * @method getM42
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m42 m42} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM42 = function(){};

/**
 * @method getM43
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m43 m43} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM43 = function(){};

/**
 * @method getM44
 * <p>Gets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m44 m44} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.3DMatrix.getM44 = function(){};

/**
 * @method invert
 * <p>Returns a matrix constructed by inverting an existing matrix.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.iOS.3DMatrix.invert = function(){};

/**
 * @method multiply
 * <p>Returns a matrix constructed by combining two existing matrices.</p>
 * @param {Titanium.UI.3DMatrix} t2 
 * <p>The second matrix. This matrix is concatenated to the matrix instance against which the 
function is invoked. The result of this function is the first matrix multiplied by the 
second matrix. You might perform several multiplications in order to create a single 
matrix that contains the cumulative effects of several transformations. </p>
<p>Note that matrix operations are not commutative - the order in which you concatenate 
matrices is important. That is, the result of multiplying matrix t1 by matrix t2 does 
not necessarily equal the result of multiplying matrix t2 by matrix t1.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.iOS.3DMatrix.multiply = function(t2){};

/**
 * @method rotate
 * <p>Returns a matrix constructed by rotating an existing matrix.</p>
 * @param {Number} angle 
 * <p>The angle, in degrees, by which to rotate the matrix. A positive value specifies 
counterclockwise rotation and a negative value specifies clockwise rotation.</p>
 * @param {Number} x 
 * <p>The x coordinate of the vector about which to rotate.</p>
 * @param {Number} y 
 * <p>The y coordinate of the vector about which to rotate.</p>
 * @param {Number} z 
 * <p>The z coordinate of the vector about which to rotate.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.iOS.3DMatrix.rotate = function(angle, x, y, z){};

/**
 * @method scale
 * <p>Returns a matrix constructed by scaling an existing matrix.</p>
 * @param {Number} sx 
 * <p>The value by which to scale x values of the matrix.</p>
 * @param {Number} sy 
 * <p>The value by which to scale y values of the matrix.</p>
 * @param {Number} sz 
 * <p>The value by which to scale z values of the matrix.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.iOS.3DMatrix.scale = function(sx, sy, sz){};

/**
 * @method setM11
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m11 m11} property.</p>
 * @param {Number} m11 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM11 = function(m11){};

/**
 * @method setM12
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m12 m12} property.</p>
 * @param {Number} m12 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM12 = function(m12){};

/**
 * @method setM13
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m13 m13} property.</p>
 * @param {Number} m13 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM13 = function(m13){};

/**
 * @method setM14
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m14 m14} property.</p>
 * @param {Number} m14 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM14 = function(m14){};

/**
 * @method setM21
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m21 m21} property.</p>
 * @param {Number} m21 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM21 = function(m21){};

/**
 * @method setM22
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m22 m22} property.</p>
 * @param {Number} m22 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM22 = function(m22){};

/**
 * @method setM23
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m23 m23} property.</p>
 * @param {Number} m23 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM23 = function(m23){};

/**
 * @method setM24
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m24 m24} property.</p>
 * @param {Number} m24 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM24 = function(m24){};

/**
 * @method setM31
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m31 m31} property.</p>
 * @param {Number} m31 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM31 = function(m31){};

/**
 * @method setM32
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m32 m32} property.</p>
 * @param {Number} m32 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM32 = function(m32){};

/**
 * @method setM33
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m33 m33} property.</p>
 * @param {Number} m33 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM33 = function(m33){};

/**
 * @method setM34
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m34 m34} property.</p>
 * @param {Number} m34 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM34 = function(m34){};

/**
 * @method setM41
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m41 m41} property.</p>
 * @param {Number} m41 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM41 = function(m41){};

/**
 * @method setM42
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m42 m42} property.</p>
 * @param {Number} m42 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM42 = function(m42){};

/**
 * @method setM43
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m43 m43} property.</p>
 * @param {Number} m43 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM43 = function(m43){};

/**
 * @method setM44
 * <p>Sets the value of the {@link Titanium.UI.iOS.3DMatrix#property-m44 m44} property.</p>
 * @param {Number} m44 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.3DMatrix.setM44 = function(m44){};

/**
 * @method translate
 * <p>Returns a matrix constructed by translating an existing matrix.</p>
 * @param {Number} tx 
 * <p>The value by which to move x values with the matrix.</p>
 * @param {Number} ty 
 * <p>The value by which to move y values with the matrix. Negative values move the target 
up the display whereas towards the user and negative values away from the user.</p>
 * @param {Number} tz 
 * <p>The value by which to move z values with the matrix. Negative values move the target 
towards the user whereas negative values away from the user.</p>
 * @return {Titanium.UI.3DMatrix} 
*/
Titanium.UI.iOS.3DMatrix.translate = function(tx, ty, tz){};

/**
 * @property m11
 * @type Number
 * <p>The entry at position [1,1] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m11 = null;

/**
 * @property m12
 * @type Number
 * <p>The entry at position [1,2] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m12 = null;

/**
 * @property m13
 * @type Number
 * <p>The entry at position [1,3] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m13 = null;

/**
 * @property m14
 * @type Number
 * <p>The entry at position [1,4] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m14 = null;

/**
 * @property m21
 * @type Number
 * <p>The entry at position [2,1] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m21 = null;

/**
 * @property m22
 * @type Number
 * <p>The entry at position [2,2] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m22 = null;

/**
 * @property m23
 * @type Number
 * <p>The entry at position [2,3] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m23 = null;

/**
 * @property m24
 * @type Number
 * <p>The entry at position [2,4] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m24 = null;

/**
 * @property m31
 * @type Number
 * <p>The entry at position [3,1] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m31 = null;

/**
 * @property m32
 * @type Number
 * <p>The entry at position [3,2] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m32 = null;

/**
 * @property m33
 * @type Number
 * <p>The entry at position [3,3] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m33 = null;

/**
 * @property m34
 * @type Number
 * <p>The entry at position [3,4] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m34 = null;

/**
 * @property m41
 * @type Number
 * <p>The entry at position [4,1] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m41 = null;

/**
 * @property m42
 * @type Number
 * <p>The entry at position [4,2] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m42 = null;

/**
 * @property m43
 * @type Number
 * <p>The entry at position [4,3] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m43 = null;

/**
 * @property m44
 * @type Number
 * <p>The entry at position [4,4] in the matrix.</p>
 */
Titanium.UI.iOS.3DMatrix.m44 = null;

/**
 * @class Titanium.UI.iOS.AdView
 * @typestr Object of Titanium.UI.iOS
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.UI.View
 * <p>The AdView is a view for display Apple iAds.</p>
 * @description <p>The Ad view is created by the {@link Titanium.UI.iOS#method-createAdView} method.</p>
 */
Titanium.UI.iOS.AdView = {};







/**
 * @method cancelAction
 * <p>Cancel a banner to uncover the user interface.</p>
 * @description <p>A banner view action can cover your application's user interface. However, your application 
continues to run, and receives events normally. If your application receives an event that 
requires the user's attention, it can programmatically cancel the action and uncover its 
interface by calling cancelAction. Canceling actions frequently can cause a loss of revenue 
for your application.</p>
 * @return void
*/
Titanium.UI.iOS.AdView.cancelAction = function(){};

/**
 * @method getAdSize
 * <p>Gets the value of the {@link Titanium.UI.iOS.AdView#property-adSize adSize} property.</p>
 * @return {String} 
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.UI.iOS.AdView.getAdSize = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundSelectedImage = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.AdView.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iOS.AdView.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iOS.AdView.getFocusable = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iOS.AdView.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.AdView.getKeepScreenOn = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.AdView.getKeepScreenOn = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.AdView.getSoftKeyboardOnFocus = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.AdView.getSoftKeyboardOnFocus = function(){};

/**
 * @method setAdSize
 * <p>Sets the value of the {@link Titanium.UI.iOS.AdView#property-adSize adSize} property.</p>
 * @param {String} adSize 
 * <p>New value for the property.</p>
 * @return void
 * @platform iphone 2.0
 * @platform ipad 2.0
*/
Titanium.UI.iOS.AdView.setAdSize = function(adSize){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundSelectedImage = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.AdView.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iOS.AdView.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iOS.AdView.setFocusable = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iOS.AdView.setFocusable = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.AdView.setKeepScreenOn = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.AdView.setKeepScreenOn = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.AdView.setSoftKeyboardOnFocus = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.AdView.setSoftKeyboardOnFocus = function(){};

/**
 * @property adSize
 * @type String
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Size of the advertisement when minimized.</p>
 * @description <p>Apple only allows setting ads as specific sizes, meaning that traditional view sizing does 
not affect ads. Ads always display in full-screen mode when a user clicks on them. </p>
<p>Should be set to either {@link Titanium.UI.iOS#property-AD_SIZE_PORTRAIT AD_SIZE_PORTRAIT} or 
{@link Titanium.UI.iOS#property-AD_SIZE_LANDSCAPE AD_SIZE_LANDSCAPE}. Attempting to set this property to 
any other value will cause an exception. </p>
<p>Users are still allowed to set the view's {@link Titanium.UI.View#property-width width} and 
{@link Titanium.UI.View#property-height height}, but this does not affect the size of the ad itself. It is 
recommended that the <code>auto</code> value is used for these properties instead, to compute the 
view's size from the adSize.</p>
 */
Titanium.UI.iOS.AdView.adSize = null;

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.AdView.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.AdView.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.AdView.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.AdView.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.AdView.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.AdView.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iOS.AdView.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iOS.AdView.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iOS.AdView.keepScreenOn = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.AdView.softKeyboardOnFocus = null;

/**
 * @class Titanium.UI.iOS.CoverFlowView
 * @typestr Object of Titanium.UI.iOS
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.UI.View
 * <p>The cover flow view is a container showing animated three-dimensional images in a style 
consistent with the cover flow presentation style used for iPod, iTunes, and file browsing.</p>
 * @description <p>The cover flow view is created by the {@link Titanium.UI.iOS#method-createCoverFlowView} method.</p>
 * <h3>Examples</h3>
 * <h4>Simple 3 image cover flow example</h4>
 * <p><p>Create a simple cover flow view.</p></p><pre>var view = Titanium.UI.iOS.createCoverFlowView({
backgroundColor:'#000',
images:['a.png','b.png','c.png']
});
window.add(view);</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="window"&gt;
        &lt;CoverFlowView id="view" platform="ios" backgroundColor="#000"&gt;

            &lt;!-- The Images tag sets the CoverFlowView.images property. --&gt;
            &lt;Images&gt;

                &lt;!-- Assign the image by node text or the image attribute. --&gt;
                &lt;!-- Can also specify the width and height attributes. --&gt;

                &lt;Image&gt;a.png&lt;/Image&gt;
                &lt;Image&gt;b.png&lt;/Image&gt;
                &lt;Image&gt;c.png&lt;/Image&gt;

            &lt;/Images&gt;

            &lt;!-- Place additional views for the CoverFlowView here. --&gt;

        &lt;/CoverFlowView&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.iOS.CoverFlowView = {};

















/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getFocusable = function(){};

/**
 * @method getImages
 * <p>Gets the value of the {@link Titanium.UI.iOS.CoverFlowView#property-images images} property.</p>
 * @return {String[]/Titanium.Blob[]/Titanium.Filesystem.File[]/CoverFlowImageType[]} 
*/
Titanium.UI.iOS.CoverFlowView.getImages = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getKeepScreenOn = function(){};

/**
 * @method getSelected
 * <p>Gets the value of the {@link Titanium.UI.iOS.CoverFlowView#property-selected selected} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.CoverFlowView.getSelected = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.getSoftKeyboardOnFocus = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setFocusable = function(){};

/**
 * @method setImage
 * <p>Changes the image for a specified index.</p>
 * @description <p>To specify a size for the image, you may pass the image as a simple dictionary, as defined 
in {@link CoverFlowImageType}.  If you specify a size, the size must be exact, not 'auto' or a 
percentage size. </p>
<p>If the image is passed as a <code>File</code> object or file path, the filename is checked. If the 
filename includes the '@2x' string used to identify high-resolution images for the Retina 
display, the image is treated accordingly.</p>
 * @param {Number} index 
 * <p>Index to add the image at.</p>
 * @param {String/Titanium.Blob/Titanium.Filesystem.File/CoverFlowImageType} image 
 * <p>Image to add at this index.</p>
 * @return void
*/
Titanium.UI.iOS.CoverFlowView.setImage = function(index, image){};

/**
 * @method setImages
 * <p>Sets the value of the {@link Titanium.UI.iOS.CoverFlowView#property-images images} property.</p>
 * @param {String[]/Titanium.Blob[]/Titanium.Filesystem.File[]/CoverFlowImageType[]} images 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.CoverFlowView.setImages = function(images){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setKeepScreenOn = function(){};

/**
 * @method setSelected
 * <p>Sets the value of the {@link Titanium.UI.iOS.CoverFlowView#property-selected selected} property.</p>
 * @param {Number} selected 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.CoverFlowView.setSelected = function(selected){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.setSoftKeyboardOnFocus = function(){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.focusable = null;

/**
 * @property images
 * @type String[]/Titanium.Blob[]/Titanium.Filesystem.File[]/CoverFlowImageType[]
 * <p>Images to display in the view.</p>
 */
Titanium.UI.iOS.CoverFlowView.images = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.keepScreenOn = null;

/**
 * @property selected
 * @type Number
 * <p>Index to make selected.</p>
 */
Titanium.UI.iOS.CoverFlowView.selected = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.CoverFlowView.softKeyboardOnFocus = null;

/**
 * @class Titanium.UI.iOS.DocumentViewer
 * @typestr Object of Titanium.UI.iOS
 * @platform iphone 2.1.1
 * @platform ipad 2.1.1
 * @extends Titanium.UI.View
 * <p>A DocumentViewer provides in-app support for managing user interactions with files on the 
local system.</p>
 * @description <p>The DocumentViewer is created by the method {@link Titanium.UI.iOS#method-createDocumentViewer}. </p>
<p>For example, an email program might use this class to allow the user to preview attachments and 
open them in other apps. Use this class to present an appropriate user interface for previewing 
or printing a specified file. </p>
 * <h3>Example</h3>
 * <h4>Document Viewer Example</h4>
 * <pre>In this example, we create a document viewer with a window button and right navigation button.

   Titanium.UI.setBackgroundColor('#000');
   //creating the window
   var win1 = Titanium.UI.createWindow({
       title:'win 1',
       backgroundColor:'#fff'
       });
    //add window - navigation bar
    var modalWin = Ti.UI.createWindow();
    //nav bar
    var navmodal = Ti.UI.iPhone.createNavigationGroup({
    window:modalWin
    });
    win1.add(navmodal);
    //button for the nav bar
    var b2t = Titanium.UI.createButton({
      title:'Launch'
      });
    modalWin.RightNavButton = b2t;
    //button for the window
    var b1t = Titanium.UI.createButton({
      title:'Launch',
      height:40,
      width:200,
      top:270
      });
    win1.add(b1t);
    //Setting up the documentviewer
    z = Ti.UI.iOS.createDocumentViewer({url:'Example.pdf'});
    //documentviewer with animation set on and a quicklook view poping up next to a view
    b1t.addEventListener('click', function(){z.show({animated:false,view:b2t});});
    //documentviewer with animation set off
    b2t.addEventListener('click', function(){z.show();});
    win1.open();</pre>
 */
Titanium.UI.iOS.DocumentViewer = {};




/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getKeepScreenOn = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.getSoftKeyboardOnFocus = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setFocusable = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setKeepScreenOn = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.setSoftKeyboardOnFocus = function(){};

/**
 * @method setUrl
 * <p>Sets the url of the document viewer.</p>
 * @param {String} url 
 * <p>The new url</p>
 * @return void
*/
Titanium.UI.iOS.DocumentViewer.setUrl = function(url){};

/**
 * @method show
 * <p>Displays the document viewer over the current view.</p>
 * @param {Boolean} animated 
 * <p>Indicates whether the show transition should be animated.</p>
 * @param {Object} view 
 * <p>The view property would specify the view relative to where the viewer should display.</p>
 * @return void
*/
Titanium.UI.iOS.DocumentViewer.show = function(animated, view){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.keepScreenOn = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.DocumentViewer.softKeyboardOnFocus = null;

/**
 * @class Titanium.UI.iOS.TabbedBar
 * @typestr Object of Titanium.UI.iOS
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.UI.View
 * <p>A button bar that maintains a selected state.</p>
 * @description <p>The tabbed bar is created by the {@link Titanium.UI.iOS#method-createTabbedBar} method. </p>
<p>A tabbed bar is a button bar that maintains a state (visually distinguished as a pressed or 
selected look). </p>
<p>It is closely related to the <code>ButtonBar</code> control. See the description of 
{@link Titanium.UI.ButtonBar ButtonBar} for information on styling tabbed bars and buttons bars.</p>
 * <h3>Examples</h3>
 * <h4>Simple Tabbed Bar with 3 items</h4>
 * <p><p>Create a tabbed bar with 3 items.</p></p><pre>var bb1 = Titanium.UI.iOS.createTabbedBar({
labels:['One', 'Two', 'Three'],
backgroundColor:'#336699',
top:50,
style:Titanium.UI.iPhone.SystemButtonStyle.BAR,
height:25,
width:200
});
win.add(bb1);</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win"&gt;
        &lt;TabbedBar id="bb1" platform="ios" backgroundColor="#369" top="50" height="25" width="200"&gt;

            &lt;!-- The Labels tag sets the TabbedBar.labels property. --&gt;
            &lt;Labels&gt;

                &lt;!-- Specify text with node text or the title attribute. --&gt;
                &lt;!-- Can also specify the enabled, image and width attributes. --&gt;

                &lt;Label&gt;One&lt;/Label&gt;
                &lt;Label&gt;Two&lt;/Label&gt;
                &lt;Label&gt;Three&lt;/Label&gt;

            &lt;/Labels&gt;

            &lt;!-- Place additional views for the TabbedBar here. --&gt;

        &lt;/TabbedBar&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.iOS.TabbedBar = {};














/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getFocusable = function(){};

/**
 * @method getIndex
 * <p>Gets the value of the {@link Titanium.UI.iOS.TabbedBar#property-index index} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.TabbedBar.getIndex = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getKeepScreenOn = function(){};

/**
 * @method getLabels
 * <p>Gets the value of the {@link Titanium.UI.iOS.TabbedBar#property-labels labels} property.</p>
 * @return {String[]/BarItemType[]} 
*/
Titanium.UI.iOS.TabbedBar.getLabels = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.TabbedBar.getSoftKeyboardOnFocus = function(){};

/**
 * @method getStyle
 * <p>Gets the value of the {@link Titanium.UI.iOS.TabbedBar#property-style style} property.</p>
 * @return {Number} 
*/
Titanium.UI.iOS.TabbedBar.getStyle = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setFocusable = function(){};

/**
 * @method setIndex
 * <p>Sets the value of the {@link Titanium.UI.iOS.TabbedBar#property-index index} property.</p>
 * @param {Number} index 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.TabbedBar.setIndex = function(index){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setKeepScreenOn = function(){};

/**
 * @method setLabels
 * <p>Sets the value of the {@link Titanium.UI.iOS.TabbedBar#property-labels labels} property.</p>
 * @param {String[]/BarItemType[]} labels 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.TabbedBar.setLabels = function(labels){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.TabbedBar.setSoftKeyboardOnFocus = function(){};

/**
 * @method setStyle
 * <p>Sets the value of the {@link Titanium.UI.iOS.TabbedBar#property-style style} property.</p>
 * @param {Number} style 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.TabbedBar.setStyle = function(style){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.TabbedBar.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.TabbedBar.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iOS.TabbedBar.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iOS.TabbedBar.focusable = null;

/**
 * @property index
 * @type Number
 * <p>Index of the currently selected button.</p>
 */
Titanium.UI.iOS.TabbedBar.index = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iOS.TabbedBar.keepScreenOn = null;

/**
 * @property labels
 * @type String[]/BarItemType[]
 * <p>Array of labels for the tabbed bar.</p>
 * @description <p>The labels can be specified either using an array of strings, in which case each string 
defines the title for a button, or using an array of simple dictionary objects, 
{@link BarItemType}, which can specify title, image, width and enabled state for each button.</p>
 */
Titanium.UI.iOS.TabbedBar.labels = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.TabbedBar.softKeyboardOnFocus = null;

/**
 * @property [style=Titanium.UI.iPhone.SystemButtonStyle.PLAIN]
 * @type Number
 * <p>Style of the tabbed bar.</p>
 * @description <p>Specify one of the constants defined in 
{@link Titanium.UI.iPhone.SystemButtonStyle}, either <code>PLAIN</code>, <code>BORDERED</code>, or <code>BAR</code>.</p>
<p>The <code>BAR</code> style specifies a more compact style and allows the bar's background color or 
gradient to show through.</p>
 */
Titanium.UI.iOS.TabbedBar.style = null;

/**
 * @class Titanium.UI.iOS.Toolbar
 * @typestr Object of Titanium.UI.iOS
 * @platform iphone 1.4
 * @platform ipad 1.4
 * @extends Titanium.UI.View
 * <p>An iOS toolbar, which can contain buttons and certain other controls.</p>
 * @description <p>The toolbar is created by the {@link Titanium.UI.iOS#method-createToolbar} method. </p>
<p>A toolbar can contain buttons, as well as certain other widgets, including text fields and 
labels. </p>
<p>To provide spacing between items in the toolbar, you can use the special iOS system button types, 
{@link Titanium.UI.iPhone.SystemButton#property-FIXED_SPACE FIXED_SPACE} and 
{@link Titanium.UI.iPhone.SystemButton#property-FLEXIBLE_SPACE FLEXIBLE_SPACE}.</p>
<p>Note that toolbars are positioned like other views (using the <code>top</code> and <code>bottom</code> properties, 
for example), but the iOS Human Interface Guidelines have specific requirements for placing 
toolbars: on iPhone, a toolbar should be at the bottom of the window. On the iPad, a toolbar 
should appear at the top or bottom of a window.</p>
<p>You can specify that a border be drawn on the top or bottom of the toolbar, using the
{@link Titanium.UI.iOS.Toolbar#property-borderTop borderTop} and
{@link Titanium.UI.iOS.Toolbar#property-borderBottom borderBottom} properties. While the standard
<code>borderColor</code>, <code>borderWidth</code>, and <code>borderRadius</code> properties are supported on toolbars,
using these properties adds a border on all four sides of the control, which may be
undesirable.</p>
<p>Due to an iOS limitation, the buttons in the toolbar only support the <code>click</code> event.
The native object underlying a toolbar button does not generate standard view events,
such as <code>touchstart</code> and <code>touchend</code>.</p>
<p>See also:</p>
<ul>
<li><a href="http://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/UIElementGuidelines/UIElementGuidelines.html#//apple_ref/doc/uid/TP40006556-CH13-SW10">Toolbar in the iOS Human Interface Guidelines.</a></li>
</ul>
 * <h3>Examples</h3>
 * <h4>Simple Toolbar</h4>
 * <p><p>The following code excerpt creates a simple toolbar, placed at the bottom of the window. </p></p><pre>var send = Titanium.UI.createButton({
    title: 'Send',
    style: Titanium.UI.iPhone.SystemButtonStyle.DONE,
});

var camera = Titanium.UI.createButton({
    systemButton: Titanium.UI.iPhone.SystemButton.CAMERA,
});

var cancel = Titanium.UI.createButton({
    systemButton: Titanium.UI.iPhone.SystemButton.CANCEL
});

flexSpace = Titanium.UI.createButton({
    systemButton:Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE
});

var toolbar = Titanium.UI.iOS.createToolbar({
    items:[send, flexSpace, camera, flexSpace, cancel],
    bottom:0,
    borderTop:true,
    borderBottom:false
}); 
win.add(toolbar);
</pre>
 * <p><p>Note the use of the flexible space for positioning the toolbar buttons -- the 
<code>FLEXIBLE_SPACE</code> button doesn't appear as a button, but a variable space between the 
controls on either side of it. Available space in the toolbar is divided between all of the 
flexible space buttons in the toolbar. Without the flexible spaces in this example, 
the toolbar buttons would be grouped tightly together on the left side of the toolbar.</p></p>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy view.</p></p><pre>&lt;Alloy&gt;
    &lt;Window id="win"&gt;
        &lt;Toolbar platform="ios" bottom="0" borderTop="true" borderBottom="false"&gt;

            &lt;!-- The Items tag sets the Toolbar.items property. --&gt;
            &lt;Items&gt;
                &lt;Button id="send" title="Send" style="Ti.UI.iPhone.SystemButtonStyle.DONE" /&gt;
                &lt;FlexSpace/&gt;
                &lt;Button id="camera" systemButton="Ti.UI.iPhone.SystemButton.CAMERA" /&gt;
                &lt;FlexSpace/&gt;
                &lt;Button id="cancel" systemButton="Ti.UI.iPhone.SystemButton.CANCEL" /&gt;
            &lt;/Items&gt;

            &lt;!-- Place additional views for the Toolbar here. --&gt;

        &lt;/Toolbar&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.iOS.Toolbar = {};





/**
 * @method getBackgroundColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundColor = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundLeftCap 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundLeftCap = function(){};

/**
 * @method getBackgroundRepeat 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundRepeat = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundSelectedImage = function(){};

/**
 * @method getBackgroundTopCap 
 * @hide
*/Titanium.UI.iOS.Toolbar.getBackgroundTopCap = function(){};

/**
 * @method getBarColor
 * <p>Gets the value of the {@link Titanium.UI.iOS.Toolbar#property-barColor barColor} property.</p>
 * @return {String} 
*/
Titanium.UI.iOS.Toolbar.getBarColor = function(){};

/**
 * @method getBorderBottom
 * <p>Gets the value of the {@link Titanium.UI.iOS.Toolbar#property-borderBottom borderBottom} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.iOS.Toolbar.getBorderBottom = function(){};

/**
 * @method getBorderTop
 * <p>Gets the value of the {@link Titanium.UI.iOS.Toolbar#property-borderTop borderTop} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.iOS.Toolbar.getBorderTop = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iOS.Toolbar.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iOS.Toolbar.getFocusable = function(){};

/**
 * @method getItems
 * <p>Gets the value of the {@link Titanium.UI.iOS.Toolbar#property-items items} property.</p>
 * @return {Titanium.UI.View[]} 
*/
Titanium.UI.iOS.Toolbar.getItems = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.Toolbar.getKeepScreenOn = function(){};

/**
 * @method getLayout 
 * @hide
*/Titanium.UI.iOS.Toolbar.getLayout = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.Toolbar.getSoftKeyboardOnFocus = function(){};

/**
 * @method getTranslucent
 * <p>Gets the value of the {@link Titanium.UI.iOS.Toolbar#property-translucent translucent} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.iOS.Toolbar.getTranslucent = function(){};

/**
 * @method setBackgroundColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundColor = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundLeftCap 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundLeftCap = function(){};

/**
 * @method setBackgroundRepeat 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundRepeat = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundSelectedImage = function(){};

/**
 * @method setBackgroundTopCap 
 * @hide
*/Titanium.UI.iOS.Toolbar.setBackgroundTopCap = function(){};

/**
 * @method setBarColor
 * <p>Sets the value of the {@link Titanium.UI.iOS.Toolbar#property-barColor barColor} property.</p>
 * @param {String} barColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.Toolbar.setBarColor = function(barColor){};

/**
 * @method setBorderBottom
 * <p>Sets the value of the {@link Titanium.UI.iOS.Toolbar#property-borderBottom borderBottom} property.</p>
 * @param {Boolean} borderBottom 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.Toolbar.setBorderBottom = function(borderBottom){};

/**
 * @method setBorderTop
 * <p>Sets the value of the {@link Titanium.UI.iOS.Toolbar#property-borderTop borderTop} property.</p>
 * @param {Boolean} borderTop 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.Toolbar.setBorderTop = function(borderTop){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iOS.Toolbar.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iOS.Toolbar.setFocusable = function(){};

/**
 * @method setItems
 * <p>Sets the value of the {@link Titanium.UI.iOS.Toolbar#property-items items} property.</p>
 * @param {Titanium.UI.View[]} items 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.Toolbar.setItems = function(items){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iOS.Toolbar.setKeepScreenOn = function(){};

/**
 * @method setLayout 
 * @hide
*/Titanium.UI.iOS.Toolbar.setLayout = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.Toolbar.setSoftKeyboardOnFocus = function(){};

/**
 * @method setTranslucent
 * <p>Sets the value of the {@link Titanium.UI.iOS.Toolbar#property-translucent translucent} property.</p>
 * @param {Boolean} translucent 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iOS.Toolbar.setTranslucent = function(translucent){};

/**
 * @property backgroundColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundColor = null;

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundFocusedImage = null;

/**
 * @property backgroundLeftCap 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundLeftCap = null;

/**
 * @property backgroundRepeat 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundRepeat = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundSelectedImage = null;

/**
 * @property backgroundTopCap 
 * @hide
*/Titanium.UI.iOS.Toolbar.backgroundTopCap = null;

/**
 * @property barColor
 * @type String
 * <p>Background color for the toolbar, as a color name or hex triplet.</p>
 * @description <p>To use a background image on the toolbar, either <code>barColor</code> must be a fully or
partially transparent color, 
or the {@link Titanium.UI.iOS.Toolbar#property-translucent translucent} property must be <code>true</code>.</p>
<p>To use a background gradient on a toolbar, <code>barColor</code> must be <code>'transparent'</code>
<em>and</em> the the {@link Titanium.UI.iOS.Toolbar#property-translucent translucent} property must be <code>true</code>.</p>
<p>For information about color values, see the "Colors" section of {@link Titanium.UI}. </p>
 */
Titanium.UI.iOS.Toolbar.barColor = null;

/**
 * @property [borderBottom=true]
 * @type Boolean
 * <p>If <code>true</code>, a border is drawn on the bottom of the toolbar.</p>
 */
Titanium.UI.iOS.Toolbar.borderBottom = null;

/**
 * @property [borderTop=true]
 * @type Boolean
 * <p>If <code>true</code>, a border is drawn on the top of the toolbar.</p>
 */
Titanium.UI.iOS.Toolbar.borderTop = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iOS.Toolbar.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iOS.Toolbar.focusable = null;

/**
 * @property items
 * @type Titanium.UI.View[]
 * <p>An array of buttons (or other widgets) contained in the toolbar.</p>
 */
Titanium.UI.iOS.Toolbar.items = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iOS.Toolbar.keepScreenOn = null;

/**
 * @property layout 
 * @hide
*/Titanium.UI.iOS.Toolbar.layout = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iOS.Toolbar.softKeyboardOnFocus = null;

/**
 * @property [translucent=false]
 * @type Boolean
 * <p>If <code>true</code>, a translucent background color is used for the toolbar.</p>
 * @description <p>Note that if <code>translucent</code> is <code>false</code>, views under the toolbar are hidden, even
if {@link Titanium.UI.iOS.Toolbar#property-barColor barColor} is set to a semi-transparent or 
transparent color.</p>
 */
Titanium.UI.iOS.Toolbar.translucent = null;

/**
 * @method create3DMatrix
 * <p>Creates and returns an instance of {@link Titanium.UI.iOS.3DMatrix}.</p>
 * @deprecated 2.1.0 <p>Use {@link Titanium.UI.3DMatrix} instead.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iOS.3DMatrix} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iOS.3DMatrix} 
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.UI.iOS.create3DMatrix = function(parameters){};

/**
 * @method createAdView
 * <p>Creates and returns an instance of {@link Titanium.UI.iOS.AdView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iOS.AdView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iOS.AdView} 
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.UI.iOS.createAdView = function(parameters){};

/**
 * @method createCoverFlowView
 * <p>Creates and returns an instance of {@link Titanium.UI.iOS.CoverFlowView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iOS.CoverFlowView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iOS.CoverFlowView} 
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.UI.iOS.createCoverFlowView = function(parameters){};

/**
 * @method createDocumentViewer
 * <p>Creates and returns an instance of {@link Titanium.UI.iOS.DocumentViewer}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iOS.DocumentViewer} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iOS.DocumentViewer} 
 * @platform iphone 2.1.1
 * @platform ipad 2.1.1
*/
Titanium.UI.iOS.createDocumentViewer = function(parameters){};

/**
 * @method createTabbedBar
 * <p>Creates and returns an instance of {@link Titanium.UI.iOS.TabbedBar}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iOS.TabbedBar} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iOS.TabbedBar} 
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.UI.iOS.createTabbedBar = function(parameters){};

/**
 * @method createToolbar
 * <p>Creates and returns an instance of {@link Titanium.UI.iOS.Toolbar}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iOS.Toolbar} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iOS.Toolbar} 
 * @platform iphone 1.4
 * @platform ipad 1.4
*/
Titanium.UI.iOS.createToolbar = function(parameters){};

/**
 * @property AD_SIZE_LANDSCAPE
 * @type String
 * @readonly
 * @platform iphone 1.8.1
 * @platform ipad 1.8.1
 * <p>Use with {@link Titanium.UI.iOS.AdView#property-adSize AdView.adSize} to specify a banner ad size
appropriate for landscape orientations.</p>
 * @description <p>Note that fullscreen ads always display in portrait orientation.</p>
 */
Titanium.UI.iOS.AD_SIZE_LANDSCAPE = null;

/**
 * @property AD_SIZE_PORTRAIT
 * @type String
 * @readonly
 * @platform iphone 1.8.1
 * @platform ipad 1.8.1
 * <p>Use with {@link Titanium.UI.iOS.AdView#property-adSize AdView.adSize} to specify a banner ad size
appropriate for portrait orientations.</p>
 * @description <p>Note that fullscreen ads always display in portrait orientation.</p>
 */
Titanium.UI.iOS.AD_SIZE_PORTRAIT = null;

/**
 * @property ANIMATION_CURVE_EASE_IN
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that starts 
slowly and speeds up.</p>
 * @deprecated 2.1.0 <p>Use {@link Titanium.UI#property-ANIMATION_CURVE_EASE_IN} instead.</p>
 */
Titanium.UI.iOS.ANIMATION_CURVE_EASE_IN = null;

/**
 * @property ANIMATION_CURVE_EASE_IN_OUT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that starts 
slowly, and speeds up, then slows down at the end of the animation.</p>
 * @deprecated 2.1.0 <p>Use {@link Titanium.UI#property-ANIMATION_CURVE_EASE_IN_OUT} instead.</p>
 */
Titanium.UI.iOS.ANIMATION_CURVE_EASE_IN_OUT = null;

/**
 * @property ANIMATION_CURVE_EASE_OUT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that starts 
quickly, then slows down at the end of the animation.</p>
 * @deprecated 2.1.0 <p>Use {@link Titanium.UI#property-ANIMATION_CURVE_EASE_OUT} instead.</p>
 */
Titanium.UI.iOS.ANIMATION_CURVE_EASE_OUT = null;

/**
 * @property ANIMATION_CURVE_LINEAR
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that proceeds 
at a constant rate.</p>
 * @deprecated 2.1.0 <p>Use {@link Titanium.UI#property-ANIMATION_CURVE_LINEAR} instead.</p>
 */
Titanium.UI.iOS.ANIMATION_CURVE_LINEAR = null;

/**
 * @property AUTODETECT_ADDRESS
 * @type Number
 * @readonly
 * @platform iphone 1.4
 * @platform ipad 1.4
 * <p>Converts strings formatted as addresses into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_MAP_ADDRESSES} instead.</p>
 */
Titanium.UI.iOS.AUTODETECT_ADDRESS = null;

/**
 * @property AUTODETECT_ALL
 * @type Number
 * @readonly
 * @platform iphone 1.4
 * @platform ipad 1.4
 * <p>Converts all detectable types of data into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_ALL} instead.</p>
 */
Titanium.UI.iOS.AUTODETECT_ALL = null;

/**
 * @property AUTODETECT_CALENDAR
 * @type Number
 * @readonly
 * @platform iphone 1.4
 * @platform ipad 1.4
 * <p>Converts strings formatted as calendar events into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_CALENDAR} instead.</p>
 */
Titanium.UI.iOS.AUTODETECT_CALENDAR = null;

/**
 * @property AUTODETECT_LINK
 * @type Number
 * @readonly
 * @platform iphone 1.4
 * @platform ipad 1.4
 * <p>Converts strings formatted as URLs into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_URLS} instead.</p>
 */
Titanium.UI.iOS.AUTODETECT_LINK = null;

/**
 * @property AUTODETECT_NONE
 * @type Number
 * @readonly
 * @platform iphone 1.4
 * @platform ipad 1.4
 * <p>Disables converting strings into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_NONE} instead.</p>
 */
Titanium.UI.iOS.AUTODETECT_NONE = null;

/**
 * @property AUTODETECT_PHONE
 * @type Number
 * @readonly
 * @platform iphone 1.4
 * @platform ipad 1.4
 * <p>Converts strings formatted as phone numbers into clickable links.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI#property-AUTOLINK_PHONE_NUMBERS} instead.</p>
 */
Titanium.UI.iOS.AUTODETECT_PHONE = null;

/**
 * @property BLEND_MODE_CLEAR
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_CLEAR = null;

/**
 * @property BLEND_MODE_COLOR
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_COLOR = null;

/**
 * @property BLEND_MODE_COLOR_BURN
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_COLOR_BURN = null;

/**
 * @property BLEND_MODE_COLOR_DODGE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_COLOR_DODGE = null;

/**
 * @property BLEND_MODE_COPY
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_COPY = null;

/**
 * @property BLEND_MODE_DARKEN
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_DARKEN = null;

/**
 * @property BLEND_MODE_DESTINATION_ATOP
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_DESTINATION_ATOP = null;

/**
 * @property BLEND_MODE_DESTINATION_IN
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_DESTINATION_IN = null;

/**
 * @property BLEND_MODE_DESTINATION_OUT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_DESTINATION_OUT = null;

/**
 * @property BLEND_MODE_DESTINATION_OVER
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_DESTINATION_OVER = null;

/**
 * @property BLEND_MODE_DIFFERENCE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_DIFFERENCE = null;

/**
 * @property BLEND_MODE_EXCLUSION
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_EXCLUSION = null;

/**
 * @property BLEND_MODE_HARD_LIGHT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_HARD_LIGHT = null;

/**
 * @property BLEND_MODE_HUE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_HUE = null;

/**
 * @property BLEND_MODE_LIGHTEN
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_LIGHTEN = null;

/**
 * @property BLEND_MODE_LUMINOSITY
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_LUMINOSITY = null;

/**
 * @property BLEND_MODE_MULTIPLY
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_MULTIPLY = null;

/**
 * @property BLEND_MODE_NORMAL
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_NORMAL = null;

/**
 * @property BLEND_MODE_OVERLAY
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_OVERLAY = null;

/**
 * @property BLEND_MODE_PLUS_DARKER
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_PLUS_DARKER = null;

/**
 * @property BLEND_MODE_PLUS_LIGHTER
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_PLUS_LIGHTER = null;

/**
 * @property BLEND_MODE_SATURATION
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_SATURATION = null;

/**
 * @property BLEND_MODE_SCREEN
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_SCREEN = null;

/**
 * @property BLEND_MODE_SOFT_LIGHT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_SOFT_LIGHT = null;

/**
 * @property BLEND_MODE_SOURCE_ATOP
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_SOURCE_ATOP = null;

/**
 * @property BLEND_MODE_SOURCE_IN
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_SOURCE_IN = null;

/**
 * @property BLEND_MODE_SOURCE_OUT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_SOURCE_OUT = null;

/**
 * @property BLEND_MODE_XOR
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @description <p>See {@link Titanium.UI.MaskedImage} for more information on blend modes.</p>
 */
Titanium.UI.iOS.BLEND_MODE_XOR = null;

/**
 * @property COLOR_GROUP_TABLEVIEW_BACKGROUND
 * @type String
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Returns the iOS system texture used to render the background on a group table view.</p>
 * @description <p>Corresponds to iOS <code>UIColor</code> groupTableViewBackgroundColor`.</p>
<p>This constant has been deprecated in iOS 6. Group style table views still default to using the standard iOS group table 
view background texture if no background color is specified. However, specifying this constant explicitly on iOS 6 and 
above results in a black background color.</p>
<p>Can be used anywhere a color value is required. See also "Colors" in {@link Titanium.UI}.</p>
 */
Titanium.UI.iOS.COLOR_GROUP_TABLEVIEW_BACKGROUND = null;

/**
 * @property COLOR_SCROLLVIEW_BACKGROUND
 * @type String
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Returns the iOS system texture used to render the area behind scrollable content.</p>
 * @description <p>Corresponds to iOS <code>UIColor</code> <code>scrollViewTexturedBackgroundColor</code>.</p>
<p>Can be used anywhere a color value is required. See also "Colors" in {@link Titanium.UI}.</p>
 */
Titanium.UI.iOS.COLOR_SCROLLVIEW_BACKGROUND = null;

/**
 * @property COLOR_UNDER_PAGE_BACKGROUND
 * @type String
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Returns the iOS system texture used to render the background of a page.</p>
 * @description <p>Corresponds to iOS <code>UIColor</code> <code>underPageBackgroundColor</code>.</p>
<p>Can be used anywhere a color value is required. See also "Colors" in {@link Titanium.UI}.</p>
 */
Titanium.UI.iOS.COLOR_UNDER_PAGE_BACKGROUND = null;

/**
 * @property COLOR_VIEW_FLIPSIDE_BACKGROUND
 * @type String
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Returns the iOS system texture used for the back side of a view while it is being flipped.</p>
 * @description <p>Corresponds to iOS <code>UIColor</code> <code>viewFlipsideBackgroundColor</code>.</p>
<p>Can be used anywhere a color value is required. See also "Colors" in {@link Titanium.UI}.</p>
 */
Titanium.UI.iOS.COLOR_VIEW_FLIPSIDE_BACKGROUND = null;

/**
 * @property WEBVIEW_NAVIGATIONTYPE_BACK_FORWARD
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>User tapped the back or forward button.</p>
 * @description <p>Used with the {@link Titanium.UI.WebView#event-beforeload WebView.beforeload} event.</p>
<p>Corresponds to iOS <code>UIWebView</code> <code>UIWebViewNavigationTypeBackForward</code>.</p>
 */
Titanium.UI.iOS.WEBVIEW_NAVIGATIONTYPE_BACK_FORWARD = null;

/**
 * @property WEBVIEW_NAVIGATIONTYPE_FORM_RESUBMITTED
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>User resubmitted a form.</p>
 * @description <p>Used with the {@link Titanium.UI.WebView#event-beforeload WebView.beforeload} event.</p>
<p>Corresponds to iOS <code>UIWebView</code> <code>UIWebViewNavigationTypeFormResubmitted</code>.</p>
 */
Titanium.UI.iOS.WEBVIEW_NAVIGATIONTYPE_FORM_RESUBMITTED = null;

/**
 * @property WEBVIEW_NAVIGATIONTYPE_FORM_SUBMITTED
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>User submitted a form.</p>
 * @description <p>Used with the {@link Titanium.UI.WebView#event-beforeload WebView.beforeload} event.</p>
<p>Corresponds to iOS <code>UIWebView</code> <code>UIWebViewNavigationTypeFormSubmitted</code>.</p>
 */
Titanium.UI.iOS.WEBVIEW_NAVIGATIONTYPE_FORM_SUBMITTED = null;

/**
 * @property WEBVIEW_NAVIGATIONTYPE_LINK_CLICKED
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>User tapped a link.</p>
 * @description <p>Used with the {@link Titanium.UI.WebView#event-beforeload WebView.beforeload} event.</p>
<p>Corresponds to iOS <code>UIWebView</code> <code>UIWebViewNavigationTypeLinkClicked</code>.</p>
 */
Titanium.UI.iOS.WEBVIEW_NAVIGATIONTYPE_LINK_CLICKED = null;

/**
 * @property WEBVIEW_NAVIGATIONTYPE_OTHER
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>Some other action occurred.</p>
 * @description <p>Used with the {@link Titanium.UI.WebView#event-beforeload WebView.beforeload} event.</p>
<p>Corresponds to iOS <code>UIWebView</code> <code>UIWebViewNavigationTypeOther</code>.</p>
 */
Titanium.UI.iOS.WEBVIEW_NAVIGATIONTYPE_OTHER = null;

/**
 * @property WEBVIEW_NAVIGATIONTYPE_RELOAD
 * @type Number
 * @readonly
 * @platform iphone 2.1
 * @platform ipad 2.1
 * <p>User tapped the reload button.</p>
 * @description <p>Used with the {@link Titanium.UI.WebView#event-beforeload WebView.beforeload} event.</p>
<p>Corresponds to iOS <code>UIWebView</code> <code>UIWebViewNavigationTypeReload</code>.</p>
 */
Titanium.UI.iOS.WEBVIEW_NAVIGATIONTYPE_RELOAD = null;

/**
 * @class Titanium.UI.iPad
 * @typestr Submodule of Titanium.UI
 * @platform ipad 1.2
 * @extends Titanium.Module
 * <p>iPad specific UI capabilities.</p>
 * @description <p>All properties, methods and events in this namespace will only work on the Apple iPad devices. </p>
<p>For iPad UI programming guidelines, please review the [iPad Human Interface Guidelines]
(http://developer.apple.com/iphone/library/documentation/General/Conceptual/iPadHIG/Introduction/Introduction.html).</p>
 */
Titanium.UI.iPad = {};

/**
 * @class Titanium.UI.iPad.DocumentViewer
 * @typestr Object of Titanium.UI.iPad
 * @platform ipad 1.8
 * @extends Titanium.UI.View
 * <p>A DocumentViewer provides in-app support for managing user interactions with files on the 
local system.</p>
 * @description <p>The DocumentViewer is created by the method {@link Titanium.UI.iOS#method-createDocumentViewer}. </p>
<p>For example, an email program might use this class to allow the user to preview attachments and 
open them in other apps. Use this class to present an appropriate user interface for previewing 
or printing a specified file. </p>
<p>For a code sample, see {@link Titanium.UI.iOS.DocumentViewer}.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI.iOS.DocumentViewer} instead.</p>
 */
Titanium.UI.iPad.DocumentViewer = {};




/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getKeepScreenOn = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.getSoftKeyboardOnFocus = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setFocusable = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setKeepScreenOn = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.setSoftKeyboardOnFocus = function(){};

/**
 * @method setUrl
 * <p>Sets the url of the document viewer.</p>
 * @param {String} url 
 * <p>The new url</p>
 * @return void
*/
Titanium.UI.iPad.DocumentViewer.setUrl = function(url){};

/**
 * @method show
 * <p>Displays the document viewer over the current view.</p>
 * @param {Boolean} animated 
 * <p>Indicates whether the show transition should be animated.</p>
 * @param {Object} view 
 * <p>The view property would specify the view relative to where the viewer should display.</p>
 * @return void
*/
Titanium.UI.iPad.DocumentViewer.show = function(animated, view){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.keepScreenOn = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.DocumentViewer.softKeyboardOnFocus = null;

/**
 * @class Titanium.UI.iPad.Popover
 * @typestr Object of Titanium.UI.iPad
 * @platform ipad 1.2
 * @extends Titanium.UI.View
 * <p>A Popover is used to manage the presentation of content in a popover.</p>
 * @description <p>A popover is created using the {@link Titanium.UI.iPad#method-createPopover} method. </p>
<p>Popovers are used to present information temporarily, but in a way that does not take over 
the entire screen in the way that a modal view does. The popover content is layered on top of 
the existing content in a special type of window. The popover remains visible until the user 
taps outside of the popover window or it is explicitly dismissed.</p>
<p>A {@link Titanium.UI.iPhone.NavigationGroup} may be added as a view in a popover. Do not add top-level
view containers, such as a <code>Window</code> or <code>TabGroup</code>, to a popover.  Adding top-level view containers
may have unintended side effects.</p>
<p><img alt="popover" src="http://img.skitch.com/20100406-pmssjk1a3a65s6ui8qnbqi59c4.png" /></p>
 * <h3>Examples</h3>
 * <h4>Simple Popover with a Title and Right Button</h4>
 * <p><p>In this example, we create a simple popover and position it near the button.</p></p><pre>var win = Ti.UI.createWindow();

var button = Ti.UI.createButton({title: 'Open Popover!'});
button.addEventListener('click', function(e){
    popover.show({ view: button });
});
win.add(button);

var view = Ti.UI.createView({backgroundColor: 'green'});
view.add(Ti.UI.createLabel({text: "It's not easy being green."}));

var rightButton = Ti.UI.createButton({title: 'Robin'});
rightButton.addEventListener('click', function(e){
    alert("But green's the color of spring.");
});

var popover = Ti.UI.iPad.createPopover({
    width: 250,
    height: 100,
    title: 'Kermit',
    rightNavButton: rightButton
});
popover.add(view);

win.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as an Alloy project.</p>
<p>index.xml</p></p><pre>&lt;Alloy&gt;
    &lt;Window&gt;
        &lt;Button id="button" onClick="openPopover"&gt;Open Popover!&lt;/Button&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>index.js</p></p><pre>function openPopover() {
    var popover = Alloy.createController('popover').getView();
    popover.show({view:$.button});
};

$.index.open();
</pre>
 * <p><p>popover.xml</p></p><pre>&lt;Alloy&gt;
    &lt;Popover title='Kermit' height='100' width='250'&gt;
        &lt;!-- Prior to Alloy 1.1.0, this property was set in the controller. --&gt;
        &lt;RightNavButton&gt;
            &lt;Button onClick='showAlert'&gt;Robin&lt;/Button&gt;
        &lt;/RightNavButton&gt;
        &lt;View backgroundColor='green'&gt;
            &lt;Label&gt;It's not easy being green.&lt;/Label&gt;
        &lt;/View&gt;
    &lt;/Popover&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>popover.js</p></p><pre>function showAlert(e) {
    alert('But green is the color of spring.');
};

// Prior to Alloy 1.1.0, the rightNavButton property was set in the controller.
// var button = Ti.UI.createButton({title: 'Robin'});
// button.addEventListener('click', showAlert);
// $.popover.rightNavButton = button;</pre>
 */
Titanium.UI.iPad.Popover = {};





/**
 * @method getArrowDirection
 * <p>Gets the value of the {@link Titanium.UI.iPad.Popover#property-arrowDirection arrowDirection} property.</p>
 * @return {Number} 
*/
Titanium.UI.iPad.Popover.getArrowDirection = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundSelectedImage = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.Popover.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iPad.Popover.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iPad.Popover.getFocusable = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iPad.Popover.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.Popover.getKeepScreenOn = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.Popover.getKeepScreenOn = function(){};

/**
 * @method getLeftNavButton
 * <p>Gets the value of the {@link Titanium.UI.iPad.Popover#property-leftNavButton leftNavButton} property.</p>
 * @return {Object} 
*/
Titanium.UI.iPad.Popover.getLeftNavButton = function(){};

/**
 * @method getRightNavButton
 * <p>Gets the value of the {@link Titanium.UI.iPad.Popover#property-rightNavButton rightNavButton} property.</p>
 * @return {Object} 
*/
Titanium.UI.iPad.Popover.getRightNavButton = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.Popover.getSoftKeyboardOnFocus = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.Popover.getSoftKeyboardOnFocus = function(){};

/**
 * @method getTitle
 * <p>Gets the value of the {@link Titanium.UI.iPad.Popover#property-title title} property.</p>
 * @return {String} 
*/
Titanium.UI.iPad.Popover.getTitle = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundSelectedImage = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.Popover.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iPad.Popover.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iPad.Popover.setFocusable = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iPad.Popover.setFocusable = function(){};

/**
 * @method setHeight
 * <p>Change the height of the popover.</p>
 * @param {Number/String} height 
 * <p>Height of the popover.</p>
 * @return void
*/
Titanium.UI.iPad.Popover.setHeight = function(height){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.Popover.setKeepScreenOn = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.Popover.setKeepScreenOn = function(){};

/**
 * @method setLeftNavButton
 * <p>Sets the value of the {@link Titanium.UI.iPad.Popover#property-leftNavButton leftNavButton} property.</p>
 * @param {Object} leftNavButton 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iPad.Popover.setLeftNavButton = function(leftNavButton){};

/**
 * @method setPassthroughViews
 * <p>Set the passthrough views for the popover.</p>
 * @param {Titanium.UI.View[]} passthroughViews 
 * <p>View or views that the user can interact with while the popover is open (i.e. clicking 
on these views will interact with these views, and not dismiss the popover.)</p>
 * @return void
*/
Titanium.UI.iPad.Popover.setPassthroughViews = function(passthroughViews){};

/**
 * @method setRightNavButton
 * <p>Sets the value of the {@link Titanium.UI.iPad.Popover#property-rightNavButton rightNavButton} property.</p>
 * @param {Object} rightNavButton 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iPad.Popover.setRightNavButton = function(rightNavButton){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.Popover.setSoftKeyboardOnFocus = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.Popover.setSoftKeyboardOnFocus = function(){};

/**
 * @method setTitle
 * <p>Sets the value of the {@link Titanium.UI.iPad.Popover#property-title title} property.</p>
 * @param {String} title 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iPad.Popover.setTitle = function(title){};

/**
 * @method setWidth
 * <p>Set the width of the popover</p>
 * @param {Number/String} width 
 * <p>Width of the popover</p>
 * @return void
*/
Titanium.UI.iPad.Popover.setWidth = function(width){};

/**
 * @property arrowDirection
 * @type Number
 * @readonly
 * <p>Indicates the arrow direction of the popover.</p>
 */
Titanium.UI.iPad.Popover.arrowDirection = null;

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.Popover.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.Popover.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.Popover.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.Popover.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.Popover.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.Popover.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iPad.Popover.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iPad.Popover.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iPad.Popover.keepScreenOn = null;

/**
 * @property leftNavButton
 * @type Object
 * <p>Left button in the navigation area of the popover.</p>
 */
Titanium.UI.iPad.Popover.leftNavButton = null;

/**
 * @property rightNavButton
 * @type Object
 * <p>Right button in the navigation area of the popover.</p>
 */
Titanium.UI.iPad.Popover.rightNavButton = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.Popover.softKeyboardOnFocus = null;

/**
 * @property title
 * @type String
 * <p>Title of the navigation area of the popover.</p>
 */
Titanium.UI.iPad.Popover.title = null;

/**
 * @class Titanium.UI.iPad.SplitWindow
 * @typestr Object of Titanium.UI.iPad
 * @platform ipad 1.2
 * @extends Titanium.UI.Window
 * <p>A SplitWindow is a window that manages the presentation of two side-by-side view 
controllers. </p>
 * @description <p>You use this class to implement a master-detail interface, in which the left-side view presents 
a list of items and the right-side presents details of the selected item. The SplitView is for 
use exclusively on iPad devices. </p>
<p>By default, the SplitView shows both master and detail views in landscape orientation. When the 
device switches into portrait orientation, the detail view occupies the entire screen. The user 
can click a button to bring up the master view as floating, "popover" view. (To show the master 
view in both orientations, set <code>showMasterInPortrait</code> to <code>true</code>.) </p>
<p>Use the {@link Titanium.UI.iPad#method-createSplitWindow} method to create a SplitWindow. The <code>masterView</code> 
and <code>detailView</code> properties are required in the constructor of the SplitWindow and cannot be 
changed once set. </p>
<p>The SplitWindow inherits its methods and properties from {@link Titanium.UI.Window}. </p>
<p>The SplitWindow is a top-level window and cannot be contained within another window or view.
<img alt="splitview" src="http://img.skitch.com/20100406-1f85bm9cx8t768xgsjqax1ng6y.png" /></p>
 * <h3>Examples</h3>
 * <h4>Split Window</h4>
 * <p><p>This is an example of a Split Window.</p></p><pre>var win = Ti.UI.createWindow();

var nav = Ti.UI.iPhone.createNavigationGroup({
   window: win
});

var splitwin = Ti.UI.iPad.createSplitWindow({
detailView: nav,
masterView: masterView
});

splitwin.addEventListener('visible',function(e){
if (e.view == 'detail'){
e.button.title = "Master";
win.leftNavButton = e.button;
} else if (e.view == 'master'){
win.leftNavButton = null;
}
});

splitwin.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>This is an example of a Split Window as an Alloy view.</p>
<p>Note that the SplitWindow element will only accept two Windows as children.
The first window is the <code>masterView</code> and the second window is the <code>detailView</code>.
It can also accept the Require tag to include a Ti.UI.Window view.</p></p><pre>&lt;Alloy&gt;
    &lt;SplitWindow&gt;
        &lt;!-- First window is the masterView --&gt;
        &lt;Window&gt;
            &lt;Label&gt;I am the master view.&lt;/Label&gt;
        &lt;/Window&gt;

        &lt;!-- Second window is the detailView --&gt;
        &lt;Window&gt;
            &lt;Label&gt;I am the detail view.&lt;/Label&gt;
        &lt;/Window&gt;
    &lt;/SplitWindow&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.iPad.SplitWindow = {};

















/**
 * @method getActivity 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getActivity = function(){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getBackgroundSelectedImage = function(){};

/**
 * @method getDetailView
 * <p>Gets the value of the {@link Titanium.UI.iPad.SplitWindow#property-detailView detailView} property.</p>
 * @return {Titanium.UI.View} 
*/
Titanium.UI.iPad.SplitWindow.getDetailView = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getEnabled = function(){};

/**
 * @method getExitOnClose 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getExitOnClose = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getKeepScreenOn = function(){};

/**
 * @method getMasterView
 * <p>Gets the value of the {@link Titanium.UI.iPad.SplitWindow#property-masterView masterView} property.</p>
 * @return {Titanium.UI.View} 
*/
Titanium.UI.iPad.SplitWindow.getMasterView = function(){};

/**
 * @method getShowMasterInPortrait
 * <p>Gets the value of the {@link Titanium.UI.iPad.SplitWindow#property-showMasterInPortrait showMasterInPortrait} property.</p>
 * @return {Boolean} 
 * @platform ipad 1.7.2
*/
Titanium.UI.iPad.SplitWindow.getShowMasterInPortrait = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getSoftKeyboardOnFocus = function(){};

/**
 * @method getWindowPixelFormat 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getWindowPixelFormat = function(){};

/**
 * @method getWindowSoftInputMode 
 * @hide
*/Titanium.UI.iPad.SplitWindow.getWindowSoftInputMode = function(){};

/**
 * @method setActivity 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setActivity = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setFocusable = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setKeepScreenOn = function(){};

/**
 * @method setShowMasterInPortrait
 * <p>Sets the value of the {@link Titanium.UI.iPad.SplitWindow#property-showMasterInPortrait showMasterInPortrait} property.</p>
 * @param {Boolean} showMasterInPortrait 
 * <p>New value for the property.</p>
 * @return void
 * @platform ipad 1.7.2
*/
Titanium.UI.iPad.SplitWindow.setShowMasterInPortrait = function(showMasterInPortrait){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setSoftKeyboardOnFocus = function(){};

/**
 * @method setWindowPixelFormat 
 * @hide
*/Titanium.UI.iPad.SplitWindow.setWindowPixelFormat = function(){};

/**
 * @property activity 
 * @hide
*/Titanium.UI.iPad.SplitWindow.activity = null;

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iPad.SplitWindow.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iPad.SplitWindow.backgroundSelectedImage = null;

/**
 * @property detailView
 * @type Titanium.UI.View
 * @creationOnly
 * <p>View for the detail view section of the SplitWindow.</p>
 */
Titanium.UI.iPad.SplitWindow.detailView = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iPad.SplitWindow.enabled = null;

/**
 * @property exitOnClose 
 * @hide
*/Titanium.UI.iPad.SplitWindow.exitOnClose = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iPad.SplitWindow.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iPad.SplitWindow.keepScreenOn = null;

/**
 * @property masterView
 * @type Titanium.UI.View
 * @creationOnly
 * <p>View for the master view section of the SplitWindow.</p>
 */
Titanium.UI.iPad.SplitWindow.masterView = null;

/**
 * @property [showMasterInPortrait=false]
 * @type Boolean
 * @platform ipad 1.7.2
 * <p>Determines whether to show the master view in portrait orientation.</p>
 */
Titanium.UI.iPad.SplitWindow.showMasterInPortrait = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPad.SplitWindow.softKeyboardOnFocus = null;

/**
 * @property windowPixelFormat 
 * @hide
*/Titanium.UI.iPad.SplitWindow.windowPixelFormat = null;

/**
 * @property windowSoftInputMode 
 * @hide
*/Titanium.UI.iPad.SplitWindow.windowSoftInputMode = null;

/**
 * @method createDocumentViewer
 * <p>Creates and returns an instance of {@link Titanium.UI.iPad.DocumentViewer}.</p>
 * @deprecated 3.0.0 <p>Use {@link Titanium.UI.iOS.DocumentViewer} instead.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iPad.DocumentViewer} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iPad.DocumentViewer} 
 * @platform ipad 1.8
*/
Titanium.UI.iPad.createDocumentViewer = function(parameters){};

/**
 * @method createPopover
 * <p>Creates and returns an instance of {@link Titanium.UI.iPad.Popover}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iPad.Popover} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iPad.Popover} 
 * @platform ipad 1.2
*/
Titanium.UI.iPad.createPopover = function(parameters){};

/**
 * @method createSplitWindow
 * <p>Creates and returns an instance of {@link Titanium.UI.iPad.SplitWindow}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iPad.SplitWindow} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iPad.SplitWindow} 
 * @platform ipad 1.2
*/
Titanium.UI.iPad.createSplitWindow = function(parameters){};

/**
 * @property POPOVER_ARROW_DIRECTION_ANY
 * @type Number
 * @readonly
 * <p>An arrow that points in any direction.</p>
 */
Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_ANY = null;

/**
 * @property POPOVER_ARROW_DIRECTION_DOWN
 * @type Number
 * @readonly
 * <p>An arrow that points downward.</p>
 */
Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_DOWN = null;

/**
 * @property POPOVER_ARROW_DIRECTION_LEFT
 * @type Number
 * @readonly
 * <p>An arrow that points toward the left.</p>
 */
Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_LEFT = null;

/**
 * @property POPOVER_ARROW_DIRECTION_RIGHT
 * @type Number
 * @readonly
 * <p>An arrow that points toward the right.</p>
 */
Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_RIGHT = null;

/**
 * @property POPOVER_ARROW_DIRECTION_UNKNOWN
 * @type Number
 * @readonly
 * <p>The status of the arrow is currently unknown.</p>
 */
Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_UNKNOWN = null;

/**
 * @property POPOVER_ARROW_DIRECTION_UP
 * @type Number
 * @readonly
 * <p>An arrow that points upward.</p>
 */
Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_UP = null;

/**
 * @class Titanium.UI.iPhone
 * @typestr Submodule of Titanium.UI
 * @platform iphone 0.5
 * @platform ipad 0.5
 * @extends Titanium.Module
 * <p>The iPhone/iPad-specific UI capabilities.  All properties, methods and events in this namespace 
will only work on Apple iOS systems.</p>
 */
Titanium.UI.iPhone = {};

/**
 * @class Titanium.UI.iPhone.ActivityIndicatorStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the styles available for {@link Titanium.UI.ActivityIndicator} objects.</p>
 */
Titanium.UI.iPhone.ActivityIndicatorStyle = {};

/**
 * @property BIG
 * @type Number
 * @readonly
 * <p>Large white spinning indicator.</p>
 * @description <p>Used with the {@link Titanium.UI.ActivityIndicator#property-style} property.</p>
<p>One of the group of activity indicator style constants 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-DARK DARK}, 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-BIG BIG}, 
and {@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-PLAIN PLAIN}.</p>
 */
Titanium.UI.iPhone.ActivityIndicatorStyle.BIG = null;

/**
 * @property DARK
 * @type Number
 * @readonly
 * <p>Small gray spinning indicator.</p>
 * @description <p>Used with the {@link Titanium.UI.ActivityIndicator#property-style} property.</p>
<p>One of the group of activity indicator style constants 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-DARK DARK}, 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-BIG BIG}, 
and {@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-PLAIN PLAIN}.</p>
 */
Titanium.UI.iPhone.ActivityIndicatorStyle.DARK = null;

/**
 * @property PLAIN
 * @type Number
 * @readonly
 * <p>Small white spinning indicator (default.)</p>
 * @description <p>Used with the {@link Titanium.UI.ActivityIndicator#property-style} property.</p>
<p>One of the group of activity indicator style constants 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-DARK DARK}, 
{@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-BIG BIG}, 
and {@link Titanium.UI.iPhone.ActivityIndicatorStyle#property-PLAIN PLAIN}.</p>
 */
Titanium.UI.iPhone.ActivityIndicatorStyle.PLAIN = null;

/**
 * @class Titanium.UI.iPhone.AlertDialogStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 3.0
 * @platform ipad 3.0
 * @extends Titanium.Proxy
 * <p>A set of constants for the style that can be used for the <code>style</code> property of 
{@link Titanium.UI.AlertDialog}.</p>
 */
Titanium.UI.iPhone.AlertDialogStyle = {};

/**
 * @property DEFAULT
 * @type Number
 * @readonly
 * <p>A standard alert dialog. This is the default value.</p>
 */
Titanium.UI.iPhone.AlertDialogStyle.DEFAULT = null;

/**
 * @property LOGIN_AND_PASSWORD_INPUT
 * @type Number
 * @readonly
 * <p>An alert dialog that allows the user to enter login identifier and password.</p>
 */
Titanium.UI.iPhone.AlertDialogStyle.LOGIN_AND_PASSWORD_INPUT = null;

/**
 * @property PLAIN_TEXT_INPUT
 * @type Number
 * @readonly
 * <p>An alert dialog that allows the user to enter text.</p>
 */
Titanium.UI.iPhone.AlertDialogStyle.PLAIN_TEXT_INPUT = null;

/**
 * @property SECURE_TEXT_INPUT
 * @type Number
 * @readonly
 * <p>An alert dialog that allows the user to enter text. The text field is obscured.</p>
 */
Titanium.UI.iPhone.AlertDialogStyle.SECURE_TEXT_INPUT = null;

/**
 * @class Titanium.UI.iPhone.AnimationStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the animation styles used for view transitions.</p>
 */
Titanium.UI.iPhone.AnimationStyle = {};

/**
 * @property CURL_DOWN
 * @type Number
 * @readonly
 * <p>Curl downwards during a transition animation.</p>
 * @description <p>Used with the {@link Titanium.UI.Animation#property-transition} property.</p>
<p>One of the group of animation style constants 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_DOWN CURL_DOWN}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_UP CURL_UP}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_LEFT FLIP_FROM_LEFT}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_RIGHT FLIP_FROM_RIGHT}, 
and {@link Titanium.UI.iPhone.AnimationStyle#property-NONE NONE}.</p>
 */
Titanium.UI.iPhone.AnimationStyle.CURL_DOWN = null;

/**
 * @property CURL_UP
 * @type Number
 * @readonly
 * <p>Curl upwards during a transition animation.</p>
 * @description <p>Used with the {@link Titanium.UI.Animation#property-transition} property.</p>
<p>One of the group of animation style constants 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_DOWN CURL_DOWN}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_UP CURL_UP}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_LEFT FLIP_FROM_LEFT}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_RIGHT FLIP_FROM_RIGHT}, 
and {@link Titanium.UI.iPhone.AnimationStyle#property-NONE NONE}.</p>
 */
Titanium.UI.iPhone.AnimationStyle.CURL_UP = null;

/**
 * @property FLIP_FROM_LEFT
 * @type Number
 * @readonly
 * <p>Flip from left to right during a transition animation.</p>
 * @description <p>Used with the {@link Titanium.UI.Animation#property-transition} property.</p>
<p>One of the group of animation style constants 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_DOWN CURL_DOWN}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_UP CURL_UP}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_LEFT FLIP_FROM_LEFT}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_RIGHT FLIP_FROM_RIGHT}, 
and {@link Titanium.UI.iPhone.AnimationStyle#property-NONE NONE}.</p>
 */
Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT = null;

/**
 * @property FLIP_FROM_RIGHT
 * @type Number
 * @readonly
 * <p>Flip from right to left during a transition animation.</p>
 * @description <p>Used with the {@link Titanium.UI.Animation#property-transition} property.</p>
<p>One of the group of animation style constants 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_DOWN CURL_DOWN}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_UP CURL_UP}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_LEFT FLIP_FROM_LEFT}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_RIGHT FLIP_FROM_RIGHT}, 
and {@link Titanium.UI.iPhone.AnimationStyle#property-NONE NONE}.</p>
 */
Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_RIGHT = null;

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>No animation.</p>
 * @description <p>Used with the {@link Titanium.UI.Animation#property-transition} property.</p>
<p>One of the group of animation style constants 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_DOWN CURL_DOWN}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_UP CURL_UP}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_LEFT FLIP_FROM_LEFT}, 
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_RIGHT FLIP_FROM_RIGHT}, 
and {@link Titanium.UI.iPhone.AnimationStyle#property-NONE NONE}.</p>
 */
Titanium.UI.iPhone.AnimationStyle.NONE = null;

/**
 * @class Titanium.UI.iPhone.ListViewCellSelectionStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Proxy
 * <p>A set of constants for the style that can be used for the <code>selectionStyle</code> property of a
ListItem, which is set in the <code>properties</code> dictionary of either the {@link ListDataItem} or
{@link ItemTemplate}.</p>
 */
Titanium.UI.iPhone.ListViewCellSelectionStyle = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.UI.iPhone.ListViewCellSelectionStyle.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Titanium.UI.iPhone.ListViewCellSelectionStyle.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.UI.iPhone.ListViewCellSelectionStyle.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewCellSelectionStyle.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.UI.iPhone.ListViewCellSelectionStyle.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewCellSelectionStyle.setBubbleParent = function(){};

/**
 * @property BLUE
 * @type Number
 * @readonly
 * <p>The cell when selected has a blue background. This is the default value.</p>
 */
Titanium.UI.iPhone.ListViewCellSelectionStyle.BLUE = null;

/**
 * @property GRAY
 * @type Number
 * @readonly
 * <p>The cell when selected has a gray background.</p>
 */
Titanium.UI.iPhone.ListViewCellSelectionStyle.GRAY = null;

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>The cell has no distinct style for when it is selected.</p>
 */
Titanium.UI.iPhone.ListViewCellSelectionStyle.NONE = null;

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewCellSelectionStyle.bubbleParent = null;

/**
 * @class Titanium.UI.iPhone.ListViewScrollPosition
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Proxy
 * <p>A set of constants for the position value that can be used for the <code>position</code> property of 
{@link ListViewAnimationProperties} when invoking the ListView's <code>scrollToItem</code>, <code>appendSection</code>,
<code>deleteSectionAt</code>, <code>insertSectionAt</code> and <code>replaceSectionAt</code> methods.</p>
 */
Titanium.UI.iPhone.ListViewScrollPosition = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.UI.iPhone.ListViewScrollPosition.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Titanium.UI.iPhone.ListViewScrollPosition.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.UI.iPhone.ListViewScrollPosition.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewScrollPosition.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.UI.iPhone.ListViewScrollPosition.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewScrollPosition.setBubbleParent = function(){};

/**
 * @property BOTTOM
 * @type Number
 * @readonly
 * <p>The list view scrolls the row of interest to the bottom of the visible list view.</p>
 */
Titanium.UI.iPhone.ListViewScrollPosition.BOTTOM = null;

/**
 * @property MIDDLE
 * @type Number
 * @readonly
 * <p>The list view scrolls the row of interest to the middle of the list table view.</p>
 */
Titanium.UI.iPhone.ListViewScrollPosition.MIDDLE = null;

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>The table view scrolls the row of interest to be fully visible with a minimal movement.
If the row is already fully visible, no scrolling occurs. For example, if the row is above the
visible area, the behavior is identical to that specified by <code>TOP</code>. This is the default.</p>
 */
Titanium.UI.iPhone.ListViewScrollPosition.NONE = null;

/**
 * @property TOP
 * @type Number
 * @readonly
 * <p>The list view scrolls the row of interest to the top of the visible list view.</p>
 */
Titanium.UI.iPhone.ListViewScrollPosition.TOP = null;

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewScrollPosition.bubbleParent = null;

/**
 * @class Titanium.UI.iPhone.ListViewStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @extends Titanium.Proxy
 * <p>A set of constants for the style that can be used for the <code>style</code> property of 
{@link Titanium.UI.ListView}.</p>
 */
Titanium.UI.iPhone.ListViewStyle = {};

/**
 * @method addEventListener 
 * @hide
*/Titanium.UI.iPhone.ListViewStyle.addEventListener = function(){};

/**
 * @method applyProperties 
 * @hide
*/Titanium.UI.iPhone.ListViewStyle.applyProperties = function(){};

/**
 * @method fireEvent 
 * @hide
*/Titanium.UI.iPhone.ListViewStyle.fireEvent = function(){};

/**
 * @method getBubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewStyle.getBubbleParent = function(){};

/**
 * @method removeEventListener 
 * @hide
*/Titanium.UI.iPhone.ListViewStyle.removeEventListener = function(){};

/**
 * @method setBubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewStyle.setBubbleParent = function(){};

/**
 * @property GROUPED
 * @type Number
 * @readonly
 * <p>A list view whose sections present distinct groups of rows. The section headers and footers 
do not float.</p>
 */
Titanium.UI.iPhone.ListViewStyle.GROUPED = null;

/**
 * @property PLAIN
 * @type Number
 * @readonly
 * <p>A plain list view. Any section headers or footers are displayed as inline separators and 
float when the list view is scrolled.</p>
 */
Titanium.UI.iPhone.ListViewStyle.PLAIN = null;

/**
 * @property bubbleParent 
 * @hide
*/Titanium.UI.iPhone.ListViewStyle.bubbleParent = null;

/**
 * @class Titanium.UI.iPhone.NavigationGroup
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 1.2
 * @platform ipad 1.2
 * @extends Titanium.UI.View
 * <p>A Navigation Group implements a specialized view that manages the navigation of hierarchical 
content.</p>
 * @description <p>The navigation group is created with the method {@link Titanium.UI.iPhone#method-createNavigationGroup}.</p>
<p><img alt="navgroup" src="http://img.skitch.com/20100406-rwe44533tkd94fdnbqqudxynpe.png" /></p>
<p>The <code>window</code> property must be set initially in the constructor when creating a navigation group 
to the root level window.  All navigation groups must have at least one root window that cannot 
be removed.</p>
 * <h3>Examples</h3>
 * <h4>Simple Navigation Group</h4>
 * <p><p>Creates a navigation group with the first window colored red.
Press the button to open the blue window.
Use the back button to return to the red root window.</p></p><pre>var win1 = Titanium.UI.createWindow();

var win2 = Titanium.UI.createWindow({
    backgroundColor: 'red',
    title: 'Red Window'
});

var win3 = Titanium.UI.createWindow({
    backgroundColor: 'blue',
    title: 'Blue Window'
});

var button = Titanium.UI.createButton({
    title: 'Open Blue Window'
});
button.addEventListener('click', function(){
    nav.open(win3, {animated:true});
});

var nav = Titanium.UI.iPhone.createNavigationGroup({
   window: win2
});

win2.add(button);
win1.add(nav);
win1.open();</pre>
 * <h4>Alloy XML Markup</h4>
 * <p><p>Previous example as two Alloy views.</p>
<p>navgroup.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window&gt;
        &lt;NavigationGroup id="nav" platform="ios"&gt;
            &lt;Window id="win2" title="Red Window" backgroundColor="red"&gt;
                &lt;Button title="Open Blue Window" onClick="openBlueWindow"&gt;
            &lt;/Window&gt;
        &lt;/NavigationGroup&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</pre>
 * <p><p>navgroup.js:</p></p><pre>function openBlueWindow(){
    var win3 = Alloy.createController('bluewindow').getView();
    $.nav.open(win3, {animated : true});
}
</pre>
 * <p><p>bluewindow.xml:</p></p><pre>&lt;Alloy&gt;
    &lt;Window title="Blue Window" backgroundColor="blue" /&gt;
&lt;/Alloy&gt;</pre>
 */
Titanium.UI.iPhone.NavigationGroup = {};




/**
 * @method close
 * <p>Closes a window and removes it from the navigation group.</p>
 * @param {Titanium.UI.Window} window 
 * <p>Window to close.</p>
 * @param {Dictionary} options 
 * <p>Options supporting a single <code>animated</code> boolean property to determine whether the window 
will be animated (default) while being closed.</p>
 * @return void
*/
Titanium.UI.iPhone.NavigationGroup.close = function(window, options){};

/**
 * @method getBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getBackgroundDisabledColor = function(){};

/**
 * @method getBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getBackgroundDisabledImage = function(){};

/**
 * @method getBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getBackgroundFocusedColor = function(){};

/**
 * @method getBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getBackgroundFocusedImage = function(){};

/**
 * @method getBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getBackgroundSelectedColor = function(){};

/**
 * @method getBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getBackgroundSelectedImage = function(){};

/**
 * @method getEnabled 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getEnabled = function(){};

/**
 * @method getFocusable 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getFocusable = function(){};

/**
 * @method getKeepScreenOn 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getKeepScreenOn = function(){};

/**
 * @method getSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.getSoftKeyboardOnFocus = function(){};

/**
 * @method getWindow
 * <p>Gets the value of the {@link Titanium.UI.iPhone.NavigationGroup#property-window window} property.</p>
 * @return {Titanium.UI.Window} 
*/
Titanium.UI.iPhone.NavigationGroup.getWindow = function(){};

/**
 * @method open
 * <p>Opens a window within the navigation group.</p>
 * @param {Titanium.UI.Window} window 
 * <p>Window to open.</p>
 * @param {Dictionary} options 
 * <p>Options supporting a single <code>animated</code> boolean property to determine whether the window 
will be animated (default) while being closed.</p>
 * @return void
*/
Titanium.UI.iPhone.NavigationGroup.open = function(window, options){};

/**
 * @method removeAllChildren 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.removeAllChildren = function(){};

/**
 * @method setBackgroundDisabledColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setBackgroundDisabledColor = function(){};

/**
 * @method setBackgroundDisabledImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setBackgroundDisabledImage = function(){};

/**
 * @method setBackgroundFocusedColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setBackgroundFocusedColor = function(){};

/**
 * @method setBackgroundFocusedImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setBackgroundFocusedImage = function(){};

/**
 * @method setBackgroundSelectedColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setBackgroundSelectedColor = function(){};

/**
 * @method setBackgroundSelectedImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setBackgroundSelectedImage = function(){};

/**
 * @method setEnabled 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setEnabled = function(){};

/**
 * @method setFocusable 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setFocusable = function(){};

/**
 * @method setKeepScreenOn 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setKeepScreenOn = function(){};

/**
 * @method setSoftKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.setSoftKeyboardOnFocus = function(){};

/**
 * @property backgroundDisabledColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.backgroundDisabledColor = null;

/**
 * @property backgroundDisabledImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.backgroundDisabledImage = null;

/**
 * @property backgroundFocusedColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.backgroundFocusedColor = null;

/**
 * @property backgroundFocusedImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.backgroundFocusedImage = null;

/**
 * @property backgroundSelectedColor 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.backgroundSelectedColor = null;

/**
 * @property backgroundSelectedImage 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.backgroundSelectedImage = null;

/**
 * @property enabled 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.enabled = null;

/**
 * @property focusable 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.focusable = null;

/**
 * @property keepScreenOn 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.keepScreenOn = null;

/**
 * @property softKeyboardOnFocus 
 * @hide
*/Titanium.UI.iPhone.NavigationGroup.softKeyboardOnFocus = null;

/**
 * @property window
 * @type Titanium.UI.Window
 * @creationOnly
 * <p>Window to add to this navigation group.</p>
 */
Titanium.UI.iPhone.NavigationGroup.window = null;

/**
 * @class Titanium.UI.iPhone.ProgressBarStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.Proxy
 * <p>A set of constants for the bar styles used on the <code>style</code> property of {@link Titanium.UI.ProgressBar}.</p>
 */
Titanium.UI.iPhone.ProgressBarStyle = {};

/**
 * @property BAR
 * @type Number
 * @readonly
 * <p>The style of progress view that is used in a toolbar.</p>
 */
Titanium.UI.iPhone.ProgressBarStyle.BAR = null;

/**
 * @property DEFAULT
 * @type Number
 * @readonly
 * <p>he standard progress-view style. This is the default.</p>
 */
Titanium.UI.iPhone.ProgressBarStyle.DEFAULT = null;

/**
 * @property PLAIN
 * @type Number
 * @readonly
 * <p>The standard progress-view style. Same as <code>DEFAULT</code>.</p>
 */
Titanium.UI.iPhone.ProgressBarStyle.PLAIN = null;

/**
 * @class Titanium.UI.iPhone.RowAnimationStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the Animation Styles used for transition on table view rows.</p>
 */
Titanium.UI.iPhone.RowAnimationStyle = {};

/**
 * @property BOTTOM
 * @type Number
 * @readonly
 * <p>The inserted row or rows slides in from the bottom; the deleted row or rows slides out 
toward the bottom.</p>
 */
Titanium.UI.iPhone.RowAnimationStyle.BOTTOM = null;

/**
 * @property FADE
 * @type Number
 * @readonly
 * <p>The inserted or deleted row or rows fades into or out of the table view.</p>
 */
Titanium.UI.iPhone.RowAnimationStyle.FADE = null;

/**
 * @property LEFT
 * @type Number
 * @readonly
 * <p>The inserted row or rows slides in from the left; the deleted row or rows slides out to the 
left.</p>
 */
Titanium.UI.iPhone.RowAnimationStyle.LEFT = null;

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>No animation is performed. The new cell value appears as if the cell had just been reloaded.</p>
 */
Titanium.UI.iPhone.RowAnimationStyle.NONE = null;

/**
 * @property RIGHT
 * @type Number
 * @readonly
 * <p>The inserted row or rows slides in from the right; the deleted row or rows slides out to 
the right.</p>
 */
Titanium.UI.iPhone.RowAnimationStyle.RIGHT = null;

/**
 * @property TOP
 * @type Number
 * @readonly
 * <p>The inserted row or rows slides in from the top; the deleted row or rows slides out toward 
the top.</p>
 */
Titanium.UI.iPhone.RowAnimationStyle.TOP = null;

/**
 * @class Titanium.UI.iPhone.ScrollIndicatorStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the styles available for scrollbars used with {@link Titanium.UI.ScrollView#property-scrollIndicatorStyle} and {@link Titanium.UI.TableView#property-scrollIndicatorStyle} properties.</p>
 */
Titanium.UI.iPhone.ScrollIndicatorStyle = {};

/**
 * @property BLACK
 * @type Number
 * @readonly
 * <p>A style of indicator which is black smaller than the default style. This style is good 
against a white content background.</p>
 */
Titanium.UI.iPhone.ScrollIndicatorStyle.BLACK = null;

/**
 * @property DEFAULT
 * @type Number
 * @readonly
 * <p>The default style of scroll indicator, which is black with a white border. This style is 
good against any content background.</p>
 */
Titanium.UI.iPhone.ScrollIndicatorStyle.DEFAULT = null;

/**
 * @property WHITE
 * @type Number
 * @readonly
 * <p>A style of indicator is white and smaller than the default style. This style is good against 
a black content background.</p>
 */
Titanium.UI.iPhone.ScrollIndicatorStyle.WHITE = null;

/**
 * @class Titanium.UI.iPhone.StatusBar
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the status bar style.</p>
 */
Titanium.UI.iPhone.StatusBar = {};

/**
 * @property ANIMATION_STYLE_FADE
 * @type Number
 * @readonly
 * <p>Fade animation style, when the status bar is hidden or shown.</p>
 * @description <p>Used with the {@link Titanium.UI.iPhone#method-showStatusBar} and {@link Titanium.UI.iPhone#method-hideStatusBar} 
methods.</p>
<p>One of the group of status bar animation style constants 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_NONE ANIMATION_STYLE_NONE}, 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_SLIDE ANIMATION_STYLE_SLIDE}, 
and {@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_FADE ANIMATION_STYLE_FADE}.</p>
 */
Titanium.UI.iPhone.StatusBar.ANIMATION_STYLE_FADE = null;

/**
 * @property ANIMATION_STYLE_NONE
 * @type Number
 * @readonly
 * <p>No animation style, when the status bar is hidden or shown.</p>
 * @description <p>Used with the {@link Titanium.UI.iPhone#method-showStatusBar} and {@link Titanium.UI.iPhone#method-hideStatusBar} 
methods.</p>
<p>One of the group of status bar animation style constants 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_NONE ANIMATION_STYLE_NONE}, 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_SLIDE ANIMATION_STYLE_SLIDE}, 
and {@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_FADE ANIMATION_STYLE_FADE}.</p>
 */
Titanium.UI.iPhone.StatusBar.ANIMATION_STYLE_NONE = null;

/**
 * @property ANIMATION_STYLE_SLIDE
 * @type Number
 * @readonly
 * <p>Slide animation style, when the status bar is hidden or shown.</p>
 * @description <p>Used with the {@link Titanium.UI.iPhone#method-showStatusBar} and {@link Titanium.UI.iPhone#method-hideStatusBar} 
methods.</p>
<p>One of the group of status bar animation style constants 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_NONE ANIMATION_STYLE_NONE}, 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_SLIDE ANIMATION_STYLE_SLIDE}, 
and {@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_FADE ANIMATION_STYLE_FADE}.</p>
 */
Titanium.UI.iPhone.StatusBar.ANIMATION_STYLE_SLIDE = null;

/**
 * @property DEFAULT
 * @type Number
 * @readonly
 * <p>Default status bar style.</p>
 * @description <p>Used with the {@link Titanium.UI.iPhone#property-statusBarStyle} property.</p>
<p>One of the group of status bar style constants 
{@link Titanium.UI.iPhone.StatusBar#property-DEFAULT DEFAULT}, 
{@link Titanium.UI.iPhone.StatusBar#property-GRAY GRAY}, 
{@link Titanium.UI.iPhone.StatusBar#property-GREY GREY}, 
{@link Titanium.UI.iPhone.StatusBar#property-OPAQUE_BLACK OPAQUE_BLACK}, 
and {@link Titanium.UI.iPhone.StatusBar#property-TRANSLUCENT_BLACK TRANSLUCENT_BLACK}.</p>
 */
Titanium.UI.iPhone.StatusBar.DEFAULT = null;

/**
 * @property GRAY
 * @type Number
 * @readonly
 * <p>Gray-colored status bar style.</p>
 * @description <p>Used with the {@link Titanium.UI.iPhone#property-statusBarStyle} property.</p>
<p>One of the group of status bar style constants 
{@link Titanium.UI.iPhone.StatusBar#property-DEFAULT DEFAULT}, 
{@link Titanium.UI.iPhone.StatusBar#property-GRAY GRAY}, 
{@link Titanium.UI.iPhone.StatusBar#property-GREY GREY}, 
{@link Titanium.UI.iPhone.StatusBar#property-OPAQUE_BLACK OPAQUE_BLACK}, 
and {@link Titanium.UI.iPhone.StatusBar#property-TRANSLUCENT_BLACK TRANSLUCENT_BLACK}.</p>
 */
Titanium.UI.iPhone.StatusBar.GRAY = null;

/**
 * @property GREY
 * @type Number
 * @readonly
 * <p>Gray-colored status bar style.</p>
 * @description <p>Alias for {@link Titanium.UI.iPhone.StatusBar#property-GRAY GRAY}.</p>
<p>Used with the {@link Titanium.UI.iPhone#property-statusBarStyle} property.</p>
<p>One of the group of status bar style constants 
{@link Titanium.UI.iPhone.StatusBar#property-DEFAULT DEFAULT}, 
{@link Titanium.UI.iPhone.StatusBar#property-GRAY GRAY}, 
{@link Titanium.UI.iPhone.StatusBar#property-GREY GREY}, 
{@link Titanium.UI.iPhone.StatusBar#property-OPAQUE_BLACK OPAQUE_BLACK}, 
and {@link Titanium.UI.iPhone.StatusBar#property-TRANSLUCENT_BLACK TRANSLUCENT_BLACK}.</p>
 */
Titanium.UI.iPhone.StatusBar.GREY = null;

/**
 * @property OPAQUE_BLACK
 * @type Number
 * @readonly
 * <p>Opaque black-colored status bar style.</p>
 * @description <p>Used with the {@link Titanium.UI.iPhone#property-statusBarStyle} property.</p>
<p>One of the group of status bar style constants 
{@link Titanium.UI.iPhone.StatusBar#property-DEFAULT DEFAULT}, 
{@link Titanium.UI.iPhone.StatusBar#property-GRAY GRAY}, 
{@link Titanium.UI.iPhone.StatusBar#property-GREY GREY}, 
{@link Titanium.UI.iPhone.StatusBar#property-OPAQUE_BLACK OPAQUE_BLACK}, 
and {@link Titanium.UI.iPhone.StatusBar#property-TRANSLUCENT_BLACK TRANSLUCENT_BLACK}.</p>
 */
Titanium.UI.iPhone.StatusBar.OPAQUE_BLACK = null;

/**
 * @property TRANSLUCENT_BLACK
 * @type Number
 * @readonly
 * <p>Translucent black-colored status bar style, which provides some degree of transparency to 
the device background.</p>
 * @description <p>Used with the {@link Titanium.UI.iPhone#property-statusBarStyle} property.</p>
<p>One of the group of status bar style constants 
{@link Titanium.UI.iPhone.StatusBar#property-DEFAULT DEFAULT}, 
{@link Titanium.UI.iPhone.StatusBar#property-GRAY GRAY}, 
{@link Titanium.UI.iPhone.StatusBar#property-GREY GREY}, 
{@link Titanium.UI.iPhone.StatusBar#property-OPAQUE_BLACK OPAQUE_BLACK}, 
and {@link Titanium.UI.iPhone.StatusBar#property-TRANSLUCENT_BLACK TRANSLUCENT_BLACK}.</p>
 */
Titanium.UI.iPhone.StatusBar.TRANSLUCENT_BLACK = null;

/**
 * @class Titanium.UI.iPhone.SystemButton
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.Proxy
 * <p>A set of constants for creating standard iOS system buttons.</p>
 * @description <p>Most of these constants are used with the
{@link Titanium.UI.Button#property-systemButton Button.systemButton} property to define a standard
iOS system buttons for use in navigation bars and toolbars. </p>
<p>See {@link Titanium.UI.Button} for more information on the <code>systemButton</code> property, including details
on where system buttons can be used.</p>
<p>A few of these constants are used with {@link Titanium.UI.Button#property-style Button.style} to
create standard iOS buttons that can be used in other places, including table view rows.
These standard button types are:</p>
<ul>
<li>{@link Titanium.UI.iPhone.SystemButton#property-CONTACT_ADD CONTACT_ADD}</li>
<li>{@link Titanium.UI.iPhone.SystemButton#property-DISCLOSURE DISCLOSURE}</li>
<li>{@link Titanium.UI.iPhone.SystemButton#property-INFO_DARK INFO_DARK}</li>
<li>{@link Titanium.UI.iPhone.SystemButton#property-INFO_LIGHT INFO_LIGHT}</li>
</ul>
<p>See Apple's 
<a href="https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/Introduction/Introduction.html">iOS Human Interface Guidelines</a> 
in the iOS Developer Library for details on the proper usage of iOS standard buttons
and icons.</p>
 */
Titanium.UI.iPhone.SystemButton = {};

/**
 * @property ACTION
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify an <strong>Action</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.ACTION = null;

/**
 * @property ACTIVITY
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to create an activity indicator that
can be used in navigation bars and toolbars. </p>
 * @description <p>When visible, the activity indicator is already started.</p>
 */
Titanium.UI.iPhone.SystemButton.ACTIVITY = null;

/**
 * @property ADD
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify an <strong>Add</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.ADD = null;

/**
 * @property BOOKMARKS
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Bookmarks</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.BOOKMARKS = null;

/**
 * @property CAMERA
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Camera</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.CAMERA = null;

/**
 * @property CANCEL
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Cancel</strong> button.</p>
 * @description <p>This button is displayed as a bordered button with localized text.</p>
<p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.CANCEL = null;

/**
 * @property COMPOSE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Compose</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.COMPOSE = null;

/**
 * @property CONTACT_ADD
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-style Button.style} to specify a <strong>ContactAdd</strong> button.</p>
 * @description <p>The resulting button is not restricted to use in navigation bars and toolbars.   </p>
 */
Titanium.UI.iPhone.SystemButton.CONTACT_ADD = null;

/**
 * @property DISCLOSURE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-style Button.style} to specify a <strong>Disclosure</strong> button.</p>
 * @description <p>The resulting button is not restricted to use in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.DISCLOSURE = null;

/**
 * @property DONE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Done</strong> button.</p>
 * @description <p>This button is displayed as a bordered button with localized text.</p>
<p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.DONE = null;

/**
 * @property EDIT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify an <strong>Edit</strong> button.</p>
 * @description <p>This button is displayed as a bordered button with localized text.</p>
<p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.EDIT = null;

/**
 * @property FAST_FORWARD
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Fast Forward</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.FAST_FORWARD = null;

/**
 * @property FIXED_SPACE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to create a fixed-width blank space 
for spacing items in toolbars.</p>
 * @description <p>Only the <code>width</code> property is used when this value is set.</p>
 */
Titanium.UI.iPhone.SystemButton.FIXED_SPACE = null;

/**
 * @property FLEXIBLE_SPACE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to create a flexible blank space 
for spacing items in toolbars.</p>
 * @description <p>The space is distributed equally between the other 
items. Other item properties are ignored when this value is set.</p>
 */
Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE = null;

/**
 * @property INFO_DARK
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-style Button.style} to specify a dark-colored <strong>Info</strong> button.</p>
 * @description <p>The resulting button is not restricted to use in navigation bars and toolbars.   </p>
 */
Titanium.UI.iPhone.SystemButton.INFO_DARK = null;

/**
 * @property INFO_LIGHT
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-style Button.style} to specify a light-colored <strong>Info</strong> button.</p>
 * @description <p>The resulting button is not restricted to use in navigation bars and toolbars.   </p>
 */
Titanium.UI.iPhone.SystemButton.INFO_LIGHT = null;

/**
 * @property ORGANIZE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify an <strong>Organize</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.ORGANIZE = null;

/**
 * @property PAUSE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Pause</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.PAUSE = null;

/**
 * @property PLAY
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Play</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.PLAY = null;

/**
 * @property REFRESH
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Refresh</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.REFRESH = null;

/**
 * @property REPLY
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Reply</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.REPLY = null;

/**
 * @property REWIND
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Rewind</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.REWIND = null;

/**
 * @property SAVE
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Save</strong> button.</p>
 * @description <p>This button is displayed as a bordered button with localized text.</p>
<p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.SAVE = null;

/**
 * @property SPINNER
 * @type Number
 * @readonly
 * <p>Identical to {@link Titanium.UI.iPhone.SystemButton#property-ACTIVITY ACTIVITY}.</p>
 */
Titanium.UI.iPhone.SystemButton.SPINNER = null;

/**
 * @property STOP
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Stop</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.STOP = null;

/**
 * @property TRASH
 * @type Number
 * @readonly
 * <p>Use with {@link Titanium.UI.Button#property-systemButton Button.systemButton} to specify a <strong>Trash</strong> button.</p>
 * @description <p>The resulting button can only be used in navigation bars and toolbars.</p>
 */
Titanium.UI.iPhone.SystemButton.TRASH = null;

/**
 * @class Titanium.UI.iPhone.SystemButtonStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.Proxy
 * <p>A set of constants for the system button styles that can be used for the button <code>style</code> property.</p>
 * @description <p>These constants represent standard iOS system button styles that affect the 
{@link Titanium.UI.Button Button}, {@link Titanium.UI.ButtonBar ButtonBar}, and 
{@link Titanium.UI.iOS.TabbedBar TabbedBar} UI elements.</p>
<p>The different styles are used in different places. For normal buttons which are <strong>not</strong> 
contained in a nav bar, toolbar, button bar or tabbed bar, the following styles apply:</p>
<ul>
<li><code>BORDERED</code>. Simple button style with a rounded border and a white background. 
            The default style for normal buttons.</li>
<li><code>DONE</code>. Like the bordered button, but with a blue background. Button style for a button 
        that indicates completion, such as OK, Save, or Go. </li>
<li><code>PLAIN</code> Button style for an undecorated button. </li>
</ul>
<p>Note that if you specify the <code>PLAIN</code> style, you must style the button using the other button 
properties. For example, there is no indication that the button has been pressed unless you set 
other properties for the selected state, such as <code>backgroundSelectedImage</code> and <code>selectedColor</code>.</p>
<p>When you add a button to a {@link Titanium.UI.iOS.Toolbar Toolbar}, the styles have a slightly 
different effect:</p>
<ul>
<li><code>PLAIN</code> Button style for an undecorated button with large text and a <em>glow</em> effect when the 
button is pressed. Default style for buttons in toolbars.</li>
<li><code>BORDERED</code>. Simple button style with a rounded border and a light blue background. </li>
<li><code>DONE</code>. Like the bordered button, but with a dark blue background. </li>
</ul>
<p>For <code>TabbedBar</code> and <code>ButtonBar</code> controls, styles have the following meaning:</p>
<ul>
<li><code>PLAIN</code>. Default style for <code>ButtonBar</code> and <code>TabbedBar</code>.</li>
<li><code>BORDERED</code>. Creates a bar like the <code>PLAIN</code> bar, but with a heavier border.</li>
<li><code>BAR</code>. Used on <code>ButtonBar</code> and <code>TabbedBar</code> controls to produce a more compact bar with 
translucent buttons that allow the bar's background color to show through.</li>
</ul>
 */
Titanium.UI.iPhone.SystemButtonStyle = {};

/**
 * @property BAR
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.UI.ButtonBar ButtonBar} or {@link Titanium.UI.iOS.TabbedBar TabbedBar} only, 
to use the more condensed style used in nav bars and tool bars.</p>
 * @description <p>To use a background color or gradient on a <code>ButtonBar</code> or <code>TabbedBar</code> control, you must use 
the <code>BAR</code> style. This style creates translucent buttons that allow the bar's background 
color to show through.</p>
 */
Titanium.UI.iPhone.SystemButtonStyle.BAR = null;

/**
 * @property BORDERED
 * @type Number
 * @readonly
 * <p>A simple button style with a border.</p>
 * @description 
 */
Titanium.UI.iPhone.SystemButtonStyle.BORDERED = null;

/**
 * @property DONE
 * @type Number
 * @readonly
 * <p>The style for a <strong>Done</strong> button--for example, a button that completes some task and returns 
to the previous view.</p>
 * @description <p>Used in toolbars and navigation bars.</p>
 */
Titanium.UI.iPhone.SystemButtonStyle.DONE = null;

/**
 * @property PLAIN
 * @type Number
 * @readonly
 * <p>Specifies a borderless button, the default style for toolbars, button bars, and tabbed bars.</p>
 * @description <p>In toolbars, this specifies an undecorated button with large text. A glow effect is used when 
tapped.</p>
<p>In button bars and tabbed bars, specifies a button with large text that is highlighted when 
tapped.</p>
<p>When used on a normal button (that is, outside of a navigation bar, toolbar, button bar or 
tabbed bar), <code>PLAIN</code> specifies a button with no built-in decoration except its title text. 
This is the style you should choose if you want to supply your own background images, 
background gradient, and so on.</p>
<p>Note that for tabbed bar or button bars, the {@link Titanium.UI.iPhone.SystemButtonStyle#property-BAR BAR} 
style is used to allow the bar's background color or gradient to show through.</p>
 */
Titanium.UI.iPhone.SystemButtonStyle.PLAIN = null;

/**
 * @class Titanium.UI.iPhone.SystemIcon
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @extends Titanium.Proxy
 * <p>A set of constants for the system icon styles that can be used on a tab group tab.</p>
 */
Titanium.UI.iPhone.SystemIcon = {};

/**
 * @property BOOKMARKS
 * @type Number
 * @readonly
 * <p>Bookmark style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.BOOKMARKS = null;

/**
 * @property CONTACTS
 * @type Number
 * @readonly
 * <p>Contacts style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.CONTACTS = null;

/**
 * @property DOWNLOADS
 * @type Number
 * @readonly
 * <p>Downloads style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.DOWNLOADS = null;

/**
 * @property FAVORITES
 * @type Number
 * @readonly
 * <p>Favorites style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.FAVORITES = null;

/**
 * @property FEATURED
 * @type Number
 * @readonly
 * <p>Featured style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.FEATURED = null;

/**
 * @property HISTORY
 * @type Number
 * @readonly
 * <p>History style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.HISTORY = null;

/**
 * @property MORE
 * @type Number
 * @readonly
 * <p>More style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.MORE = null;

/**
 * @property MOST_RECENT
 * @type Number
 * @readonly
 * <p>Most recent style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.MOST_RECENT = null;

/**
 * @property MOST_VIEWED
 * @type Number
 * @readonly
 * <p>Most viewed style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.MOST_VIEWED = null;

/**
 * @property RECENTS
 * @type Number
 * @readonly
 * <p>Recents style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.RECENTS = null;

/**
 * @property SEARCH
 * @type Number
 * @readonly
 * <p>Search style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.SEARCH = null;

/**
 * @property TOP_RATED
 * @type Number
 * @readonly
 * <p>Top rated style icon</p>
 */
Titanium.UI.iPhone.SystemIcon.TOP_RATED = null;

/**
 * @class Titanium.UI.iPhone.TableViewCellSelectionStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the style that can be used for the <code>selectionStyle</code> property of 
{@link Titanium.UI.TableViewRow}.</p>
 */
Titanium.UI.iPhone.TableViewCellSelectionStyle = {};

/**
 * @property BLUE
 * @type Number
 * @readonly
 * <p>The cell when selected has a blue background. This is the default value.</p>
 */
Titanium.UI.iPhone.TableViewCellSelectionStyle.BLUE = null;

/**
 * @property GRAY
 * @type Number
 * @readonly
 * <p>Then cell when selected has a gray background.</p>
 */
Titanium.UI.iPhone.TableViewCellSelectionStyle.GRAY = null;

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>The cell has no distinct style for when it is selected.</p>
 */
Titanium.UI.iPhone.TableViewCellSelectionStyle.NONE = null;

/**
 * @class Titanium.UI.iPhone.TableViewScrollPosition
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the position value that can be used for the <code>position</code> property of 
{@link Titanium.UI.TableView} when invoking <code>scrollToIndex</code>.</p>
 */
Titanium.UI.iPhone.TableViewScrollPosition = {};

/**
 * @property BOTTOM
 * @type Number
 * @readonly
 * <p>The table view scrolls the row of interest to the bottom of the visible table view.</p>
 */
Titanium.UI.iPhone.TableViewScrollPosition.BOTTOM = null;

/**
 * @property MIDDLE
 * @type Number
 * @readonly
 * <p>The table view scrolls the row of interest to the middle of the visible table view.</p>
 */
Titanium.UI.iPhone.TableViewScrollPosition.MIDDLE = null;

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>The table view scrolls the row of interest to be fully visible with a minimum of movement. If the row is already fully visible, no scrolling occurs. For example, if the row is above the visible area, the behavior is identical to that specified by <code>TOP</code>. This is the default.</p>
 */
Titanium.UI.iPhone.TableViewScrollPosition.NONE = null;

/**
 * @property TOP
 * @type Number
 * @readonly
 * <p>The table view scrolls the row of interest to the top of the visible table view.</p>
 */
Titanium.UI.iPhone.TableViewScrollPosition.TOP = null;

/**
 * @class Titanium.UI.iPhone.TableViewSeparatorStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the style that can be used for the <code>separatorStyle</code> property of 
{@link Titanium.UI.TableView}.</p>
 */
Titanium.UI.iPhone.TableViewSeparatorStyle = {};

/**
 * @property NONE
 * @type Number
 * @readonly
 * <p>The separator cell has no distinct style.</p>
 */
Titanium.UI.iPhone.TableViewSeparatorStyle.NONE = null;

/**
 * @property SINGLE_LINE
 * @type Number
 * @readonly
 * <p>The separator cell has a single line running across its width. This is the default value.</p>
 */
Titanium.UI.iPhone.TableViewSeparatorStyle.SINGLE_LINE = null;

/**
 * @class Titanium.UI.iPhone.TableViewStyle
 * @typestr Object of Titanium.UI.iPhone
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @extends Titanium.Proxy
 * <p>A set of constants for the style that can be used for the button <code>style</code> property of 
{@link Titanium.UI.TableView}.</p>
 */
Titanium.UI.iPhone.TableViewStyle = {};

/**
 * @property GROUPED
 * @type Number
 * @readonly
 * <p>A table view whose sections present distinct groups of rows. The section headers and footers 
do not float.</p>
 */
Titanium.UI.iPhone.TableViewStyle.GROUPED = null;

/**
 * @property PLAIN
 * @type Number
 * @readonly
 * <p>A plain table view. Any section headers or footers are displayed as inline separators and 
float when the table view is scrolled.</p>
 */
Titanium.UI.iPhone.TableViewStyle.PLAIN = null;

/**
 * @method createNavigationGroup
 * <p>Creates and returns an instance of {@link Titanium.UI.iPhone.NavigationGroup}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.iPhone.NavigationGroup} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.iPhone.NavigationGroup} 
 * @platform iphone 1.2
 * @platform ipad 1.2
*/
Titanium.UI.iPhone.createNavigationGroup = function(parameters){};

/**
 * @method getAppBadge
 * <p>Gets the value of the {@link Titanium.UI.iPhone#property-appBadge appBadge} property.</p>
 * @return {Number} 
*/
Titanium.UI.iPhone.getAppBadge = function(){};

/**
 * @method getAppSupportsShakeToEdit
 * <p>Gets the value of the {@link Titanium.UI.iPhone#property-appSupportsShakeToEdit appSupportsShakeToEdit} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.iPhone.getAppSupportsShakeToEdit = function(){};

/**
 * @method getStatusBarHidden
 * <p>Gets the value of the {@link Titanium.UI.iPhone#property-statusBarHidden statusBarHidden} property.</p>
 * @return {Boolean} 
*/
Titanium.UI.iPhone.getStatusBarHidden = function(){};

/**
 * @method getStatusBarStyle
 * <p>Gets the value of the {@link Titanium.UI.iPhone#property-statusBarStyle statusBarStyle} property.</p>
 * @return {Number} 
*/
Titanium.UI.iPhone.getStatusBarStyle = function(){};

/**
 * @method hideStatusBar
 * <p>Hides the status bar.</p>
 * @param {hideStatusBarParams} params (optional)
 * <p>Determines whether action is animated.</p>
 * @return void
*/
Titanium.UI.iPhone.hideStatusBar = function(params){};

/**
 * @method setAppBadge
 * <p>Sets the value of the {@link Titanium.UI.iPhone#property-appBadge appBadge} property.</p>
 * @param {Number} appBadge 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iPhone.setAppBadge = function(appBadge){};

/**
 * @method setAppSupportsShakeToEdit
 * <p>Sets the value of the {@link Titanium.UI.iPhone#property-appSupportsShakeToEdit appSupportsShakeToEdit} property.</p>
 * @param {Boolean} appSupportsShakeToEdit 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iPhone.setAppSupportsShakeToEdit = function(appSupportsShakeToEdit){};

/**
 * @method setStatusBarHidden
 * <p>Sets the value of the {@link Titanium.UI.iPhone#property-statusBarHidden statusBarHidden} property.</p>
 * @param {Boolean} statusBarHidden 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iPhone.setStatusBarHidden = function(statusBarHidden){};

/**
 * @method setStatusBarStyle
 * <p>Sets the value of the {@link Titanium.UI.iPhone#property-statusBarStyle statusBarStyle} property.</p>
 * @param {Number} statusBarStyle 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.iPhone.setStatusBarStyle = function(statusBarStyle){};

/**
 * @method showStatusBar
 * <p>Shows the status bar.</p>
 * @param {showStatusBarParams} params (optional)
 * <p>Determines whether action is animated.</p>
 * @return void
*/
Titanium.UI.iPhone.showStatusBar = function(params){};

/**
 * @property MODAL_PRESENTATION_CURRENT_CONTEXT
 * @type Number
 * @readonly
 * <p>View presented with the same style as its parent window.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window presentation style constants 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_CURRENT_CONTEXT MODAL_PRESENTATION_CURRENT_CONTEXT}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FORMSHEET MODAL_PRESENTATION_FORMSHEET}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN MODAL_PRESENTATION_FULLSCREEN}, 
and {@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_PAGESHEET MODAL_PRESENTATION_PAGESHEET}.</p>
 */
Titanium.UI.iPhone.MODAL_PRESENTATION_CURRENT_CONTEXT = null;

/**
 * @property MODAL_PRESENTATION_FORMSHEET
 * @type Number
 * @readonly
 * <p>Window width and height are smaller than those of the screen and the view is centered on 
the screen.</p>
 * @description <p>If the system is in a landscape orientation and the keyboard is visible, the position of the 
view is adjusted upward so that the view remains visible. All uncovered areas are dimmed 
and do not respond to touch to prevent the user from interacting with them.</p>
<p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window presentation style constants 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_CURRENT_CONTEXT MODAL_PRESENTATION_CURRENT_CONTEXT}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FORMSHEET MODAL_PRESENTATION_FORMSHEET}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN MODAL_PRESENTATION_FULLSCREEN}, 
and {@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_PAGESHEET MODAL_PRESENTATION_PAGESHEET}.</p>
 */
Titanium.UI.iPhone.MODAL_PRESENTATION_FORMSHEET = null;

/**
 * @property MODAL_PRESENTATION_FULLSCREEN
 * @type Number
 * @readonly
 * <p>Window covers the screen.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window presentation style constants 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_CURRENT_CONTEXT MODAL_PRESENTATION_CURRENT_CONTEXT}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FORMSHEET MODAL_PRESENTATION_FORMSHEET}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN MODAL_PRESENTATION_FULLSCREEN}, 
and {@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_PAGESHEET MODAL_PRESENTATION_PAGESHEET}.</p>
 */
Titanium.UI.iPhone.MODAL_PRESENTATION_FULLSCREEN = null;

/**
 * @property MODAL_PRESENTATION_PAGESHEET
 * @type Number
 * @readonly
 * <p>Window height is the height of the screen and width is equal to screen width in a portrait 
orientation.</p>
 * @description <p>Any uncovered areas are dimmed and do not respond to touch, to prevent the user from 
interacting with them. In portrait orientations, this option is essentially the same as 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN}.</p>
<p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window presentation style constants 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_CURRENT_CONTEXT MODAL_PRESENTATION_CURRENT_CONTEXT}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FORMSHEET MODAL_PRESENTATION_FORMSHEET}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN MODAL_PRESENTATION_FULLSCREEN}, 
and {@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_PAGESHEET MODAL_PRESENTATION_PAGESHEET}.</p>
 */
Titanium.UI.iPhone.MODAL_PRESENTATION_PAGESHEET = null;

/**
 * @property MODAL_TRANSITION_STYLE_COVER_VERTICAL
 * @type Number
 * @readonly
 * <p>When the window is presented, its view slides up from the bottom of the screen. On dismissal, 
the view slides back down (default.)</p>
 * @description <p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window transition style constants 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_COVER_VERTICAL MODAL_TRANSITION_STYLE_COVER_VERTICAL}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_CROSS_DISSOLVE MODAL_TRANSITION_STYLE_CROSS_DISSOLVE}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL}, 
and {@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_PARTIAL_CURL MODAL_TRANSITION_STYLE_PARTIAL_CURL}.</p>
 */
Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_COVER_VERTICAL = null;

/**
 * @property MODAL_TRANSITION_STYLE_CROSS_DISSOLVE
 * @type Number
 * @readonly
 * <p>When the window is presented, the current view fades out while the new view fades in at the 
same time. On dismissal, a similar type of cross-fade is used to return to the original view.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window transition style constants 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_COVER_VERTICAL MODAL_TRANSITION_STYLE_COVER_VERTICAL}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_CROSS_DISSOLVE MODAL_TRANSITION_STYLE_CROSS_DISSOLVE}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL}, 
and {@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_PARTIAL_CURL MODAL_TRANSITION_STYLE_PARTIAL_CURL}.</p>
 */
Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_CROSS_DISSOLVE = null;

/**
 * @property MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL
 * @type Number
 * @readonly
 * <p>When the window is presented, the current view initiates a horizontal 3D flip from 
right-to-left, resulting in the revealing of the new view as if it were on the back of the 
previous view. On dismissal, the flip occurs from left-to-right, returning to the original 
view.</p>
 * @description <p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window transition style constants 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_COVER_VERTICAL MODAL_TRANSITION_STYLE_COVER_VERTICAL}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_CROSS_DISSOLVE MODAL_TRANSITION_STYLE_CROSS_DISSOLVE}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL}, 
and {@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_PARTIAL_CURL MODAL_TRANSITION_STYLE_PARTIAL_CURL}.</p>
 */
Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL = null;

/**
 * @property MODAL_TRANSITION_STYLE_PARTIAL_CURL
 * @type Number
 * @readonly
 * <p>When the window is presented, one corner of the current view curls up to reveal the modal 
view underneath. On dismissal, the curled up page unfurls itself back on top of the modal 
view.</p>
 * @description <p>A modal view presented using this transition is itself prevented from presenting any 
additional modal views. This transition style is supported only if the window is presenting 
a {@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN} modal presentation style.</p>
<p>Used with the {@link Titanium.UI.Window#event-open} and {@link Titanium.UI.Window#event-close} methods.</p>
<p>One of the group of modal window transition style constants 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_COVER_VERTICAL MODAL_TRANSITION_STYLE_COVER_VERTICAL}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_CROSS_DISSOLVE MODAL_TRANSITION_STYLE_CROSS_DISSOLVE}, 
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL}, 
and {@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_PARTIAL_CURL MODAL_TRANSITION_STYLE_PARTIAL_CURL}.</p>
 */
Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_PARTIAL_CURL = null;

/**
 * @property appBadge
 * @type Number
 * <p>Value of the badge for the application's springboard icon.</p>
 */
Titanium.UI.iPhone.appBadge = null;

/**
 * @property appSupportsShakeToEdit
 * @type Boolean
 * <p>Determines whether the shake to edit system-wide capability is enabled.</p>
 */
Titanium.UI.iPhone.appSupportsShakeToEdit = null;

/**
 * @property statusBarHidden
 * @type Boolean
 * <p>Determines whether the status bar is hidden.</p>
 */
Titanium.UI.iPhone.statusBarHidden = null;

/**
 * @property statusBarStyle
 * @type Number
 * <p>Determines the status bar color style.</p>
 * @description <p>One of the group of status bar style constants 
{@link Titanium.UI.iPhone.StatusBar#property-DEFAULT}, 
{@link Titanium.UI.iPhone.StatusBar#property-GRAY}, 
{@link Titanium.UI.iPhone.StatusBar#property-GREY}, 
{@link Titanium.UI.iPhone.StatusBar#property-OPAQUE_BLACK}, 
or {@link Titanium.UI.iPhone.StatusBar#property-TRANSLUCENT_BLACK}.</p>
 */
Titanium.UI.iPhone.statusBarStyle = null;

/**
 * @method convertUnits
 * <p>Converts one type of unit to another using the metrics of the main display.</p>
 * @description <p>As this method does not support percentages, <code>0</code> is returned if they are specified.</p>
 * @param {String} convertFromValue 
 * <p>Measurement and optional unit to convert from, i.e. 160, "120dip".  Percentages are 
not accepted.</p>
 * @param {String} convertToUnits 
 * <p>Desired unit for the conversion result. Use one of the unit constants in {@link Titanium.UI}.</p>
 * @return {Number} 
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
*/
Titanium.UI.convertUnits = function(convertFromValue, convertToUnits){};

/**
 * @method create2DMatrix
 * <p>Creates and returns an instance of {@link Titanium.UI.2DMatrix}.</p>
 * @param {MatrixCreationDict} parameters (optional)
 * <p>Initial transformation of the matrix.</p>
 * @return {Titanium.UI.2DMatrix} 
*/
Titanium.UI.create2DMatrix = function(parameters){};

/**
 * @method create3DMatrix
 * <p>Creates and returns an instance of {@link Titanium.UI.3DMatrix}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.3DMatrix} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.3DMatrix} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.UI.create3DMatrix = function(parameters){};

/**
 * @method createActivityIndicator
 * <p>Creates and returns an instance of {@link Titanium.UI.ActivityIndicator}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ActivityIndicator} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ActivityIndicator} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createActivityIndicator = function(parameters){};

/**
 * @method createAlertDialog
 * <p>Creates and returns an instance of {@link Titanium.UI.AlertDialog}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.AlertDialog} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.AlertDialog} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createAlertDialog = function(parameters){};

/**
 * @method createAnimation
 * <p>Creates and returns an instance of {@link Titanium.UI.Animation}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Animation} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Animation} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createAnimation = function(parameters){};

/**
 * @method createButton
 * <p>Creates and returns an instance of {@link Titanium.UI.Button}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Button} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Button} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createButton = function(parameters){};

/**
 * @method createButtonBar
 * <p>Creates and returns an instance of {@link Titanium.UI.ButtonBar}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ButtonBar} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ButtonBar} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.createButtonBar = function(parameters){};

/**
 * @method createCoverFlowView
 * <p>Creates and returns an instance of {@link Titanium.UI.CoverFlowView}.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS.CoverFlowView} instead.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.CoverFlowView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.CoverFlowView} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.createCoverFlowView = function(parameters){};

/**
 * @method createDashboardItem
 * <p>Creates and returns an instance of {@link Titanium.UI.DashboardItem}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.DashboardItem} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.DashboardItem} 
 * @platform iphone 1.2
 * @platform ipad 1.2
*/
Titanium.UI.createDashboardItem = function(parameters){};

/**
 * @method createDashboardView
 * <p>Creates and returns an instance of {@link Titanium.UI.DashboardView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.DashboardView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.DashboardView} 
 * @platform iphone 1.2
 * @platform ipad 1.2
*/
Titanium.UI.createDashboardView = function(parameters){};

/**
 * @method createEmailDialog
 * <p>Creates and returns an instance of {@link Titanium.UI.EmailDialog}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.EmailDialog} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.EmailDialog} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createEmailDialog = function(parameters){};

/**
 * @method createImageView
 * <p>Creates and returns an instance of {@link Titanium.UI.ImageView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ImageView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ImageView} 
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createImageView = function(parameters){};

/**
 * @method createLabel
 * <p>Creates and returns an instance of {@link Titanium.UI.Label}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Label} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Label} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createLabel = function(parameters){};

/**
 * @method createListSection
 * <p>Creates and returns an instance of {@link Titanium.UI.ListSection}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ListSection} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ListSection} 
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
*/
Titanium.UI.createListSection = function(parameters){};

/**
 * @method createListView
 * <p>Creates and returns an instance of {@link Titanium.UI.ListView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ListView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ListView} 
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
*/
Titanium.UI.createListView = function(parameters){};

/**
 * @method createMaskedImage
 * <p>Creates and returns an instance of {@link Titanium.UI.MaskedImage}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.MaskedImage} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.MaskedImage} 
 * @platform iphone 0.4
 * @platform ipad 0.4
*/
Titanium.UI.createMaskedImage = function(parameters){};

/**
 * @method createNotification
 * <p>Creates and returns an instance of {@link Titanium.UI.Notification}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Notification} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Notification} 
 * @platform android 0.8
*/
Titanium.UI.createNotification = function(parameters){};

/**
 * @method createOptionDialog
 * <p>Creates and returns an instance of {@link Titanium.UI.OptionDialog}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.OptionDialog} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.OptionDialog} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createOptionDialog = function(parameters){};

/**
 * @method createPicker
 * <p>Creates and returns an instance of {@link Titanium.UI.Picker}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Picker} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Picker} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createPicker = function(parameters){};

/**
 * @method createPickerColumn
 * <p>Creates and returns an instance of {@link Titanium.UI.PickerColumn}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.PickerColumn} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.PickerColumn} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createPickerColumn = function(parameters){};

/**
 * @method createPickerRow
 * <p>Creates and returns an instance of {@link Titanium.UI.PickerRow}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.PickerRow} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.PickerRow} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createPickerRow = function(parameters){};

/**
 * @method createProgressBar
 * <p>Creates and returns an instance of {@link Titanium.UI.ProgressBar}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ProgressBar} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ProgressBar} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createProgressBar = function(parameters){};

/**
 * @method createScrollView
 * <p>Creates and returns an instance of {@link Titanium.UI.ScrollView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ScrollView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ScrollView} 
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createScrollView = function(parameters){};

/**
 * @method createScrollableView
 * <p>Creates and returns an instance of {@link Titanium.UI.ScrollableView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.ScrollableView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.ScrollableView} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createScrollableView = function(parameters){};

/**
 * @method createSearchBar
 * <p>Creates and returns an instance of {@link Titanium.UI.SearchBar}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.SearchBar} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.SearchBar} 
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.createSearchBar = function(parameters){};

/**
 * @method createSlider
 * <p>Creates and returns an instance of {@link Titanium.UI.Slider}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Slider} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Slider} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createSlider = function(parameters){};

/**
 * @method createSwitch
 * <p>Creates and returns an instance of {@link Titanium.UI.Switch}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Switch} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Switch} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createSwitch = function(parameters){};

/**
 * @method createTab
 * <p>Creates and returns an instance of {@link Titanium.UI.Tab}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Tab} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Tab} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createTab = function(parameters){};

/**
 * @method createTabGroup
 * <p>Creates and returns an instance of {@link Titanium.UI.TabGroup}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.TabGroup} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.TabGroup} 
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createTabGroup = function(parameters){};

/**
 * @method createTabbedBar
 * <p>Creates and returns an instance of {@link Titanium.UI.TabbedBar}.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS.TabbedBar} instead.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.TabbedBar} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.TabbedBar} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.createTabbedBar = function(parameters){};

/**
 * @method createTableView
 * <p>Creates and returns an instance of {@link Titanium.UI.TableView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.TableView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.TableView} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createTableView = function(parameters){};

/**
 * @method createTableViewRow
 * <p>Creates and returns an instance of {@link Titanium.UI.TableViewRow}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.TableViewRow} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.TableViewRow} 
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createTableViewRow = function(parameters){};

/**
 * @method createTableViewSection
 * <p>Creates and returns an instance of {@link Titanium.UI.TableViewSection}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.TableViewSection} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.TableViewSection} 
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createTableViewSection = function(parameters){};

/**
 * @method createTextArea
 * <p>Creates and returns an instance of {@link Titanium.UI.TextArea}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.TextArea} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.TextArea} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createTextArea = function(parameters){};

/**
 * @method createTextField
 * <p>Creates and returns an instance of {@link Titanium.UI.TextField}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.TextField} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.TextField} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createTextField = function(parameters){};

/**
 * @method createToolbar
 * <p>Creates and returns an instance of {@link Titanium.UI.Toolbar}.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS.Toolbar} instead.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Toolbar} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Toolbar} 
 * @platform iphone 0.8
 * @platform ipad 0.8
*/
Titanium.UI.createToolbar = function(parameters){};

/**
 * @method createView
 * <p>Creates and returns an instance of {@link Titanium.UI.View}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.View} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.View} 
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createView = function(parameters){};

/**
 * @method createWebView
 * <p>Creates and returns an instance of {@link Titanium.UI.WebView}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.WebView} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.WebView} 
 * @platform android 0.8
 * @platform blackberry 3.1
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createWebView = function(parameters){};

/**
 * @method createWindow
 * <p>Creates and returns an instance of {@link Titanium.UI.Window}.</p>
 * @param {Object} parameters (optional)
 * <p>Properties to set on a new object, including any defined by {@link Titanium.UI.Window} except those marked not-creation or read-only.</p>
 * @return {Titanium.UI.Window} 
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.UI.createWindow = function(parameters){};

/**
 * @method getBackgroundColor
 * <p>Gets the value of the {@link Titanium.UI#property-backgroundColor backgroundColor} property.</p>
 * @return {String} 
*/
Titanium.UI.getBackgroundColor = function(){};

/**
 * @method getBackgroundImage
 * <p>Gets the value of the {@link Titanium.UI#property-backgroundImage backgroundImage} property.</p>
 * @return {String} 
*/
Titanium.UI.getBackgroundImage = function(){};

/**
 * @method getCurrentTab
 * <p>Gets the value of the {@link Titanium.UI#property-currentTab currentTab} property.</p>
 * @return {Titanium.UI.Tab} 
*/
Titanium.UI.getCurrentTab = function(){};

/**
 * @method getCurrentWindow
 * <p>Gets the value of the {@link Titanium.UI#property-currentWindow currentWindow} property.</p>
 * @return {Titanium.UI.Window} 
*/
Titanium.UI.getCurrentWindow = function(){};

/**
 * @method getOrientation
 * <p>Gets the value of the {@link Titanium.UI#property-orientation orientation} property.</p>
 * @removed  3.0.0
 * @return {Number} 
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
*/
Titanium.UI.getOrientation = function(){};

/**
 * @method setBackgroundColor
 * <p>Sets the value of the {@link Titanium.UI#property-backgroundColor backgroundColor} property.</p>
 * @param {String} backgroundColor 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.setBackgroundColor = function(backgroundColor){};

/**
 * @method setBackgroundImage
 * <p>Sets the value of the {@link Titanium.UI#property-backgroundImage backgroundImage} property.</p>
 * @param {String} backgroundImage 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.setBackgroundImage = function(backgroundImage){};

/**
 * @method setCurrentTab
 * <p>Sets the value of the {@link Titanium.UI#property-currentTab currentTab} property.</p>
 * @param {Titanium.UI.Tab} currentTab 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.UI.setCurrentTab = function(currentTab){};

/**
 * @method setOrientation
 * <p>Sets the value of the {@link Titanium.UI#property-orientation orientation} property.</p>
 * @removed  3.0.0
 * @param {Number} orientation 
 * <p>New value for the property.</p>
 * @return void
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
*/
Titanium.UI.setOrientation = function(orientation){};

/**
 * @property ANIMATION_CURVE_EASE_IN
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that starts
slowly and speeds up.</p>
 */
Titanium.UI.ANIMATION_CURVE_EASE_IN = null;

/**
 * @property ANIMATION_CURVE_EASE_IN_OUT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that starts
slowly, and speeds up, then slows down at the end of the animation.</p>
 */
Titanium.UI.ANIMATION_CURVE_EASE_IN_OUT = null;

/**
 * @property ANIMATION_CURVE_EASE_OUT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that starts
quickly, then slows down at the end of the animation.</p>
 */
Titanium.UI.ANIMATION_CURVE_EASE_OUT = null;

/**
 * @property ANIMATION_CURVE_LINEAR
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Use with {@link Titanium.UI.Animation#property-curve Animation.curve} to specify an animation that proceeds
at a constant rate.</p>
 */
Titanium.UI.ANIMATION_CURVE_LINEAR = null;

/**
 * @property AUTODETECT_ADDRESS
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Converts strings formatted as addresses into clickable links.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI#property-AUTOLINK_MAP_ADDRESSES} instead.</p>
 */
Titanium.UI.AUTODETECT_ADDRESS = null;

/**
 * @property AUTODETECT_ALL
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Converts all detectable types of data into clickable links.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI#property-AUTOLINK_ALL} instead.</p>
 */
Titanium.UI.AUTODETECT_ALL = null;

/**
 * @property AUTODETECT_CALENDAR
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Converts strings formatted as calendar events into clickable links.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI#property-AUTOLINK_CALENDAR} instead.</p>
 */
Titanium.UI.AUTODETECT_CALENDAR = null;

/**
 * @property AUTODETECT_LINK
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Converts strings formatted as URLs into clickable links.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI#property-AUTOLINK_URLS} instead.</p>
 */
Titanium.UI.AUTODETECT_LINK = null;

/**
 * @property AUTODETECT_NONE
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Disables converting strings into clickable links.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI#property-AUTOLINK_NONE} instead.</p>
 */
Titanium.UI.AUTODETECT_NONE = null;

/**
 * @property AUTODETECT_PHONE
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Converts strings formatted as phone numbers into clickable links.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI#property-AUTOLINK_PHONE_NUMBERS} instead.</p>
 */
Titanium.UI.AUTODETECT_PHONE = null;

/**
 * @property AUTOLINK_ALL
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Converts all detectable types of data into clickable links.</p>
 * @description <p>Two or more autolink constants can be combined using bitwise or.
On iOS:
   Use with the {@link Titanium.UI.TextArea#property-autoLink} property.</p>
<p>On Android:
   Use with {@link Titanium.UI.TextArea#property-autoLink}, {@link Titanium.UI.TextField#property-autoLink}, and {@link Titanium.UI.Label#property-autoLink} properties.</p>
 */
Titanium.UI.AUTOLINK_ALL = null;

/**
 * @property AUTOLINK_CALENDAR
 * @type Number
 * @readonly
 * @platform iphone 0.8
 * @platform ipad 0.8
 * <p>Converts strings formatted as calendar events into clickable links.</p>
 * @description <p>Use with the {@link Titanium.UI.TextArea#property-autoLink} property. Two or more autolink constants can be combined using bitwise or.</p>
 */
Titanium.UI.AUTOLINK_CALENDAR = null;

/**
 * @property AUTOLINK_EMAIL_ADDRESSES
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Converts strings formatted as email addresses into clickable links.</p>
 * @description <p>Two or more autolink constants can be combined using bitwise or.
On iOS:
   Use with the {@link Titanium.UI.TextArea#property-autoLink} property. This property will also convert strings formatted
   as URLs into clickable links.</p>
<p>On Android:
   Use with {@link Titanium.UI.TextArea#property-autoLink}, {@link Titanium.UI.TextField#property-autoLink}, and {@link Titanium.UI.Label#property-autoLink} properties.</p>
 */
Titanium.UI.AUTOLINK_EMAIL_ADDRESSES = null;

/**
 * @property AUTOLINK_MAP_ADDRESSES
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Converts strings formatted as addresses into clickable links.</p>
 * @description <p>Two or more autolink constants can be combined using bitwise or.
On iOS:
   Use with the {@link Titanium.UI.TextArea#property-autoLink} property.</p>
<p>On Android:
   Use with {@link Titanium.UI.TextArea#property-autoLink}, {@link Titanium.UI.TextField#property-autoLink}, and {@link Titanium.UI.Label#property-autoLink} properties.</p>
 */
Titanium.UI.AUTOLINK_MAP_ADDRESSES = null;

/**
 * @property AUTOLINK_NONE
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Disables converting strings into clickable links.</p>
 * @description <p>Two or more autolink constants can be combined using bitwise or.
On iOS:
   Use with the {@link Titanium.UI.TextArea#property-autoLink} property.</p>
<p>On Android:
   Use with {@link Titanium.UI.TextArea#property-autoLink}, {@link Titanium.UI.TextField#property-autoLink}, and {@link Titanium.UI.Label#property-autoLink} properties.</p>
 */
Titanium.UI.AUTOLINK_NONE = null;

/**
 * @property AUTOLINK_PHONE_NUMBERS
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Converts strings formatted as phone numbers into clickable links.</p>
 * @description <p>Two or more autolink constants can be combined using bitwise or.
On iOS:
   Use with the {@link Titanium.UI.TextArea#property-autoLink} property.</p>
<p>On Android:
   Use with {@link Titanium.UI.TextArea#property-autoLink}, {@link Titanium.UI.TextField#property-autoLink}, and {@link Titanium.UI.Label#property-autoLink} properties.</p>
 */
Titanium.UI.AUTOLINK_PHONE_NUMBERS = null;

/**
 * @property AUTOLINK_URLS
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Converts strings formatted as URLs into clickable links.</p>
 * @description <p>Two or more autolink constants can be combined using bitwise or.
On iOS:
   Use with the {@link Titanium.UI.TextArea#property-autoLink} property. This property will also convert strings formatted
   as email addresses into clickable links.</p>
<p>On Android:
   Use with {@link Titanium.UI.TextArea#property-autoLink}, {@link Titanium.UI.TextField#property-autoLink}, and {@link Titanium.UI.Label#property-autoLink} properties.</p>
 */
Titanium.UI.AUTOLINK_URLS = null;

/**
 * @property BLEND_MODE_CLEAR
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_CLEAR} instead.</p>
 */
Titanium.UI.BLEND_MODE_CLEAR = null;

/**
 * @property BLEND_MODE_COLOR
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_COLOR} instead.</p>
 */
Titanium.UI.BLEND_MODE_COLOR = null;

/**
 * @property BLEND_MODE_COLOR_BURN
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_COLOR_BURN} instead.</p>
 */
Titanium.UI.BLEND_MODE_COLOR_BURN = null;

/**
 * @property BLEND_MODE_COLOR_DODGE
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_COLOR_DODGE} instead.</p>
 */
Titanium.UI.BLEND_MODE_COLOR_DODGE = null;

/**
 * @property BLEND_MODE_COPY
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_COPY} instead.</p>
 */
Titanium.UI.BLEND_MODE_COPY = null;

/**
 * @property BLEND_MODE_DARKEN
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_DARKEN} instead.</p>
 */
Titanium.UI.BLEND_MODE_DARKEN = null;

/**
 * @property BLEND_MODE_DESTINATION_ATOP
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_DESTINATION_ATOP} instead.</p>
 */
Titanium.UI.BLEND_MODE_DESTINATION_ATOP = null;

/**
 * @property BLEND_MODE_DESTINATION_IN
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_DESTINATION_IN} instead.</p>
 */
Titanium.UI.BLEND_MODE_DESTINATION_IN = null;

/**
 * @property BLEND_MODE_DESTINATION_OUT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_DESTINATION_OUT} instead.</p>
 */
Titanium.UI.BLEND_MODE_DESTINATION_OUT = null;

/**
 * @property BLEND_MODE_DESTINATION_OVER
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_DESTINATION_OVER} instead.</p>
 */
Titanium.UI.BLEND_MODE_DESTINATION_OVER = null;

/**
 * @property BLEND_MODE_DIFFERENCE
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_DIFFERENCE} instead.</p>
 */
Titanium.UI.BLEND_MODE_DIFFERENCE = null;

/**
 * @property BLEND_MODE_EXCLUSION
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_EXCLUSION} instead.</p>
 */
Titanium.UI.BLEND_MODE_EXCLUSION = null;

/**
 * @property BLEND_MODE_HARD_LIGHT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_HARD_LIGHT} instead.</p>
 */
Titanium.UI.BLEND_MODE_HARD_LIGHT = null;

/**
 * @property BLEND_MODE_HUE
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_HUE} instead.</p>
 */
Titanium.UI.BLEND_MODE_HUE = null;

/**
 * @property BLEND_MODE_LIGHTEN
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_LIGHTEN} instead.</p>
 */
Titanium.UI.BLEND_MODE_LIGHTEN = null;

/**
 * @property BLEND_MODE_LUMINOSITY
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_LUMINOSITY} instead.</p>
 */
Titanium.UI.BLEND_MODE_LUMINOSITY = null;

/**
 * @property BLEND_MODE_MULTIPLY
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_MULTIPLY} instead.</p>
 */
Titanium.UI.BLEND_MODE_MULTIPLY = null;

/**
 * @property BLEND_MODE_NORMAL
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_NORMAL} instead.</p>
 */
Titanium.UI.BLEND_MODE_NORMAL = null;

/**
 * @property BLEND_MODE_OVERLAY
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_OVERLAY} instead.</p>
 */
Titanium.UI.BLEND_MODE_OVERLAY = null;

/**
 * @property BLEND_MODE_PLUS_DARKER
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_PLUS_DARKER} instead.</p>
 */
Titanium.UI.BLEND_MODE_PLUS_DARKER = null;

/**
 * @property BLEND_MODE_PLUS_LIGHTER
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_PLUS_LIGHTER} instead.</p>
 */
Titanium.UI.BLEND_MODE_PLUS_LIGHTER = null;

/**
 * @property BLEND_MODE_SATURATION
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_SATURATION} instead.</p>
 */
Titanium.UI.BLEND_MODE_SATURATION = null;

/**
 * @property BLEND_MODE_SCREEN
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_SCREEN} instead.</p>
 */
Titanium.UI.BLEND_MODE_SCREEN = null;

/**
 * @property BLEND_MODE_SOFT_LIGHT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_SOFT_LIGHT} instead.</p>
 */
Titanium.UI.BLEND_MODE_SOFT_LIGHT = null;

/**
 * @property BLEND_MODE_SOURCE_ATOP
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_SOURCE_ATOP} instead.</p>
 */
Titanium.UI.BLEND_MODE_SOURCE_ATOP = null;

/**
 * @property BLEND_MODE_SOURCE_IN
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_SOURCE_IN} instead.</p>
 */
Titanium.UI.BLEND_MODE_SOURCE_IN = null;

/**
 * @property BLEND_MODE_SOURCE_OUT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_SOURCE_OUT} instead.</p>
 */
Titanium.UI.BLEND_MODE_SOURCE_OUT = null;

/**
 * @property BLEND_MODE_XOR
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use with {@link Titanium.UI.MaskedImage#property-mode MaskedImage.mode} to specify a blend mode.</p>
 * @deprecated 1.8.0 <p>Use {@link Titanium.UI.iOS#property-BLEND_MODE_XOR} instead.</p>
 */
Titanium.UI.BLEND_MODE_XOR = null;

/**
 * @property FACE_DOWN
 * @type Number
 * @readonly
 * <p>Constant value for face-down orientation.</p>
 * @description <p>One of the group of orientation constants for the {@link Titanium.Gesture} module,
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
and {@link Titanium.UI#property-UNKNOWN}.</p>
 */
Titanium.UI.FACE_DOWN = null;

/**
 * @property FACE_UP
 * @type Number
 * @readonly
 * <p>Constant value for face-up orientation.</p>
 * @description <p>One of the group of orientation constants for the {@link Titanium.Gesture} module,
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
and {@link Titanium.UI#property-UNKNOWN}.</p>
 */
Titanium.UI.FACE_UP = null;

/**
 * @property FILL
 * @type String
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>FILL behavior for UI layout.</p>
 * @description <p>The FILL behavior means the view will grow its size to fill its parent.</p>
 */
Titanium.UI.FILL = null;

/**
 * @property INHERIT
 * @type String
 * @readonly
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>INHERIT behavior for UI layout.</p>
 * @description <p>The INHERIT behavior allows the width/height of a view to be determined by the 
parent. If a parent has a size of {@link Titanium.UI#property-SIZE}, then the child will inherit 
a size of {@link Titanium.UI#property-SIZE}. Otherwise, the child inherits a size of {@link Titanium.UI#property-FILL}.</p>
 */
Titanium.UI.INHERIT = null;

/**
 * @property INPUT_BORDERSTYLE_BEZEL
 * @type Number
 * @readonly
 * <p>Use a bezel-style border on the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-borderStyle} property.</p>
 */
Titanium.UI.INPUT_BORDERSTYLE_BEZEL = null;

/**
 * @property INPUT_BORDERSTYLE_LINE
 * @type Number
 * @readonly
 * <p>Use a simple line border on the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-borderStyle} property.</p>
 */
Titanium.UI.INPUT_BORDERSTYLE_LINE = null;

/**
 * @property INPUT_BORDERSTYLE_NONE
 * @type Number
 * @readonly
 * <p>Use no border on the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-borderStyle} property.</p>
 */
Titanium.UI.INPUT_BORDERSTYLE_NONE = null;

/**
 * @property INPUT_BORDERSTYLE_ROUNDED
 * @type Number
 * @readonly
 * <p>Use a rounded-rectangle border on the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-borderStyle} property.</p>
 */
Titanium.UI.INPUT_BORDERSTYLE_ROUNDED = null;

/**
 * @property INPUT_BUTTONMODE_ALWAYS
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Always show buttons on the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-clearButtonMode}, 
{@link Titanium.UI.TextField#property-leftButtonMode}, 
and {@link Titanium.UI.TextField#property-rightButtonMode} properties.</p>
 */
Titanium.UI.INPUT_BUTTONMODE_ALWAYS = null;

/**
 * @property INPUT_BUTTONMODE_NEVER
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Never show buttons on the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-clearButtonMode}, 
{@link Titanium.UI.TextField#property-leftButtonMode}, 
and {@link Titanium.UI.TextField#property-rightButtonMode} properties.</p>
 */
Titanium.UI.INPUT_BUTTONMODE_NEVER = null;

/**
 * @property INPUT_BUTTONMODE_ONBLUR
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Show buttons on the input field when it loses focus.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-clearButtonMode}, 
{@link Titanium.UI.TextField#property-leftButtonMode}, 
and {@link Titanium.UI.TextField#property-rightButtonMode} properties.</p>
 */
Titanium.UI.INPUT_BUTTONMODE_ONBLUR = null;

/**
 * @property INPUT_BUTTONMODE_ONFOCUS
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Show buttons on the input field when it gains focus.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-clearButtonMode}, 
{@link Titanium.UI.TextField#property-leftButtonMode}, 
and {@link Titanium.UI.TextField#property-rightButtonMode} properties.</p>
 */
Titanium.UI.INPUT_BUTTONMODE_ONFOCUS = null;

/**
 * @property KEYBOARD_APPEARANCE_ALERT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use a keyboard appearance suitable for entering text on an alert.</p>
 */
Titanium.UI.KEYBOARD_APPEARANCE_ALERT = null;

/**
 * @property KEYBOARD_APPEARANCE_DEFAULT
 * @type Number
 * @readonly
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use the platform-specific default keyboard appearance.</p>
 */
Titanium.UI.KEYBOARD_APPEARANCE_DEFAULT = null;

/**
 * @property KEYBOARD_ASCII
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use an ASCII keyboard, with the standard keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
 */
Titanium.UI.KEYBOARD_ASCII = null;

/**
 * @property KEYBOARD_DECIMAL_PAD
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use a keyboard with decimal numbers only, with the pad keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
<p>On MobileWeb and Tizen, if you enable <code>passwordType</code>, the <code>keyboardType</code> value will be overridden with 
<code>KEYBOARD_DEFAULT</code>.</p>
 */
Titanium.UI.KEYBOARD_DECIMAL_PAD = null;

/**
 * @property KEYBOARD_DEFAULT
 * @type Number
 * @readonly
 * <p>Use the default keyboard, depending on the platform.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
 */
Titanium.UI.KEYBOARD_DEFAULT = null;

/**
 * @property KEYBOARD_EMAIL
 * @type Number
 * @readonly
 * <p>Use a keyboard suitable for composing email, with the standard keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
<p>Note: on MobileWeb and Tizen, if you enable <code>passwordType</code>, the <code>keyboardType</code> value will be 
overridden with <code>KEYBOARD_DEFAULT</code>.</p>
 */
Titanium.UI.KEYBOARD_EMAIL = null;

/**
 * @property KEYBOARD_NAMEPHONE_PAD
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use a keyboard suitable for entering names and phone numbers, with the pad keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
 */
Titanium.UI.KEYBOARD_NAMEPHONE_PAD = null;

/**
 * @property KEYBOARD_NUMBERS_PUNCTUATION
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use a keyboard with numbers and punctuation only, with the standard keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
 */
Titanium.UI.KEYBOARD_NUMBERS_PUNCTUATION = null;

/**
 * @property KEYBOARD_NUMBER_PAD
 * @type Number
 * @readonly
 * <p>Use a keyboard with a number pad only, with the pad keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
<p>On MobileWeb and Tizen, if you enable <code>passwordType</code>, the <code>keyboardType</code> value will be overridden with 
<code>KEYBOARD_DEFAULT</code>.</p>
 */
Titanium.UI.KEYBOARD_NUMBER_PAD = null;

/**
 * @property KEYBOARD_PHONE_PAD
 * @type Number
 * @readonly
 * <p>Use a keyboard with a phone-style number pad, with the pad keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
<p>On MobileWeb and Tizen, if you enable <code>passwordType</code>, the <code>keyboardType</code> value will be overridden with 
<code>KEYBOARD_DEFAULT</code>.</p>
 */
Titanium.UI.KEYBOARD_PHONE_PAD = null;

/**
 * @property KEYBOARD_URL
 * @type Number
 * @readonly
 * <p>Use an keyboard optimized for entering URLs, with the standard keyboard layout.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-keyboardType} and {@link Titanium.UI.TextArea#property-keyboardType} 
properties.</p>
<p>On MobileWeb and Tizen, if you enable <code>passwordType</code>, the <code>keyboardType</code> value will be overridden with 
<code>KEYBOARD_DEFAULT</code>.</p>
 */
Titanium.UI.KEYBOARD_URL = null;

/**
 * @property LANDSCAPE_LEFT
 * @type Number
 * @readonly
 * <p>Standard landscape orientation (home button on left).</p>
 * @description <p>One of the group of orientation constants for the {@link Titanium.Gesture} module,
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
and {@link Titanium.UI#property-UNKNOWN}.</p>
 */
Titanium.UI.LANDSCAPE_LEFT = null;

/**
 * @property LANDSCAPE_RIGHT
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Reverse landscape orientation (home button on right).</p>
 * @description <p>One of the group of orientation constants for the {@link Titanium.Gesture} module,
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
and {@link Titanium.UI#property-UNKNOWN}.</p>
 */
Titanium.UI.LANDSCAPE_RIGHT = null;

/**
 * @property LIST_ACCESSORY_TYPE_CHECKMARK
 * @type Number
 * @readonly
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Displays a checkmark on the right side of an item in a list view.</p>
 * @description <p>Use to indicate an item in a list is selected.</p>
 */
Titanium.UI.LIST_ACCESSORY_TYPE_CHECKMARK = null;

/**
 * @property LIST_ACCESSORY_TYPE_DETAIL
 * @type Number
 * @readonly
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Displays a detail disclosure button on the right side of an item in a list view.</p>
 * @description <p>Use to indicate that selecting this item results in the display of a detailed view of that item.</p>
 */
Titanium.UI.LIST_ACCESSORY_TYPE_DETAIL = null;

/**
 * @property LIST_ACCESSORY_TYPE_DISCLOSURE
 * @type Number
 * @readonly
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Displays a disclosure indicator on the right side of an item in a list view.</p>
 * @description <p>Use to indicate that selecting this item results in the display of another list, reflecting
the next level in the data model hierarchy.</p>
 */
Titanium.UI.LIST_ACCESSORY_TYPE_DISCLOSURE = null;

/**
 * @property LIST_ACCESSORY_TYPE_NONE
 * @type Number
 * @readonly
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Do not display anything on the right side of an item in a list view.</p>
 */
Titanium.UI.LIST_ACCESSORY_TYPE_NONE = null;

/**
 * @property LIST_ITEM_TEMPLATE_CONTACTS
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A built-in style for an item with a title label on the left side of the cell with
right-aligned, blue text, which is next to a subtitle label with left-aligned, black text.</p>
 * @description <p>The title label value and subtitle label value bind to the <code>title</code> and <code>subtitle</code>
properties, respectively, of the data item. If a property is not set, that element is not
displayed.</p>
 */
Titanium.UI.LIST_ITEM_TEMPLATE_CONTACTS = null;

/**
 * @property LIST_ITEM_TEMPLATE_DEFAULT
 * @type Number
 * @readonly
 * @platform android 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A built-in style for an item with an image view and black, left-aligned title label.</p>
 * @description <p>The text label value and image value bind to the <code>title</code> and <code>image</code> properties, respectively,
of the data item. If a property is not set, that element is not displayed.</p>
<p>On Android, the image appears on the right side of the cell, and on iOS, the image appears
on the left side of the cell.</p>
 */
Titanium.UI.LIST_ITEM_TEMPLATE_DEFAULT = null;

/**
 * @property LIST_ITEM_TEMPLATE_SETTINGS
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A built-in style for a item with an image view; a black, left-aligned title label; and a
smaller blue, right-aligned subtitle label.</p>
 * @description <p>The title label value, subtitle label value and image value bind to the <code>title</code>, <code>subtitle</code>
and <code>image</code> properties, respectively, of the data item. If a property is not set, that
element is not displayed.</p>
 */
Titanium.UI.LIST_ITEM_TEMPLATE_SETTINGS = null;

/**
 * @property LIST_ITEM_TEMPLATE_SUBTITLE
 * @type Number
 * @readonly
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>A built-in style for an item with an image view; a black, left-aligned title label across the
top of the cell and a subtitle label below it in smaller gray text.</p>
 * @description <p>The title label value, subtitle label value and image value bind to the <code>title</code>, <code>subtitle</code>
and <code>image</code> properties, respectively, of the data item. If a property is not set, that
element is not displayed.</p>
 */
Titanium.UI.LIST_ITEM_TEMPLATE_SUBTITLE = null;

/**
 * @property NOTIFICATION_DURATION_LONG
 * @type Number
 * @readonly
 * @platform android 0.4
 * <p>Specifies a long duration for an Android Toast notification ({@link Titanium.UI.Notification}).</p>
 */
Titanium.UI.NOTIFICATION_DURATION_LONG = null;

/**
 * @property NOTIFICATION_DURATION_SHORT
 * @type Number
 * @readonly
 * @platform android 0.4
 * <p>Specifies a short duration for an Android Toast notification ({@link Titanium.UI.Notification}).</p>
 */
Titanium.UI.NOTIFICATION_DURATION_SHORT = null;

/**
 * @property PICKER_TYPE_COUNT_DOWN_TIMER
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Use a picker with a countdown timer appearance, showing hours and minutes.</p>
 * @description <p>For an actual countdown timer, the application is responsible for setting a timer 
to update the picker values.</p>
 */
Titanium.UI.PICKER_TYPE_COUNT_DOWN_TIMER = null;

/**
 * @property PICKER_TYPE_DATE
 * @type Number
 * @readonly
 * <p>Use a date picker.</p>
 */
Titanium.UI.PICKER_TYPE_DATE = null;

/**
 * @property PICKER_TYPE_DATE_AND_TIME
 * @type Number
 * @readonly
 * <p>Use a date and time picker.</p>
 */
Titanium.UI.PICKER_TYPE_DATE_AND_TIME = null;

/**
 * @property PICKER_TYPE_PLAIN
 * @type Number
 * @readonly
 * <p>Use a plain picker (for values other than date or time).</p>
 */
Titanium.UI.PICKER_TYPE_PLAIN = null;

/**
 * @property PICKER_TYPE_TIME
 * @type Number
 * @readonly
 * <p>Use a time picker.</p>
 */
Titanium.UI.PICKER_TYPE_TIME = null;

/**
 * @property PORTRAIT
 * @type Number
 * @readonly
 * <p>Orientation constant for portrait mode orientation.</p>
 * @description <p>One of the group of orientation constants for the {@link Titanium.Gesture} module,
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
and {@link Titanium.UI#property-UNKNOWN}.</p>
 */
Titanium.UI.PORTRAIT = null;

/**
 * @property RETURNKEY_DEFAULT
 * @type Number
 * @readonly
 * <p>Use the default return key on the virtual keyboard.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
<p>On Android devices, the default return key displays a graphical arrow.</p>
<p>On Mobile Web, the default return key label depends on the mobile browser. For Mobile Web
on iOS devices, the default label is "return".</p>
 */
Titanium.UI.RETURNKEY_DEFAULT = null;

/**
 * @property RETURNKEY_DONE
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Set the return key text to "Done".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_DONE = null;

/**
 * @property RETURNKEY_EMERGENCY_CALL
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Set the return key text to "Emergency Call".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_EMERGENCY_CALL = null;

/**
 * @property RETURNKEY_GO
 * @type Number
 * @readonly
 * <p>Set the return key text to "Go".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_GO = null;

/**
 * @property RETURNKEY_GOOGLE
 * @type Number
 * @readonly
 * <p>Set the return key text to "Google".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_GOOGLE = null;

/**
 * @property RETURNKEY_JOIN
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Set the return key text to "Join".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_JOIN = null;

/**
 * @property RETURNKEY_NEXT
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Set the return key text to "Next".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_NEXT = null;

/**
 * @property RETURNKEY_ROUTE
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Set the return key text to "Route".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_ROUTE = null;

/**
 * @property RETURNKEY_SEARCH
 * @type Number
 * @readonly
 * <p>Set the return key text to "Search".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_SEARCH = null;

/**
 * @property RETURNKEY_SEND
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Set the return key text to "Send".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_SEND = null;

/**
 * @property RETURNKEY_YAHOO
 * @type Number
 * @readonly
 * <p>Set the return key text to "Yahoo".</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-returnKeyType} and 
{@link Titanium.UI.TextArea#property-returnKeyType} properties.</p>
 */
Titanium.UI.RETURNKEY_YAHOO = null;

/**
 * @property SIZE
 * @type String
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>SIZE behavior for UI layout.</p>
 * @description <p>The SIZE behavior means the view will constrain its size fit its contents.</p>
 */
Titanium.UI.SIZE = null;

/**
 * @property TEXT_ALIGNMENT_CENTER
 * @type Number/String
 * @readonly
 * <p>Center align text.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-textAlign} and 
{@link Titanium.UI.TextArea#property-textAlign} properties.</p>
<p>This constant is a string on Android, and a number on iOS, Tizen and Mobile Web.</p>
 */
Titanium.UI.TEXT_ALIGNMENT_CENTER = null;

/**
 * @property TEXT_ALIGNMENT_LEFT
 * @type Number/String
 * @readonly
 * <p>Left align text.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-textAlign} and 
{@link Titanium.UI.TextArea#property-textAlign} properties.</p>
<p>This constant is a string on android, and a number on iOS, Tizen and Mobile Web.</p>
 */
Titanium.UI.TEXT_ALIGNMENT_LEFT = null;

/**
 * @property TEXT_ALIGNMENT_RIGHT
 * @type Number/String
 * @readonly
 * <p>Right align text.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-textAlign} and 
{@link Titanium.UI.TextArea#property-textAlign} properties.</p>
<p>This constant is a string on Android, and a number on iOS, Tizen and Mobile Web.</p>
 */
Titanium.UI.TEXT_ALIGNMENT_RIGHT = null;

/**
 * @property TEXT_AUTOCAPITALIZATION_ALL
 * @type Number
 * @readonly
 * <p>Auto-capitalize all text in the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-autocapitalization} and 
{@link Titanium.UI.TextArea#property-autocapitalization} properties.</p>
 */
Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL = null;

/**
 * @property TEXT_AUTOCAPITALIZATION_NONE
 * @type Number
 * @readonly
 * <p>Do not auto-capitalize.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-autocapitalization} and 
{@link Titanium.UI.TextArea#property-autocapitalization} properties.</p>
 */
Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE = null;

/**
 * @property TEXT_AUTOCAPITALIZATION_SENTENCES
 * @type Number
 * @readonly
 * <p>Use sentence-style auto-capitalization in the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-autocapitalization} and 
{@link Titanium.UI.TextArea#property-autocapitalization} properties.</p>
 */
Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES = null;

/**
 * @property TEXT_AUTOCAPITALIZATION_WORDS
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Auto-capitalize the first letter of each word in the input field.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-autocapitalization} and 
{@link Titanium.UI.TextArea#property-autocapitalization} properties.</p>
<p>Mobile Web and Tizen does not support this because it would interfere with the native capitalization 
of the mobile browser.</p>
 */
Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS = null;

/**
 * @property TEXT_VERTICAL_ALIGNMENT_BOTTOM
 * @type Number/String
 * @readonly
 * <p>Align text to the bottom of the view.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-verticalAlign} and 
{@link Titanium.UI.TextArea#property-verticalAlign} properties.</p>
<p>This constant is a string on android, and a number on iOS, Tizen and Mobile Web.</p>
 */
Titanium.UI.TEXT_VERTICAL_ALIGNMENT_BOTTOM = null;

/**
 * @property TEXT_VERTICAL_ALIGNMENT_CENTER
 * @type Number/String
 * @readonly
 * <p>Vertically align text to the center of the view.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-verticalAlign} and 
{@link Titanium.UI.TextArea#property-verticalAlign} properties.</p>
<p>This constant is a string on android, and a number on iOS, Tizen and Mobile Web.</p>
 */
Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER = null;

/**
 * @property TEXT_VERTICAL_ALIGNMENT_TOP
 * @type Number/String
 * @readonly
 * <p>Align text to the top of the view.</p>
 * @description <p>Use with the {@link Titanium.UI.TextField#property-verticalAlign} and 
{@link Titanium.UI.TextArea#property-verticalAlign} properties.</p>
<p>This constant is a string on android, and a number on iOS, Tizen and Mobile Web.</p>
 */
Titanium.UI.TEXT_VERTICAL_ALIGNMENT_TOP = null;

/**
 * @property UNIT_CM
 * @type String
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Unit constant representing units in centimeters.</p>
 */
Titanium.UI.UNIT_CM = null;

/**
 * @property UNIT_DIP
 * @type String
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Unit constant representing units in density-independent pixels.</p>
 */
Titanium.UI.UNIT_DIP = null;

/**
 * @property UNIT_IN
 * @type String
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Unit constant representing units in inches.</p>
 */
Titanium.UI.UNIT_IN = null;

/**
 * @property UNIT_MM
 * @type String
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Unit constant representing units in millimeters.</p>
 */
Titanium.UI.UNIT_MM = null;

/**
 * @property UNIT_PX
 * @type String
 * @readonly
 * @platform android 2.0
 * @platform blackberry 3.1
 * @platform iphone 2.0
 * @platform ipad 2.0
 * @platform mobileweb 2.0
 * @platform tizen 3.1
 * <p>Unit constant representing units in pixels.</p>
 */
Titanium.UI.UNIT_PX = null;

/**
 * @property UNKNOWN
 * @type Number
 * @readonly
 * <p>Orientation constant representing an unknown orientation.</p>
 * @description <p>One of the group of orientation constants for the {@link Titanium.Gesture} module,
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
and {@link Titanium.UI#property-UNKNOWN}.</p>
 */
Titanium.UI.UNKNOWN = null;

/**
 * @property UPSIDE_PORTRAIT
 * @type Number
 * @readonly
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Orientation constant for inverted portait orientation.</p>
 * @description <p>One of the group of orientation constants for the {@link Titanium.Gesture} module,
{@link Titanium.UI#property-PORTRAIT}, 
{@link Titanium.UI#property-UPSIDE_PORTRAIT}, 
{@link Titanium.UI#property-LANDSCAPE_LEFT}, 
{@link Titanium.UI#property-LANDSCAPE_RIGHT}, 
{@link Titanium.UI#property-FACE_UP}, 
{@link Titanium.UI#property-FACE_DOWN}, 
and {@link Titanium.UI#property-UNKNOWN}.</p>
 */
Titanium.UI.UPSIDE_PORTRAIT = null;

/**
 * @property URL_ERROR_AUTHENTICATION
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Authentication error code reported via {@link Titanium.UI.WebView#event-error}.</p>
 */
Titanium.UI.URL_ERROR_AUTHENTICATION = null;

/**
 * @property URL_ERROR_BAD_URL
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Bad url error code reported via {@link Titanium.UI.WebView#event-error}.</p>
 */
Titanium.UI.URL_ERROR_BAD_URL = null;

/**
 * @property URL_ERROR_CONNECT
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} for a failure to connect to host.</p>
 */
Titanium.UI.URL_ERROR_CONNECT = null;

/**
 * @property URL_ERROR_FILE
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} for a failure to access a file resource on a host, except "file not found", which has its own constant.</p>
 */
Titanium.UI.URL_ERROR_FILE = null;

/**
 * @property URL_ERROR_FILE_NOT_FOUND
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} when a requested file does not exist on the host.</p>
 */
Titanium.UI.URL_ERROR_FILE_NOT_FOUND = null;

/**
 * @property URL_ERROR_HOST_LOOKUP
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} when a host name cannot be resolved, such as via a DNS lookup error.</p>
 */
Titanium.UI.URL_ERROR_HOST_LOOKUP = null;

/**
 * @property URL_ERROR_REDIRECT_LOOP
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} when a redirect loop is detected.</p>
 */
Titanium.UI.URL_ERROR_REDIRECT_LOOP = null;

/**
 * @property URL_ERROR_SSL_FAILED
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} for an SSL failure.</p>
 */
Titanium.UI.URL_ERROR_SSL_FAILED = null;

/**
 * @property URL_ERROR_TIMEOUT
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} when a timeout occurs.</p>
 */
Titanium.UI.URL_ERROR_TIMEOUT = null;

/**
 * @property URL_ERROR_UNKNOWN
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} when an unknown error occurs.</p>
 */
Titanium.UI.URL_ERROR_UNKNOWN = null;

/**
 * @property URL_ERROR_UNSUPPORTED_SCHEME
 * @type Number
 * @readonly
 * @platform android 3.0
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Error code reported via {@link Titanium.UI.WebView#event-error} when a url contains an unsupported scheme.</p>
 */
Titanium.UI.URL_ERROR_UNSUPPORTED_SCHEME = null;

/**
 * @property backgroundColor
 * @type String
 * <p>Sets the background color of the master view (when there are no windows or other top-level 
controls displayed).</p>
 * @description <p>The default background color may also show through if you use semi-transparent 
windows.</p>
 */
Titanium.UI.backgroundColor = null;

/**
 * @property backgroundImage
 * @type String
 * <p>Local path or URL to an image file for setting a background for the master view (when there 
are no windows or other top-level controls displayed).</p>
 * @description <p>The default background image may also show through if you use semi-transparent 
windows.</p>
 */
Titanium.UI.backgroundImage = null;

/**
 * @property currentTab
 * @type Titanium.UI.Tab
 * <p>The currently active tab, if a tab group is open.</p>
 * @description <p>If no tab group is open, this value is undefined.</p>
 */
Titanium.UI.currentTab = null;

/**
 * @property currentWindow
 * @type Titanium.UI.Window
 * @readonly
 * <p>The active window associated with the executing JavaScript context.</p>
 */
Titanium.UI.currentWindow = null;

/**
 * @property orientation
 * @type Number
 * @platform android 0.4
 * @platform iphone 0.4
 * @platform ipad 0.4
 * <p>Updates the orientation of the current window to the specified orientation value.</p>
 * @removed  3.0.0 <p>Use {@link Titanium.UI.Window#property-orientationModes} instead.</p>
 */
Titanium.UI.orientation = null;

/**
 * @class Titanium.Utils
 * @typestr Submodule of Titanium
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top-level Utils module, containing a set of JavaScript methods that are often useful when 
building applications.</p>
 */
Titanium.Utils = {};

/**
 * @method base64decode
 * <p>Returns the specified data decoded from Base64.</p>
 * @description <p>On Mobile Web, if <code>obj</code> is a [Titanium.Blob] containing binary data, then <code>obj</code> is
returned unmodified because the binary blob would be decoded only to be re-encoded
in the returned blob object.</p>
 * @param {String/Titanium.Blob} obj 
 * <p>Data to decode.</p>
 * @return {Titanium.Blob} 
*/
Titanium.Utils.base64decode = function(obj){};

/**
 * @method base64encode
 * <p>Returns the specified data encoded to Base64.</p>
 * @description <p>On Mobile Web, if <code>obj</code> is a [Titanium.Blob] containing binary data, then <code>obj</code> is
returned unmodified because the binary blob is already base64 encoded.</p>
 * @param {String/Titanium.Blob} obj 
 * <p>Data to encode.</p>
 * @return {Titanium.Blob} 
*/
Titanium.Utils.base64encode = function(obj){};

/**
 * @method md5HexDigest
 * <p>Returns a MD5 digest of the specified data as a hex-based String.</p>
 * @param {String/Titanium.Blob} obj 
 * <p>Data to calculate.</p>
 * @return {String} 
*/
Titanium.Utils.md5HexDigest = function(obj){};

/**
 * @method sha1
 * <p>Returns a SHA-1 hash of the specified data as a hex-based String.</p>
 * @param {String/Titanium.Blob} obj 
 * <p>Data to calculate.</p>
 * @return {String} 
 * @platform android 1.3.2
 * @platform blackberry 3.1
 * @platform iphone 1.3.2
 * @platform ipad 1.3.2
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Utils.sha1 = function(obj){};

/**
 * @method sha256
 * <p>Returns a SHA-256 hash of the specified data as a hex-based String.</p>
 * @param {String/Titanium.Blob} obj 
 * <p>Data to calculate.</p>
 * @return {String} 
 * @platform android 1.8
 * @platform blackberry 3.1
 * @platform iphone 1.8
 * @platform ipad 1.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.Utils.sha256 = function(obj){};

/**
 * @class Titanium.XML
 * @typestr Submodule of Titanium
 * @platform android 0.9
 * @platform blackberry 3.1
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level XML module.  The XML module is used for parsing and processing XML-based content.</p>
 * @description <p>The API for this module is based on the W3C DOM specification.</p>
<p>Android and iOS implement the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html">DOM Level 2</a> specification
with some non-standard extensions, which are documented in the appropriate places.</p>
<p>Both iOS and Android lack DTD support.</p>
<p>Mobile Web directly exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html">DOM Level 3</a> 
implementation in the browser. New features introduced in DOM Level 3 are not documented here 
for brevity. For information on these features, please use the W3C documentation.</p>
 */
Titanium.XML = {};

/**
 * @class Titanium.XML.Attr
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>Represents an attribute of an {@link Titanium.XML.Element Element}.</p>
 * @description <p>Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-637646024">DOM Level 2 API</a> on
Android and iOS. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-637646024">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.Attr = {};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.XML.Attr#property-name name} property.</p>
 * @return {String} 
*/
Titanium.XML.Attr.getName = function(){};

/**
 * @method getOwnerElement
 * <p>Gets the value of the {@link Titanium.XML.Attr#property-ownerElement ownerElement} property.</p>
 * @return {Titanium.XML.Element} 
*/
Titanium.XML.Attr.getOwnerElement = function(){};

/**
 * @method getSpecified
 * <p>Gets the value of the {@link Titanium.XML.Attr#property-specified specified} property.</p>
 * @return {Boolean} 
*/
Titanium.XML.Attr.getSpecified = function(){};

/**
 * @method getValue
 * <p>Gets the value of the {@link Titanium.XML.Attr#property-value value} property.</p>
 * @return {String} 
*/
Titanium.XML.Attr.getValue = function(){};

/**
 * @method setValue
 * <p>Sets the value of the {@link Titanium.XML.Attr#property-value value} property.</p>
 * @param {String} value 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.XML.Attr.setValue = function(value){};

/**
 * @property name
 * @type String
 * @readonly
 * <p>Attribute name</p>
 */
Titanium.XML.Attr.name = null;

/**
 * @property ownerElement
 * @type Titanium.XML.Element
 * @readonly
 * <p>The {@link Titanium.XML.Element} to which the attribute belongs.</p>
 */
Titanium.XML.Attr.ownerElement = null;

/**
 * @property specified
 * @type Boolean
 * @readonly
 * <p>True if this attribute was explicitly given a value in the instance document, false otherwise.</p>
 */
Titanium.XML.Attr.specified = null;

/**
 * @property value
 * @type String
 * <p>The attribute value as a string.</p>
 */
Titanium.XML.Attr.value = null;

/**
 * @class Titanium.XML.CDATASection
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Text
 * <p>Used to include blocks of literal text containing characters that would otherwise need
to be escaped.</p>
 * @description <p>Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-667469212">DOM Level 2 API</a> on
Android and iOS with some non-standard extensions. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-667469212">DOM Level 3 API</a> implementation on Mobile Web. On Mobile
Web, there is no Titanium.XML.CDATASection object. A string object containing the data is used directly instead.</p>
 */
Titanium.XML.CDATASection = {};

/**
 * @class Titanium.XML.CharacterData
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>An interface extending {@link Titanium.XML.Node} with a set of attributes and methods for accessing character data in the DOM.
Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-FF21A306">DOM Level 2 API</a> on Android and iOS. For reasons of compatibility with the javascript engine, text is represented by UTF-8 instead of UTF-16 on Android and iOS. Exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-FF21A306">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.CharacterData = {};

/**
 * @method appendData
 * <p>Append the string to the end of the character data of the node. Upon success, data provides access to the concatenation of data and the string specified. Throws an exception if this node is readonly.</p>
 * @param {String} arg 
 * <p>The string to append.</p>
 * @return void
*/
Titanium.XML.CharacterData.appendData = function(arg){};

/**
 * @method deleteData
 * <p>Remove a range of characters from the node. Upon success, data and length reflect the change. Throws an exception if this node is readonly, if offset is negative, offset is beyond the data's length, or if count is negative.</p>
 * @param {Number} offset 
 * <p>The offset from which to start removing.</p>
 * @param {Number} count 
 * <p>The number of characters to delete. If the sum of offset and count exceeds length then all characters from offset to the end of the data are deleted.</p>
 * @return void
*/
Titanium.XML.CharacterData.deleteData = function(offset, count){};

/**
 * @method getData
 * <p>Gets the value of the {@link Titanium.XML.CharacterData#property-data data} property.</p>
 * @return {String} 
*/
Titanium.XML.CharacterData.getData = function(){};

/**
 * @method getLength
 * <p>Gets the value of the {@link Titanium.XML.CharacterData#property-length length} property.</p>
 * @return {Number} 
*/
Titanium.XML.CharacterData.getLength = function(){};

/**
 * @method insertData
 * <p>Insert a string at the specified offset. Throws an exception if this node is readonly, if offset is negative, or if offset is beyond the data's length.</p>
 * @param {Number} offset 
 * <p>The character offset at which to insert.</p>
 * @param {String} arg 
 * <p>The string to insert.</p>
 * @return void
*/
Titanium.XML.CharacterData.insertData = function(offset, arg){};

/**
 * @method replaceData
 * <p>Replace the characters starting at the specified offset with the specified string. Throws an exception if this node is readonly, if offset is negative, offset is beyond the data's length, or if count is negative.</p>
 * @param {Number} offset 
 * <p>The offset from which to start replacing.</p>
 * @param {Number} count 
 * <p>The number of characters to replace. If the sum of offset and count exceeds length, then all characters to the end of the data are replaced; (i.e., the effect is the same as a remove method call with the same range, followed by an append method invocation).</p>
 * @param {String} arg 
 * <p>The string with which the range must be replaced.</p>
 * @return void
*/
Titanium.XML.CharacterData.replaceData = function(offset, count, arg){};

/**
 * @method setData
 * <p>Sets the value of the {@link Titanium.XML.CharacterData#property-data data} property.</p>
 * @param {String} data 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.XML.CharacterData.setData = function(data){};

/**
 * @method substringData
 * <p>Extracts a range of data from the node. Throws an exception if offset is negative, offset is beyond the data's length, or if count is negative.</p>
 * @param {Number} offset 
 * <p>Start offset of substring to extract.</p>
 * @param {Number} count 
 * <p>The number of characters units to extract.</p>
 * @return {String} <p>The specified substring. If the sum of offset and count exceeds the length, then all 16-bit units to the end of the data are returned.</p>
*/
Titanium.XML.CharacterData.substringData = function(offset, count){};

/**
 * @property data
 * @type String
 * <p>The character data of the node that implements this interface. Throws an exception during setting if this node is readonly.</p>
 */
Titanium.XML.CharacterData.data = null;

/**
 * @property length
 * @type Number
 * @readonly
 * <p>The number of characters that are available through data and the substringData method. This may have the value zero, i.e., {@link Titanium.XML.CharacterData} may be empty.</p>
 */
Titanium.XML.CharacterData.length = null;

/**
 * @class Titanium.XML.Comment
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.CharacterData
 * <p>Represents the contents of an XML comment.</p>
 * @description <p>Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1728279322">DOM Level 2 API</a> on
Android and iOS with some non-standard extensions. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1728279322">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.Comment = {};

/**
 * @class Titanium.XML.DOMImplementation
 * @typestr Object of Titanium.XML
 * @platform android 1.8
 * @platform iphone 1.8
 * @platform ipad 1.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>The {@link Titanium.XML.DOMImplementation} interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490">DOM Level 2 API</a> on Android and iOS. Exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.DOMImplementation = {};

/**
 * @method createDocument
 * <p>Creates an {@link Titanium.XML.Document} object of the specified type with its document element. Raises an exception if qualifiedName is malformed, contains an illegal character, or is inconsistent with namespaceURI. Also raises an exception if doctype has already been used with a different document.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the document element to create.</p>
 * @param {String} qualifiedName 
 * <p>The qualified name of the document element to be created.</p>
 * @param {Titanium.XML.DocumentType} doctype 
 * <p>The type of document to be created or null. When doctype is not null, its Node.ownerDocument attribute is set to the document being created.</p>
 * @return {Titanium.XML.Document} <p>A new {@link Titanium.XML.Document} object</p>
*/
Titanium.XML.DOMImplementation.createDocument = function(namespaceURI, qualifiedName, doctype){};

/**
 * @method createDocumentType
 * <p>Creates an empty {@link Titanium.XML.DocumentType} node. Entity declarations and notations are not made available. Entity reference expansions and default attribute additions do not occur. Raises an exception if qualifiedName is malformed or contains an illegal character.</p>
 * @param {String} qualifiedName 
 * <p>The qualified name of the document type to be created.</p>
 * @param {String} publicId 
 * <p>The external subset public identifier.</p>
 * @param {String} systemId 
 * <p>The external subset system identifier.</p>
 * @return {Titanium.XML.DocumentType} <p>A new {@link Titanium.XML.DocumentType} node with Node.ownerDocument set to null.</p>
*/
Titanium.XML.DOMImplementation.createDocumentType = function(qualifiedName, publicId, systemId){};

/**
 * @method hasFeature
 * <p>Test if the {@link Titanium.XML.DOMImplementation} implements a specific feature.</p>
 * @param {String} feature 
 * <p>The name of the feature to test (case-insensitive). The values used by DOM features are defined throughout the DOM Level 2 specifications and listed in the Conformance section. The name must be an XML name. To avoid possible conflicts, as a convention, names referring to features defined outside the DOM specification should be made unique by reversing the name of the Internet domain name of the person (or the organization that the person belongs to) who defines the feature, component by component, and using this as a prefix. For instance, the W3C SVG Working Group defines the feature "org.w3c.dom.svg".</p>
 * @param {String} version 
 * <p>This is the version number of the feature to test. In Level 2, the string can be either "2.0" or "1.0". If the version is not specified, supporting any version of the feature causes the method to return true.</p>
 * @return {Boolean} <p>true if the feature is implemented in the specified version, false otherwise.</p>
*/
Titanium.XML.DOMImplementation.hasFeature = function(feature, version){};

/**
 * @class Titanium.XML.Document
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>The DOM Document returned from {@link Titanium.XML#method-parseString}.</p>
 * @description <p>Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document">DOM Level 2 API</a> on
Android and iOS. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#i-Document">DOM Level 3 API</a> implementation on 
Mobile Web.</p>
<p>As of version 3.1, Android does not truly support DTDs.  A document with a DTD can be
parsed, however it is not validated, its default attributes are not be automatically
added into the DOM tree, and so on.</p>
<p>This has been reported as <a href="http://code.google.com/p/android/issues/detail?id=7395">Android Issue #7395</a>.</p>
 */
Titanium.XML.Document = {};

/**
 * @method createAttribute
 * <p>Creates an attribute with the given name.</p>
 * @param {String} name 
 * <p>Name for the new attribute.</p>
 * @return {Titanium.XML.Attr} <p>Attribute object, ready to be added to an element.</p>
*/
Titanium.XML.Document.createAttribute = function(name){};

/**
 * @method createAttributeNS
 * <p>Creates an attribute with the given name and namespace.</p>
 * @param {String} namespaceURI 
 * <p>Namespace URI for the new attribute.</p>
 * @param {String} name 
 * <p>Qualified name for the new attribute (can include a prefix).</p>
 * @return {Titanium.XML.Attr} <p>Attribute object, ready to be added to an element.</p>
*/
Titanium.XML.Document.createAttributeNS = function(namespaceURI, name){};

/**
 * @method createCDATASection
 * <p>Creates and returns a {@link Titanium.XML.CDATASection CDATASection}.</p>
 * @param {String} data 
 * <p>String data to go into the CDATA section.</p>
 * @return {Titanium.XML.CDATASection} <p>CDATA section with the given data, ready to be added to an element.</p>
*/
Titanium.XML.Document.createCDATASection = function(data){};

/**
 * @method createComment
 * <p>Creates a {@link Titanium.XML.Comment Comment} with the supplied string data.</p>
 * @param {String} data 
 * <p>Comment text.</p>
 * @return {Titanium.XML.Comment} <p>Comment object, ready to be appended to the DOM tree.</p>
*/
Titanium.XML.Document.createComment = function(data){};

/**
 * @method createDocumentFragment
 * <p>Creates an empty {@link Titanium.XML.DocumentFragment DocumentFragment}.</p>
 * @return {Titanium.XML.DocumentFragment} <p>The empty {@link Titanium.XML.DocumentFragment}.</p>
*/
Titanium.XML.Document.createDocumentFragment = function(){};

/**
 * @method createElement
 * <p>Creates an element with the given tag name.</p>
 * @param {String} tagName 
 * <p>Name for the created element.</p>
 * @return {Titanium.XML.Element} <p>Newly created element.</p>
*/
Titanium.XML.Document.createElement = function(tagName){};

/**
 * @method createElementNS
 * <p>Create a new element with the given namespace and name.</p>
 * @param {String} namespaceURI 
 * <p>URI for the namespace the new element belongs to.</p>
 * @param {String} name 
 * <p>Qualified for the new element (can include a prefix).</p>
 * @return {Titanium.XML.Element} <p>New namespace-qualified element.</p>
*/
Titanium.XML.Document.createElementNS = function(namespaceURI, name){};

/**
 * @method createEntityReference
 * <p>Creates an {@link Titanium.XML.EntityReference EntityReference} with the given name.</p>
 * @param {String} name 
 * <p>Name for the new entity reference.</p>
 * @return {Titanium.XML.EntityReference} <p>Newly-created entity reference.</p>
*/
Titanium.XML.Document.createEntityReference = function(name){};

/**
 * @method createProcessingInstruction
 * <p>Creates a processing instruction for inserting into the DOM tree.</p>
 * @param {String} target 
 * <p>Target part for the processing instruction.</p>
 * @param {String} data 
 * <p>Data for the processing instruction node.</p>
 * @return {Titanium.XML.ProcessingInstruction} <p>New processing instruction.</p>
*/
Titanium.XML.Document.createProcessingInstruction = function(target, data){};

/**
 * @method createTextNode
 * <p>Creates a text node.</p>
 * @param {String} data 
 * <p>The string value for the text node.</p>
 * @return {Titanium.XML.Text} <p>Newly-created text node.</p>
*/
Titanium.XML.Document.createTextNode = function(data){};

/**
 * @method getDoctype
 * <p>Gets the value of the {@link Titanium.XML.Document#property-doctype doctype} property.</p>
 * @return {Titanium.XML.DocumentType} 
*/
Titanium.XML.Document.getDoctype = function(){};

/**
 * @method getDocumentElement
 * <p>Gets the value of the {@link Titanium.XML.Document#property-documentElement documentElement} property.</p>
 * @return {Titanium.XML.Element} 
*/
Titanium.XML.Document.getDocumentElement = function(){};

/**
 * @method getElementById
 * <p>Returns an {@link Titanium.XML.Element Element} that has an ID attribute with the given value.</p>
 * @param {String} elementId 
 * <p>A unique ID value for an element to search for.</p>
 * @return {Titanium.XML.Element} <p>The Element matching the given ID, if any.</p>
*/
Titanium.XML.Document.getElementById = function(elementId){};

/**
 * @method getElementsByTagName
 * <p>Returns a node list of elements in the document which have the given tag.</p>
 * @param {String} tagname 
 * <p>Tag name to search for.</p>
 * @return {Titanium.XML.NodeList} <p>List of elements in the document which have the given tag name.</p>
*/
Titanium.XML.Document.getElementsByTagName = function(tagname){};

/**
 * @method getElementsByTagNameNS
 * <p>Returns a node list of elements in the document which belong to the given namespace and have the given tag name.</p>
 * @param {String} namespaceURI 
 * <p>Namespace URI used for matching elements.</p>
 * @param {String} localname 
 * <p>Tag name to search for.</p>
 * @return {Titanium.XML.NodeList} <p>List of elements in the document which belong to the given namespace and have the given tag name.</p>
*/
Titanium.XML.Document.getElementsByTagNameNS = function(namespaceURI, localname){};

/**
 * @method getImplementation
 * <p>Gets the value of the {@link Titanium.XML.Document#property-implementation implementation} property.</p>
 * @return {Titanium.XML.DOMImplementation} 
*/
Titanium.XML.Document.getImplementation = function(){};

/**
 * @method importNode
 * <p>Imports a node from another document to this document,
without altering or removing the source node from the original document.</p>
 * @description <p>This method creates a new copy of the source node, ready to be inserted into
this document.  The returned node has an {@link Titanium.XML.Node#property-ownerDocument ownerDocument} 
property that points to this document, but its {@link Titanium.XML.Node#property-parentNode parentNode} 
property is <code>null</code>, since it has not been inserted into the current document.</p>
<p>For more on node ownership, see <a href="http://www.w3.org/DOM/faq.html#ownerdoc">ownerDocument issues</a> 
in the W3C DOM FAQ.</p>
 * @param {Titanium.XML.Node} importedNode 
 * <p>Node to import.</p>
 * @param {Boolean} deep 
 * <p>If true, recursively import the subtree under the specified node; if false, import only the node itself.</p>
 * @return {Titanium.XML.Node} <p>Imported node that belongs now to this document.</p>
*/
Titanium.XML.Document.importNode = function(importedNode, deep){};

/**
 * @property doctype
 * @type Titanium.XML.DocumentType
 * @readonly
 * <p>An interface to the list of entities that are defined for the document, such as via a Document Type Definition (DTD).</p>
 * @description <p>See note about Android and DTDs.</p>
 */
Titanium.XML.Document.doctype = null;

/**
 * @property documentElement
 * @type Titanium.XML.Element
 * @readonly
 * <p>Root element of this document.</p>
 */
Titanium.XML.Document.documentElement = null;

/**
 * @property implementation
 * @type Titanium.XML.DOMImplementation
 * @readonly
 * <p>{@link Titanium.XML.DOMImplementation DOMImplementation} object associated with this
document.</p>
 */
Titanium.XML.Document.implementation = null;

/**
 * @class Titanium.XML.DocumentFragment
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>A lightweight document object used as a container for a group of nodes.</p>
 * @description <p>When a <code>DocumentFragment</code> is inserted into a DOM tree, children of the <code>DocumentFragment</code> are 
added, not the <code>DocumentFragment</code> itself. </p>
<p>Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-B63ED1A3">DOM Level 2 API</a> on
Android and iOS with some non-standard extensions. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-B63ED1A3">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.DocumentFragment = {};

/**
 * @class Titanium.XML.DocumentType
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>Each {@link Titanium.XML.Document} has a <code>doctype</code> attribute whose value is either 'null' or a {@link Titanium.XML.DocumentType} object.</p>
 * @description <p>This provides an interface to the list of entities that are defined for the document. Implements the 
<a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-412266927">DOM Level 2 API</a> on Android and iOS. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-412266927">DOM Level 3 API</a> implementation on Mobile Web.</p>
<p>As of version 3.1, Android still does not truly support DTDs.  A document with a DTD can be
parsed, however it is not validated, none of its default attributes will automatically be put
into the tree, etc.  <a href="http://code.google.com/p/android/issues/detail?id=7395">Google is aware of the issue</a>.</p>
 */
Titanium.XML.DocumentType = {};

/**
 * @method getEntities
 * <p>Gets the value of the {@link Titanium.XML.DocumentType#property-entities entities} property.</p>
 * @return {Titanium.XML.NamedNodeMap} 
*/
Titanium.XML.DocumentType.getEntities = function(){};

/**
 * @method getInternalSubset
 * <p>Gets the value of the {@link Titanium.XML.DocumentType#property-internalSubset internalSubset} property.</p>
 * @return {String} 
*/
Titanium.XML.DocumentType.getInternalSubset = function(){};

/**
 * @method getName
 * <p>Gets the value of the {@link Titanium.XML.DocumentType#property-name name} property.</p>
 * @return {String} 
*/
Titanium.XML.DocumentType.getName = function(){};

/**
 * @method getNotations
 * <p>Gets the value of the {@link Titanium.XML.DocumentType#property-notations notations} property.</p>
 * @return {Titanium.XML.NamedNodeMap} 
*/
Titanium.XML.DocumentType.getNotations = function(){};

/**
 * @method getPublicId
 * <p>Gets the value of the {@link Titanium.XML.DocumentType#property-publicId publicId} property.</p>
 * @return {String} 
*/
Titanium.XML.DocumentType.getPublicId = function(){};

/**
 * @method getSystemId
 * <p>Gets the value of the {@link Titanium.XML.DocumentType#property-systemId systemId} property.</p>
 * @return {String} 
*/
Titanium.XML.DocumentType.getSystemId = function(){};

/**
 * @property entities
 * @type Titanium.XML.NamedNodeMap
 * @readonly
 * <p>A {@link Titanium.XML.NamedNodeMap} containing the general entities, both external and internal, declared in the DTD. Parameter entities are not contained. Duplicates are discarded.</p>
 */
Titanium.XML.DocumentType.entities = null;

/**
 * @property internalSubset
 * @type String
 * @readonly
 * <p>The internal subset as a string.</p>
 */
Titanium.XML.DocumentType.internalSubset = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>The name of DTD; i.e., the name immediately following the <code>DOCTYPE</code> keyword.</p>
 */
Titanium.XML.DocumentType.name = null;

/**
 * @property notations
 * @type Titanium.XML.NamedNodeMap
 * @readonly
 * <p>A {@link Titanium.XML.NamedNodeMap} containing the notations declared  in the DTD. Duplicates are discarded. Every node in this map also  implements the {@link Titanium.XML.Notation} interface.</p>
 */
Titanium.XML.DocumentType.notations = null;

/**
 * @property publicId
 * @type String
 * @readonly
 * <p>The public identifier of the external subset.</p>
 */
Titanium.XML.DocumentType.publicId = null;

/**
 * @property systemId
 * @type String
 * @readonly
 * <p>The system identifier of the external subset.</p>
 */
Titanium.XML.DocumentType.systemId = null;

/**
 * @class Titanium.XML.Element
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>Represents an element in a DOM document, a {@link Titanium.XML.Node}  defined by a start-tag and end-tag (or an empty tag). Elements may have {@link Titanium.XML.Attr attributes} associated with them.
Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-745549614">DOM Level 2 API</a>  on Android and iOS with some non-standard extensions. Exposes the  <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-745549614">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.Element = {};

/**
 * @method getAttribute
 * <p>Retrieves an attribute value by name, returning it as a string.</p>
 * @param {String} name 
 * <p>The name of the attribute</p>
 * @return {String} <p>The {@link Titanium.XML.Attr} value as a string, or empty string if the attribute has no specified or default value.</p>
*/
Titanium.XML.Element.getAttribute = function(name){};

/**
 * @method getAttributeNS
 * <p>Retrieves an attribute value by local name and namespace URI, returning it as a string.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the attribute to retrieve.</p>
 * @param {String} localName 
 * <p>The local name of the attribute to retrieve.</p>
 * @return {String} <p>The {@link Titanium.XML.Attr} value as a string, or empty string if the attribute has no specified or default value.</p>
*/
Titanium.XML.Element.getAttributeNS = function(namespaceURI, localName){};

/**
 * @method getAttributeNode
 * <p>Retrieves an attribute value by name, returning it as a {@link Titanium.XML.Attr} object.</p>
 * @param {String} name 
 * <p>The name of the attribute</p>
 * @return {Titanium.XML.Attr} <p>The {@link Titanium.XML.Attr} value, or null if there is no such attribute.</p>
*/
Titanium.XML.Element.getAttributeNode = function(name){};

/**
 * @method getAttributeNodeNS
 * <p>Retrieves an attribute value by local name and namespace URI,  returning it as a {@link Titanium.XML.Attr} object.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the attribute to retrieve.</p>
 * @param {String} localName 
 * <p>The local name of the attribute to retrieve.</p>
 * @return {Titanium.XML.Attr} <p>The {@link Titanium.XML.Attr} value, or null if there is no such attribute.</p>
*/
Titanium.XML.Element.getAttributeNodeNS = function(namespaceURI, localName){};

/**
 * @method getElementsByTagName
 * <p>Retrieves a {@link Titanium.XML.NodeList} of all descendant elements with a given tag name, in preorder traversal.</p>
 * @param {String} name 
 * <p>The name of the element. The value <code>*</code> matches all tags.</p>
 * @return {Titanium.XML.NodeList} 
*/
Titanium.XML.Element.getElementsByTagName = function(name){};

/**
 * @method getElementsByTagNameNS
 * <p>Retrieves a {@link Titanium.XML.NodeList} of all descendant elements with a given local name and namespace URI, in preorder traversal.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the element. The value <code>*</code> matches all namespaces.</p>
 * @param {String} localName 
 * <p>The local name of the element. The value <code>*</code> matches all local names.</p>
 * @return {Titanium.XML.NodeList} 
*/
Titanium.XML.Element.getElementsByTagNameNS = function(namespaceURI, localName){};

/**
 * @method getTagName
 * <p>Gets the value of the {@link Titanium.XML.Element#property-tagName tagName} property.</p>
 * @return {String} 
*/
Titanium.XML.Element.getTagName = function(){};

/**
 * @method getText
 * <p>Gets the value of the {@link Titanium.XML.Element#property-text text} property.</p>
 * @deprecated 2.0.0
 * @return {String} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.XML.Element.getText = function(){};

/**
 * @method getTextContent
 * <p>Gets the value of the {@link Titanium.XML.Element#property-textContent textContent} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.XML.Element.getTextContent = function(){};

/**
 * @method hasAttribute
 * <p>Determines whether or not an attribute with the given name is available in the element, or has a default value.</p>
 * @param {String} name 
 * <p>The name of the attribute to search for.</p>
 * @return {Boolean} 
*/
Titanium.XML.Element.hasAttribute = function(name){};

/**
 * @method hasAttributeNS
 * <p>Determines whether or not an attribute with the given name is available in the element, or has a default value.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the attribute to search for.</p>
 * @param {String} localName 
 * <p>The local name of the attribute to search for.</p>
 * @return {Boolean} 
*/
Titanium.XML.Element.hasAttributeNS = function(namespaceURI, localName){};

/**
 * @method removeAttribute
 * <p>Removes an attribute by name. If the attribute has a default value, it is immediately replaced with this default, including namespace URI and local name. Throws an exception if the element is read-only.</p>
 * @param {String} name 
 * <p>The name of the attribute to remove.</p>
 * @return void
*/
Titanium.XML.Element.removeAttribute = function(name){};

/**
 * @method removeAttributeNS
 * <p>Removes an attribute by local name and namespace URI. If the attribute has a default value, it is immediately replaced with this default, including namespace URI and local name. Throws an exception if the element is read-only.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the attribute to remove.</p>
 * @param {String} localName 
 * <p>The local name of the attribute to remove.</p>
 * @return void
*/
Titanium.XML.Element.removeAttributeNS = function(namespaceURI, localName){};

/**
 * @method removeAttributeNode
 * <p>Removes the specified attribute node. If the removed attribute has a default value, it is replaced immediately, with the same namespace and local name as the removed attribute, if applicable. Throws an exception if the element is read-only, or the attribute is  not an attribute of the element.</p>
 * @param {Titanium.XML.Attr} oldAttr 
 * <p>The attribute to remove.</p>
 * @return void
*/
Titanium.XML.Element.removeAttributeNode = function(oldAttr){};

/**
 * @method setAttribute
 * <p>Adds a new attribute. Any attribute with the same name is replaced. Throws an exception if the element is read-only, or if the name contains an illegal character.</p>
 * @param {String} name 
 * <p>The name of the attribute.</p>
 * @param {String} value 
 * <p>The value of the attribute. This is value is <strong>not</strong> parsed as part of the assignment. Any markup is treated as literal text, and needs to be escaped.</p>
 * @return void
*/
Titanium.XML.Element.setAttribute = function(name, value){};

/**
 * @method setAttributeNS
 * <p>Adds a new attribute. Any attribute with the same local name and namespace URI is present on the element is replaced, with its prefix changed to that of the <code>qualifiedName</code> parameter.  Throws an exception if the element is read-only, if the name contains an illegal character, or if the qualified name contains an error.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the attribute.</p>
 * @param {String} qualifiedName 
 * <p>The qualified name of the attribute. If it is malformed, has a prefix and namespaceURI is <code>null</code>, or if the prefix is <code>xml</code> or <code>xmlns</code> but does not correspond to a property defined in the  <a href="http://www.w3.org/XML/1998/namespace">XML</a> or <a href="http://www.w3.org/2000/xmlns/">XMLNS</a> specifications, then it contains an error.</p>
 * @param {String} value 
 * <p>The value of the attribute. This is value is <strong>not</strong> parsed as part of the assignment. Any markup is treated as literal text, and needs to be escaped.</p>
 * @return void
*/
Titanium.XML.Element.setAttributeNS = function(namespaceURI, qualifiedName, value){};

/**
 * @method setAttributeNode
 * <p>Adds a new attribute. Any attribute with the same <code>nodeName</code> as the argument is replaced. Throws an exception if the element is read-only, if <code>newAttr</code> is from a different document, or if <code>newAttr</code> is already an attribute of another element.</p>
 * @param {Titanium.XML.Attr} newAttr 
 * <p>The attribute node to add to the element.</p>
 * @return {Titanium.XML.Attr} <p>The attribute that was replaced, or <code>null</code> otherwise.</p>
*/
Titanium.XML.Element.setAttributeNode = function(newAttr){};

/**
 * @method setAttributeNodeNS
 * <p>Adds a new attribute. Any attribute with the same local name and namespace URI is replaced. Throws an exception if the element is read-only, if <code>newAttr</code> is from a different document, or if <code>newAttr</code> is already an attribute of another element.</p>
 * @param {Titanium.XML.Attr} newAttr 
 * <p>The attribute node to add to the element.</p>
 * @return {Titanium.XML.Attr} <p>The attribute that was replaced, or <code>null</code> otherwise.</p>
*/
Titanium.XML.Element.setAttributeNodeNS = function(newAttr){};

/**
 * @property tagName
 * @type String
 * @readonly
 * <p>The name of the element, as defined by its tag.</p>
 */
Titanium.XML.Element.tagName = null;

/**
 * @property text
 * @type String
 * @readonly
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Content (value) of all text nodes within this node.</p>
 * @deprecated 2.0.0 <p>Use {@link Titanium.XML.Element#property-textContent textContent} instead.</p>
 */
Titanium.XML.Element.text = null;

/**
 * @property textContent
 * @type String
 * @readonly
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Content (value) of all text nodes within this node.</p>
 * @description <p>On Android, <code>textContent</code> is supported on {@link Titanium.XML.Element Element} and
{@link Titanium.XML.Text Text} nodes only.</p>
 */
Titanium.XML.Element.textContent = null;

/**
 * @class Titanium.XML.Entity
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>This interface represents an entity, either parsed or unparsed, in an XML document. Note that this models the entity itself not the entity declaration. The nodeName attribute that is inherited from Node contains the name of the entity. An Entity node does not have any parent.
Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-527DCFF2">DOM Level 2 API</a> on Android and iOS. Exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-527DCFF2">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.Entity = {};

/**
 * @method getNotationName
 * <p>Gets the value of the {@link Titanium.XML.Entity#property-notationName notationName} property.</p>
 * @return {String} 
*/
Titanium.XML.Entity.getNotationName = function(){};

/**
 * @method getPublicId
 * <p>Gets the value of the {@link Titanium.XML.Entity#property-publicId publicId} property.</p>
 * @return {String} 
*/
Titanium.XML.Entity.getPublicId = function(){};

/**
 * @method getSystemId
 * <p>Gets the value of the {@link Titanium.XML.Entity#property-systemId systemId} property.</p>
 * @return {String} 
*/
Titanium.XML.Entity.getSystemId = function(){};

/**
 * @property notationName
 * @type String
 * @readonly
 * <p>For unparsed entities, the name of the notation for the entity. For parsed entities, this is <code>null</code>.</p>
 */
Titanium.XML.Entity.notationName = null;

/**
 * @property publicId
 * @type String
 * @readonly
 * <p>The public identifier associated with the entity, if specified. If the public identifier was not specified, this is <code>null</code>.</p>
 */
Titanium.XML.Entity.publicId = null;

/**
 * @property systemId
 * @type String
 * @readonly
 * <p>The system identifier associated with the entity, if specified. If the system identifier was not specified, this is null.</p>
 */
Titanium.XML.Entity.systemId = null;

/**
 * @class Titanium.XML.EntityReference
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.Node
 * <p>Represents an XML entity reference.</p>
 * @description <p>Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-11C98490">DOM Level 2 API</a> 
on Android and iOS. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-11C98490">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.EntityReference = {};

/**
 * @class Titanium.XML.NamedNodeMap
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A key-value paired map that maps String objects to  {@link Titanium.XML.Node} objects. 
Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1780488922">DOM Level 2 API</a>  on Android and iOS. Exposes the  <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1780488922">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.NamedNodeMap = {};

/**
 * @method getLength
 * <p>Gets the value of the {@link Titanium.XML.NamedNodeMap#property-length length} property.</p>
 * @return {Number} 
*/
Titanium.XML.NamedNodeMap.getLength = function(){};

/**
 * @method getNamedItem
 * <p>Retrieves a node specified by name.</p>
 * @param {String} name 
 * <p>The name of the node to retrieve.</p>
 * @return {Titanium.XML.Node} <p>The specified node, or <code>null</code> if no node with the name is in the map</p>
*/
Titanium.XML.NamedNodeMap.getNamedItem = function(name){};

/**
 * @method getNamedItemNS
 * <p>Retrieves a node specified by name and namespace. Returns <code>null</code> if no matching node is in the map.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the node to retrieve.</p>
 * @param {String} localName 
 * <p>The local name of the node within the namespace to retrieve.</p>
 * @return {Titanium.XML.Node} <p>The specified node, or <code>null</code> if there is no matching node.</p>
*/
Titanium.XML.NamedNodeMap.getNamedItemNS = function(namespaceURI, localName){};

/**
 * @method item
 * <p>Retrieves the node at the specified index of the map. Note that NamedNodeMaps are not ordered.</p>
 * @param {Number} index 
 * <p>The index of the node to retrieve.</p>
 * @return {Titanium.XML.Node} <p>The node at the specified index, or <code>null</code> if the index is invalid</p>
*/
Titanium.XML.NamedNodeMap.item = function(index){};

/**
 * @method removeNamedItem
 * <p>Removes a node from the map specified by name. When this map contains attributes attached to an element, if the removed attribtue is known to have a default, it is replaced with that value.</p>
 * @param {String} name 
 * <p>The name of the node to remove.</p>
 * @return {Titanium.XML.Node} <p>The node removed from the map, or <code>null</code> if nothing removed.</p>
*/
Titanium.XML.NamedNodeMap.removeNamedItem = function(name){};

/**
 * @method removeNamedItemNS
 * <p>Removes a node from the map specified by local name and namespace URI.  When this map contains attributes attached to an element, if the removed attribtue is known to have a default, it is replaced with that value. Returns the node removed from the map, or <code>null</code> if there is no corresponding node.</p>
 * @param {String} namespaceURI 
 * <p>The namespace URI of the node to remove.</p>
 * @param {String} localName 
 * <p>The local name of the node within the namespace to remove.</p>
 * @return {Titanium.XML.Node} <p>The node removed from the map, or <code>null</code> if nothing removed.</p>
*/
Titanium.XML.NamedNodeMap.removeNamedItemNS = function(namespaceURI, localName){};

/**
 * @method setNamedItem
 * <p>Adds a node using its <code>nodeName</code> attribute. If a node with that name is already present, it is replaced.  Throws an exception if the argument is from a different document, the map is read-only, or the argument is an attribute of another element.</p>
 * @param {Titanium.XML.Node} node 
 * <p>The node to insert into the map.</p>
 * @return {Titanium.XML.Node} <p>The node replaced, or <code>null</code> if no node was replaced.</p>
*/
Titanium.XML.NamedNodeMap.setNamedItem = function(node){};

/**
 * @method setNamedItemNS
 * <p>Adds a node using its <code>namespaceURI</code> and <code>localName</code> attributes. If a node with that name is already present, it is replaced. Throws an exception if the argument is from a different document, the map is read-only, or the argument is an attribute of another element.</p>
 * @param {Titanium.XML.Node} node 
 * <p>The node to insert into the map.</p>
 * @return {Titanium.XML.Node} <p>Returns the node replaced, or <code>null</code>.</p>
*/
Titanium.XML.NamedNodeMap.setNamedItemNS = function(node){};

/**
 * @property length
 * @type Number
 * @readonly
 * <p>The number of nodes in the map. The valid range of child node indices is 0-<code>length</code>-1, inclusive.</p>
 */
Titanium.XML.NamedNodeMap.length = null;

/**
 * @class Titanium.XML.Node
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A single node in the {@link Titanium.XML.Document Document} tree.</p>
 * @description <p>Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247">DOM Level 2 API</a> 
on Android and iOS. Exposes the 
<a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1950641247">DOM Level 3 API</a> 
implementation on Mobile Web. For full property and method description, see the W3C specifications.</p>
<p>Note that on iOS, only {@link Titanium.XML.Element Element} nodes are mutable. This means
that the methods <code>appendChild</code>, <code>insertBefore</code>, <code>removeChild</code>, and
<code>replaceChild</code> only work on <code>Element</code> objects. If one of these methods is called on
another type of node, it throws an exception.</p>
 */
Titanium.XML.Node = {};

/**
 * @method appendChild
 * <p>Appends the node <code>newChild</code> as a child of this node.</p>
 * @description <p>On iOS, <code>appendChild</code> is supported on {@link Titanium.XML.Element Element}
nodes <strong>only</strong>.</p>
 * @param {Titanium.XML.Node} newChild 
 * <p>New node to append.</p>
 * @return {Titanium.XML.Node} <p>Newly-appended node.</p>
*/
Titanium.XML.Node.appendChild = function(newChild){};

/**
 * @method cloneNode
 * <p>Returns a duplicate of this node.</p>
 * @param {Boolean} deep 
 * <p>Whether or not to perform a deep copy of this node.</p>
 * @return {Titanium.XML.Node} <p>Cloned node.</p>
*/
Titanium.XML.Node.cloneNode = function(deep){};

/**
 * @method getAttributes
 * <p>Gets the value of the {@link Titanium.XML.Node#property-attributes attributes} property.</p>
 * @return {Titanium.XML.NamedNodeMap} 
*/
Titanium.XML.Node.getAttributes = function(){};

/**
 * @method getChildNodes
 * <p>Gets the value of the {@link Titanium.XML.Node#property-childNodes childNodes} property.</p>
 * @return {Titanium.XML.NodeList} 
*/
Titanium.XML.Node.getChildNodes = function(){};

/**
 * @method getFirstChild
 * <p>Gets the value of the {@link Titanium.XML.Node#property-firstChild firstChild} property.</p>
 * @return {Titanium.XML.Node} 
*/
Titanium.XML.Node.getFirstChild = function(){};

/**
 * @method getLastChild
 * <p>Gets the value of the {@link Titanium.XML.Node#property-lastChild lastChild} property.</p>
 * @return {Titanium.XML.Node} 
*/
Titanium.XML.Node.getLastChild = function(){};

/**
 * @method getLocalName
 * <p>Gets the value of the {@link Titanium.XML.Node#property-localName localName} property.</p>
 * @return {String} 
*/
Titanium.XML.Node.getLocalName = function(){};

/**
 * @method getNamespaceURI
 * <p>Gets the value of the {@link Titanium.XML.Node#property-namespaceURI namespaceURI} property.</p>
 * @return {String} 
*/
Titanium.XML.Node.getNamespaceURI = function(){};

/**
 * @method getNextSibling
 * <p>Gets the value of the {@link Titanium.XML.Node#property-nextSibling nextSibling} property.</p>
 * @return {Titanium.XML.Node} 
*/
Titanium.XML.Node.getNextSibling = function(){};

/**
 * @method getNodeName
 * <p>Gets the value of the {@link Titanium.XML.Node#property-nodeName nodeName} property.</p>
 * @return {String} 
*/
Titanium.XML.Node.getNodeName = function(){};

/**
 * @method getNodeType
 * <p>Gets the value of the {@link Titanium.XML.Node#property-nodeType nodeType} property.</p>
 * @return {Number} 
*/
Titanium.XML.Node.getNodeType = function(){};

/**
 * @method getNodeValue
 * <p>Gets the value of the {@link Titanium.XML.Node#property-nodeValue nodeValue} property.</p>
 * @return {String} 
*/
Titanium.XML.Node.getNodeValue = function(){};

/**
 * @method getOwnerDocument
 * <p>Gets the value of the {@link Titanium.XML.Node#property-ownerDocument ownerDocument} property.</p>
 * @return {Titanium.XML.Document} 
*/
Titanium.XML.Node.getOwnerDocument = function(){};

/**
 * @method getParentNode
 * <p>Gets the value of the {@link Titanium.XML.Node#property-parentNode parentNode} property.</p>
 * @return {Titanium.XML.Node} 
*/
Titanium.XML.Node.getParentNode = function(){};

/**
 * @method getPrefix
 * <p>Gets the value of the {@link Titanium.XML.Node#property-prefix prefix} property.</p>
 * @return {String} 
*/
Titanium.XML.Node.getPrefix = function(){};

/**
 * @method getPreviousSibling
 * <p>Gets the value of the {@link Titanium.XML.Node#property-previousSibling previousSibling} property.</p>
 * @return {Titanium.XML.Node} 
*/
Titanium.XML.Node.getPreviousSibling = function(){};

/**
 * @method getText
 * <p>Gets the value of the {@link Titanium.XML.Node#property-text text} property.</p>
 * @deprecated 2.0.0
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
*/
Titanium.XML.Node.getText = function(){};

/**
 * @method getTextContent
 * <p>Gets the value of the {@link Titanium.XML.Node#property-textContent textContent} property.</p>
 * @return {String} 
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.XML.Node.getTextContent = function(){};

/**
 * @method hasAttributes
 * <p>Returns <code>true</code> if this node has attributes.</p>
 * @return {Boolean} <p>True if this node has attributes, false if it does not.</p>
*/
Titanium.XML.Node.hasAttributes = function(){};

/**
 * @method hasChildNodes
 * <p>Returns <code>true</code> if this node has child nodes.</p>
 * @return {Boolean} <p>True if this node has children, false if it does not.</p>
*/
Titanium.XML.Node.hasChildNodes = function(){};

/**
 * @method insertBefore
 * <p>Inserts the node <code>newChild</code> before the node <code>refChild</code>.</p>
 * @description <p>On iOS, <code>insertBefore</code> is supported on {@link Titanium.XML.Element Element}
nodes <strong>only</strong>.</p>
 * @param {Titanium.XML.Node} newChild 
 * <p>Node to insert.</p>
 * @param {Titanium.XML.Node} refChild 
 * <p>Node to insert <code>newChild</code> before.</p>
 * @return {Titanium.XML.Node} <p>The inserted node.</p>
*/
Titanium.XML.Node.insertBefore = function(newChild, refChild){};

/**
 * @method isSupported
 * <p>Tests whether the DOM implementation supports a specific feature.</p>
 * @param {String} feature 
 * <p>Name of the feature.</p>
 * @param {String} version 
 * <p>Version number of the feature.</p>
 * @return {Boolean} <p>True if the feature is supported, false if it is not.</p>
*/
Titanium.XML.Node.isSupported = function(feature, version){};

/**
 * @method normalize
 * <p>Normalizes text and attribute nodes in this node's child hierarchy.</p>
 * @return void
 * @platform android 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.XML.Node.normalize = function(){};

/**
 * @method removeChild
 * <p>Removes a child node from this node.</p>
 * @description <p>On iOS, <code>removeChild</code> is supported on {@link Titanium.XML.Element Element}
nodes <strong>only</strong>.</p>
 * @param {Titanium.XML.Node} oldChild 
 * <p>Node to remove.</p>
 * @return {Titanium.XML.Node} <p>Node that was removed.</p>
*/
Titanium.XML.Node.removeChild = function(oldChild){};

/**
 * @method replaceChild
 * <p>Replaces the node <code>oldChild</code> with the node <code>newChild</code>.</p>
 * @description <p>On iOS, <code>replaceChild</code> is supported on {@link Titanium.XML.Element Element}
nodes <strong>only</strong>.</p>
 * @param {Titanium.XML.Node} newChild 
 * <p>New node.</p>
 * @param {Titanium.XML.Node} oldChild 
 * <p>Node being replaced.</p>
 * @return {Titanium.XML.Node} <p>Node that was replaced.</p>
*/
Titanium.XML.Node.replaceChild = function(newChild, oldChild){};

/**
 * @method setLocalName
 * <p>Sets the value of the {@link Titanium.XML.Node#property-localName localName} property.</p>
 * @param {String} localName 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.XML.Node.setLocalName = function(localName){};

/**
 * @method setNodeValue
 * <p>Sets the value of the {@link Titanium.XML.Node#property-nodeValue nodeValue} property.</p>
 * @param {String} nodeValue 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.XML.Node.setNodeValue = function(nodeValue){};

/**
 * @method setPrefix
 * <p>Sets the value of the {@link Titanium.XML.Node#property-prefix prefix} property.</p>
 * @param {String} prefix 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.XML.Node.setPrefix = function(prefix){};

/**
 * @property ATTRIBUTE_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify an
{@link Titanium.XML.Attr Attr} node.  </p>
 */
Titanium.XML.Node.ATTRIBUTE_NODE = null;

/**
 * @property CDATA_SECTION_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.CDATASection CDATASection} node.  </p>
 */
Titanium.XML.Node.CDATA_SECTION_NODE = null;

/**
 * @property COMMENT_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.Comment Comment} node.  </p>
 */
Titanium.XML.Node.COMMENT_NODE = null;

/**
 * @property DOCUMENT_FRAGMENT_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.DocumentFragment DocumentFragment} node.  </p>
 */
Titanium.XML.Node.DOCUMENT_FRAGMENT_NODE = null;

/**
 * @property DOCUMENT_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.Document Document} node.  </p>
 */
Titanium.XML.Node.DOCUMENT_NODE = null;

/**
 * @property DOCUMENT_TYPE_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.DocumentType DocumentType} node.  </p>
 */
Titanium.XML.Node.DOCUMENT_TYPE_NODE = null;

/**
 * @property ELEMENT_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify an
{@link Titanium.XML.Element Element} node.  </p>
 */
Titanium.XML.Node.ELEMENT_NODE = null;

/**
 * @property ENTITY_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify an
{@link Titanium.XML.Entity Entity} node.  </p>
 */
Titanium.XML.Node.ENTITY_NODE = null;

/**
 * @property ENTITY_REFERENCE_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify an
{@link Titanium.XML.EntityReference EntityReference} node.  </p>
 */
Titanium.XML.Node.ENTITY_REFERENCE_NODE = null;

/**
 * @property NOTATION_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.Notation Notation} node.  </p>
 */
Titanium.XML.Node.NOTATION_NODE = null;

/**
 * @property PROCESSING_INSTRUCTION_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.ProcessingInstruction ProcessingInstruction} node.  </p>
 */
Titanium.XML.Node.PROCESSING_INSTRUCTION_NODE = null;

/**
 * @property TEXT_NODE
 * @type Number
 * @readonly
 * <p>Used with {@link Titanium.XML.Node#property-nodeType nodeType} to identify a
{@link Titanium.XML.Text Text} node.  </p>
 */
Titanium.XML.Node.TEXT_NODE = null;

/**
 * @property attributes
 * @type Titanium.XML.NamedNodeMap
 * @readonly
 * <p>A map of this node's attributes.</p>
 * @description <p>As defined by the DOM specification, only {@link Titanium.XML.Element Element} nodes have attributes. 
For all other node types, this property is always <code>null</code>.</p>
 */
Titanium.XML.Node.attributes = null;

/**
 * @property childNodes
 * @type Titanium.XML.NodeList
 * @readonly
 * <p>A {@link Titanium.XML.NodeList} of this node's children.</p>
 */
Titanium.XML.Node.childNodes = null;

/**
 * @property firstChild
 * @type Titanium.XML.Node
 * @readonly
 * <p>This node's first child.</p>
 */
Titanium.XML.Node.firstChild = null;

/**
 * @property lastChild
 * @type Titanium.XML.Node
 * @readonly
 * <p>This node's last child.</p>
 */
Titanium.XML.Node.lastChild = null;

/**
 * @property localName
 * @type String
 * <p>Local part of the qualified name of this node.</p>
 * @description <p>The local part of the qualified name that comes after the colon. That is,
the name without the namespace prefix.</p>
 */
Titanium.XML.Node.localName = null;

/**
 * @property namespaceURI
 * @type String
 * @readonly
 * <p>Namespace URI of this node.</p>
 */
Titanium.XML.Node.namespaceURI = null;

/**
 * @property nextSibling
 * @type Titanium.XML.Node
 * @readonly
 * <p>This node's next sibling.</p>
 */
Titanium.XML.Node.nextSibling = null;

/**
 * @property nodeName
 * @type String
 * @readonly
 * <p>Name of this node.</p>
 * @description <p>Certain node types have constant values defined by the DOM specification:</p>
<ul>
<li>Text node: <code>#text</code></li>
<li>Comment node: <code>#comment</code></li>
<li>CDATA section node: <code>#cdata-section</code></li>
<li>Document node: <code>#document</code></li>
<li>Document fragment node: <code>#document-fragment</code></li>
</ul>
 */
Titanium.XML.Node.nodeName = null;

/**
 * @property nodeType
 * @type Number
 * @readonly
 * <p>This node's type. One of <code>ELEMENT_NODE</code>, <code>ATTRIBUTE_NODE</code>, <code>TEXT_NODE</code>, <code>CDATA_SECTION_NODE</code>,
<code>ENTITY_REFERENCE_NODE</code>, <code>ENTITY_NODE</code>, <code>PROCESSING_INSTRUCTION_NODE</code>, <code>COMMENT_NODE</code>,
<code>DOCUMENT_NODE</code>, <code>DOCUMENT_TYPE_NODE</code>, <code>DOCUMENT_FRAGMENT_NODE</code>, <code>NOTATION_NODE</code>.</p>
 */
Titanium.XML.Node.nodeType = null;

/**
 * @property nodeValue
 * @type String
 * <p>Content (value) of this node.</p>
 * @description <p>As defined in the DOM specification, the node value is always <code>null</code> for 
Document, DocumentFragment, DocumentType, Element, Entity, EntityReference, and
Notation nodes.</p>
 */
Titanium.XML.Node.nodeValue = null;

/**
 * @property ownerDocument
 * @type Titanium.XML.Document
 * @readonly
 * <p>This node's owning document.</p>
 * @description <p>Note that a node always has an owning document, even if it is not part of the
document tree. </p>
<p>For more on node ownership, see <a href="http://www.w3.org/DOM/faq.html#ownerdoc">ownerDocument issues</a> 
in the W3C DOM FAQ.</p>
 */
Titanium.XML.Node.ownerDocument = null;

/**
 * @property parentNode
 * @type Titanium.XML.Node
 * @readonly
 * <p>This node's parent node.</p>
 */
Titanium.XML.Node.parentNode = null;

/**
 * @property prefix
 * @type String
 * <p>Namespace prefix of this node.</p>
 * @description <p>Read-only on iOS, read-write on other platforms.</p>
 */
Titanium.XML.Node.prefix = null;

/**
 * @property previousSibling
 * @type Titanium.XML.Node
 * @readonly
 * <p>This node's previous sibling.</p>
 */
Titanium.XML.Node.previousSibling = null;

/**
 * @property text
 * @type String
 * @readonly
 * @platform iphone 0.9
 * @platform ipad 0.9
 * <p>Content (value) of all text nodes within this node.</p>
 * @deprecated 2.0.0 <p>Use {@link Titanium.XML.Node#property-textContent textContent} instead.</p>
 */
Titanium.XML.Node.text = null;

/**
 * @property textContent
 * @type String
 * @readonly
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Content (value) of all text nodes within this node.</p>
 * @description <p>On Android, <code>textContent</code> is supported on {@link Titanium.XML.Element Element} and
{@link Titanium.XML.Text Text} nodes only.</p>
 */
Titanium.XML.Node.textContent = null;

/**
 * @class Titanium.XML.NodeList
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A list of {@link Titanium.XML.Node} objects. Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-536297177">DOM Level 2 API</a> on Android and iOS. Exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-536297177">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.NodeList = {};

/**
 * @method getLength
 * <p>Gets the value of the {@link Titanium.XML.NodeList#property-length length} property.</p>
 * @return {Number} 
*/
Titanium.XML.NodeList.getLength = function(){};

/**
 * @method item
 * <p>Returns the {@link Titanium.XML.Node} object at the specified index.</p>
 * @param {Number} index 
 * <p>The index of the node to retrieve. Indexing starts at 0.</p>
 * @return {Titanium.XML.Node} <p>The node at the index, or <code>null</code> if the index is out of bounds.</p>
*/
Titanium.XML.NodeList.item = function(index){};

/**
 * @property length
 * @type Number
 * @readonly
 * <p>The length of the node list.</p>
 */
Titanium.XML.NodeList.length = null;

/**
 * @class Titanium.XML.Notation
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>Represents a notation declared in the DTD.  Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-5431D1B9">DOM Level 2 API</a> on Android and iOS. Exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5431D1B9">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.Notation = {};

/**
 * @method getPublicId
 * <p>Gets the value of the {@link Titanium.XML.Notation#property-publicId publicId} property.</p>
 * @return {String} 
*/
Titanium.XML.Notation.getPublicId = function(){};

/**
 * @method getSystemId
 * <p>Gets the value of the {@link Titanium.XML.Notation#property-systemId systemId} property.</p>
 * @return {String} 
*/
Titanium.XML.Notation.getSystemId = function(){};

/**
 * @property publicId
 * @type String
 * @readonly
 * <p>The public identifier of this notation. If the public identifier was not specified, this is <code>null</code>.</p>
 */
Titanium.XML.Notation.publicId = null;

/**
 * @property systemId
 * @type String
 * @readonly
 * <p>The system identifier of this notation. If the system identifier was not specified, this is <code>null</code>.</p>
 */
Titanium.XML.Notation.systemId = null;

/**
 * @class Titanium.XML.ProcessingInstruction
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Proxy
 * <p>A way to keep processor-specific information in the text of the document. Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1004215813">DOM Level 2 API</a> on Android and iOS. Exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1004215813">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.ProcessingInstruction = {};

/**
 * @method getData
 * <p>Gets the value of the {@link Titanium.XML.ProcessingInstruction#property-data data} property.</p>
 * @return {String} 
*/
Titanium.XML.ProcessingInstruction.getData = function(){};

/**
 * @method getTarget
 * <p>Gets the value of the {@link Titanium.XML.ProcessingInstruction#property-target target} property.</p>
 * @return {String} 
*/
Titanium.XML.ProcessingInstruction.getTarget = function(){};

/**
 * @method setData
 * <p>Sets the value of the {@link Titanium.XML.ProcessingInstruction#property-data data} property.</p>
 * @param {String} data 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.XML.ProcessingInstruction.setData = function(data){};

/**
 * @property data
 * @type String
 * <p>Retrieve the content of this processing instruction. This from the first non white space character  after the target to the character immediatly preceding the ?&gt;. When setting a processing instruction, a DOMException may be thrown on an invalid instruction.</p>
 */
Titanium.XML.ProcessingInstruction.data = null;

/**
 * @property target
 * @type String
 * @readonly
 * <p>Retrieve the target of this processing instruction. XML defines this as being the first token following  the markup that begins the processing instruction.</p>
 */
Titanium.XML.ProcessingInstruction.target = null;

/**
 * @class Titanium.XML.Text
 * @typestr Object of Titanium.XML
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.XML.CharacterData
 * <p>Represents the textual content of an {@link Titanium.XML.Element} or {@link Titanium.XML.Attr} Implements the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1312295772">DOM Level 2 API</a> on Android and iOS. Exposes the <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1312295772">DOM Level 3 API</a> implementation on Mobile Web.</p>
 */
Titanium.XML.Text = {};

/**
 * @method getTextContent
 * <p>Gets the value of the {@link Titanium.XML.Text#property-textContent textContent} property.</p>
 * @return {String} 
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.XML.Text.getTextContent = function(){};

/**
 * @method splitText
 * <p>Breaks this node into two nodes at the specified by offset, and returns a new node of the same type, which contains all the content at and after the offset point. Throws an exception if the specified offset is negative or if this node is read only.</p>
 * @param {Number} offset 
 * <p>The offset at which to split, starting from 0.</p>
 * @return {Titanium.XML.Text} <p>The new node, of the same type as this node</p>
*/
Titanium.XML.Text.splitText = function(offset){};

/**
 * @property textContent
 * @type String
 * @readonly
 * @platform android 0.9
 * @platform iphone 0.9
 * @platform ipad 0.9
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * <p>Content (value) of all text nodes within this node.</p>
 * @description <p>On Android, <code>textContent</code> is supported on {@link Titanium.XML.Element Element} and
{@link Titanium.XML.Text Text} nodes only.</p>
 */
Titanium.XML.Text.textContent = null;

/**
 * @method parseString
 * <p>Parses an XML string into a {@link Titanium.XML.Document} object.</p>
 * @description <p>Throws an exception if the string can't be parsed into a valid document.</p>
 * @param {String} xml 
 * <p>XML content as a string.</p>
 * @return {Titanium.XML.Document} 
*/
Titanium.XML.parseString = function(xml){};

/**
 * @method serializeToString
 * <p>Serializes a {@link Titanium.XML.Node Node} object into a string.</p>
 * @param {Titanium.XML.Node} node 
 * <p>XML {@link Titanium.XML.Node Node} to serialize.</p>
 * @return {String} 
*/
Titanium.XML.serializeToString = function(node){};

/**
 * @class Titanium.Yahoo
 * @typestr Submodule of Titanium
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends Titanium.Module
 * <p>The top level Yahoo module.  The Yahoo module is used for accessing Yahoo related API services.</p>
 */
Titanium.Yahoo = {};

/**
 * @method yql
 * <p>invoke a Yahoo YQL query</p>
 * @description <p>On Mobile Web and Tizen, only public YQL queries are supported. Public YQL queries do not require a consumer key and shared secret key.</p>
 * @param {String} yql 
 * <p>the YQL query to execute</p>
 * @param {Function} callback 
 * <p>the function to execute when the query completes.</p>
 * @return void
*/
Titanium.Yahoo.yql = function(yql, callback){};

/**
 * @method createBuffer
 * <p>Creates a new buffer based on the params.</p>
 * <h3>Examples</h3>
 * <h4>Create a buffer with 1K bytes</h4>
 * <pre>
var buffer = Ti.createBuffer({ length: 1024 });</pre>
 * <h4>Create a buffer with string</h4>
 * <p><p>Create a buffer with the string "hello world" encoded in UTF-8</p></p><pre>var buffer = Ti.createBuffer({ value: "hello world" });</pre>
 * <h4>Create a buffer with encoded float</h4>
 * <p><p>Create a buffer with the encoded value of the double-precision floating point 
number 1.234567 in Big Endian (network) byte order</p></p><pre>var buffer = Ti.createBuffer({ value: 1.234567, type: Ti.Codec.TYPE_DOUBLE, byteOrder: Ti.Codec.BIG_ENDIAN });</pre>
 * @param {CreateBufferArgs} params 
 * <p>creation arguments</p>
 * @return {Titanium.Buffer} <p>The new buffer.</p>
 * @platform android 0.1
 * @platform iphone 0.1
 * @platform ipad 0.1
 * @platform mobileweb 1.8
 * @platform tizen 3.1
*/
Titanium.createBuffer = function(params){};

/**
 * @method getBuildDate
 * <p>Gets the value of the {@link Titanium#property-buildDate buildDate} property.</p>
 * @return {String} 
*/
Titanium.getBuildDate = function(){};

/**
 * @method getBuildHash
 * <p>Gets the value of the {@link Titanium#property-buildHash buildHash} property.</p>
 * @return {String} 
*/
Titanium.getBuildHash = function(){};

/**
 * @method getUserAgent
 * <p>Gets the value of the {@link Titanium#property-userAgent userAgent} property.</p>
 * @return {String} 
*/
Titanium.getUserAgent = function(){};

/**
 * @method getVersion
 * <p>Gets the value of the {@link Titanium#property-version version} property.</p>
 * @return {Number} 
*/
Titanium.getVersion = function(){};

/**
 * @method include
 * <p>Includes JavaScript code from one or more files.</p>
 * @description <p>The <code>include</code> method has several interesting quirks:</p>
<ul>
<li>
<p>The included JavaScript is interpreted in the current root execution
context -- that is, either <code>app.js</code> or in the root context of a window
opened with the <code>url</code> property. For example, in the following code
snippet, the included code in <code>some_module.js</code> has access to
<code>globalVar</code>, but <em>not</em> to the local variable, <code>localVar</code>:</p>
<pre><code>var globalVar = {};
function loadModule() {
    var localVar = "A local value.";
    Ti.include('some_module.js');
};
loadModule();
</code></pre>
</li>
<li>
<p>The included filename is interpreted <em>local to the current file</em>. For 
example, suppose <code>a.js</code> includes <code>dir/b.js.</code> If <code>b.js</code> includes another file, 
<code>c.js</code>, this is interpreted as <code>dir/c.js</code>.</p>
</li>
<li>
<p>Calling <code>include</code> from an event handler does not work consistently across 
platforms.</p>
</li>
<li>
<p>Calling <code>include</code> on a non-existent file causes a runtime error.
See also {@link Global#method-require CommonJS Require}.</p>
</li>
</ul>
 * @param {String} name 
 * <p>Filename(s) to include.</p>
 * @return void
*/
Titanium.include = function(name){};

/**
 * @method setUserAgent
 * <p>Sets the value of the {@link Titanium#property-userAgent userAgent} property.</p>
 * @param {String} userAgent 
 * <p>New value for the property.</p>
 * @return void
*/
Titanium.setUserAgent = function(userAgent){};

/**
 * @property buildDate
 * @type String
 * @readonly
 * <p>Date of the Titanium build.</p>
 */
Titanium.buildDate = null;

/**
 * @property buildHash
 * @type String
 * @readonly
 * <p>Git hash of the Titanium build.</p>
 */
Titanium.buildHash = null;

/**
 * @property userAgent
 * @type String
 * <p>User-agent string used by Titanium.</p>
 * @description <p>On Mobile Web, the browser's user agent cannot be overridden. Writing to this property has no 
effect and reading the property will always return the browser's user agent.</p>
 */
Titanium.userAgent = null;

/**
 * @property version
 * @type Number
 * @readonly
 * <p>Version of Titanium that is executing.</p>
 */
Titanium.version = null;

/**
 * @class TransceiveResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Simple object returned in the callback from the
{@link Modules.Tizen.NFC.NFCTag#method-transceive transceive} method.</p>
 */
TransceiveResponse = {};

/**
 * @property code
 * @type Number
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
TransceiveResponse.code = null;

/**
 * @property data
 * @type Number[]
 * <p>Raw data that is read from NFC tag or response of transive operation.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>false</code>.</p>
 */
TransceiveResponse.data = null;

/**
 * @property error
 * @type String
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
TransceiveResponse.error = null;

/**
 * @property success
 * @type Boolean
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
TransceiveResponse.success = null;

/**
 * @class ViewTemplate
 * @typestr Object
 * @pseudo
 * @platform android 3.1
 * @platform ipad 3.1
 * @platform iphone 3.1
 * <p>Template that represents a view subcomponent of an {@link ItemTemplate}.</p>
 * @description <p>See {@link Titanium.UI.ListItem} for examples of using an item template.</p>
 */
ViewTemplate = {};

/**
 * @property bindId
 * @type String
 * <p>View's ID (or set of IDs) used for data binding. This value must be unique.</p>
 */
ViewTemplate.bindId = null;

/**
 * @property childTemplates
 * @type ViewTemplate[]
 * <p>Contains an array of subview templates to be added (in order) as children to this view.</p>
 */
ViewTemplate.childTemplates = null;

/**
 * @property events
 * @type Dictionary
 * <p>Contains key-value pairs of view events and their listeners that are applied to this view component.</p>
 * @description <p>Array values are considered as multiple event listeners for that event.</p>
 */
ViewTemplate.events = null;

/**
 * @property properties
 * @type Dictionary
 * <p>Contains key-value pairs of view properties and their values that are applied to this view component.</p>
 */
ViewTemplate.properties = null;

/**
 * @property type
 * @type String
 * <p>View's class name, for example, <code>Ti.UI.View</code>.</p>
 */
ViewTemplate.type = null;

/**
 * @class WebAPIError
 * @typestr Object
 * @pseudo
 * @platform tizen 3.1
 * <p>Generic error interface.</p>
 * @description <p>This interface will be used by the APIs in order to return them in the error callback of asynchronous methods.</p>
 */
WebAPIError = {};

/**
 * @property code
 * @type Number
 * @readonly
 * <p>16-bit error code. Possible values are defined in <a href="http://www.w3.org/TR/dom/#error-types">DOMException</a></p>
 */
WebAPIError.code = null;

/**
 * @property message
 * @type String
 * @readonly
 * <p>An error message. Describes the details of the error encountered. This attribute is not intended to be used directly in the user interfaces as it is mainly intended to be useful for developers rather than end users.</p>
 */
WebAPIError.message = null;

/**
 * @property name
 * @type String
 * @readonly
 * <p>An error type.</p>
 * @description <p>An error type. The name attribute must return the value it was initialized to. Possible values are the ones defined in <a href="http://www.w3.org/TR/dom/#error-types">DOM error types</a> and the ones below:</p>
<p>"UnknownError" - An unknown error has occurred.
"InvalidValuesError" - The content of an object does not contain valid values.
"IOError" - An error occurred in communication with the underlying implementation that meant the requested method could not complete.
"ServiceNotAvailableError" - The requested service is not available.</p>
 */
WebAPIError.name = null;

/**
 * @class WriteCallbackArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends ErrorResponse
 * <p>Argument passed to the write callback when an asynchronous
{@link Titanium.Stream#method-write write} operation
finishes.</p>
 */
WriteCallbackArgs = {};

/**
 * @property bytesProcessed
 * @type Number
 * <p>Number of bytes processed, or -1 in the event of an error or end of stream.</p>
 */
WriteCallbackArgs.bytesProcessed = null;

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
WriteCallbackArgs.code = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
WriteCallbackArgs.error = null;

/**
 * @property errorDescription
 * @type String
 * <p>Text description of the error.</p>
 * @deprecated 3.1.0
 */
WriteCallbackArgs.errorDescription = null;

/**
 * @property errorState
 * @type Number
 * @platform android 1.7
 * <p>Whether an error was encountered. Set to 1 in the case of an error, 0
otherwise.</p>
 * @deprecated 3.1.0
 */
WriteCallbackArgs.errorState = null;

/**
 * @property source
 * @type Titanium.IOStream
 * <p>Stream being written to.</p>
 */
WriteCallbackArgs.source = null;

/**
 * @property success
 * @type Boolean
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Indicates if the operation succeeded.</p>
 * @description <p>Returns <code>true</code> if request succeeded, <code>false</code> otherwise.</p>
 */
WriteCallbackArgs.success = null;

/**
 * @class WriteStreamCallbackArgs
 * @typestr Object
 * @pseudo
 * @platform android 1.7
 * @platform blackberry 3.1
 * @platform iphone 1.7
 * @platform ipad 1.7
 * @platform mobileweb 1.8
 * @platform tizen 3.1
 * @extends ErrorResponse
 * <p>Argument passed to the callback when an asynchronous
{@link Titanium.Stream#method-writeStream writeStream} operation finishes.</p>
 */
WriteStreamCallbackArgs = {};

/**
 * @property bytesProcessed
 * @type Number
 * <p>Number of bytes processed, or -1 in the event of an error or end of stream.</p>
 */
WriteStreamCallbackArgs.bytesProcessed = null;

/**
 * @property errorDescription
 * @type String
 * <p>Text description of the error.</p>
 * @deprecated 3.1.0
 */
WriteStreamCallbackArgs.errorDescription = null;

/**
 * @property errorState
 * @type Number
 * @platform android 1.7
 * <p>Whether an error was encountered. Set to 1 in the case of an error, 0
otherwise.</p>
 * @deprecated 3.1.0
 */
WriteStreamCallbackArgs.errorState = null;

/**
 * @property fromStream
 * @type Titanium.IOStream
 * <p>Stream being read from.</p>
 */
WriteStreamCallbackArgs.fromStream = null;

/**
 * @property toStream
 * @type Titanium.IOStream
 * <p>Stream being written to.</p>
 */
WriteStreamCallbackArgs.toStream = null;

/**
 * @class YQLResponse
 * @typestr Object
 * @pseudo
 * @extends ErrorResponse
 * <p>Properties passed to a yql callback to report a success or failure.</p>
 */
YQLResponse = {};

/**
 * @property code
 * @type Number
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error code. Returns 0 if <code>success</code> is <code>true</code>.</p>
 * @description <p>Error code will be 0 if <code>success</code> is <code>true</code>, nonzero otherwise. If the error
was generated by the operating system, that system's error value is used.
Otherwise, this value will be -1.</p>
 */
YQLResponse.code = null;

/**
 * @property data
 * @type Object
 * <p>The data payload received from the YQL.</p>
 * @description <p>May be undefined if <code>success</code> is <code>false</code>.</p>
 */
YQLResponse.data = null;

/**
 * @property error
 * @type String
 * @platform android 3.1
 * @platform blackberry 3.1
 * @platform iphone 3.1
 * @platform ipad 3.1
 * @platform mobileweb 3.1
 * @platform tizen 3.1
 * <p>Error message, if any returned.</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 */
YQLResponse.error = null;

/**
 * @property message
 * @type String
 * <p>Error message, if any returned. Use <code>error</code> instead</p>
 * @description <p>Will be undefined if <code>success</code> is <code>true</code>.</p>
 * @deprecated 3.1.0
 */
YQLResponse.message = null;

/**
 * @class contentOffsetOption
 * @typestr Object
 * @pseudo
 * @platform iphone 1.8.1
 * @platform ipad 1.8.1
 * <p>Optional parameter for {@link Titanium.UI.ScrollView#method-setContentOffset setContentOffset} method.</p>
 * @description <p>On iOS, the optional parameter <code>animated</code> to enable the animation while the scrollable region 
scrolls. For example</p>
<pre><code>setContentOffset({x:50,y:100}, {animated:true})
</code></pre>
 */
contentOffsetOption = {};

/**
 * @property animated
 * @type Boolean
 * <p>Determines whether the scroll view's content area change is animated.</p>
 */
contentOffsetOption.animated = null;

/**
 * @class daysOfTheWeekDictionary
 * @typestr Object
 * @pseudo
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Dictionary containing <code>daysOfWeek</code> and <code>week</code>.</p>
 */
daysOfTheWeekDictionary = {};

/**
 * @property daysOfWeek
 * @type Number
 * <p>The day of the week. Values are from 1 to 7, with Sunday being 1.</p>
 */
daysOfTheWeekDictionary.daysOfWeek = null;

/**
 * @property week
 * @type Number
 * <p>The week number of the day of the week.
Values range from -53 to 53. A negative value indicates a value from the end of 
the range. 0 indicates the week number is irrelevant.</p>
 */
daysOfTheWeekDictionary.week = null;

/**
 * @class hideParams
 * @typestr Object
 * @pseudo
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Dictionary of options for the {@link Titanium.UI.OptionDialog#method-hide} method.</p>
 */
hideParams = {};

/**
 * @property animated
 * @type Boolean
 * <p>Determines whether to animate the dialog as it is dismissed.</p>
 */
hideParams.animated = null;

/**
 * @class hideStatusBarParams
 * @typestr Object
 * @pseudo
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Dictionary of options for the {@link Titanium.UI.iPhone#method-hideStatusBar} method.</p>
 */
hideStatusBarParams = {};

/**
 * @property animated
 * @type Boolean
 * <p>Determines whether to animate the dialog as it is hidden.</p>
 */
hideStatusBarParams.animated = null;

/**
 * @property animationStyle
 * @type Number
 * <p>Style of the animation.</p>
 * @description <p>One of the status bar animation style constants 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_NONE}, 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_SLIDE}, 
or {@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_FADE}.</p>
 */
hideStatusBarParams.animationStyle = null;

/**
 * @class launchOptions
 * @typestr Object
 * @pseudo
 * <p>Dictionary describing the arguments passed to the application on startup.
Use the {@link Titanium.App#method-getArguments getArguments} method to retrieve the launch options.</p>
 */
launchOptions = {};

/**
 * @property [launchOptionsLocationKey=false]
 * @type Boolean
 * <p>If set to <code>true</code>, this key indicates that the application was launched in response to an
incoming location event.</p>
 */
launchOptions.launchOptionsLocationKey = null;

/**
 * @property source
 * @type String
 * <p>This key indicates that the application was launched by another
application with the specified bundle ID.</p>
 */
launchOptions.source = null;

/**
 * @property url
 * @type String
 * <p>This key indicates that the application was launched in order to open
the specified URL.</p>
 */
launchOptions.url = null;

/**
 * @class openWindowParams
 * @typestr Object
 * @pseudo
 * @platform android 2.0
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Dictionary of options for the {@link Titanium.UI.Window#event-open} method.</p>
 */
openWindowParams = {};

/**
 * @property activityEnterAnimation
 * @type Number
 * @platform android 3.1
 * <p>Animation resource to run on the activity (heavyweight window) being opened.</p>
 * @description <p>See "Heavyweight Window Transitions in Android" in the main description of Titanium.UI.Window
for more information.</p>
 * <h3>Example</h3>
 * <h4>Sliding in a new Window</h4>
 * <pre>var win2 = Ti.UI.createWindow({fullscreen:false});
win2.open({
    activityEnterAnimation: Ti.Android.R.anim.slide_in_left,
    activityExitAnimation: Ti.Android.R.anim.slide_out_right
});</pre>
 */
openWindowParams.activityEnterAnimation = null;

/**
 * @property activityExitAnimation
 * @type Number
 * @platform android 3.1
 * <p>Animation resource to run on the activity that is being put in background as a heavyweight window is being opened above it.</p>
 * @description <p>See "Heavyweight Window Transitions in Android" in the main description of Titanium.UI.Window
for more information.</p>
 */
openWindowParams.activityExitAnimation = null;

/**
 * @property animated
 * @type Boolean
 * <p>Determines whether to use an animated effect when the window is shown.</p>
 * @description <p>On Android, this property supports animated transitions on heavyweight windows
except for modal windows (<code>modal:true</code>).  See "Android Heavyweight and Lightweight
Windows" in the main description of Titanium.UI.Window for more information. The
transitions are on by default, but you can set this to <code>false</code> to stop them
if you wish.</p>
<p>On iOS, only use this property to disable animated transitions on modal windows. 
This property has unintended side effects on non-modal windows if it is defined. </p>
 */
openWindowParams.animated = null;

/**
 * @property [bottom=0]
 * @type Number/String
 * <p>Window's bottom position, in platform-specific units.</p>
 * @description <p>On Android, this property will only work with lightweight windows.
See "Android Heavyweight and Lightweight Windows" in the main description
of Titanium.UI.Window for more information.</p>
 */
openWindowParams.bottom = null;

/**
 * @property [fullscreen=false]
 * @type Boolean
 * <p>Determines if the window is fullscreen.</p>
 */
openWindowParams.fullscreen = null;

/**
 * @property height
 * @type Number/String
 * <p>Window's height, in platform-specific units.</p>
 * @description <p>On Android, this property will only work with lightweight windows.
See "Android Heavyweight and Lightweight Windows" in the main description 
of Titanium.UI.Window for more information.</p>
 */
openWindowParams.height = null;

/**
 * @property [left=0]
 * @type Number/String
 * <p>Window's left position, in platform-specific units.</p>
 * @description <p>On Android, this property will only work with lightweight windows.
See "Android Heavyweight and Lightweight Windows" in the main description 
of Titanium.UI.Window for more information.</p>
 */
openWindowParams.left = null;

/**
 * @property [modal=false]
 * @type Boolean
 * <p>Determines whether to open the window modal in front of other windows.</p>
 */
openWindowParams.modal = null;

/**
 * @property [modalStyle={@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN}]
 * @type Number
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Presentation style of this modal window.</p>
 * @description <p>One of the modal window presentation style constants 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_CURRENT_CONTEXT}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FORMSHEET}, 
{@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_FULLSCREEN}, 
or {@link Titanium.UI.iPhone#property-MODAL_PRESENTATION_PAGESHEET}.</p>
 */
openWindowParams.modalStyle = null;

/**
 * @property [modalTransitionStyle={@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_COVER_VERTICAL}]
 * @type Number
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Transition style of this modal window.</p>
 * @description <p>One of the modal window transition style constants
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_COVER_VERTICAL},
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_CROSS_DISSOLVE},
{@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL},
or {@link Titanium.UI.iPhone#property-MODAL_TRANSITION_STYLE_PARTIAL_CURL}.</p>
 */
openWindowParams.modalTransitionStyle = null;

/**
 * @property [navBarHidden=false]
 * @type Boolean
 * <p>For modal windows, hides the nav bar (<code>true</code>) or shows the nav bar (<code>false</code>).</p>
 */
openWindowParams.navBarHidden = null;

/**
 * @property [right=0]
 * @type Number/String
 * <p>Window's right position, in platform-specific units.</p>
 * @description <p>On Android, this property will only work with lightweight windows.
See "Android Heavyweight and Lightweight Windows" in the main description 
of Titanium.UI.Window for more information.</p>
 */
openWindowParams.right = null;

/**
 * @property [top=0]
 * @type Number/String
 * <p>Window's top position, in platform-specific units.</p>
 * @description <p>On Android, this property will only work with lightweight windows.
See "Android Heavyweight and Lightweight Windows" in the main description 
of Titanium.UI.Window for more information.</p>
 */
openWindowParams.top = null;

/**
 * @property [transition={@link Titanium.UI.iPhone.AnimationStyle#property-NONE}]
 * @type Number
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Transition style of this non-modal window.</p>
 * @description <p>One of the animation style constants 
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_DOWN},
{@link Titanium.UI.iPhone.AnimationStyle#property-CURL_UP},
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_LEFT},
{@link Titanium.UI.iPhone.AnimationStyle#property-FLIP_FROM_RIGHT},
or {@link Titanium.UI.iPhone.AnimationStyle#property-NONE}. </p>
 */
openWindowParams.transition = null;

/**
 * @property width
 * @type Number/String
 * <p>Window's width, in platform-specific units.</p>
 * @description <p>On Android, this property will only work with lightweight windows.
See "Android Heavyweight and Lightweight Windows" in the main description 
of Titanium.UI.Window for more information.</p>
 */
openWindowParams.width = null;

/**
 * @class recurrenceEndDictionary
 * @typestr Object
 * @pseudo
 * @platform iphone 3.1
 * @platform ipad 3.1
 * <p>Dictionary containing either <code>endDate</code> or <code>occurrenceCount</code> property.</p>
 */
recurrenceEndDictionary = {};

/**
 * @property endDate
 * @type Date
 * <p>End date of the recurrence end, or undefined if the recurrence end is count-based.</p>
 */
recurrenceEndDictionary.endDate = null;

/**
 * @property occurrenceCount
 * @type Number
 * <p>Occurrence count of the recurrence end, or 0 if the recurrence end is date-based.</p>
 */
recurrenceEndDictionary.occurrenceCount = null;

/**
 * @class showContactsParams
 * @typestr Object
 * @pseudo
 * @platform android 0.8
 * @platform iphone 0.8
 * @platform ipad 0.8
 * @platform tizen 3.1
 * <p>Dictionary of options for the {@link Titanium.Contacts#method-showContacts} method.</p>
 */
showContactsParams = {};

/**
 * @property [animated=true]
 * @type Boolean
 * <p>Determines whether to animate the show/hide of the contacts picker (iPhone, iPad only.)</p>
 */
showContactsParams.animated = null;

/**
 * @property cancel
 * @type Callback<Object>
 * <p>Function to call when selection is canceled.</p>
 */
showContactsParams.cancel = null;

/**
 * @property fields
 * @type String[]
 * <p>Field names to show when selecting properties. By default, shows all available.</p>
 */
showContactsParams.fields = null;

/**
 * @property selectedPerson
 * @type Callback<Object>
 * <p>Function to call when a person is selected. Must not be used with <code>selectedProperty</code> property.</p>
 */
showContactsParams.selectedPerson = null;

/**
 * @property selectedProperty
 * @type Callback<Object>
 * <p>Function to call when a property is selected. Must not be used with <code>selectedPerson</code> 
property.</p>
 */
showContactsParams.selectedProperty = null;

/**
 * @class showParams
 * @typestr Object
 * @pseudo
 * @platform ipad 0.8
 * <p>Dictionary of options for the {@link Titanium.UI.OptionDialog#method-show} method.</p>
 */
showParams = {};

/**
 * @property animated
 * @type Boolean
 * <p>Determines whether to animate the dialog as it is shown.</p>
 */
showParams.animated = null;

/**
 * @property rect
 * @type Dictionary
 * <p>View size and position, determined by coordinates <code>x</code> and <code>y</code> and dimensions <code>height</code> 
and <code>width</code>.</p>
 */
showParams.rect = null;

/**
 * @property view
 * @type Titanium.UI.View
 * <p>View to which to attach the dialog.</p>
 */
showParams.view = null;

/**
 * @class showStatusBarParams
 * @typestr Object
 * @pseudo
 * @platform iphone 2.0
 * @platform ipad 2.0
 * <p>Dictionary of options for the {@link Titanium.UI.iPhone#method-showStatusBar} method.</p>
 */
showStatusBarParams = {};

/**
 * @property animated
 * @type Boolean
 * <p>Determines whether to animate the dialog as it is shown.</p>
 */
showStatusBarParams.animated = null;

/**
 * @property animationStyle
 * @type Number
 * <p>Style of the animation.</p>
 * @description <p>One of the status bar animation style constants 
[{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_NONE}, 
{@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_SLIDE}, 
or {@link Titanium.UI.iPhone.StatusBar#property-ANIMATION_STYLE_FADE}.</p>
 */
showStatusBarParams.animationStyle = null;

/**
 * @class textAreaSelectedParams
 * @typestr Object
 * @pseudo
 * <p>Dictionary object of parameters for the {@link Titanium.UI.TextArea#event-selected} event that describes 
position and length of the selected text.</p>
 */
textAreaSelectedParams = {};

/**
 * @property length
 * @type Number
 * <p>Number of characters selected.</p>
 */
textAreaSelectedParams.length = null;

/**
 * @property location
 * @type Number
 * <p>Starting position of selected text.</p>
 */
textAreaSelectedParams.location = null;

/**
 * @class zoomScaleOption
 * @typestr Object
 * @pseudo
 * @platform iphone 3.0
 * @platform ipad 3.0
 * <p>Optional parameter for {@link Titanium.UI.ScrollView#method-setZoomScale setZoomScale} method.</p>
 * @description <p>On iOS, the optional parameter <code>animated</code> to enable the animation while the scroll view 
zooms. For example</p>
<pre><code>setZoomScale(2, {animated:true})
</code></pre>
 */
zoomScaleOption = {};

/**
 * @property animated
 * @type Boolean
 * <p>Determines whether the scroll view's zooming is animated.</p>
 */
zoomScaleOption.animated = null;

Ti = Titanium;